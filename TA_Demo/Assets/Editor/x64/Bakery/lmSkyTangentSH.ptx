//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .texref sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<113>;
	.reg .b16 	%rs<175>;
	.reg .f32 	%f<895>;
	.reg .b32 	%r<420>;
	.reg .b64 	%rd<313>;


	mov.u64 	%rd312, __local_depot0;
	cvta.local.u64 	%SP, %rd312;
	ld.global.v2.u32 	{%r107, %r108}, [pixelID];
	cvt.u64.u32	%rd24, %r107;
	cvt.u64.u32	%rd25, %r108;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r105, 2;
	mov.u32 	%r106, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r105, %r106, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r1, [%rd22];
	shr.u32 	%r111, %r1, 16;
	cvt.u16.u32	%rs1, %r111;
	and.b16  	%rs7, %rs1, 255;
	cvt.u16.u32	%rs8, %r1;
	or.b16  	%rs9, %rs8, %rs7;
	setp.eq.s16	%p4, %rs9, 0;
	mov.f32 	%f837, 0f00000000;
	mov.f32 	%f838, %f837;
	mov.f32 	%f839, %f837;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs10, [%rd22+1];
	and.b16  	%rs12, %rs8, 255;
	cvt.rn.f32.u16	%f181, %rs12;
	div.rn.f32 	%f182, %f181, 0f437F0000;
	fma.rn.f32 	%f183, %f182, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f184, %rs10;
	div.rn.f32 	%f185, %f184, 0f437F0000;
	fma.rn.f32 	%f186, %f185, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f187, %rs7;
	div.rn.f32 	%f188, %f187, 0f437F0000;
	fma.rn.f32 	%f189, %f188, 0f40000000, 0fBF800000;
	mul.f32 	%f190, %f186, %f186;
	fma.rn.f32 	%f191, %f183, %f183, %f190;
	fma.rn.f32 	%f192, %f189, %f189, %f191;
	sqrt.rn.f32 	%f193, %f192;
	rcp.rn.f32 	%f194, %f193;
	mul.f32 	%f837, %f183, %f194;
	mul.f32 	%f838, %f186, %f194;
	mul.f32 	%f839, %f189, %f194;

BB0_2:
	ld.global.v2.u32 	{%r112, %r113}, [pixelID];
	ld.global.v2.u32 	{%r115, %r116}, [tileInfo];
	add.s32 	%r2, %r112, %r115;
	add.s32 	%r3, %r113, %r116;
	setp.eq.f32	%p5, %f838, 0f00000000;
	setp.eq.f32	%p6, %f837, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f839, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_115;
	bra.uni 	BB0_3;

BB0_115:
	ld.global.u32 	%r419, [imageEnabled];
	and.b32  	%r321, %r419, 1;
	setp.eq.b32	%p105, %r321, 1;
	@!%p105 bra 	BB0_117;
	bra.uni 	BB0_116;

BB0_116:
	cvt.u64.u32	%rd196, %r3;
	cvt.u64.u32	%rd195, %r2;
	mov.u64 	%rd199, image;
	cvta.global.u64 	%rd194, %rd199;
	mov.u64 	%rd198, 0;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r105, %r106, %rd195, %rd196, %rd198, %rd198);
	// inline asm
	mov.u16 	%rs109, 0;
	st.v4.u8 	[%rd193], {%rs109, %rs109, %rs109, %rs109};
	ld.global.u32 	%r419, [imageEnabled];

BB0_117:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	and.b32  	%r324, %r419, 4;
	setp.eq.s32	%p106, %r324, 0;
	@%p106 bra 	BB0_121;

	ld.global.u32 	%r325, [additive];
	setp.eq.s32	%p107, %r325, 0;
	@%p107 bra 	BB0_120;

	mov.u64 	%rd212, image_HDR;
	cvta.global.u64 	%rd201, %rd212;
	mov.u32 	%r329, 8;
	mov.u64 	%rd211, 0;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r105, %r329, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	ld.v4.u16 	{%rs116, %rs117, %rs118, %rs119}, [%rd200];
	// inline asm
	{  cvt.f32.f16 %f744, %rs116;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f745, %rs117;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f746, %rs118;}

	// inline asm
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd201, %r105, %r329, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	add.f32 	%f747, %f744, 0f00000000;
	add.f32 	%f748, %f745, 0f00000000;
	add.f32 	%f749, %f746, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs115, %f749;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs114, %f748;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs113, %f747;}

	// inline asm
	mov.u16 	%rs120, 0;
	st.v4.u16 	[%rd206], {%rs113, %rs114, %rs115, %rs120};
	bra.uni 	BB0_121;

BB0_3:
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd31, %r126;
	cvt.u64.u32	%rd32, %r127;
	mov.u64 	%rd47, uvpos;
	cvta.global.u64 	%rd30, %rd47;
	mov.u32 	%r121, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r105, %r121, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f198, [%rd29+8];
	ld.f32 	%f199, [%rd29+4];
	ld.f32 	%f200, [%rd29];
	mul.f32 	%f201, %f200, 0f3456BF95;
	mul.f32 	%f202, %f199, 0f3456BF95;
	mul.f32 	%f203, %f198, 0f3456BF95;
	abs.f32 	%f204, %f837;
	div.rn.f32 	%f205, %f201, %f204;
	abs.f32 	%f206, %f838;
	div.rn.f32 	%f207, %f202, %f206;
	abs.f32 	%f208, %f839;
	div.rn.f32 	%f209, %f203, %f208;
	abs.f32 	%f210, %f205;
	abs.f32 	%f211, %f207;
	abs.f32 	%f212, %f209;
	mov.f32 	%f213, 0f38D1B717;
	max.f32 	%f214, %f210, %f213;
	max.f32 	%f215, %f211, %f213;
	max.f32 	%f216, %f212, %f213;
	fma.rn.f32 	%f7, %f837, %f214, %f200;
	fma.rn.f32 	%f8, %f838, %f215, %f199;
	fma.rn.f32 	%f9, %f839, %f216, %f198;
	ld.global.u32 	%r4, [hemispherical];
	setp.gt.f32	%p10, %f204, %f208;
	neg.f32 	%f217, %f838;
	selp.f32	%f218, %f217, 0f00000000, %p10;
	neg.f32 	%f219, %f839;
	selp.f32	%f220, %f837, %f219, %p10;
	selp.f32	%f221, 0f00000000, %f838, %p10;
	mul.f32 	%f222, %f220, %f220;
	fma.rn.f32 	%f223, %f218, %f218, %f222;
	fma.rn.f32 	%f224, %f221, %f221, %f223;
	sqrt.rn.f32 	%f225, %f224;
	rcp.rn.f32 	%f226, %f225;
	mul.f32 	%f10, %f218, %f226;
	mul.f32 	%f11, %f220, %f226;
	mul.f32 	%f12, %f221, %f226;
	ld.global.v2.u32 	{%r130, %r131}, [pixelID];
	cvt.u64.u32	%rd37, %r130;
	cvt.u64.u32	%rd38, %r131;
	mov.u64 	%rd48, rnd_seeds;
	cvta.global.u64 	%rd36, %rd48;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r105, %r106, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.u32 	%r416, [%rd35];
	ld.global.u32 	%r6, [samples];
	ld.global.v2.u32 	{%r134, %r135}, [pixelID];
	cvt.u64.u32	%rd43, %r134;
	cvt.u64.u32	%rd44, %r135;
	mov.u64 	%rd49, uvtangent;
	cvta.global.u64 	%rd42, %rd49;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r105, %r106, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.u32 	%r7, [%rd41];
	shr.u32 	%r8, %r7, 16;
	cvt.u16.u32	%rs14, %r8;
	and.b16  	%rs15, %rs14, 255;
	cvt.u16.u32	%rs16, %r7;
	or.b16  	%rs17, %rs16, %rs15;
	setp.eq.s16	%p11, %rs17, 0;
	mov.f32 	%f843, 0f00000000;
	mov.f32 	%f840, %f843;
	mov.f32 	%f841, %f843;
	mov.f32 	%f842, %f843;
	@%p11 bra 	BB0_5;

	ld.u8 	%rs18, [%rd41+1];
	and.b16  	%rs20, %rs16, 255;
	cvt.rn.f32.u16	%f227, %rs20;
	div.rn.f32 	%f228, %f227, 0f437F0000;
	fma.rn.f32 	%f229, %f228, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f230, %rs18;
	div.rn.f32 	%f231, %f230, 0f437F0000;
	fma.rn.f32 	%f232, %f231, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f233, %rs15;
	div.rn.f32 	%f234, %f233, 0f437F0000;
	fma.rn.f32 	%f235, %f234, 0f40000000, 0fBF800000;
	mul.f32 	%f236, %f232, %f232;
	fma.rn.f32 	%f237, %f229, %f229, %f236;
	fma.rn.f32 	%f238, %f235, %f235, %f237;
	sqrt.rn.f32 	%f239, %f238;
	rcp.rn.f32 	%f240, %f239;
	mul.f32 	%f840, %f229, %f240;
	mul.f32 	%f841, %f232, %f240;
	mul.f32 	%f842, %f235, %f240;

BB0_5:
	mov.u32 	%r386, 4;
	mul.f32 	%f244, %f839, %f841;
	mul.f32 	%f245, %f838, %f842;
	sub.f32 	%f246, %f245, %f244;
	mul.f32 	%f247, %f837, %f842;
	mul.f32 	%f248, %f839, %f840;
	sub.f32 	%f249, %f248, %f247;
	mul.f32 	%f250, %f838, %f840;
	mul.f32 	%f251, %f837, %f841;
	sub.f32 	%f252, %f251, %f250;
	setp.lt.u32	%p12, %r7, 16777216;
	selp.f32	%f253, 0fBF800000, 0f3F800000, %p12;
	mul.f32 	%f254, %f246, %f253;
	mul.f32 	%f255, %f249, %f253;
	mul.f32 	%f256, %f252, %f253;
	fma.rn.f32 	%f257, %f254, 0f00000000, %f840;
	fma.rn.f32 	%f258, %f255, 0f00000000, %f841;
	fma.rn.f32 	%f259, %f256, 0f00000000, %f842;
	mul.f32 	%f19, %f837, 0f00000000;
	add.f32 	%f20, %f19, %f257;
	mul.f32 	%f21, %f838, 0f00000000;
	add.f32 	%f22, %f21, %f258;
	mul.f32 	%f23, %f839, 0f00000000;
	add.f32 	%f24, %f23, %f259;
	ld.global.v2.u32 	{%r140, %r141}, [pixelID];
	cvt.u64.u32	%rd52, %r140;
	cvt.u64.u32	%rd53, %r141;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd42, %r105, %r386, %rd52, %rd53, %rd27, %rd27);
	// inline asm
	ld.u32 	%r9, [%rd50];
	shr.u32 	%r10, %r9, 16;
	cvt.u16.u32	%rs23, %r10;
	and.b16  	%rs24, %rs23, 255;
	cvt.u16.u32	%rs25, %r9;
	or.b16  	%rs26, %rs25, %rs24;
	setp.eq.s16	%p13, %rs26, 0;
	mov.f32 	%f844, %f843;
	mov.f32 	%f845, %f843;
	@%p13 bra 	BB0_7;

	ld.u8 	%rs27, [%rd50+1];
	and.b16  	%rs29, %rs25, 255;
	cvt.rn.f32.u16	%f260, %rs29;
	div.rn.f32 	%f261, %f260, 0f437F0000;
	fma.rn.f32 	%f262, %f261, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f263, %rs27;
	div.rn.f32 	%f264, %f263, 0f437F0000;
	fma.rn.f32 	%f265, %f264, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f266, %rs24;
	div.rn.f32 	%f267, %f266, 0f437F0000;
	fma.rn.f32 	%f268, %f267, 0f40000000, 0fBF800000;
	mul.f32 	%f269, %f265, %f265;
	fma.rn.f32 	%f270, %f262, %f262, %f269;
	fma.rn.f32 	%f271, %f268, %f268, %f270;
	sqrt.rn.f32 	%f272, %f271;
	rcp.rn.f32 	%f273, %f272;
	mul.f32 	%f843, %f262, %f273;
	mul.f32 	%f844, %f265, %f273;
	mul.f32 	%f845, %f268, %f273;

BB0_7:
	mov.u32 	%r387, 4;
	mov.f32 	%f846, 0f00000000;
	mov.u64 	%rd304, uvtangent;
	cvta.global.u64 	%rd303, %rd304;
	mul.f32 	%f277, %f839, %f844;
	mul.f32 	%f278, %f838, %f845;
	sub.f32 	%f279, %f278, %f277;
	mul.f32 	%f280, %f837, %f845;
	mul.f32 	%f281, %f839, %f843;
	sub.f32 	%f282, %f281, %f280;
	mul.f32 	%f283, %f838, %f843;
	mul.f32 	%f284, %f837, %f844;
	sub.f32 	%f285, %f284, %f283;
	setp.lt.u32	%p14, %r9, 16777216;
	selp.f32	%f286, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f287, %f279, %f286;
	mul.f32 	%f288, %f282, %f286;
	mul.f32 	%f289, %f285, %f286;
	fma.rn.f32 	%f290, %f843, 0f00000000, %f287;
	fma.rn.f32 	%f291, %f844, 0f00000000, %f288;
	fma.rn.f32 	%f292, %f845, 0f00000000, %f289;
	add.f32 	%f31, %f19, %f290;
	add.f32 	%f32, %f21, %f291;
	add.f32 	%f33, %f23, %f292;
	ld.global.v2.u32 	{%r146, %r147}, [pixelID];
	cvt.u64.u32	%rd59, %r146;
	cvt.u64.u32	%rd60, %r147;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd303, %r105, %r387, %rd59, %rd60, %rd27, %rd27);
	// inline asm
	ld.u32 	%r11, [%rd57];
	shr.u32 	%r12, %r11, 16;
	cvt.u16.u32	%rs32, %r12;
	and.b16  	%rs33, %rs32, 255;
	cvt.u16.u32	%rs34, %r11;
	or.b16  	%rs35, %rs34, %rs33;
	setp.eq.s16	%p15, %rs35, 0;
	mov.f32 	%f847, %f846;
	mov.f32 	%f848, %f846;
	@%p15 bra 	BB0_9;

	ld.u8 	%rs36, [%rd57+1];
	and.b16  	%rs38, %rs34, 255;
	cvt.rn.f32.u16	%f293, %rs38;
	div.rn.f32 	%f294, %f293, 0f437F0000;
	fma.rn.f32 	%f295, %f294, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f296, %rs36;
	div.rn.f32 	%f297, %f296, 0f437F0000;
	fma.rn.f32 	%f298, %f297, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f299, %rs33;
	div.rn.f32 	%f300, %f299, 0f437F0000;
	fma.rn.f32 	%f301, %f300, 0f40000000, 0fBF800000;
	mul.f32 	%f302, %f298, %f298;
	fma.rn.f32 	%f303, %f295, %f295, %f302;
	fma.rn.f32 	%f304, %f301, %f301, %f303;
	sqrt.rn.f32 	%f305, %f304;
	rcp.rn.f32 	%f306, %f305;
	mul.f32 	%f846, %f295, %f306;
	mul.f32 	%f847, %f298, %f306;
	mul.f32 	%f848, %f301, %f306;

BB0_9:
	mov.f32 	%f875, 0f00000000;
	mul.f32 	%f312, %f839, %f847;
	mul.f32 	%f313, %f838, %f848;
	sub.f32 	%f314, %f313, %f312;
	mul.f32 	%f315, %f837, %f848;
	mul.f32 	%f316, %f839, %f846;
	sub.f32 	%f317, %f316, %f315;
	mul.f32 	%f318, %f838, %f846;
	mul.f32 	%f319, %f837, %f847;
	sub.f32 	%f320, %f319, %f318;
	setp.lt.u32	%p16, %r11, 16777216;
	selp.f32	%f321, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f322, %f314, %f321;
	mul.f32 	%f323, %f317, %f321;
	mul.f32 	%f324, %f320, %f321;
	mul.f32 	%f325, %f322, 0f00000000;
	mul.f32 	%f326, %f323, 0f00000000;
	mul.f32 	%f327, %f324, 0f00000000;
	fma.rn.f32 	%f40, %f846, 0f00000000, %f325;
	fma.rn.f32 	%f41, %f847, 0f00000000, %f326;
	fma.rn.f32 	%f42, %f848, 0f00000000, %f327;
	ld.global.u32 	%r414, [samples];
	setp.lt.s32	%p17, %r414, 1;
	@%p17 bra 	BB0_10;

	cvt.rn.f32.s32	%f333, %r6;
	rcp.rn.f32 	%f43, %f333;
	mul.f32 	%f44, %f7, 0f3456BF95;
	mul.f32 	%f45, %f8, 0f3456BF95;
	mul.f32 	%f46, %f9, 0f3456BF95;
	mul.f32 	%f334, %f839, %f11;
	mul.f32 	%f335, %f838, %f12;
	sub.f32 	%f47, %f334, %f335;
	mul.f32 	%f336, %f837, %f12;
	mul.f32 	%f337, %f839, %f10;
	sub.f32 	%f48, %f336, %f337;
	mul.f32 	%f338, %f838, %f10;
	mul.f32 	%f339, %f837, %f11;
	sub.f32 	%f49, %f338, %f339;
	add.f32 	%f50, %f839, %f42;
	add.f32 	%f51, %f838, %f41;
	add.f32 	%f52, %f837, %f40;
	mov.f32 	%f875, 0f00000000;
	mov.u32 	%r389, 0;
	abs.f32 	%f413, %f45;
	abs.f32 	%f414, %f44;
	max.f32 	%f415, %f414, %f413;
	abs.f32 	%f416, %f46;
	max.f32 	%f417, %f415, %f416;
	mov.f32 	%f874, %f875;
	mov.f32 	%f873, %f875;
	mov.f32 	%f872, %f875;
	mov.f32 	%f871, %f875;

BB0_12:
	setp.lt.s32	%p18, %r414, 1;
	@%p18 bra 	BB0_63;

	mov.u32 	%r392, 0;

BB0_14:
	cvt.rn.f32.s32	%f785, %r389;
	mad.lo.s32 	%r152, %r416, 1664525, 1013904223;
	and.b32  	%r153, %r152, 16777215;
	cvt.rn.f32.u32	%f340, %r153;
	fma.rn.f32 	%f341, %f340, 0f33800000, %f785;
	mul.f32 	%f64, %f43, %f341;
	mad.lo.s32 	%r20, %r152, 1664525, 1013904223;
	and.b32  	%r154, %r20, 16777215;
	cvt.rn.f32.u32	%f342, %r154;
	cvt.rn.f32.s32	%f343, %r392;
	fma.rn.f32 	%f344, %f342, 0f33800000, %f343;
	mul.f32 	%f345, %f43, %f344;
	mul.f32 	%f346, %f64, %f64;
	mov.f32 	%f347, 0f3F800000;
	sub.f32 	%f348, %f347, %f346;
	mov.f32 	%f349, 0f00000000;
	max.f32 	%f350, %f349, %f348;
	sqrt.rn.f32 	%f65, %f350;
	mul.f32 	%f865, %f345, 0f40C90FDB;
	abs.f32 	%f67, %f865;
	setp.neu.f32	%p19, %f67, 0f7F800000;
	mov.f32 	%f859, %f865;
	@%p19 bra 	BB0_16;

	mul.rn.f32 	%f859, %f865, %f349;

BB0_16:
	mul.f32 	%f352, %f859, 0f3F22F983;
	cvt.rni.s32.f32	%r403, %f352;
	cvt.rn.f32.s32	%f353, %r403;
	neg.f32 	%f354, %f353;
	mov.f32 	%f355, 0f3FC90FDA;
	fma.rn.f32 	%f356, %f354, %f355, %f859;
	mov.f32 	%f357, 0f33A22168;
	fma.rn.f32 	%f358, %f354, %f357, %f356;
	mov.f32 	%f359, 0f27C234C5;
	fma.rn.f32 	%f860, %f354, %f359, %f358;
	abs.f32 	%f360, %f859;
	setp.leu.f32	%p20, %f360, 0f47CE4780;
	@%p20 bra 	BB0_27;

	add.u64 	%rd65, %SP, 4;
	cvta.to.local.u64 	%rd308, %rd65;
	mov.u32 	%r394, 0;
	mov.u64 	%rd309, 0;
	mov.u32 	%r395, %r394;

BB0_18:
	.pragma "nounroll";
	mov.b32 	 %r362, %f859;
	shl.b32 	%r361, %r362, 8;
	or.b32  	%r360, %r361, -2147483648;
	add.u64 	%rd301, %SP, 4;
	cvta.to.local.u64 	%rd300, %rd301;
	shl.b64 	%rd66, %rd309, 2;
	mov.u64 	%rd67, __cudart_i2opi_f;
	add.s64 	%rd68, %rd67, %rd66;
	ld.const.u32 	%r160, [%rd68];
	// inline asm
	{
	mad.lo.cc.u32   %r158, %r160, %r360, %r395;
	madc.hi.u32     %r395, %r160, %r360,  0;
	}
	// inline asm
	st.local.u32 	[%rd308], %r158;
	add.s32 	%r394, %r394, 1;
	cvt.s64.s32	%rd309, %r394;
	mul.wide.s32 	%rd71, %r394, 4;
	add.s64 	%rd308, %rd300, %rd71;
	setp.ne.s32	%p21, %r394, 6;
	@%p21 bra 	BB0_18;

	mov.b32 	 %r364, %f859;
	shr.u32 	%r363, %r364, 23;
	add.u64 	%rd302, %SP, 4;
	and.b32  	%r163, %r363, 255;
	add.s32 	%r164, %r163, -128;
	shr.u32 	%r165, %r164, 5;
	cvta.to.local.u64 	%rd73, %rd302;
	st.local.u32 	[%rd73+24], %r395;
	mov.u32 	%r166, 6;
	sub.s32 	%r167, %r166, %r165;
	mul.wide.s32 	%rd74, %r167, 4;
	add.s64 	%rd10, %rd73, %rd74;
	ld.local.u32 	%r396, [%rd10];
	ld.local.u32 	%r397, [%rd10+-4];
	and.b32  	%r32, %r363, 31;
	setp.eq.s32	%p22, %r32, 0;
	@%p22 bra 	BB0_21;

	mov.u32 	%r168, 32;
	sub.s32 	%r169, %r168, %r32;
	shr.u32 	%r170, %r397, %r169;
	shl.b32 	%r171, %r396, %r32;
	add.s32 	%r396, %r170, %r171;
	ld.local.u32 	%r172, [%rd10+-8];
	shr.u32 	%r173, %r172, %r169;
	shl.b32 	%r174, %r397, %r32;
	add.s32 	%r397, %r173, %r174;

BB0_21:
	mov.b32 	 %r369, %f859;
	and.b32  	%r399, %r369, -2147483648;
	shr.u32 	%r175, %r397, 30;
	shl.b32 	%r176, %r396, 2;
	add.s32 	%r398, %r175, %r176;
	shl.b32 	%r38, %r397, 2;
	shr.u32 	%r177, %r398, 31;
	shr.u32 	%r178, %r396, 30;
	add.s32 	%r39, %r177, %r178;
	setp.eq.s32	%p23, %r177, 0;
	@%p23 bra 	BB0_22;
	bra.uni 	BB0_23;

BB0_22:
	mov.u32 	%r400, %r38;
	bra.uni 	BB0_24;

BB0_23:
	mov.b32 	 %r371, %f859;
	and.b32  	%r370, %r371, -2147483648;
	not.b32 	%r179, %r398;
	neg.s32 	%r400, %r38;
	setp.eq.s32	%p24, %r38, 0;
	selp.u32	%r180, 1, 0, %p24;
	add.s32 	%r398, %r180, %r179;
	xor.b32  	%r399, %r370, -2147483648;

BB0_24:
	mov.b32 	 %r373, %f859;
	and.b32  	%r372, %r373, -2147483648;
	clz.b32 	%r402, %r398;
	setp.eq.s32	%p25, %r402, 0;
	shl.b32 	%r181, %r398, %r402;
	mov.u32 	%r182, 32;
	sub.s32 	%r183, %r182, %r402;
	shr.u32 	%r184, %r400, %r183;
	add.s32 	%r185, %r184, %r181;
	selp.b32	%r47, %r398, %r185, %p25;
	mov.u32 	%r186, -921707870;
	mul.hi.u32 	%r401, %r47, %r186;
	setp.eq.s32	%p26, %r372, 0;
	neg.s32 	%r187, %r39;
	selp.b32	%r403, %r39, %r187, %p26;
	setp.lt.s32	%p27, %r401, 1;
	@%p27 bra 	BB0_26;

	mul.lo.s32 	%r188, %r47, -921707870;
	shr.u32 	%r189, %r188, 31;
	shl.b32 	%r190, %r401, 1;
	add.s32 	%r401, %r189, %r190;
	add.s32 	%r402, %r402, 1;

BB0_26:
	mov.u32 	%r191, 126;
	sub.s32 	%r192, %r191, %r402;
	shl.b32 	%r193, %r192, 23;
	add.s32 	%r194, %r401, 1;
	shr.u32 	%r195, %r194, 7;
	add.s32 	%r196, %r195, 1;
	shr.u32 	%r197, %r196, 1;
	add.s32 	%r198, %r197, %r193;
	or.b32  	%r199, %r198, %r399;
	mov.b32 	 %f860, %r199;

BB0_27:
	add.s32 	%r55, %r403, 1;
	and.b32  	%r56, %r55, 1;
	setp.eq.s32	%p28, %r56, 0;
	@%p28 bra 	BB0_29;
	bra.uni 	BB0_28;

BB0_29:
	mul.rn.f32 	%f797, %f860, %f860;
	mov.f32 	%f363, 0f3C08839E;
	mov.f32 	%f364, 0fB94CA1F9;
	fma.rn.f32 	%f861, %f364, %f797, %f363;
	bra.uni 	BB0_30;

BB0_28:
	mul.rn.f32 	%f793, %f860, %f860;
	mov.f32 	%f361, 0fBAB6061A;
	mov.f32 	%f362, 0f37CCF5CE;
	fma.rn.f32 	%f861, %f362, %f793, %f361;

BB0_30:
	@%p28 bra 	BB0_32;
	bra.uni 	BB0_31;

BB0_32:
	mul.rn.f32 	%f796, %f860, %f860;
	mov.f32 	%f790, 0f00000000;
	mov.f32 	%f368, 0fBE2AAAA3;
	fma.rn.f32 	%f369, %f861, %f796, %f368;
	fma.rn.f32 	%f862, %f369, %f796, %f790;
	bra.uni 	BB0_33;

BB0_31:
	mul.rn.f32 	%f794, %f860, %f860;
	mov.f32 	%f365, 0f3D2AAAA5;
	fma.rn.f32 	%f366, %f861, %f794, %f365;
	mov.f32 	%f367, 0fBF000000;
	fma.rn.f32 	%f862, %f366, %f794, %f367;

BB0_33:
	fma.rn.f32 	%f863, %f862, %f860, %f860;
	@%p28 bra 	BB0_35;

	mul.rn.f32 	%f795, %f860, %f860;
	mov.f32 	%f779, 0f3F800000;
	fma.rn.f32 	%f863, %f862, %f795, %f779;

BB0_35:
	add.s32 	%r374, %r403, 1;
	and.b32  	%r200, %r374, 2;
	setp.eq.s32	%p31, %r200, 0;
	@%p31 bra 	BB0_37;

	mov.f32 	%f786, 0f00000000;
	mov.f32 	%f373, 0fBF800000;
	fma.rn.f32 	%f863, %f863, %f373, %f786;

BB0_37:
	abs.f32 	%f780, %f865;
	setp.neu.f32	%p112, %f780, 0f7F800000;
	@%p112 bra 	BB0_39;

	mov.f32 	%f789, 0f00000000;
	mul.rn.f32 	%f865, %f865, %f789;

BB0_39:
	mov.f32 	%f783, 0f27C234C5;
	mov.f32 	%f782, 0f33A22168;
	mov.f32 	%f781, 0f3FC90FDA;
	mul.f32 	%f375, %f865, 0f3F22F983;
	cvt.rni.s32.f32	%r413, %f375;
	cvt.rn.f32.s32	%f376, %r413;
	neg.f32 	%f377, %f376;
	fma.rn.f32 	%f379, %f377, %f781, %f865;
	fma.rn.f32 	%f381, %f377, %f782, %f379;
	fma.rn.f32 	%f866, %f377, %f783, %f381;
	abs.f32 	%f383, %f865;
	setp.leu.f32	%p33, %f383, 0f47CE4780;
	@%p33 bra 	BB0_50;

	add.u64 	%rd76, %SP, 4;
	cvta.to.local.u64 	%rd310, %rd76;
	mov.b32 	 %r58, %f865;
	shl.b32 	%r203, %r58, 8;
	or.b32  	%r60, %r203, -2147483648;
	mov.u32 	%r404, 0;
	mov.u64 	%rd311, %rd27;
	mov.u32 	%r405, %r404;

BB0_41:
	.pragma "nounroll";
	add.u64 	%rd307, %SP, 4;
	cvta.to.local.u64 	%rd306, %rd307;
	shl.b64 	%rd77, %rd311, 2;
	mov.u64 	%rd78, __cudart_i2opi_f;
	add.s64 	%rd79, %rd78, %rd77;
	ld.const.u32 	%r206, [%rd79];
	// inline asm
	{
	mad.lo.cc.u32   %r204, %r206, %r60, %r405;
	madc.hi.u32     %r405, %r206, %r60,  0;
	}
	// inline asm
	st.local.u32 	[%rd310], %r204;
	add.s32 	%r404, %r404, 1;
	cvt.s64.s32	%rd311, %r404;
	mul.wide.s32 	%rd80, %r404, 4;
	add.s64 	%rd310, %rd306, %rd80;
	setp.ne.s32	%p34, %r404, 6;
	@%p34 bra 	BB0_41;

	mov.b32 	 %r376, %f865;
	shr.u32 	%r375, %r376, 23;
	add.u64 	%rd305, %SP, 4;
	and.b32  	%r209, %r375, 255;
	add.s32 	%r210, %r209, -128;
	shr.u32 	%r211, %r210, 5;
	cvta.to.local.u64 	%rd82, %rd305;
	st.local.u32 	[%rd82+24], %r405;
	mov.u32 	%r212, 6;
	sub.s32 	%r213, %r212, %r211;
	mul.wide.s32 	%rd83, %r213, 4;
	add.s64 	%rd17, %rd82, %rd83;
	ld.local.u32 	%r406, [%rd17];
	ld.local.u32 	%r407, [%rd17+-4];
	and.b32  	%r68, %r375, 31;
	setp.eq.s32	%p35, %r68, 0;
	@%p35 bra 	BB0_44;

	mov.u32 	%r214, 32;
	sub.s32 	%r215, %r214, %r68;
	shr.u32 	%r216, %r407, %r215;
	shl.b32 	%r217, %r406, %r68;
	add.s32 	%r406, %r216, %r217;
	ld.local.u32 	%r218, [%rd17+-8];
	shr.u32 	%r219, %r218, %r215;
	shl.b32 	%r220, %r407, %r68;
	add.s32 	%r407, %r219, %r220;

BB0_44:
	mov.b32 	 %r379, %f865;
	and.b32  	%r409, %r379, -2147483648;
	shr.u32 	%r221, %r407, 30;
	shl.b32 	%r222, %r406, 2;
	add.s32 	%r408, %r221, %r222;
	shl.b32 	%r74, %r407, 2;
	shr.u32 	%r223, %r408, 31;
	shr.u32 	%r224, %r406, 30;
	add.s32 	%r75, %r223, %r224;
	setp.eq.s32	%p36, %r223, 0;
	@%p36 bra 	BB0_45;
	bra.uni 	BB0_46;

BB0_45:
	mov.u32 	%r410, %r74;
	bra.uni 	BB0_47;

BB0_46:
	mov.b32 	 %r381, %f865;
	and.b32  	%r380, %r381, -2147483648;
	not.b32 	%r225, %r408;
	neg.s32 	%r410, %r74;
	setp.eq.s32	%p37, %r74, 0;
	selp.u32	%r226, 1, 0, %p37;
	add.s32 	%r408, %r226, %r225;
	xor.b32  	%r409, %r380, -2147483648;

BB0_47:
	mov.b32 	 %r383, %f865;
	and.b32  	%r382, %r383, -2147483648;
	clz.b32 	%r412, %r408;
	setp.eq.s32	%p38, %r412, 0;
	shl.b32 	%r227, %r408, %r412;
	mov.u32 	%r228, 32;
	sub.s32 	%r229, %r228, %r412;
	shr.u32 	%r230, %r410, %r229;
	add.s32 	%r231, %r230, %r227;
	selp.b32	%r83, %r408, %r231, %p38;
	mov.u32 	%r232, -921707870;
	mul.hi.u32 	%r411, %r83, %r232;
	setp.eq.s32	%p39, %r382, 0;
	neg.s32 	%r233, %r75;
	selp.b32	%r413, %r75, %r233, %p39;
	setp.lt.s32	%p40, %r411, 1;
	@%p40 bra 	BB0_49;

	mul.lo.s32 	%r234, %r83, -921707870;
	shr.u32 	%r235, %r234, 31;
	shl.b32 	%r236, %r411, 1;
	add.s32 	%r411, %r235, %r236;
	add.s32 	%r412, %r412, 1;

BB0_49:
	mov.u32 	%r237, 126;
	sub.s32 	%r238, %r237, %r412;
	shl.b32 	%r239, %r238, 23;
	add.s32 	%r240, %r411, 1;
	shr.u32 	%r241, %r240, 7;
	add.s32 	%r242, %r241, 1;
	shr.u32 	%r243, %r242, 1;
	add.s32 	%r244, %r243, %r239;
	or.b32  	%r245, %r244, %r409;
	mov.b32 	 %f866, %r245;

BB0_50:
	and.b32  	%r91, %r413, 1;
	setp.eq.s32	%p41, %r91, 0;
	@%p41 bra 	BB0_52;
	bra.uni 	BB0_51;

BB0_52:
	mul.rn.f32 	%f802, %f866, %f866;
	mov.f32 	%f386, 0f3C08839E;
	mov.f32 	%f387, 0fB94CA1F9;
	fma.rn.f32 	%f867, %f387, %f802, %f386;
	bra.uni 	BB0_53;

BB0_51:
	mul.rn.f32 	%f798, %f866, %f866;
	mov.f32 	%f384, 0fBAB6061A;
	mov.f32 	%f385, 0f37CCF5CE;
	fma.rn.f32 	%f867, %f385, %f798, %f384;

BB0_53:
	@%p41 bra 	BB0_55;
	bra.uni 	BB0_54;

BB0_55:
	mul.rn.f32 	%f801, %f866, %f866;
	mov.f32 	%f788, 0f00000000;
	mov.f32 	%f391, 0fBE2AAAA3;
	fma.rn.f32 	%f392, %f867, %f801, %f391;
	fma.rn.f32 	%f868, %f392, %f801, %f788;
	bra.uni 	BB0_56;

BB0_54:
	mul.rn.f32 	%f799, %f866, %f866;
	mov.f32 	%f388, 0f3D2AAAA5;
	fma.rn.f32 	%f389, %f867, %f799, %f388;
	mov.f32 	%f390, 0fBF000000;
	fma.rn.f32 	%f868, %f389, %f799, %f390;

BB0_56:
	fma.rn.f32 	%f869, %f868, %f866, %f866;
	@%p41 bra 	BB0_58;

	mul.rn.f32 	%f800, %f866, %f866;
	mov.f32 	%f784, 0f3F800000;
	fma.rn.f32 	%f869, %f868, %f800, %f784;

BB0_58:
	and.b32  	%r246, %r413, 2;
	setp.eq.s32	%p44, %r246, 0;
	@%p44 bra 	BB0_60;

	mov.f32 	%f787, 0f00000000;
	mov.f32 	%f396, 0fBF800000;
	fma.rn.f32 	%f869, %f869, %f396, %f787;

BB0_60:
	mul.f32 	%f397, %f65, %f863;
	mul.f32 	%f398, %f65, %f869;
	mul.f32 	%f399, %f10, %f398;
	mul.f32 	%f400, %f11, %f398;
	mul.f32 	%f401, %f12, %f398;
	fma.rn.f32 	%f402, %f47, %f397, %f399;
	fma.rn.f32 	%f403, %f48, %f397, %f400;
	fma.rn.f32 	%f404, %f49, %f397, %f401;
	fma.rn.f32 	%f102, %f837, %f64, %f402;
	fma.rn.f32 	%f103, %f838, %f64, %f403;
	fma.rn.f32 	%f104, %f839, %f64, %f404;
	setp.gt.f32	%p45, %f103, 0f00000000;
	setp.eq.s32	%p46, %r4, 0;
	or.pred  	%p47, %p46, %p45;
	@!%p47 bra 	BB0_62;
	bra.uni 	BB0_61;

BB0_61:
	mov.u32 	%r385, 4;
	add.u64 	%rd84, %SP, 0;
	cvta.to.local.u64 	%rd85, %rd84;
	max.f32 	%f411, %f417, %f213;
	mov.u32 	%r250, 1065353216;
	st.local.u32 	[%rd85], %r250;
	ld.global.u32 	%r247, [root];
	mov.u32 	%r248, 1;
	mov.f32 	%f412, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r247, %f7, %f8, %f9, %f102, %f103, %f104, %r248, %f411, %f412, %rd84, %r385);
	// inline asm
	mul.f32 	%f419, %f838, %f103;
	fma.rn.f32 	%f420, %f837, %f102, %f419;
	fma.rn.f32 	%f421, %f839, %f104, %f420;
	mul.f32 	%f422, %f421, 0f40800000;
	cvt.sat.f32.f32	%f423, %f422;
	ld.local.f32 	%f424, [%rd85];
	mul.f32 	%f425, %f424, %f423;
	mul.f32 	%f426, %f22, %f103;
	fma.rn.f32 	%f427, %f20, %f102, %f426;
	fma.rn.f32 	%f428, %f24, %f104, %f427;
	cvt.sat.f32.f32	%f429, %f428;
	fma.rn.f32 	%f873, %f429, %f425, %f873;
	mul.f32 	%f430, %f32, %f103;
	fma.rn.f32 	%f431, %f31, %f102, %f430;
	fma.rn.f32 	%f432, %f33, %f104, %f431;
	cvt.sat.f32.f32	%f433, %f432;
	fma.rn.f32 	%f874, %f425, %f433, %f874;
	mul.f32 	%f434, %f51, %f103;
	fma.rn.f32 	%f435, %f52, %f102, %f434;
	fma.rn.f32 	%f436, %f50, %f104, %f435;
	cvt.sat.f32.f32	%f437, %f436;
	fma.rn.f32 	%f875, %f425, %f437, %f875;
	add.f32 	%f872, %f872, %f425;
	cvt.sat.f32.f32	%f438, %f421;
	fma.rn.f32 	%f871, %f438, %f424, %f871;
	ld.global.u32 	%r414, [samples];

BB0_62:
	mad.lo.s32 	%r367, %r416, 1664525, 1013904223;
	mad.lo.s32 	%r416, %r367, 1664525, 1013904223;
	add.s32 	%r392, %r392, 1;
	setp.lt.s32	%p48, %r392, %r414;
	@%p48 bra 	BB0_14;

BB0_63:
	add.s32 	%r389, %r389, 1;
	setp.lt.s32	%p49, %r389, %r414;
	@%p49 bra 	BB0_12;
	bra.uni 	BB0_64;

BB0_10:
	mov.f32 	%f874, %f875;
	mov.f32 	%f873, %f875;
	mov.f32 	%f872, %f875;
	mov.f32 	%f871, %f875;

BB0_64:
	mul.lo.s32 	%r251, %r414, %r414;
	cvt.rn.f32.s32	%f439, %r251;
	div.rn.f32 	%f440, %f871, %f439;
	div.rn.f32 	%f125, %f872, %f439;
	div.rn.f32 	%f126, %f873, %f439;
	div.rn.f32 	%f127, %f874, %f439;
	div.rn.f32 	%f128, %f875, %f439;
	add.f32 	%f441, %f440, %f440;
	ld.global.f32 	%f442, [skyColor];
	mul.f32 	%f129, %f441, %f442;
	ld.global.f32 	%f443, [skyColor+4];
	mul.f32 	%f130, %f441, %f443;
	ld.global.f32 	%f444, [skyColor+8];
	mul.f32 	%f131, %f441, %f444;
	ld.global.u32 	%r418, [imageEnabled];
	and.b32  	%r252, %r418, 1;
	setp.eq.b32	%p50, %r252, 1;
	@!%p50 bra 	BB0_99;
	bra.uni 	BB0_65;

BB0_65:
	abs.f32 	%f133, %f129;
	setp.lt.f32	%p51, %f133, 0f00800000;
	mul.f32 	%f450, %f133, 0f4B800000;
	selp.f32	%f451, 0fC3170000, 0fC2FE0000, %p51;
	selp.f32	%f452, %f450, %f133, %p51;
	mov.b32 	 %r253, %f452;
	and.b32  	%r254, %r253, 8388607;
	or.b32  	%r255, %r254, 1065353216;
	mov.b32 	 %f453, %r255;
	shr.u32 	%r256, %r253, 23;
	cvt.rn.f32.u32	%f454, %r256;
	add.f32 	%f455, %f451, %f454;
	setp.gt.f32	%p52, %f453, 0f3FB504F3;
	mul.f32 	%f456, %f453, 0f3F000000;
	add.f32 	%f457, %f455, 0f3F800000;
	selp.f32	%f458, %f456, %f453, %p52;
	selp.f32	%f459, %f457, %f455, %p52;
	add.f32 	%f460, %f458, 0fBF800000;
	add.f32 	%f446, %f458, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f445,%f446;
	// inline asm
	add.f32 	%f461, %f460, %f460;
	mul.f32 	%f462, %f445, %f461;
	mul.f32 	%f463, %f462, %f462;
	mov.f32 	%f464, 0f3C4CAF63;
	mov.f32 	%f465, 0f3B18F0FE;
	fma.rn.f32 	%f466, %f465, %f463, %f464;
	mov.f32 	%f467, 0f3DAAAABD;
	fma.rn.f32 	%f468, %f466, %f463, %f467;
	mul.rn.f32 	%f469, %f468, %f463;
	mul.rn.f32 	%f470, %f469, %f462;
	sub.f32 	%f471, %f460, %f462;
	neg.f32 	%f472, %f462;
	add.f32 	%f473, %f471, %f471;
	fma.rn.f32 	%f474, %f472, %f460, %f473;
	mul.rn.f32 	%f475, %f445, %f474;
	add.f32 	%f476, %f470, %f462;
	sub.f32 	%f477, %f462, %f476;
	add.f32 	%f478, %f470, %f477;
	add.f32 	%f479, %f475, %f478;
	add.f32 	%f480, %f476, %f479;
	sub.f32 	%f481, %f476, %f480;
	add.f32 	%f482, %f479, %f481;
	mov.f32 	%f483, 0f3F317200;
	mul.rn.f32 	%f484, %f459, %f483;
	mov.f32 	%f485, 0f35BFBE8E;
	mul.rn.f32 	%f486, %f459, %f485;
	add.f32 	%f487, %f484, %f480;
	sub.f32 	%f488, %f484, %f487;
	add.f32 	%f489, %f480, %f488;
	add.f32 	%f490, %f482, %f489;
	add.f32 	%f491, %f486, %f490;
	add.f32 	%f492, %f487, %f491;
	sub.f32 	%f493, %f487, %f492;
	add.f32 	%f494, %f491, %f493;
	mov.f32 	%f495, 0f3EE66666;
	mul.rn.f32 	%f496, %f495, %f492;
	neg.f32 	%f497, %f496;
	fma.rn.f32 	%f498, %f495, %f492, %f497;
	fma.rn.f32 	%f499, %f495, %f494, %f498;
	mov.f32 	%f500, 0f00000000;
	fma.rn.f32 	%f501, %f500, %f492, %f499;
	add.rn.f32 	%f502, %f496, %f501;
	neg.f32 	%f503, %f502;
	add.rn.f32 	%f504, %f496, %f503;
	add.rn.f32 	%f505, %f504, %f501;
	mov.b32 	 %r257, %f502;
	setp.eq.s32	%p53, %r257, 1118925336;
	add.s32 	%r258, %r257, -1;
	mov.b32 	 %f506, %r258;
	add.f32 	%f507, %f505, 0f37000000;
	selp.f32	%f508, %f506, %f502, %p53;
	selp.f32	%f134, %f507, %f505, %p53;
	mul.f32 	%f509, %f508, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f510, %f509;
	mov.f32 	%f511, 0fBF317200;
	fma.rn.f32 	%f512, %f510, %f511, %f508;
	mov.f32 	%f513, 0fB5BFBE8E;
	fma.rn.f32 	%f514, %f510, %f513, %f512;
	mul.f32 	%f515, %f514, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f516, %f515;
	add.f32 	%f517, %f510, 0f00000000;
	ex2.approx.f32 	%f518, %f517;
	mul.f32 	%f519, %f516, %f518;
	setp.lt.f32	%p54, %f508, 0fC2D20000;
	selp.f32	%f520, 0f00000000, %f519, %p54;
	setp.gt.f32	%p55, %f508, 0f42D20000;
	selp.f32	%f886, 0f7F800000, %f520, %p55;
	setp.eq.f32	%p56, %f886, 0f7F800000;
	@%p56 bra 	BB0_67;

	fma.rn.f32 	%f886, %f886, %f134, %f886;

BB0_67:
	mov.f32 	%f806, 0f3E666666;
	cvt.rzi.f32.f32	%f805, %f806;
	fma.rn.f32 	%f804, %f805, 0fC0000000, 0f3EE66666;
	abs.f32 	%f803, %f804;
	setp.lt.f32	%p57, %f129, 0f00000000;
	setp.eq.f32	%p58, %f803, 0f3F800000;
	and.pred  	%p1, %p57, %p58;
	mov.b32 	 %r259, %f886;
	xor.b32  	%r260, %r259, -2147483648;
	mov.b32 	 %f521, %r260;
	selp.f32	%f888, %f521, %f886, %p1;
	setp.eq.f32	%p59, %f129, 0f00000000;
	@%p59 bra 	BB0_70;
	bra.uni 	BB0_68;

BB0_70:
	add.f32 	%f524, %f129, %f129;
	selp.f32	%f888, %f524, 0f00000000, %p58;
	bra.uni 	BB0_71;

BB0_120:
	mov.u64 	%rd219, image_HDR;
	cvta.global.u64 	%rd214, %rd219;
	mov.u32 	%r331, 8;
	mov.u64 	%rd218, 0;
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd214, %r105, %r331, %rd20, %rd21, %rd218, %rd218);
	// inline asm
	mov.f32 	%f750, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f750;}

	// inline asm
	mov.u16 	%rs122, 0;
	st.v4.u16 	[%rd213], {%rs121, %rs121, %rs121, %rs122};

BB0_121:
	ld.global.u32 	%r332, [additive];
	setp.eq.s32	%p108, %r332, 0;
	@%p108 bra 	BB0_123;

	mov.u64 	%rd232, image_RNM0;
	cvta.global.u64 	%rd221, %rd232;
	mov.u32 	%r336, 8;
	mov.u64 	%rd231, 0;
	// inline asm
	call (%rd220), _rt_buffer_get_64, (%rd221, %r105, %r336, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	ld.v4.u16 	{%rs129, %rs130, %rs131, %rs132}, [%rd220];
	// inline asm
	{  cvt.f32.f16 %f751, %rs129;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f752, %rs130;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f753, %rs131;}

	// inline asm
	// inline asm
	call (%rd226), _rt_buffer_get_64, (%rd221, %r105, %r336, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	add.f32 	%f754, %f751, 0f00000000;
	add.f32 	%f755, %f752, 0f00000000;
	add.f32 	%f756, %f753, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs128, %f756;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs127, %f755;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs126, %f754;}

	// inline asm
	mov.u16 	%rs133, 0;
	st.v4.u16 	[%rd226], {%rs126, %rs127, %rs128, %rs133};
	bra.uni 	BB0_124;

BB0_123:
	mov.u64 	%rd239, image_RNM0;
	cvta.global.u64 	%rd234, %rd239;
	mov.u32 	%r338, 8;
	mov.u64 	%rd238, 0;
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd234, %r105, %r338, %rd20, %rd21, %rd238, %rd238);
	// inline asm
	mov.f32 	%f757, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f757;}

	// inline asm
	mov.u16 	%rs135, 0;
	st.v4.u16 	[%rd233], {%rs134, %rs134, %rs134, %rs135};

BB0_124:
	ld.global.u32 	%r339, [additive];
	setp.eq.s32	%p109, %r339, 0;
	@%p109 bra 	BB0_126;

	mov.u64 	%rd252, image_RNM1;
	cvta.global.u64 	%rd241, %rd252;
	mov.u32 	%r343, 8;
	mov.u64 	%rd251, 0;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r105, %r343, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	ld.v4.u16 	{%rs142, %rs143, %rs144, %rs145}, [%rd240];
	// inline asm
	{  cvt.f32.f16 %f758, %rs142;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f759, %rs143;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f760, %rs144;}

	// inline asm
	// inline asm
	call (%rd246), _rt_buffer_get_64, (%rd241, %r105, %r343, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	add.f32 	%f761, %f758, 0f00000000;
	add.f32 	%f762, %f759, 0f00000000;
	add.f32 	%f763, %f760, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs141, %f763;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs140, %f762;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs139, %f761;}

	// inline asm
	mov.u16 	%rs146, 0;
	st.v4.u16 	[%rd246], {%rs139, %rs140, %rs141, %rs146};
	bra.uni 	BB0_127;

BB0_126:
	mov.u64 	%rd259, image_RNM1;
	cvta.global.u64 	%rd254, %rd259;
	mov.u32 	%r345, 8;
	mov.u64 	%rd258, 0;
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd254, %r105, %r345, %rd20, %rd21, %rd258, %rd258);
	// inline asm
	mov.f32 	%f764, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f764;}

	// inline asm
	mov.u16 	%rs148, 0;
	st.v4.u16 	[%rd253], {%rs147, %rs147, %rs147, %rs148};

BB0_127:
	ld.global.u32 	%r346, [additive];
	setp.eq.s32	%p110, %r346, 0;
	@%p110 bra 	BB0_129;

	mov.u64 	%rd272, image_RNM2;
	cvta.global.u64 	%rd261, %rd272;
	mov.u32 	%r350, 8;
	mov.u64 	%rd271, 0;
	// inline asm
	call (%rd260), _rt_buffer_get_64, (%rd261, %r105, %r350, %rd20, %rd21, %rd271, %rd271);
	// inline asm
	ld.v4.u16 	{%rs155, %rs156, %rs157, %rs158}, [%rd260];
	// inline asm
	{  cvt.f32.f16 %f765, %rs155;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f766, %rs156;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f767, %rs157;}

	// inline asm
	// inline asm
	call (%rd266), _rt_buffer_get_64, (%rd261, %r105, %r350, %rd20, %rd21, %rd271, %rd271);
	// inline asm
	add.f32 	%f768, %f765, 0f00000000;
	add.f32 	%f769, %f766, 0f00000000;
	add.f32 	%f770, %f767, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs154, %f770;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs153, %f769;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs152, %f768;}

	// inline asm
	mov.u16 	%rs159, 0;
	st.v4.u16 	[%rd266], {%rs152, %rs153, %rs154, %rs159};
	bra.uni 	BB0_130;

BB0_129:
	mov.u64 	%rd279, image_RNM2;
	cvta.global.u64 	%rd274, %rd279;
	mov.u32 	%r352, 8;
	mov.u64 	%rd278, 0;
	// inline asm
	call (%rd273), _rt_buffer_get_64, (%rd274, %r105, %r352, %rd20, %rd21, %rd278, %rd278);
	// inline asm
	mov.f32 	%f771, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs160, %f771;}

	// inline asm
	mov.u16 	%rs161, 0;
	st.v4.u16 	[%rd273], {%rs160, %rs160, %rs160, %rs161};

BB0_130:
	ld.global.u32 	%r353, [additive];
	setp.eq.s32	%p111, %r353, 0;
	@%p111 bra 	BB0_132;

	mov.u64 	%rd292, image_RNM3;
	cvta.global.u64 	%rd281, %rd292;
	mov.u32 	%r357, 8;
	mov.u64 	%rd291, 0;
	// inline asm
	call (%rd280), _rt_buffer_get_64, (%rd281, %r105, %r357, %rd20, %rd21, %rd291, %rd291);
	// inline asm
	ld.v4.u16 	{%rs168, %rs169, %rs170, %rs171}, [%rd280];
	// inline asm
	{  cvt.f32.f16 %f772, %rs168;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f773, %rs169;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f774, %rs170;}

	// inline asm
	// inline asm
	call (%rd286), _rt_buffer_get_64, (%rd281, %r105, %r357, %rd20, %rd21, %rd291, %rd291);
	// inline asm
	add.f32 	%f775, %f772, 0f00000000;
	add.f32 	%f776, %f773, 0f00000000;
	add.f32 	%f777, %f774, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs167, %f777;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs166, %f776;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs165, %f775;}

	// inline asm
	mov.u16 	%rs172, 0;
	st.v4.u16 	[%rd286], {%rs165, %rs166, %rs167, %rs172};
	bra.uni 	BB0_133;

BB0_132:
	mov.u64 	%rd299, image_RNM3;
	cvta.global.u64 	%rd294, %rd299;
	mov.u32 	%r359, 8;
	mov.u64 	%rd298, 0;
	// inline asm
	call (%rd293), _rt_buffer_get_64, (%rd294, %r105, %r359, %rd20, %rd21, %rd298, %rd298);
	// inline asm
	mov.f32 	%f778, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs173, %f778;}

	// inline asm
	mov.u16 	%rs174, 0;
	st.v4.u16 	[%rd293], {%rs173, %rs173, %rs173, %rs174};
	bra.uni 	BB0_133;

BB0_68:
	setp.geu.f32	%p60, %f129, 0f00000000;
	@%p60 bra 	BB0_71;

	mov.f32 	%f830, 0f3EE66666;
	cvt.rzi.f32.f32	%f523, %f830;
	setp.neu.f32	%p61, %f523, 0f3EE66666;
	selp.f32	%f888, 0f7FFFFFFF, %f888, %p61;

BB0_71:
	abs.f32 	%f807, %f129;
	add.f32 	%f525, %f807, 0f3EE66666;
	mov.b32 	 %r261, %f525;
	setp.lt.s32	%p63, %r261, 2139095040;
	@%p63 bra 	BB0_76;

	abs.f32 	%f828, %f129;
	setp.gtu.f32	%p64, %f828, 0f7F800000;
	@%p64 bra 	BB0_75;
	bra.uni 	BB0_73;

BB0_75:
	add.f32 	%f888, %f129, 0f3EE66666;
	bra.uni 	BB0_76;

BB0_73:
	abs.f32 	%f829, %f129;
	setp.neu.f32	%p65, %f829, 0f7F800000;
	@%p65 bra 	BB0_76;

	selp.f32	%f888, 0fFF800000, 0f7F800000, %p1;

BB0_76:
	mov.f32 	%f816, 0fB5BFBE8E;
	mov.f32 	%f815, 0fBF317200;
	mov.f32 	%f814, 0f00000000;
	mov.f32 	%f813, 0f35BFBE8E;
	mov.f32 	%f812, 0f3F317200;
	mov.f32 	%f811, 0f3DAAAABD;
	mov.f32 	%f810, 0f3C4CAF63;
	mov.f32 	%f809, 0f3B18F0FE;
	mov.f32 	%f808, 0f3EE66666;
	setp.eq.f32	%p66, %f129, 0f3F800000;
	selp.f32	%f145, 0f3F800000, %f888, %p66;
	abs.f32 	%f146, %f130;
	setp.lt.f32	%p67, %f146, 0f00800000;
	mul.f32 	%f528, %f146, 0f4B800000;
	selp.f32	%f529, 0fC3170000, 0fC2FE0000, %p67;
	selp.f32	%f530, %f528, %f146, %p67;
	mov.b32 	 %r262, %f530;
	and.b32  	%r263, %r262, 8388607;
	or.b32  	%r264, %r263, 1065353216;
	mov.b32 	 %f531, %r264;
	shr.u32 	%r265, %r262, 23;
	cvt.rn.f32.u32	%f532, %r265;
	add.f32 	%f533, %f529, %f532;
	setp.gt.f32	%p68, %f531, 0f3FB504F3;
	mul.f32 	%f534, %f531, 0f3F000000;
	add.f32 	%f535, %f533, 0f3F800000;
	selp.f32	%f536, %f534, %f531, %p68;
	selp.f32	%f537, %f535, %f533, %p68;
	add.f32 	%f538, %f536, 0fBF800000;
	add.f32 	%f527, %f536, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f526,%f527;
	// inline asm
	add.f32 	%f539, %f538, %f538;
	mul.f32 	%f540, %f526, %f539;
	mul.f32 	%f541, %f540, %f540;
	fma.rn.f32 	%f544, %f809, %f541, %f810;
	fma.rn.f32 	%f546, %f544, %f541, %f811;
	mul.rn.f32 	%f547, %f546, %f541;
	mul.rn.f32 	%f548, %f547, %f540;
	sub.f32 	%f549, %f538, %f540;
	neg.f32 	%f550, %f540;
	add.f32 	%f551, %f549, %f549;
	fma.rn.f32 	%f552, %f550, %f538, %f551;
	mul.rn.f32 	%f553, %f526, %f552;
	add.f32 	%f554, %f548, %f540;
	sub.f32 	%f555, %f540, %f554;
	add.f32 	%f556, %f548, %f555;
	add.f32 	%f557, %f553, %f556;
	add.f32 	%f558, %f554, %f557;
	sub.f32 	%f559, %f554, %f558;
	add.f32 	%f560, %f557, %f559;
	mul.rn.f32 	%f562, %f537, %f812;
	mul.rn.f32 	%f564, %f537, %f813;
	add.f32 	%f565, %f562, %f558;
	sub.f32 	%f566, %f562, %f565;
	add.f32 	%f567, %f558, %f566;
	add.f32 	%f568, %f560, %f567;
	add.f32 	%f569, %f564, %f568;
	add.f32 	%f570, %f565, %f569;
	sub.f32 	%f571, %f565, %f570;
	add.f32 	%f572, %f569, %f571;
	mul.rn.f32 	%f574, %f808, %f570;
	neg.f32 	%f575, %f574;
	fma.rn.f32 	%f576, %f808, %f570, %f575;
	fma.rn.f32 	%f577, %f808, %f572, %f576;
	fma.rn.f32 	%f579, %f814, %f570, %f577;
	add.rn.f32 	%f580, %f574, %f579;
	neg.f32 	%f581, %f580;
	add.rn.f32 	%f582, %f574, %f581;
	add.rn.f32 	%f583, %f582, %f579;
	mov.b32 	 %r266, %f580;
	setp.eq.s32	%p69, %r266, 1118925336;
	add.s32 	%r267, %r266, -1;
	mov.b32 	 %f584, %r267;
	add.f32 	%f585, %f583, 0f37000000;
	selp.f32	%f586, %f584, %f580, %p69;
	selp.f32	%f147, %f585, %f583, %p69;
	mul.f32 	%f587, %f586, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f588, %f587;
	fma.rn.f32 	%f590, %f588, %f815, %f586;
	fma.rn.f32 	%f592, %f588, %f816, %f590;
	mul.f32 	%f593, %f592, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f594, %f593;
	add.f32 	%f595, %f588, 0f00000000;
	ex2.approx.f32 	%f596, %f595;
	mul.f32 	%f597, %f594, %f596;
	setp.lt.f32	%p70, %f586, 0fC2D20000;
	selp.f32	%f598, 0f00000000, %f597, %p70;
	setp.gt.f32	%p71, %f586, 0f42D20000;
	selp.f32	%f889, 0f7F800000, %f598, %p71;
	setp.eq.f32	%p72, %f889, 0f7F800000;
	@%p72 bra 	BB0_78;

	fma.rn.f32 	%f889, %f889, %f147, %f889;

BB0_78:
	setp.lt.f32	%p73, %f130, 0f00000000;
	and.pred  	%p2, %p73, %p58;
	mov.b32 	 %r268, %f889;
	xor.b32  	%r269, %r268, -2147483648;
	mov.b32 	 %f599, %r269;
	selp.f32	%f891, %f599, %f889, %p2;
	setp.eq.f32	%p75, %f130, 0f00000000;
	@%p75 bra 	BB0_81;
	bra.uni 	BB0_79;

BB0_81:
	add.f32 	%f602, %f130, %f130;
	selp.f32	%f891, %f602, 0f00000000, %p58;
	bra.uni 	BB0_82;

BB0_79:
	setp.geu.f32	%p76, %f130, 0f00000000;
	@%p76 bra 	BB0_82;

	mov.f32 	%f827, 0f3EE66666;
	cvt.rzi.f32.f32	%f601, %f827;
	setp.neu.f32	%p77, %f601, 0f3EE66666;
	selp.f32	%f891, 0f7FFFFFFF, %f891, %p77;

BB0_82:
	abs.f32 	%f831, %f130;
	add.f32 	%f603, %f831, 0f3EE66666;
	mov.b32 	 %r270, %f603;
	setp.lt.s32	%p79, %r270, 2139095040;
	@%p79 bra 	BB0_87;

	abs.f32 	%f832, %f130;
	setp.gtu.f32	%p80, %f832, 0f7F800000;
	@%p80 bra 	BB0_86;
	bra.uni 	BB0_84;

BB0_86:
	add.f32 	%f891, %f130, 0f3EE66666;
	bra.uni 	BB0_87;

BB0_84:
	abs.f32 	%f833, %f130;
	setp.neu.f32	%p81, %f833, 0f7F800000;
	@%p81 bra 	BB0_87;

	selp.f32	%f891, 0fFF800000, 0f7F800000, %p2;

BB0_87:
	mov.f32 	%f825, 0fB5BFBE8E;
	mov.f32 	%f824, 0fBF317200;
	mov.f32 	%f823, 0f00000000;
	mov.f32 	%f822, 0f35BFBE8E;
	mov.f32 	%f821, 0f3F317200;
	mov.f32 	%f820, 0f3DAAAABD;
	mov.f32 	%f819, 0f3C4CAF63;
	mov.f32 	%f818, 0f3B18F0FE;
	mov.f32 	%f817, 0f3EE66666;
	setp.eq.f32	%p82, %f130, 0f3F800000;
	selp.f32	%f158, 0f3F800000, %f891, %p82;
	abs.f32 	%f159, %f131;
	setp.lt.f32	%p83, %f159, 0f00800000;
	mul.f32 	%f606, %f159, 0f4B800000;
	selp.f32	%f607, 0fC3170000, 0fC2FE0000, %p83;
	selp.f32	%f608, %f606, %f159, %p83;
	mov.b32 	 %r271, %f608;
	and.b32  	%r272, %r271, 8388607;
	or.b32  	%r273, %r272, 1065353216;
	mov.b32 	 %f609, %r273;
	shr.u32 	%r274, %r271, 23;
	cvt.rn.f32.u32	%f610, %r274;
	add.f32 	%f611, %f607, %f610;
	setp.gt.f32	%p84, %f609, 0f3FB504F3;
	mul.f32 	%f612, %f609, 0f3F000000;
	add.f32 	%f613, %f611, 0f3F800000;
	selp.f32	%f614, %f612, %f609, %p84;
	selp.f32	%f615, %f613, %f611, %p84;
	add.f32 	%f616, %f614, 0fBF800000;
	add.f32 	%f605, %f614, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f604,%f605;
	// inline asm
	add.f32 	%f617, %f616, %f616;
	mul.f32 	%f618, %f604, %f617;
	mul.f32 	%f619, %f618, %f618;
	fma.rn.f32 	%f622, %f818, %f619, %f819;
	fma.rn.f32 	%f624, %f622, %f619, %f820;
	mul.rn.f32 	%f625, %f624, %f619;
	mul.rn.f32 	%f626, %f625, %f618;
	sub.f32 	%f627, %f616, %f618;
	neg.f32 	%f628, %f618;
	add.f32 	%f629, %f627, %f627;
	fma.rn.f32 	%f630, %f628, %f616, %f629;
	mul.rn.f32 	%f631, %f604, %f630;
	add.f32 	%f632, %f626, %f618;
	sub.f32 	%f633, %f618, %f632;
	add.f32 	%f634, %f626, %f633;
	add.f32 	%f635, %f631, %f634;
	add.f32 	%f636, %f632, %f635;
	sub.f32 	%f637, %f632, %f636;
	add.f32 	%f638, %f635, %f637;
	mul.rn.f32 	%f640, %f615, %f821;
	mul.rn.f32 	%f642, %f615, %f822;
	add.f32 	%f643, %f640, %f636;
	sub.f32 	%f644, %f640, %f643;
	add.f32 	%f645, %f636, %f644;
	add.f32 	%f646, %f638, %f645;
	add.f32 	%f647, %f642, %f646;
	add.f32 	%f648, %f643, %f647;
	sub.f32 	%f649, %f643, %f648;
	add.f32 	%f650, %f647, %f649;
	mul.rn.f32 	%f652, %f817, %f648;
	neg.f32 	%f653, %f652;
	fma.rn.f32 	%f654, %f817, %f648, %f653;
	fma.rn.f32 	%f655, %f817, %f650, %f654;
	fma.rn.f32 	%f657, %f823, %f648, %f655;
	add.rn.f32 	%f658, %f652, %f657;
	neg.f32 	%f659, %f658;
	add.rn.f32 	%f660, %f652, %f659;
	add.rn.f32 	%f661, %f660, %f657;
	mov.b32 	 %r275, %f658;
	setp.eq.s32	%p85, %r275, 1118925336;
	add.s32 	%r276, %r275, -1;
	mov.b32 	 %f662, %r276;
	add.f32 	%f663, %f661, 0f37000000;
	selp.f32	%f664, %f662, %f658, %p85;
	selp.f32	%f160, %f663, %f661, %p85;
	mul.f32 	%f665, %f664, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f666, %f665;
	fma.rn.f32 	%f668, %f666, %f824, %f664;
	fma.rn.f32 	%f670, %f666, %f825, %f668;
	mul.f32 	%f671, %f670, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f672, %f671;
	add.f32 	%f673, %f666, 0f00000000;
	ex2.approx.f32 	%f674, %f673;
	mul.f32 	%f675, %f672, %f674;
	setp.lt.f32	%p86, %f664, 0fC2D20000;
	selp.f32	%f676, 0f00000000, %f675, %p86;
	setp.gt.f32	%p87, %f664, 0f42D20000;
	selp.f32	%f892, 0f7F800000, %f676, %p87;
	setp.eq.f32	%p88, %f892, 0f7F800000;
	@%p88 bra 	BB0_89;

	fma.rn.f32 	%f892, %f892, %f160, %f892;

BB0_89:
	setp.lt.f32	%p89, %f131, 0f00000000;
	and.pred  	%p3, %p89, %p58;
	mov.b32 	 %r277, %f892;
	xor.b32  	%r278, %r277, -2147483648;
	mov.b32 	 %f677, %r278;
	selp.f32	%f894, %f677, %f892, %p3;
	setp.eq.f32	%p91, %f131, 0f00000000;
	@%p91 bra 	BB0_92;
	bra.uni 	BB0_90;

BB0_92:
	add.f32 	%f680, %f131, %f131;
	selp.f32	%f894, %f680, 0f00000000, %p58;
	bra.uni 	BB0_93;

BB0_90:
	setp.geu.f32	%p92, %f131, 0f00000000;
	@%p92 bra 	BB0_93;

	mov.f32 	%f826, 0f3EE66666;
	cvt.rzi.f32.f32	%f679, %f826;
	setp.neu.f32	%p93, %f679, 0f3EE66666;
	selp.f32	%f894, 0f7FFFFFFF, %f894, %p93;

BB0_93:
	abs.f32 	%f834, %f131;
	add.f32 	%f681, %f834, 0f3EE66666;
	mov.b32 	 %r279, %f681;
	setp.lt.s32	%p95, %r279, 2139095040;
	@%p95 bra 	BB0_98;

	abs.f32 	%f835, %f131;
	setp.gtu.f32	%p96, %f835, 0f7F800000;
	@%p96 bra 	BB0_97;
	bra.uni 	BB0_95;

BB0_97:
	add.f32 	%f894, %f131, 0f3EE66666;
	bra.uni 	BB0_98;

BB0_95:
	abs.f32 	%f836, %f131;
	setp.neu.f32	%p97, %f836, 0f7F800000;
	@%p97 bra 	BB0_98;

	selp.f32	%f894, 0fFF800000, 0f7F800000, %p3;

BB0_98:
	mov.u32 	%r384, 4;
	setp.eq.f32	%p98, %f131, 0f3F800000;
	selp.f32	%f682, 0f3F800000, %f894, %p98;
	cvt.u64.u32	%rd89, %r3;
	cvt.u64.u32	%rd88, %r2;
	mov.u64 	%rd92, image;
	cvta.global.u64 	%rd87, %rd92;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd87, %r105, %r384, %rd88, %rd89, %rd27, %rd27);
	// inline asm
	cvt.sat.f32.f32	%f683, %f682;
	mul.f32 	%f684, %f683, 0f437FFD71;
	cvt.rzi.u32.f32	%r282, %f684;
	cvt.sat.f32.f32	%f685, %f158;
	mul.f32 	%f686, %f685, 0f437FFD71;
	cvt.rzi.u32.f32	%r283, %f686;
	cvt.sat.f32.f32	%f687, %f145;
	mul.f32 	%f688, %f687, 0f437FFD71;
	cvt.rzi.u32.f32	%r284, %f688;
	cvt.u16.u32	%rs41, %r282;
	cvt.u16.u32	%rs42, %r284;
	cvt.u16.u32	%rs43, %r283;
	mov.u16 	%rs44, 255;
	st.v4.u8 	[%rd86], {%rs41, %rs43, %rs42, %rs44};
	ld.global.u32 	%r418, [imageEnabled];

BB0_99:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	and.b32  	%r285, %r418, 4;
	setp.eq.s32	%p99, %r285, 0;
	@%p99 bra 	BB0_103;

	ld.global.u32 	%r286, [additive];
	setp.eq.s32	%p100, %r286, 0;
	mov.f32 	%f689, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f689;}

	// inline asm
	@%p100 bra 	BB0_102;

	mov.u64 	%rd105, image_HDR;
	cvta.global.u64 	%rd94, %rd105;
	mov.u32 	%r290, 8;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r105, %r290, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs52, %rs53, %rs54, %rs55}, [%rd93];
	// inline asm
	{  cvt.f32.f16 %f690, %rs52;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f691, %rs53;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f692, %rs54;}

	// inline asm
	// inline asm
	call (%rd99), _rt_buffer_get_64, (%rd94, %r105, %r290, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f693, %f129, %f690;
	add.f32 	%f694, %f130, %f691;
	add.f32 	%f695, %f131, %f692;
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f695;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f694;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f693;}

	// inline asm
	st.v4.u16 	[%rd99], {%rs49, %rs50, %rs51, %rs45};
	bra.uni 	BB0_103;

BB0_102:
	mov.u64 	%rd112, image_HDR;
	cvta.global.u64 	%rd107, %rd112;
	mov.u32 	%r292, 8;
	// inline asm
	call (%rd106), _rt_buffer_get_64, (%rd107, %r105, %r292, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f131;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f130;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f129;}

	// inline asm
	st.v4.u16 	[%rd106], {%rs56, %rs57, %rs58, %rs45};

BB0_103:
	mul.f32 	%f171, %f125, 0f3F000000;
	ld.global.f32 	%f700, [skyColor];
	mul.f32 	%f172, %f171, %f700;
	ld.global.f32 	%f701, [skyColor+4];
	mul.f32 	%f173, %f171, %f701;
	ld.global.f32 	%f702, [skyColor+8];
	mul.f32 	%f174, %f171, %f702;
	ld.global.u32 	%r293, [additive];
	setp.eq.s32	%p101, %r293, 0;
	mov.f32 	%f699, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f699;}

	// inline asm
	@%p101 bra 	BB0_105;

	mov.u64 	%rd125, image_RNM0;
	cvta.global.u64 	%rd114, %rd125;
	mov.u32 	%r297, 8;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd114, %r105, %r297, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd113];
	// inline asm
	{  cvt.f32.f16 %f703, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f704, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f705, %rs68;}

	// inline asm
	// inline asm
	call (%rd119), _rt_buffer_get_64, (%rd114, %r105, %r297, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f706, %f172, %f703;
	add.f32 	%f707, %f173, %f704;
	add.f32 	%f708, %f174, %f705;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f708;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f707;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f706;}

	// inline asm
	st.v4.u16 	[%rd119], {%rs63, %rs64, %rs65, %rs59};
	bra.uni 	BB0_106;

BB0_105:
	mov.u64 	%rd132, image_RNM0;
	cvta.global.u64 	%rd127, %rd132;
	mov.u32 	%r299, 8;
	// inline asm
	call (%rd126), _rt_buffer_get_64, (%rd127, %r105, %r299, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f174;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f173;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f172;}

	// inline asm
	st.v4.u16 	[%rd126], {%rs70, %rs71, %rs72, %rs59};

BB0_106:
	mov.f32 	%f713, 0f34000000;
	max.f32 	%f714, %f171, %f713;
	mul.f32 	%f715, %f126, 0f3F000000;
	div.rn.f32 	%f716, %f715, %f714;
	fma.rn.f32 	%f175, %f716, 0f3F000000, 0f3F000000;
	mul.f32 	%f717, %f127, 0f3F000000;
	div.rn.f32 	%f718, %f717, %f714;
	fma.rn.f32 	%f176, %f718, 0f3F000000, 0f3F000000;
	mul.f32 	%f719, %f128, 0f3F000000;
	div.rn.f32 	%f720, %f719, %f714;
	fma.rn.f32 	%f177, %f720, 0f3F000000, 0f3F000000;
	ld.global.u32 	%r300, [additive];
	setp.eq.s32	%p102, %r300, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f699;}

	// inline asm
	@%p102 bra 	BB0_108;

	mov.u64 	%rd145, image_RNM1;
	cvta.global.u64 	%rd134, %rd145;
	mov.u32 	%r304, 8;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r105, %r304, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs80, %rs81, %rs82, %rs83}, [%rd133];
	// inline asm
	{  cvt.f32.f16 %f721, %rs80;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f722, %rs81;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f723, %rs82;}

	// inline asm
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd134, %r105, %r304, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f724, %f175, %f721;
	add.f32 	%f725, %f175, %f722;
	add.f32 	%f726, %f175, %f723;
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f726;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f725;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f724;}

	// inline asm
	st.v4.u16 	[%rd139], {%rs77, %rs78, %rs79, %rs73};
	bra.uni 	BB0_109;

BB0_108:
	mov.u64 	%rd152, image_RNM1;
	cvta.global.u64 	%rd147, %rd152;
	mov.u32 	%r306, 8;
	// inline asm
	call (%rd146), _rt_buffer_get_64, (%rd147, %r105, %r306, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs84, %f175;}

	// inline asm
	st.v4.u16 	[%rd146], {%rs84, %rs84, %rs84, %rs73};

BB0_109:
	ld.global.u32 	%r307, [additive];
	setp.eq.s32	%p103, %r307, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f699;}

	// inline asm
	@%p103 bra 	BB0_111;

	mov.u64 	%rd165, image_RNM2;
	cvta.global.u64 	%rd154, %rd165;
	mov.u32 	%r311, 8;
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd154, %r105, %r311, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs92, %rs93, %rs94, %rs95}, [%rd153];
	// inline asm
	{  cvt.f32.f16 %f729, %rs92;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f730, %rs93;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f731, %rs94;}

	// inline asm
	// inline asm
	call (%rd159), _rt_buffer_get_64, (%rd154, %r105, %r311, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f732, %f176, %f729;
	add.f32 	%f733, %f176, %f730;
	add.f32 	%f734, %f176, %f731;
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f734;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f733;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f732;}

	// inline asm
	st.v4.u16 	[%rd159], {%rs89, %rs90, %rs91, %rs85};
	bra.uni 	BB0_112;

BB0_111:
	mov.u64 	%rd172, image_RNM2;
	cvta.global.u64 	%rd167, %rd172;
	mov.u32 	%r313, 8;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r105, %r313, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs96, %f176;}

	// inline asm
	st.v4.u16 	[%rd166], {%rs96, %rs96, %rs96, %rs85};

BB0_112:
	ld.global.u32 	%r314, [additive];
	setp.eq.s32	%p104, %r314, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f699;}

	// inline asm
	@%p104 bra 	BB0_114;

	mov.u64 	%rd185, image_RNM3;
	cvta.global.u64 	%rd174, %rd185;
	mov.u32 	%r318, 8;
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd174, %r105, %r318, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs104, %rs105, %rs106, %rs107}, [%rd173];
	// inline asm
	{  cvt.f32.f16 %f737, %rs104;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f738, %rs105;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f739, %rs106;}

	// inline asm
	// inline asm
	call (%rd179), _rt_buffer_get_64, (%rd174, %r105, %r318, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f740, %f177, %f737;
	add.f32 	%f741, %f177, %f738;
	add.f32 	%f742, %f177, %f739;
	// inline asm
	{  cvt.rn.f16.f32 %rs103, %f742;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs102, %f741;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f740;}

	// inline asm
	st.v4.u16 	[%rd179], {%rs101, %rs102, %rs103, %rs97};
	bra.uni 	BB0_133;

BB0_114:
	mov.u64 	%rd192, image_RNM3;
	cvta.global.u64 	%rd187, %rd192;
	mov.u32 	%r320, 8;
	// inline asm
	call (%rd186), _rt_buffer_get_64, (%rd187, %r105, %r320, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f177;}

	// inline asm
	st.v4.u16 	[%rd186], {%rs108, %rs108, %rs108, %rs97};

BB0_133:
	ret;
}


