//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 8 .b8 texCoords[8];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 lightmapDirect[1];
.global .texref albedoTex;
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9texCoordsE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9texCoordsE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9texCoordsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9texCoordsE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 67, 111, 111, 114, 100, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9texCoordsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<104>;
	.reg .b16 	%rs<145>;
	.reg .f32 	%f<884>;
	.reg .b32 	%r<404>;
	.reg .b64 	%rd<284>;


	mov.u64 	%rd283, __local_depot0;
	cvta.local.u64 	%SP, %rd283;
	ld.global.v2.u32 	{%r101, %r102}, [pixelID];
	cvt.u64.u32	%rd22, %r101;
	cvt.u64.u32	%rd23, %r102;
	mov.u64 	%rd26, uvnormal;
	cvta.global.u64 	%rd21, %rd26;
	mov.u32 	%r99, 2;
	mov.u32 	%r100, 4;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r99, %r100, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.u32 	%r1, [%rd20];
	shr.u32 	%r105, %r1, 16;
	cvt.u16.u32	%rs1, %r105;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r1;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p4, %rs8, 0;
	mov.f32 	%f800, 0f00000000;
	mov.f32 	%f801, %f800;
	mov.f32 	%f802, %f800;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs9, [%rd20+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f210, %rs11;
	div.rn.f32 	%f211, %f210, 0f437F0000;
	fma.rn.f32 	%f212, %f211, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f213, %rs9;
	div.rn.f32 	%f214, %f213, 0f437F0000;
	fma.rn.f32 	%f215, %f214, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f216, %rs6;
	div.rn.f32 	%f217, %f216, 0f437F0000;
	fma.rn.f32 	%f218, %f217, 0f40000000, 0fBF800000;
	mul.f32 	%f219, %f215, %f215;
	fma.rn.f32 	%f220, %f212, %f212, %f219;
	fma.rn.f32 	%f221, %f218, %f218, %f220;
	sqrt.rn.f32 	%f222, %f221;
	rcp.rn.f32 	%f223, %f222;
	mul.f32 	%f800, %f212, %f223;
	mul.f32 	%f801, %f215, %f223;
	mul.f32 	%f802, %f218, %f223;

BB0_2:
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	ld.global.v2.u32 	{%r109, %r110}, [tileInfo];
	add.s32 	%r2, %r106, %r109;
	add.s32 	%r3, %r107, %r110;
	setp.eq.f32	%p5, %f801, 0f00000000;
	setp.eq.f32	%p6, %f800, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f802, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_107;
	bra.uni 	BB0_3;

BB0_107:
	ld.global.u32 	%r403, [imageEnabled];
	and.b32  	%r300, %r403, 1;
	setp.eq.b32	%p96, %r300, 1;
	@!%p96 bra 	BB0_109;
	bra.uni 	BB0_108;

BB0_108:
	cvt.u64.u32	%rd174, %r2;
	cvt.u64.u32	%rd175, %r3;
	mov.u64 	%rd178, image;
	cvta.global.u64 	%rd173, %rd178;
	mov.u64 	%rd177, 0;
	// inline asm
	call (%rd172), _rt_buffer_get_64, (%rd173, %r99, %r100, %rd174, %rd175, %rd177, %rd177);
	// inline asm
	mov.u16 	%rs88, 0;
	st.v4.u8 	[%rd172], {%rs88, %rs88, %rs88, %rs88};
	ld.global.u32 	%r403, [imageEnabled];

BB0_109:
	and.b32  	%r303, %r403, 4;
	setp.eq.s32	%p97, %r303, 0;
	@%p97 bra 	BB0_111;

	cvt.u64.u32	%rd181, %r2;
	cvt.u64.u32	%rd182, %r3;
	mov.u64 	%rd185, image_HDR;
	cvta.global.u64 	%rd180, %rd185;
	mov.u32 	%r305, 8;
	mov.u64 	%rd184, 0;
	// inline asm
	call (%rd179), _rt_buffer_get_64, (%rd180, %r99, %r305, %rd181, %rd182, %rd184, %rd184);
	// inline asm
	mov.f32 	%f712, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f712;}

	// inline asm
	mov.u16 	%rs90, 0;
	st.v4.u16 	[%rd179], {%rs89, %rs89, %rs89, %rs90};
	ld.global.u32 	%r403, [imageEnabled];

BB0_111:
	and.b32  	%r306, %r403, 16;
	setp.eq.s32	%p98, %r306, 0;
	@%p98 bra 	BB0_113;

	cvt.u64.u32	%rd189, %r3;
	cvt.u64.u32	%rd188, %r2;
	mov.u64 	%rd192, image_HDR2;
	cvta.global.u64 	%rd187, %rd192;
	mov.u32 	%r308, 8;
	mov.u64 	%rd191, 0;
	// inline asm
	call (%rd186), _rt_buffer_get_64, (%rd187, %r99, %r308, %rd188, %rd189, %rd191, %rd191);
	// inline asm
	mov.f32 	%f713, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f713;}

	// inline asm
	mov.u16 	%rs92, 0;
	st.v4.u16 	[%rd186], {%rs91, %rs91, %rs91, %rs92};

BB0_113:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	ld.global.u32 	%r309, [additive];
	setp.eq.s32	%p99, %r309, 0;
	@%p99 bra 	BB0_115;

	mov.u64 	%rd205, image_RNM0;
	cvta.global.u64 	%rd194, %rd205;
	mov.u32 	%r313, 8;
	mov.u64 	%rd204, 0;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r99, %r313, %rd18, %rd19, %rd204, %rd204);
	// inline asm
	ld.v4.u16 	{%rs99, %rs100, %rs101, %rs102}, [%rd193];
	// inline asm
	{  cvt.f32.f16 %f714, %rs99;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f715, %rs100;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f716, %rs101;}

	// inline asm
	// inline asm
	call (%rd199), _rt_buffer_get_64, (%rd194, %r99, %r313, %rd18, %rd19, %rd204, %rd204);
	// inline asm
	add.f32 	%f717, %f714, 0f00000000;
	add.f32 	%f718, %f715, 0f00000000;
	add.f32 	%f719, %f716, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f719;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f718;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs96, %f717;}

	// inline asm
	mov.u16 	%rs103, 0;
	st.v4.u16 	[%rd199], {%rs96, %rs97, %rs98, %rs103};
	bra.uni 	BB0_116;

BB0_3:
	ld.global.v2.u32 	{%r120, %r121}, [pixelID];
	cvt.u64.u32	%rd29, %r120;
	cvt.u64.u32	%rd30, %r121;
	mov.u64 	%rd45, lightmapDirect;
	cvta.global.u64 	%rd28, %rd45;
	mov.u32 	%r115, 8;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r99, %r115, %rd29, %rd30, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs16, %rs17, %rs18, %rs19}, [%rd27];
	// inline asm
	{  cvt.f32.f16 %f224, %rs16;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f225, %rs17;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f226, %rs18;}

	// inline asm
	ld.global.v2.u32 	{%r124, %r125}, [pixelID];
	cvt.u64.u32	%rd35, %r124;
	cvt.u64.u32	%rd36, %r125;
	mov.u64 	%rd46, uvpos;
	cvta.global.u64 	%rd34, %rd46;
	mov.u32 	%r117, 12;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r99, %r117, %rd35, %rd36, %rd25, %rd25);
	// inline asm
	ld.f32 	%f242, [%rd33+8];
	ld.f32 	%f243, [%rd33+4];
	ld.f32 	%f244, [%rd33];
	mul.f32 	%f245, %f244, 0f3456BF95;
	mul.f32 	%f246, %f243, 0f3456BF95;
	mul.f32 	%f247, %f242, 0f3456BF95;
	abs.f32 	%f248, %f800;
	div.rn.f32 	%f249, %f245, %f248;
	abs.f32 	%f250, %f801;
	div.rn.f32 	%f251, %f246, %f250;
	abs.f32 	%f252, %f802;
	div.rn.f32 	%f253, %f247, %f252;
	abs.f32 	%f254, %f249;
	abs.f32 	%f255, %f251;
	abs.f32 	%f256, %f253;
	mov.f32 	%f257, 0f38D1B717;
	max.f32 	%f258, %f254, %f257;
	max.f32 	%f259, %f255, %f257;
	max.f32 	%f260, %f256, %f257;
	fma.rn.f32 	%f10, %f800, %f258, %f244;
	fma.rn.f32 	%f11, %f801, %f259, %f243;
	fma.rn.f32 	%f12, %f802, %f260, %f242;
	setp.gt.f32	%p10, %f248, %f252;
	neg.f32 	%f261, %f801;
	selp.f32	%f262, %f261, 0f00000000, %p10;
	neg.f32 	%f263, %f802;
	selp.f32	%f264, %f800, %f263, %p10;
	selp.f32	%f265, 0f00000000, %f801, %p10;
	mul.f32 	%f266, %f264, %f264;
	fma.rn.f32 	%f267, %f262, %f262, %f266;
	fma.rn.f32 	%f268, %f265, %f265, %f267;
	sqrt.rn.f32 	%f269, %f268;
	rcp.rn.f32 	%f270, %f269;
	mul.f32 	%f13, %f262, %f270;
	mul.f32 	%f14, %f264, %f270;
	mul.f32 	%f15, %f265, %f270;
	ld.global.v2.u32 	{%r128, %r129}, [pixelID];
	cvt.u64.u32	%rd41, %r128;
	cvt.u64.u32	%rd42, %r129;
	mov.u64 	%rd47, rnd_seeds;
	cvta.global.u64 	%rd40, %rd47;
	// inline asm
	call (%rd39), _rt_buffer_get_64, (%rd40, %r99, %r100, %rd41, %rd42, %rd25, %rd25);
	// inline asm
	ld.global.u32 	%r372, [samples];
	mov.f32 	%f845, 0f00000000;
	setp.lt.s32	%p11, %r372, 1;
	@%p11 bra 	BB0_4;

	cvt.rn.f32.s32	%f286, %r372;
	rcp.rn.f32 	%f16, %f286;
	ld.u32 	%r398, [%rd39];
	mul.f32 	%f17, %f10, 0f3456BF95;
	mul.f32 	%f18, %f11, 0f3456BF95;
	mul.f32 	%f19, %f12, 0f3456BF95;
	mul.f32 	%f287, %f800, %f14;
	mul.f32 	%f288, %f801, %f13;
	sub.f32 	%f20, %f288, %f287;
	mul.f32 	%f289, %f802, %f13;
	mul.f32 	%f290, %f800, %f15;
	sub.f32 	%f21, %f290, %f289;
	mul.f32 	%f291, %f801, %f15;
	mul.f32 	%f292, %f802, %f14;
	sub.f32 	%f22, %f292, %f291;
	mov.f32 	%f845, 0f00000000;
	mov.u32 	%r373, 0;
	abs.f32 	%f293, %f18;
	abs.f32 	%f294, %f17;
	max.f32 	%f295, %f294, %f293;
	abs.f32 	%f296, %f19;
	max.f32 	%f297, %f295, %f296;
	mov.f32 	%f846, %f845;
	mov.f32 	%f847, %f845;
	mov.f32 	%f848, %f845;
	mov.f32 	%f849, %f845;
	mov.f32 	%f850, %f845;
	mov.f32 	%f851, %f845;
	mov.f32 	%f852, %f845;
	mov.f32 	%f853, %f845;
	mov.f32 	%f854, %f845;
	mov.f32 	%f855, %f845;
	mov.f32 	%f856, %f845;
	mov.f32 	%f857, %f845;
	mov.f32 	%f858, %f845;
	mov.f32 	%f859, %f845;

BB0_6:
	setp.lt.s32	%p12, %r372, 1;
	@%p12 bra 	BB0_55;

	mov.u32 	%r375, 0;

BB0_8:
	cvt.rn.f32.s32	%f751, %r373;
	mad.lo.s32 	%r134, %r398, 1664525, 1013904223;
	and.b32  	%r135, %r134, 16777215;
	cvt.rn.f32.u32	%f299, %r135;
	fma.rn.f32 	%f300, %f299, 0f33800000, %f751;
	mul.f32 	%f55, %f16, %f300;
	mad.lo.s32 	%r11, %r134, 1664525, 1013904223;
	and.b32  	%r136, %r11, 16777215;
	cvt.rn.f32.u32	%f301, %r136;
	cvt.rn.f32.s32	%f302, %r375;
	fma.rn.f32 	%f303, %f301, 0f33800000, %f302;
	mul.f32 	%f304, %f16, %f303;
	mul.f32 	%f305, %f55, %f55;
	mov.f32 	%f306, 0f3F800000;
	sub.f32 	%f307, %f306, %f305;
	mov.f32 	%f308, 0f00000000;
	max.f32 	%f309, %f308, %f307;
	sqrt.rn.f32 	%f56, %f309;
	mul.f32 	%f839, %f304, 0f40C90FDB;
	abs.f32 	%f58, %f839;
	setp.neu.f32	%p13, %f58, 0f7F800000;
	mov.f32 	%f833, %f839;
	@%p13 bra 	BB0_10;

	mov.f32 	%f752, 0f00000000;
	mul.rn.f32 	%f833, %f839, %f752;

BB0_10:
	mul.f32 	%f311, %f833, 0f3F22F983;
	cvt.rni.s32.f32	%r386, %f311;
	cvt.rn.f32.s32	%f312, %r386;
	neg.f32 	%f313, %f312;
	mov.f32 	%f314, 0f3FC90FDA;
	fma.rn.f32 	%f315, %f313, %f314, %f833;
	mov.f32 	%f316, 0f33A22168;
	fma.rn.f32 	%f317, %f313, %f316, %f315;
	mov.f32 	%f318, 0f27C234C5;
	fma.rn.f32 	%f834, %f313, %f318, %f317;
	abs.f32 	%f319, %f833;
	setp.leu.f32	%p14, %f319, 0f47CE4780;
	@%p14 bra 	BB0_21;

	add.u64 	%rd49, %SP, 12;
	cvta.to.local.u64 	%rd279, %rd49;
	mov.u32 	%r377, 0;
	mov.u64 	%rd280, 0;
	mov.u32 	%r378, %r377;

BB0_12:
	.pragma "nounroll";
	mov.b32 	 %r339, %f833;
	shl.b32 	%r338, %r339, 8;
	or.b32  	%r337, %r338, -2147483648;
	add.u64 	%rd274, %SP, 12;
	cvta.to.local.u64 	%rd273, %rd274;
	shl.b64 	%rd50, %rd280, 2;
	mov.u64 	%rd51, __cudart_i2opi_f;
	add.s64 	%rd52, %rd51, %rd50;
	ld.const.u32 	%r142, [%rd52];
	// inline asm
	{
	mad.lo.cc.u32   %r140, %r142, %r337, %r378;
	madc.hi.u32     %r378, %r142, %r337,  0;
	}
	// inline asm
	st.local.u32 	[%rd279], %r140;
	add.s32 	%r377, %r377, 1;
	cvt.s64.s32	%rd280, %r377;
	mul.wide.s32 	%rd55, %r377, 4;
	add.s64 	%rd279, %rd273, %rd55;
	setp.ne.s32	%p15, %r377, 6;
	@%p15 bra 	BB0_12;

	mov.b32 	 %r341, %f833;
	shr.u32 	%r340, %r341, 23;
	add.u64 	%rd275, %SP, 12;
	and.b32  	%r145, %r340, 255;
	add.s32 	%r146, %r145, -128;
	shr.u32 	%r147, %r146, 5;
	cvta.to.local.u64 	%rd57, %rd275;
	st.local.u32 	[%rd57+24], %r378;
	mov.u32 	%r148, 6;
	sub.s32 	%r149, %r148, %r147;
	mul.wide.s32 	%rd58, %r149, 4;
	add.s64 	%rd8, %rd57, %rd58;
	ld.local.u32 	%r379, [%rd8];
	ld.local.u32 	%r380, [%rd8+-4];
	and.b32  	%r23, %r340, 31;
	setp.eq.s32	%p16, %r23, 0;
	@%p16 bra 	BB0_15;

	mov.u32 	%r150, 32;
	sub.s32 	%r151, %r150, %r23;
	shr.u32 	%r152, %r380, %r151;
	shl.b32 	%r153, %r379, %r23;
	add.s32 	%r379, %r152, %r153;
	ld.local.u32 	%r154, [%rd8+-8];
	shr.u32 	%r155, %r154, %r151;
	shl.b32 	%r156, %r380, %r23;
	add.s32 	%r380, %r155, %r156;

BB0_15:
	mov.b32 	 %r347, %f833;
	and.b32  	%r382, %r347, -2147483648;
	shr.u32 	%r157, %r380, 30;
	shl.b32 	%r158, %r379, 2;
	add.s32 	%r381, %r157, %r158;
	shl.b32 	%r29, %r380, 2;
	shr.u32 	%r159, %r381, 31;
	shr.u32 	%r160, %r379, 30;
	add.s32 	%r30, %r159, %r160;
	setp.eq.s32	%p17, %r159, 0;
	@%p17 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r383, %r29;
	bra.uni 	BB0_18;

BB0_17:
	mov.b32 	 %r349, %f833;
	and.b32  	%r348, %r349, -2147483648;
	not.b32 	%r161, %r381;
	neg.s32 	%r383, %r29;
	setp.eq.s32	%p18, %r29, 0;
	selp.u32	%r162, 1, 0, %p18;
	add.s32 	%r381, %r162, %r161;
	xor.b32  	%r382, %r348, -2147483648;

BB0_18:
	mov.b32 	 %r351, %f833;
	and.b32  	%r350, %r351, -2147483648;
	clz.b32 	%r385, %r381;
	setp.eq.s32	%p19, %r385, 0;
	shl.b32 	%r163, %r381, %r385;
	mov.u32 	%r164, 32;
	sub.s32 	%r165, %r164, %r385;
	shr.u32 	%r166, %r383, %r165;
	add.s32 	%r167, %r166, %r163;
	selp.b32	%r38, %r381, %r167, %p19;
	mov.u32 	%r168, -921707870;
	mul.hi.u32 	%r384, %r38, %r168;
	setp.eq.s32	%p20, %r350, 0;
	neg.s32 	%r169, %r30;
	selp.b32	%r386, %r30, %r169, %p20;
	setp.lt.s32	%p21, %r384, 1;
	@%p21 bra 	BB0_20;

	mul.lo.s32 	%r170, %r38, -921707870;
	shr.u32 	%r171, %r170, 31;
	shl.b32 	%r172, %r384, 1;
	add.s32 	%r384, %r171, %r172;
	add.s32 	%r385, %r385, 1;

BB0_20:
	mov.u32 	%r173, 126;
	sub.s32 	%r174, %r173, %r385;
	shl.b32 	%r175, %r174, 23;
	add.s32 	%r176, %r384, 1;
	shr.u32 	%r177, %r176, 7;
	add.s32 	%r178, %r177, 1;
	shr.u32 	%r179, %r178, 1;
	add.s32 	%r180, %r179, %r175;
	or.b32  	%r181, %r180, %r382;
	mov.b32 	 %f834, %r181;

BB0_21:
	add.s32 	%r46, %r386, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p22, %r47, 0;
	@%p22 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mul.rn.f32 	%f760, %f834, %f834;
	mov.f32 	%f322, 0f3C08839E;
	mov.f32 	%f323, 0fB94CA1F9;
	fma.rn.f32 	%f835, %f323, %f760, %f322;
	bra.uni 	BB0_24;

BB0_22:
	mul.rn.f32 	%f756, %f834, %f834;
	mov.f32 	%f320, 0fBAB6061A;
	mov.f32 	%f321, 0f37CCF5CE;
	fma.rn.f32 	%f835, %f321, %f756, %f320;

BB0_24:
	@%p22 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mul.rn.f32 	%f759, %f834, %f834;
	mov.f32 	%f755, 0f00000000;
	mov.f32 	%f327, 0fBE2AAAA3;
	fma.rn.f32 	%f328, %f835, %f759, %f327;
	fma.rn.f32 	%f836, %f328, %f759, %f755;
	bra.uni 	BB0_27;

BB0_25:
	mul.rn.f32 	%f757, %f834, %f834;
	mov.f32 	%f324, 0f3D2AAAA5;
	fma.rn.f32 	%f325, %f835, %f757, %f324;
	mov.f32 	%f326, 0fBF000000;
	fma.rn.f32 	%f836, %f325, %f757, %f326;

BB0_27:
	fma.rn.f32 	%f837, %f836, %f834, %f834;
	@%p22 bra 	BB0_29;

	mul.rn.f32 	%f758, %f834, %f834;
	mov.f32 	%f742, 0f3F800000;
	fma.rn.f32 	%f837, %f836, %f758, %f742;

BB0_29:
	add.s32 	%r362, %r386, 1;
	and.b32  	%r182, %r362, 2;
	setp.eq.s32	%p25, %r182, 0;
	@%p25 bra 	BB0_31;

	mov.f32 	%f743, 0f00000000;
	mov.f32 	%f332, 0fBF800000;
	fma.rn.f32 	%f837, %f837, %f332, %f743;

BB0_31:
	abs.f32 	%f744, %f839;
	setp.neu.f32	%p103, %f744, 0f7F800000;
	@%p103 bra 	BB0_33;

	mov.f32 	%f754, 0f00000000;
	mul.rn.f32 	%f839, %f839, %f754;

BB0_33:
	mov.f32 	%f747, 0f27C234C5;
	mov.f32 	%f746, 0f33A22168;
	mov.f32 	%f745, 0f3FC90FDA;
	mul.f32 	%f334, %f839, 0f3F22F983;
	cvt.rni.s32.f32	%r396, %f334;
	cvt.rn.f32.s32	%f335, %r396;
	neg.f32 	%f336, %f335;
	fma.rn.f32 	%f338, %f336, %f745, %f839;
	fma.rn.f32 	%f340, %f336, %f746, %f338;
	fma.rn.f32 	%f840, %f336, %f747, %f340;
	abs.f32 	%f342, %f839;
	setp.leu.f32	%p27, %f342, 0f47CE4780;
	@%p27 bra 	BB0_44;

	add.u64 	%rd60, %SP, 12;
	cvta.to.local.u64 	%rd281, %rd60;
	mov.b32 	 %r49, %f839;
	shl.b32 	%r185, %r49, 8;
	or.b32  	%r51, %r185, -2147483648;
	mov.u32 	%r387, 0;
	mov.u64 	%rd282, %rd25;
	mov.u32 	%r388, %r387;

BB0_35:
	.pragma "nounroll";
	add.u64 	%rd277, %SP, 12;
	cvta.to.local.u64 	%rd276, %rd277;
	shl.b64 	%rd61, %rd282, 2;
	mov.u64 	%rd62, __cudart_i2opi_f;
	add.s64 	%rd63, %rd62, %rd61;
	ld.const.u32 	%r188, [%rd63];
	// inline asm
	{
	mad.lo.cc.u32   %r186, %r188, %r51, %r388;
	madc.hi.u32     %r388, %r188, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd281], %r186;
	add.s32 	%r387, %r387, 1;
	cvt.s64.s32	%rd282, %r387;
	mul.wide.s32 	%rd64, %r387, 4;
	add.s64 	%rd281, %rd276, %rd64;
	setp.ne.s32	%p28, %r387, 6;
	@%p28 bra 	BB0_35;

	mov.b32 	 %r364, %f839;
	shr.u32 	%r363, %r364, 23;
	add.u64 	%rd278, %SP, 12;
	and.b32  	%r191, %r363, 255;
	add.s32 	%r192, %r191, -128;
	shr.u32 	%r193, %r192, 5;
	cvta.to.local.u64 	%rd66, %rd278;
	st.local.u32 	[%rd66+24], %r388;
	mov.u32 	%r194, 6;
	sub.s32 	%r195, %r194, %r193;
	mul.wide.s32 	%rd67, %r195, 4;
	add.s64 	%rd15, %rd66, %rd67;
	ld.local.u32 	%r389, [%rd15];
	ld.local.u32 	%r390, [%rd15+-4];
	and.b32  	%r59, %r363, 31;
	setp.eq.s32	%p29, %r59, 0;
	@%p29 bra 	BB0_38;

	mov.u32 	%r196, 32;
	sub.s32 	%r197, %r196, %r59;
	shr.u32 	%r198, %r390, %r197;
	shl.b32 	%r199, %r389, %r59;
	add.s32 	%r389, %r198, %r199;
	ld.local.u32 	%r200, [%rd15+-8];
	shr.u32 	%r201, %r200, %r197;
	shl.b32 	%r202, %r390, %r59;
	add.s32 	%r390, %r201, %r202;

BB0_38:
	mov.b32 	 %r367, %f839;
	and.b32  	%r392, %r367, -2147483648;
	shr.u32 	%r203, %r390, 30;
	shl.b32 	%r204, %r389, 2;
	add.s32 	%r391, %r203, %r204;
	shl.b32 	%r65, %r390, 2;
	shr.u32 	%r205, %r391, 31;
	shr.u32 	%r206, %r389, 30;
	add.s32 	%r66, %r205, %r206;
	setp.eq.s32	%p30, %r205, 0;
	@%p30 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r393, %r65;
	bra.uni 	BB0_41;

BB0_40:
	mov.b32 	 %r369, %f839;
	and.b32  	%r368, %r369, -2147483648;
	not.b32 	%r207, %r391;
	neg.s32 	%r393, %r65;
	setp.eq.s32	%p31, %r65, 0;
	selp.u32	%r208, 1, 0, %p31;
	add.s32 	%r391, %r208, %r207;
	xor.b32  	%r392, %r368, -2147483648;

BB0_41:
	mov.b32 	 %r371, %f839;
	and.b32  	%r370, %r371, -2147483648;
	clz.b32 	%r395, %r391;
	setp.eq.s32	%p32, %r395, 0;
	shl.b32 	%r209, %r391, %r395;
	mov.u32 	%r210, 32;
	sub.s32 	%r211, %r210, %r395;
	shr.u32 	%r212, %r393, %r211;
	add.s32 	%r213, %r212, %r209;
	selp.b32	%r74, %r391, %r213, %p32;
	mov.u32 	%r214, -921707870;
	mul.hi.u32 	%r394, %r74, %r214;
	setp.eq.s32	%p33, %r370, 0;
	neg.s32 	%r215, %r66;
	selp.b32	%r396, %r66, %r215, %p33;
	setp.lt.s32	%p34, %r394, 1;
	@%p34 bra 	BB0_43;

	mul.lo.s32 	%r216, %r74, -921707870;
	shr.u32 	%r217, %r216, 31;
	shl.b32 	%r218, %r394, 1;
	add.s32 	%r394, %r217, %r218;
	add.s32 	%r395, %r395, 1;

BB0_43:
	mov.u32 	%r219, 126;
	sub.s32 	%r220, %r219, %r395;
	shl.b32 	%r221, %r220, 23;
	add.s32 	%r222, %r394, 1;
	shr.u32 	%r223, %r222, 7;
	add.s32 	%r224, %r223, 1;
	shr.u32 	%r225, %r224, 1;
	add.s32 	%r226, %r225, %r221;
	or.b32  	%r227, %r226, %r392;
	mov.b32 	 %f840, %r227;

BB0_44:
	and.b32  	%r82, %r396, 1;
	setp.eq.s32	%p35, %r82, 0;
	@%p35 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mul.rn.f32 	%f765, %f840, %f840;
	mov.f32 	%f345, 0f3C08839E;
	mov.f32 	%f346, 0fB94CA1F9;
	fma.rn.f32 	%f841, %f346, %f765, %f345;
	bra.uni 	BB0_47;

BB0_45:
	mul.rn.f32 	%f761, %f840, %f840;
	mov.f32 	%f343, 0fBAB6061A;
	mov.f32 	%f344, 0f37CCF5CE;
	fma.rn.f32 	%f841, %f344, %f761, %f343;

BB0_47:
	@%p35 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mul.rn.f32 	%f764, %f840, %f840;
	mov.f32 	%f753, 0f00000000;
	mov.f32 	%f350, 0fBE2AAAA3;
	fma.rn.f32 	%f351, %f841, %f764, %f350;
	fma.rn.f32 	%f842, %f351, %f764, %f753;
	bra.uni 	BB0_50;

BB0_48:
	mul.rn.f32 	%f762, %f840, %f840;
	mov.f32 	%f347, 0f3D2AAAA5;
	fma.rn.f32 	%f348, %f841, %f762, %f347;
	mov.f32 	%f349, 0fBF000000;
	fma.rn.f32 	%f842, %f348, %f762, %f349;

BB0_50:
	fma.rn.f32 	%f843, %f842, %f840, %f840;
	@%p35 bra 	BB0_52;

	mul.rn.f32 	%f763, %f840, %f840;
	mov.f32 	%f748, 0f3F800000;
	fma.rn.f32 	%f843, %f842, %f763, %f748;

BB0_52:
	and.b32  	%r228, %r396, 2;
	setp.eq.s32	%p38, %r228, 0;
	@%p38 bra 	BB0_54;

	mov.f32 	%f749, 0f00000000;
	mov.f32 	%f355, 0fBF800000;
	fma.rn.f32 	%f843, %f843, %f355, %f749;

BB0_54:
	mad.lo.s32 	%r344, %r398, 1664525, 1013904223;
	mad.lo.s32 	%r398, %r344, 1664525, 1013904223;
	max.f32 	%f750, %f297, %f257;
	mul.f32 	%f364, %f56, %f837;
	add.u64 	%rd68, %SP, 0;
	cvta.to.local.u64 	%rd69, %rd68;
	mul.f32 	%f365, %f56, %f843;
	mul.f32 	%f366, %f13, %f365;
	mul.f32 	%f367, %f14, %f365;
	mul.f32 	%f368, %f15, %f365;
	fma.rn.f32 	%f369, %f22, %f364, %f366;
	fma.rn.f32 	%f370, %f21, %f364, %f367;
	fma.rn.f32 	%f371, %f20, %f364, %f368;
	fma.rn.f32 	%f359, %f800, %f55, %f369;
	fma.rn.f32 	%f360, %f801, %f55, %f370;
	fma.rn.f32 	%f361, %f802, %f55, %f371;
	mov.u32 	%r230, 0;
	st.local.u32 	[%rd69+8], %r230;
	st.local.u32 	[%rd69+4], %r230;
	st.local.u32 	[%rd69], %r230;
	ld.global.u32 	%r229, [root];
	mov.f32 	%f363, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r229, %f10, %f11, %f12, %f359, %f360, %f361, %r230, %f750, %f363, %rd68, %r117);
	// inline asm
	mul.f32 	%f372, %f801, %f360;
	fma.rn.f32 	%f373, %f800, %f359, %f372;
	fma.rn.f32 	%f374, %f802, %f361, %f373;
	mul.f32 	%f375, %f374, 0f40800000;
	cvt.sat.f32.f32	%f376, %f375;
	ld.local.f32 	%f377, [%rd69];
	mul.f32 	%f378, %f376, %f377;
	ld.local.f32 	%f379, [%rd69+4];
	mul.f32 	%f380, %f376, %f379;
	ld.local.f32 	%f381, [%rd69+8];
	mul.f32 	%f382, %f376, %f381;
	fma.rn.f32 	%f853, %f359, %f378, %f853;
	fma.rn.f32 	%f852, %f359, %f380, %f852;
	fma.rn.f32 	%f851, %f359, %f382, %f851;
	fma.rn.f32 	%f856, %f360, %f378, %f856;
	fma.rn.f32 	%f855, %f360, %f380, %f855;
	fma.rn.f32 	%f854, %f360, %f382, %f854;
	fma.rn.f32 	%f859, %f361, %f378, %f859;
	fma.rn.f32 	%f858, %f361, %f380, %f858;
	fma.rn.f32 	%f857, %f361, %f382, %f857;
	add.f32 	%f850, %f850, %f378;
	add.f32 	%f849, %f849, %f380;
	add.f32 	%f848, %f848, %f382;
	cvt.sat.f32.f32	%f383, %f374;
	fma.rn.f32 	%f847, %f383, %f377, %f847;
	fma.rn.f32 	%f846, %f383, %f379, %f846;
	fma.rn.f32 	%f845, %f383, %f381, %f845;
	ld.global.u32 	%r372, [samples];
	add.s32 	%r375, %r375, 1;
	setp.lt.s32	%p39, %r375, %r372;
	@%p39 bra 	BB0_8;

BB0_55:
	add.s32 	%r373, %r373, 1;
	setp.lt.s32	%p40, %r373, %r372;
	@%p40 bra 	BB0_6;
	bra.uni 	BB0_56;

BB0_115:
	mov.u64 	%rd212, image_RNM0;
	cvta.global.u64 	%rd207, %rd212;
	mov.u32 	%r315, 8;
	mov.u64 	%rd211, 0;
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd207, %r99, %r315, %rd18, %rd19, %rd211, %rd211);
	// inline asm
	mov.f32 	%f720, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f720;}

	// inline asm
	mov.u16 	%rs105, 0;
	st.v4.u16 	[%rd206], {%rs104, %rs104, %rs104, %rs105};

BB0_116:
	ld.global.u32 	%r316, [additive];
	setp.eq.s32	%p100, %r316, 0;
	@%p100 bra 	BB0_118;

	mov.u64 	%rd225, image_RNM1;
	cvta.global.u64 	%rd214, %rd225;
	mov.u32 	%r320, 8;
	mov.u64 	%rd224, 0;
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd214, %r99, %r320, %rd18, %rd19, %rd224, %rd224);
	// inline asm
	ld.v4.u16 	{%rs112, %rs113, %rs114, %rs115}, [%rd213];
	// inline asm
	{  cvt.f32.f16 %f721, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f722, %rs113;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f723, %rs114;}

	// inline asm
	// inline asm
	call (%rd219), _rt_buffer_get_64, (%rd214, %r99, %r320, %rd18, %rd19, %rd224, %rd224);
	// inline asm
	add.f32 	%f724, %f721, 0f00000000;
	add.f32 	%f725, %f722, 0f00000000;
	add.f32 	%f726, %f723, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs111, %f726;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f725;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f724;}

	// inline asm
	mov.u16 	%rs116, 0;
	st.v4.u16 	[%rd219], {%rs109, %rs110, %rs111, %rs116};
	bra.uni 	BB0_119;

BB0_4:
	mov.f32 	%f846, %f845;
	mov.f32 	%f847, %f845;
	mov.f32 	%f848, %f845;
	mov.f32 	%f849, %f845;
	mov.f32 	%f850, %f845;
	mov.f32 	%f851, %f845;
	mov.f32 	%f852, %f845;
	mov.f32 	%f853, %f845;
	mov.f32 	%f854, %f845;
	mov.f32 	%f855, %f845;
	mov.f32 	%f856, %f845;
	mov.f32 	%f857, %f845;
	mov.f32 	%f858, %f845;
	mov.f32 	%f859, %f845;

BB0_56:
	mul.lo.s32 	%r232, %r372, %r372;
	cvt.rn.f32.s32	%f384, %r232;
	rcp.rn.f32 	%f385, %f384;
	cvt.rn.f32.u32	%f386, %r3;
	cvt.rn.f32.u32	%f387, %r2;
	tex.2d.v4.f32.f32	{%f388, %f389, %f390, %f391}, [albedoTex, {%f387, %f386}];
	mul.f32 	%f138, %f850, %f385;
	mul.f32 	%f139, %f849, %f385;
	mul.f32 	%f140, %f848, %f385;
	mul.f32 	%f141, %f853, %f385;
	mul.f32 	%f142, %f852, %f385;
	mul.f32 	%f143, %f851, %f385;
	mul.f32 	%f144, %f856, %f385;
	mul.f32 	%f145, %f855, %f385;
	mul.f32 	%f146, %f854, %f385;
	mul.f32 	%f147, %f859, %f385;
	mul.f32 	%f148, %f858, %f385;
	mul.f32 	%f149, %f857, %f385;
	mul.f32 	%f392, %f847, %f385;
	mul.f32 	%f393, %f846, %f385;
	mul.f32 	%f394, %f845, %f385;
	fma.rn.f32 	%f395, %f847, %f385, %f392;
	fma.rn.f32 	%f396, %f846, %f385, %f393;
	fma.rn.f32 	%f397, %f845, %f385, %f394;
	mul.f32 	%f150, %f395, %f388;
	mul.f32 	%f151, %f396, %f389;
	mul.f32 	%f152, %f397, %f390;
	add.f32 	%f153, %f224, %f150;
	add.f32 	%f154, %f225, %f151;
	add.f32 	%f155, %f226, %f152;
	ld.global.u32 	%r401, [imageEnabled];
	and.b32  	%r233, %r401, 1;
	setp.eq.b32	%p41, %r233, 1;
	@!%p41 bra 	BB0_91;
	bra.uni 	BB0_57;

BB0_57:
	abs.f32 	%f157, %f153;
	setp.lt.f32	%p42, %f157, 0f00800000;
	mul.f32 	%f403, %f157, 0f4B800000;
	selp.f32	%f404, 0fC3170000, 0fC2FE0000, %p42;
	selp.f32	%f405, %f403, %f157, %p42;
	mov.b32 	 %r234, %f405;
	and.b32  	%r235, %r234, 8388607;
	or.b32  	%r236, %r235, 1065353216;
	mov.b32 	 %f406, %r236;
	shr.u32 	%r237, %r234, 23;
	cvt.rn.f32.u32	%f407, %r237;
	add.f32 	%f408, %f404, %f407;
	setp.gt.f32	%p43, %f406, 0f3FB504F3;
	mul.f32 	%f409, %f406, 0f3F000000;
	add.f32 	%f410, %f408, 0f3F800000;
	selp.f32	%f411, %f409, %f406, %p43;
	selp.f32	%f412, %f410, %f408, %p43;
	add.f32 	%f413, %f411, 0fBF800000;
	add.f32 	%f399, %f411, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f398,%f399;
	// inline asm
	add.f32 	%f414, %f413, %f413;
	mul.f32 	%f415, %f398, %f414;
	mul.f32 	%f416, %f415, %f415;
	mov.f32 	%f417, 0f3C4CAF63;
	mov.f32 	%f418, 0f3B18F0FE;
	fma.rn.f32 	%f419, %f418, %f416, %f417;
	mov.f32 	%f420, 0f3DAAAABD;
	fma.rn.f32 	%f421, %f419, %f416, %f420;
	mul.rn.f32 	%f422, %f421, %f416;
	mul.rn.f32 	%f423, %f422, %f415;
	sub.f32 	%f424, %f413, %f415;
	neg.f32 	%f425, %f415;
	add.f32 	%f426, %f424, %f424;
	fma.rn.f32 	%f427, %f425, %f413, %f426;
	mul.rn.f32 	%f428, %f398, %f427;
	add.f32 	%f429, %f423, %f415;
	sub.f32 	%f430, %f415, %f429;
	add.f32 	%f431, %f423, %f430;
	add.f32 	%f432, %f428, %f431;
	add.f32 	%f433, %f429, %f432;
	sub.f32 	%f434, %f429, %f433;
	add.f32 	%f435, %f432, %f434;
	mov.f32 	%f436, 0f3F317200;
	mul.rn.f32 	%f437, %f412, %f436;
	mov.f32 	%f438, 0f35BFBE8E;
	mul.rn.f32 	%f439, %f412, %f438;
	add.f32 	%f440, %f437, %f433;
	sub.f32 	%f441, %f437, %f440;
	add.f32 	%f442, %f433, %f441;
	add.f32 	%f443, %f435, %f442;
	add.f32 	%f444, %f439, %f443;
	add.f32 	%f445, %f440, %f444;
	sub.f32 	%f446, %f440, %f445;
	add.f32 	%f447, %f444, %f446;
	mov.f32 	%f448, 0f3EE66666;
	mul.rn.f32 	%f449, %f448, %f445;
	neg.f32 	%f450, %f449;
	fma.rn.f32 	%f451, %f448, %f445, %f450;
	fma.rn.f32 	%f452, %f448, %f447, %f451;
	mov.f32 	%f453, 0f00000000;
	fma.rn.f32 	%f454, %f453, %f445, %f452;
	add.rn.f32 	%f455, %f449, %f454;
	neg.f32 	%f456, %f455;
	add.rn.f32 	%f457, %f449, %f456;
	add.rn.f32 	%f458, %f457, %f454;
	mov.b32 	 %r238, %f455;
	setp.eq.s32	%p44, %r238, 1118925336;
	add.s32 	%r239, %r238, -1;
	mov.b32 	 %f459, %r239;
	add.f32 	%f460, %f458, 0f37000000;
	selp.f32	%f461, %f459, %f455, %p44;
	selp.f32	%f158, %f460, %f458, %p44;
	mul.f32 	%f462, %f461, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f463, %f462;
	mov.f32 	%f464, 0fBF317200;
	fma.rn.f32 	%f465, %f463, %f464, %f461;
	mov.f32 	%f466, 0fB5BFBE8E;
	fma.rn.f32 	%f467, %f463, %f466, %f465;
	mul.f32 	%f468, %f467, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f469, %f468;
	add.f32 	%f470, %f463, 0f00000000;
	ex2.approx.f32 	%f471, %f470;
	mul.f32 	%f472, %f469, %f471;
	setp.lt.f32	%p45, %f461, 0fC2D20000;
	selp.f32	%f473, 0f00000000, %f472, %p45;
	setp.gt.f32	%p46, %f461, 0f42D20000;
	selp.f32	%f875, 0f7F800000, %f473, %p46;
	setp.eq.f32	%p47, %f875, 0f7F800000;
	@%p47 bra 	BB0_59;

	fma.rn.f32 	%f875, %f875, %f158, %f875;

BB0_59:
	mov.f32 	%f769, 0f3E666666;
	cvt.rzi.f32.f32	%f768, %f769;
	fma.rn.f32 	%f767, %f768, 0fC0000000, 0f3EE66666;
	abs.f32 	%f766, %f767;
	setp.lt.f32	%p48, %f153, 0f00000000;
	setp.eq.f32	%p49, %f766, 0f3F800000;
	and.pred  	%p1, %p48, %p49;
	mov.b32 	 %r240, %f875;
	xor.b32  	%r241, %r240, -2147483648;
	mov.b32 	 %f474, %r241;
	selp.f32	%f877, %f474, %f875, %p1;
	setp.eq.f32	%p50, %f153, 0f00000000;
	@%p50 bra 	BB0_62;
	bra.uni 	BB0_60;

BB0_62:
	add.f32 	%f477, %f153, %f153;
	selp.f32	%f877, %f477, 0f00000000, %p49;
	bra.uni 	BB0_63;

BB0_118:
	mov.u64 	%rd232, image_RNM1;
	cvta.global.u64 	%rd227, %rd232;
	mov.u32 	%r322, 8;
	mov.u64 	%rd231, 0;
	// inline asm
	call (%rd226), _rt_buffer_get_64, (%rd227, %r99, %r322, %rd18, %rd19, %rd231, %rd231);
	// inline asm
	mov.f32 	%f727, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f727;}

	// inline asm
	mov.u16 	%rs118, 0;
	st.v4.u16 	[%rd226], {%rs117, %rs117, %rs117, %rs118};

BB0_119:
	ld.global.u32 	%r323, [additive];
	setp.eq.s32	%p101, %r323, 0;
	@%p101 bra 	BB0_121;

	mov.u64 	%rd245, image_RNM2;
	cvta.global.u64 	%rd234, %rd245;
	mov.u32 	%r327, 8;
	mov.u64 	%rd244, 0;
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd234, %r99, %r327, %rd18, %rd19, %rd244, %rd244);
	// inline asm
	ld.v4.u16 	{%rs125, %rs126, %rs127, %rs128}, [%rd233];
	// inline asm
	{  cvt.f32.f16 %f728, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f729, %rs126;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f730, %rs127;}

	// inline asm
	// inline asm
	call (%rd239), _rt_buffer_get_64, (%rd234, %r99, %r327, %rd18, %rd19, %rd244, %rd244);
	// inline asm
	add.f32 	%f731, %f728, 0f00000000;
	add.f32 	%f732, %f729, 0f00000000;
	add.f32 	%f733, %f730, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs124, %f733;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f732;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f731;}

	// inline asm
	mov.u16 	%rs129, 0;
	st.v4.u16 	[%rd239], {%rs122, %rs123, %rs124, %rs129};
	bra.uni 	BB0_122;

BB0_121:
	mov.u64 	%rd252, image_RNM2;
	cvta.global.u64 	%rd247, %rd252;
	mov.u32 	%r329, 8;
	mov.u64 	%rd251, 0;
	// inline asm
	call (%rd246), _rt_buffer_get_64, (%rd247, %r99, %r329, %rd18, %rd19, %rd251, %rd251);
	// inline asm
	mov.f32 	%f734, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs130, %f734;}

	// inline asm
	mov.u16 	%rs131, 0;
	st.v4.u16 	[%rd246], {%rs130, %rs130, %rs130, %rs131};

BB0_122:
	ld.global.u32 	%r330, [additive];
	setp.eq.s32	%p102, %r330, 0;
	@%p102 bra 	BB0_124;

	mov.u64 	%rd265, image_RNM3;
	cvta.global.u64 	%rd254, %rd265;
	mov.u32 	%r334, 8;
	mov.u64 	%rd264, 0;
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd254, %r99, %r334, %rd18, %rd19, %rd264, %rd264);
	// inline asm
	ld.v4.u16 	{%rs138, %rs139, %rs140, %rs141}, [%rd253];
	// inline asm
	{  cvt.f32.f16 %f735, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f736, %rs139;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f737, %rs140;}

	// inline asm
	// inline asm
	call (%rd259), _rt_buffer_get_64, (%rd254, %r99, %r334, %rd18, %rd19, %rd264, %rd264);
	// inline asm
	add.f32 	%f738, %f735, 0f00000000;
	add.f32 	%f739, %f736, 0f00000000;
	add.f32 	%f740, %f737, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs137, %f740;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f739;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f738;}

	// inline asm
	mov.u16 	%rs142, 0;
	st.v4.u16 	[%rd259], {%rs135, %rs136, %rs137, %rs142};
	bra.uni 	BB0_125;

BB0_124:
	mov.u64 	%rd272, image_RNM3;
	cvta.global.u64 	%rd267, %rd272;
	mov.u32 	%r336, 8;
	mov.u64 	%rd271, 0;
	// inline asm
	call (%rd266), _rt_buffer_get_64, (%rd267, %r99, %r336, %rd18, %rd19, %rd271, %rd271);
	// inline asm
	mov.f32 	%f741, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs143, %f741;}

	// inline asm
	mov.u16 	%rs144, 0;
	st.v4.u16 	[%rd266], {%rs143, %rs143, %rs143, %rs144};
	bra.uni 	BB0_125;

BB0_60:
	setp.geu.f32	%p51, %f153, 0f00000000;
	@%p51 bra 	BB0_63;

	mov.f32 	%f793, 0f3EE66666;
	cvt.rzi.f32.f32	%f476, %f793;
	setp.neu.f32	%p52, %f476, 0f3EE66666;
	selp.f32	%f877, 0f7FFFFFFF, %f877, %p52;

BB0_63:
	abs.f32 	%f770, %f153;
	add.f32 	%f478, %f770, 0f3EE66666;
	mov.b32 	 %r242, %f478;
	setp.lt.s32	%p54, %r242, 2139095040;
	@%p54 bra 	BB0_68;

	abs.f32 	%f791, %f153;
	setp.gtu.f32	%p55, %f791, 0f7F800000;
	@%p55 bra 	BB0_67;
	bra.uni 	BB0_65;

BB0_67:
	add.f32 	%f877, %f153, 0f3EE66666;
	bra.uni 	BB0_68;

BB0_65:
	abs.f32 	%f792, %f153;
	setp.neu.f32	%p56, %f792, 0f7F800000;
	@%p56 bra 	BB0_68;

	selp.f32	%f877, 0fFF800000, 0f7F800000, %p1;

BB0_68:
	mov.f32 	%f779, 0fB5BFBE8E;
	mov.f32 	%f778, 0fBF317200;
	mov.f32 	%f777, 0f00000000;
	mov.f32 	%f776, 0f35BFBE8E;
	mov.f32 	%f775, 0f3F317200;
	mov.f32 	%f774, 0f3DAAAABD;
	mov.f32 	%f773, 0f3C4CAF63;
	mov.f32 	%f772, 0f3B18F0FE;
	mov.f32 	%f771, 0f3EE66666;
	setp.eq.f32	%p57, %f153, 0f3F800000;
	selp.f32	%f169, 0f3F800000, %f877, %p57;
	abs.f32 	%f170, %f154;
	setp.lt.f32	%p58, %f170, 0f00800000;
	mul.f32 	%f481, %f170, 0f4B800000;
	selp.f32	%f482, 0fC3170000, 0fC2FE0000, %p58;
	selp.f32	%f483, %f481, %f170, %p58;
	mov.b32 	 %r243, %f483;
	and.b32  	%r244, %r243, 8388607;
	or.b32  	%r245, %r244, 1065353216;
	mov.b32 	 %f484, %r245;
	shr.u32 	%r246, %r243, 23;
	cvt.rn.f32.u32	%f485, %r246;
	add.f32 	%f486, %f482, %f485;
	setp.gt.f32	%p59, %f484, 0f3FB504F3;
	mul.f32 	%f487, %f484, 0f3F000000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32	%f489, %f487, %f484, %p59;
	selp.f32	%f490, %f488, %f486, %p59;
	add.f32 	%f491, %f489, 0fBF800000;
	add.f32 	%f480, %f489, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f479,%f480;
	// inline asm
	add.f32 	%f492, %f491, %f491;
	mul.f32 	%f493, %f479, %f492;
	mul.f32 	%f494, %f493, %f493;
	fma.rn.f32 	%f497, %f772, %f494, %f773;
	fma.rn.f32 	%f499, %f497, %f494, %f774;
	mul.rn.f32 	%f500, %f499, %f494;
	mul.rn.f32 	%f501, %f500, %f493;
	sub.f32 	%f502, %f491, %f493;
	neg.f32 	%f503, %f493;
	add.f32 	%f504, %f502, %f502;
	fma.rn.f32 	%f505, %f503, %f491, %f504;
	mul.rn.f32 	%f506, %f479, %f505;
	add.f32 	%f507, %f501, %f493;
	sub.f32 	%f508, %f493, %f507;
	add.f32 	%f509, %f501, %f508;
	add.f32 	%f510, %f506, %f509;
	add.f32 	%f511, %f507, %f510;
	sub.f32 	%f512, %f507, %f511;
	add.f32 	%f513, %f510, %f512;
	mul.rn.f32 	%f515, %f490, %f775;
	mul.rn.f32 	%f517, %f490, %f776;
	add.f32 	%f518, %f515, %f511;
	sub.f32 	%f519, %f515, %f518;
	add.f32 	%f520, %f511, %f519;
	add.f32 	%f521, %f513, %f520;
	add.f32 	%f522, %f517, %f521;
	add.f32 	%f523, %f518, %f522;
	sub.f32 	%f524, %f518, %f523;
	add.f32 	%f525, %f522, %f524;
	mul.rn.f32 	%f527, %f771, %f523;
	neg.f32 	%f528, %f527;
	fma.rn.f32 	%f529, %f771, %f523, %f528;
	fma.rn.f32 	%f530, %f771, %f525, %f529;
	fma.rn.f32 	%f532, %f777, %f523, %f530;
	add.rn.f32 	%f533, %f527, %f532;
	neg.f32 	%f534, %f533;
	add.rn.f32 	%f535, %f527, %f534;
	add.rn.f32 	%f536, %f535, %f532;
	mov.b32 	 %r247, %f533;
	setp.eq.s32	%p60, %r247, 1118925336;
	add.s32 	%r248, %r247, -1;
	mov.b32 	 %f537, %r248;
	add.f32 	%f538, %f536, 0f37000000;
	selp.f32	%f539, %f537, %f533, %p60;
	selp.f32	%f171, %f538, %f536, %p60;
	mul.f32 	%f540, %f539, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f541, %f540;
	fma.rn.f32 	%f543, %f541, %f778, %f539;
	fma.rn.f32 	%f545, %f541, %f779, %f543;
	mul.f32 	%f546, %f545, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f547, %f546;
	add.f32 	%f548, %f541, 0f00000000;
	ex2.approx.f32 	%f549, %f548;
	mul.f32 	%f550, %f547, %f549;
	setp.lt.f32	%p61, %f539, 0fC2D20000;
	selp.f32	%f551, 0f00000000, %f550, %p61;
	setp.gt.f32	%p62, %f539, 0f42D20000;
	selp.f32	%f878, 0f7F800000, %f551, %p62;
	setp.eq.f32	%p63, %f878, 0f7F800000;
	@%p63 bra 	BB0_70;

	fma.rn.f32 	%f878, %f878, %f171, %f878;

BB0_70:
	setp.lt.f32	%p64, %f154, 0f00000000;
	and.pred  	%p2, %p64, %p49;
	mov.b32 	 %r249, %f878;
	xor.b32  	%r250, %r249, -2147483648;
	mov.b32 	 %f552, %r250;
	selp.f32	%f880, %f552, %f878, %p2;
	setp.eq.f32	%p66, %f154, 0f00000000;
	@%p66 bra 	BB0_73;
	bra.uni 	BB0_71;

BB0_73:
	add.f32 	%f555, %f154, %f154;
	selp.f32	%f880, %f555, 0f00000000, %p49;
	bra.uni 	BB0_74;

BB0_71:
	setp.geu.f32	%p67, %f154, 0f00000000;
	@%p67 bra 	BB0_74;

	mov.f32 	%f790, 0f3EE66666;
	cvt.rzi.f32.f32	%f554, %f790;
	setp.neu.f32	%p68, %f554, 0f3EE66666;
	selp.f32	%f880, 0f7FFFFFFF, %f880, %p68;

BB0_74:
	abs.f32 	%f794, %f154;
	add.f32 	%f556, %f794, 0f3EE66666;
	mov.b32 	 %r251, %f556;
	setp.lt.s32	%p70, %r251, 2139095040;
	@%p70 bra 	BB0_79;

	abs.f32 	%f795, %f154;
	setp.gtu.f32	%p71, %f795, 0f7F800000;
	@%p71 bra 	BB0_78;
	bra.uni 	BB0_76;

BB0_78:
	add.f32 	%f880, %f154, 0f3EE66666;
	bra.uni 	BB0_79;

BB0_76:
	abs.f32 	%f796, %f154;
	setp.neu.f32	%p72, %f796, 0f7F800000;
	@%p72 bra 	BB0_79;

	selp.f32	%f880, 0fFF800000, 0f7F800000, %p2;

BB0_79:
	mov.f32 	%f788, 0fB5BFBE8E;
	mov.f32 	%f787, 0fBF317200;
	mov.f32 	%f786, 0f00000000;
	mov.f32 	%f785, 0f35BFBE8E;
	mov.f32 	%f784, 0f3F317200;
	mov.f32 	%f783, 0f3DAAAABD;
	mov.f32 	%f782, 0f3C4CAF63;
	mov.f32 	%f781, 0f3B18F0FE;
	mov.f32 	%f780, 0f3EE66666;
	setp.eq.f32	%p73, %f154, 0f3F800000;
	selp.f32	%f182, 0f3F800000, %f880, %p73;
	abs.f32 	%f183, %f155;
	setp.lt.f32	%p74, %f183, 0f00800000;
	mul.f32 	%f559, %f183, 0f4B800000;
	selp.f32	%f560, 0fC3170000, 0fC2FE0000, %p74;
	selp.f32	%f561, %f559, %f183, %p74;
	mov.b32 	 %r252, %f561;
	and.b32  	%r253, %r252, 8388607;
	or.b32  	%r254, %r253, 1065353216;
	mov.b32 	 %f562, %r254;
	shr.u32 	%r255, %r252, 23;
	cvt.rn.f32.u32	%f563, %r255;
	add.f32 	%f564, %f560, %f563;
	setp.gt.f32	%p75, %f562, 0f3FB504F3;
	mul.f32 	%f565, %f562, 0f3F000000;
	add.f32 	%f566, %f564, 0f3F800000;
	selp.f32	%f567, %f565, %f562, %p75;
	selp.f32	%f568, %f566, %f564, %p75;
	add.f32 	%f569, %f567, 0fBF800000;
	add.f32 	%f558, %f567, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f557,%f558;
	// inline asm
	add.f32 	%f570, %f569, %f569;
	mul.f32 	%f571, %f557, %f570;
	mul.f32 	%f572, %f571, %f571;
	fma.rn.f32 	%f575, %f781, %f572, %f782;
	fma.rn.f32 	%f577, %f575, %f572, %f783;
	mul.rn.f32 	%f578, %f577, %f572;
	mul.rn.f32 	%f579, %f578, %f571;
	sub.f32 	%f580, %f569, %f571;
	neg.f32 	%f581, %f571;
	add.f32 	%f582, %f580, %f580;
	fma.rn.f32 	%f583, %f581, %f569, %f582;
	mul.rn.f32 	%f584, %f557, %f583;
	add.f32 	%f585, %f579, %f571;
	sub.f32 	%f586, %f571, %f585;
	add.f32 	%f587, %f579, %f586;
	add.f32 	%f588, %f584, %f587;
	add.f32 	%f589, %f585, %f588;
	sub.f32 	%f590, %f585, %f589;
	add.f32 	%f591, %f588, %f590;
	mul.rn.f32 	%f593, %f568, %f784;
	mul.rn.f32 	%f595, %f568, %f785;
	add.f32 	%f596, %f593, %f589;
	sub.f32 	%f597, %f593, %f596;
	add.f32 	%f598, %f589, %f597;
	add.f32 	%f599, %f591, %f598;
	add.f32 	%f600, %f595, %f599;
	add.f32 	%f601, %f596, %f600;
	sub.f32 	%f602, %f596, %f601;
	add.f32 	%f603, %f600, %f602;
	mul.rn.f32 	%f605, %f780, %f601;
	neg.f32 	%f606, %f605;
	fma.rn.f32 	%f607, %f780, %f601, %f606;
	fma.rn.f32 	%f608, %f780, %f603, %f607;
	fma.rn.f32 	%f610, %f786, %f601, %f608;
	add.rn.f32 	%f611, %f605, %f610;
	neg.f32 	%f612, %f611;
	add.rn.f32 	%f613, %f605, %f612;
	add.rn.f32 	%f614, %f613, %f610;
	mov.b32 	 %r256, %f611;
	setp.eq.s32	%p76, %r256, 1118925336;
	add.s32 	%r257, %r256, -1;
	mov.b32 	 %f615, %r257;
	add.f32 	%f616, %f614, 0f37000000;
	selp.f32	%f617, %f615, %f611, %p76;
	selp.f32	%f184, %f616, %f614, %p76;
	mul.f32 	%f618, %f617, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f619, %f618;
	fma.rn.f32 	%f621, %f619, %f787, %f617;
	fma.rn.f32 	%f623, %f619, %f788, %f621;
	mul.f32 	%f624, %f623, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f625, %f624;
	add.f32 	%f626, %f619, 0f00000000;
	ex2.approx.f32 	%f627, %f626;
	mul.f32 	%f628, %f625, %f627;
	setp.lt.f32	%p77, %f617, 0fC2D20000;
	selp.f32	%f629, 0f00000000, %f628, %p77;
	setp.gt.f32	%p78, %f617, 0f42D20000;
	selp.f32	%f881, 0f7F800000, %f629, %p78;
	setp.eq.f32	%p79, %f881, 0f7F800000;
	@%p79 bra 	BB0_81;

	fma.rn.f32 	%f881, %f881, %f184, %f881;

BB0_81:
	setp.lt.f32	%p80, %f155, 0f00000000;
	and.pred  	%p3, %p80, %p49;
	mov.b32 	 %r258, %f881;
	xor.b32  	%r259, %r258, -2147483648;
	mov.b32 	 %f630, %r259;
	selp.f32	%f883, %f630, %f881, %p3;
	setp.eq.f32	%p82, %f155, 0f00000000;
	@%p82 bra 	BB0_84;
	bra.uni 	BB0_82;

BB0_84:
	add.f32 	%f633, %f155, %f155;
	selp.f32	%f883, %f633, 0f00000000, %p49;
	bra.uni 	BB0_85;

BB0_82:
	setp.geu.f32	%p83, %f155, 0f00000000;
	@%p83 bra 	BB0_85;

	mov.f32 	%f789, 0f3EE66666;
	cvt.rzi.f32.f32	%f632, %f789;
	setp.neu.f32	%p84, %f632, 0f3EE66666;
	selp.f32	%f883, 0f7FFFFFFF, %f883, %p84;

BB0_85:
	abs.f32 	%f797, %f155;
	add.f32 	%f634, %f797, 0f3EE66666;
	mov.b32 	 %r260, %f634;
	setp.lt.s32	%p86, %r260, 2139095040;
	@%p86 bra 	BB0_90;

	abs.f32 	%f798, %f155;
	setp.gtu.f32	%p87, %f798, 0f7F800000;
	@%p87 bra 	BB0_89;
	bra.uni 	BB0_87;

BB0_89:
	add.f32 	%f883, %f155, 0f3EE66666;
	bra.uni 	BB0_90;

BB0_87:
	abs.f32 	%f799, %f155;
	setp.neu.f32	%p88, %f799, 0f7F800000;
	@%p88 bra 	BB0_90;

	selp.f32	%f883, 0fFF800000, 0f7F800000, %p3;

BB0_90:
	mov.u32 	%r345, 4;
	setp.eq.f32	%p89, %f155, 0f3F800000;
	selp.f32	%f635, 0f3F800000, %f883, %p89;
	cvt.u64.u32	%rd74, %r3;
	cvt.u64.u32	%rd73, %r2;
	mov.u64 	%rd77, image;
	cvta.global.u64 	%rd72, %rd77;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd72, %r99, %r345, %rd73, %rd74, %rd25, %rd25);
	// inline asm
	cvt.sat.f32.f32	%f636, %f635;
	mul.f32 	%f637, %f636, 0f437FFD71;
	cvt.rzi.u32.f32	%r263, %f637;
	cvt.sat.f32.f32	%f638, %f182;
	mul.f32 	%f639, %f638, 0f437FFD71;
	cvt.rzi.u32.f32	%r264, %f639;
	cvt.sat.f32.f32	%f640, %f169;
	mul.f32 	%f641, %f640, 0f437FFD71;
	cvt.rzi.u32.f32	%r265, %f641;
	cvt.u16.u32	%rs20, %r263;
	cvt.u16.u32	%rs21, %r265;
	cvt.u16.u32	%rs22, %r264;
	mov.u16 	%rs23, 255;
	st.v4.u8 	[%rd71], {%rs20, %rs22, %rs21, %rs23};
	ld.global.u32 	%r401, [imageEnabled];

BB0_91:
	and.b32  	%r266, %r401, 4;
	setp.eq.s32	%p90, %r266, 0;
	@%p90 bra 	BB0_93;

	mov.u32 	%r352, 8;
	cvt.u64.u32	%rd80, %r2;
	cvt.u64.u32	%rd81, %r3;
	mov.u64 	%rd84, image_HDR;
	cvta.global.u64 	%rd79, %rd84;
	// inline asm
	call (%rd78), _rt_buffer_get_64, (%rd79, %r99, %r352, %rd80, %rd81, %rd25, %rd25);
	// inline asm
	mov.f32 	%f645, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f645;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f155;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f154;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f153;}

	// inline asm
	st.v4.u16 	[%rd78], {%rs24, %rs25, %rs26, %rs27};
	ld.global.u32 	%r401, [imageEnabled];

BB0_93:
	and.b32  	%r269, %r401, 16;
	setp.eq.s32	%p91, %r269, 0;
	@%p91 bra 	BB0_95;

	mov.u32 	%r353, 8;
	cvt.u64.u32	%rd88, %r3;
	cvt.u64.u32	%rd87, %r2;
	mov.u64 	%rd91, image_HDR2;
	cvta.global.u64 	%rd86, %rd91;
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd86, %r99, %r353, %rd87, %rd88, %rd25, %rd25);
	// inline asm
	mov.f32 	%f649, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f649;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f152;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f151;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f150;}

	// inline asm
	st.v4.u16 	[%rd85], {%rs28, %rs29, %rs30, %rs31};

BB0_95:
	cvt.u64.u32	%rd16, %r2;
	cvt.u64.u32	%rd17, %r3;
	mul.f32 	%f195, %f138, 0f3F000000;
	mul.f32 	%f196, %f139, 0f3F000000;
	mul.f32 	%f197, %f140, 0f3F000000;
	ld.global.u32 	%r272, [additive];
	setp.eq.s32	%p92, %r272, 0;
	mov.f32 	%f650, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f650;}

	// inline asm
	@%p92 bra 	BB0_97;

	mov.u32 	%r354, 8;
	mov.u64 	%rd104, image_RNM0;
	cvta.global.u64 	%rd93, %rd104;
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd93, %r99, %r354, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs39, %rs40, %rs41, %rs42}, [%rd92];
	// inline asm
	{  cvt.f32.f16 %f651, %rs39;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f652, %rs40;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f653, %rs41;}

	// inline asm
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd93, %r99, %r354, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f654, %f195, %f651;
	add.f32 	%f655, %f196, %f652;
	add.f32 	%f656, %f197, %f653;
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f656;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f655;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f654;}

	// inline asm
	st.v4.u16 	[%rd98], {%rs36, %rs37, %rs38, %rs32};
	bra.uni 	BB0_98;

BB0_97:
	mov.u32 	%r361, 8;
	mov.u64 	%rd111, image_RNM0;
	cvta.global.u64 	%rd106, %rd111;
	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd106, %r99, %r361, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f197;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f196;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f195;}

	// inline asm
	st.v4.u16 	[%rd105], {%rs43, %rs44, %rs45, %rs32};

BB0_98:
	mov.f32 	%f661, 0f34000000;
	max.f32 	%f662, %f195, %f661;
	mul.f32 	%f663, %f141, 0f3F000000;
	div.rn.f32 	%f664, %f663, %f662;
	max.f32 	%f665, %f196, %f661;
	mul.f32 	%f666, %f142, 0f3F000000;
	div.rn.f32 	%f667, %f666, %f665;
	max.f32 	%f668, %f197, %f661;
	mul.f32 	%f669, %f143, 0f3F000000;
	div.rn.f32 	%f670, %f669, %f668;
	fma.rn.f32 	%f198, %f664, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f199, %f667, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f200, %f670, 0f3F000000, 0f3F000000;
	mul.f32 	%f671, %f144, 0f3F000000;
	div.rn.f32 	%f672, %f671, %f662;
	mul.f32 	%f673, %f145, 0f3F000000;
	div.rn.f32 	%f674, %f673, %f665;
	mul.f32 	%f675, %f146, 0f3F000000;
	div.rn.f32 	%f676, %f675, %f668;
	fma.rn.f32 	%f201, %f672, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f202, %f674, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f203, %f676, 0f3F000000, 0f3F000000;
	mul.f32 	%f677, %f147, 0f3F000000;
	div.rn.f32 	%f678, %f677, %f662;
	mul.f32 	%f679, %f148, 0f3F000000;
	div.rn.f32 	%f680, %f679, %f665;
	mul.f32 	%f681, %f149, 0f3F000000;
	div.rn.f32 	%f682, %f681, %f668;
	fma.rn.f32 	%f204, %f678, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f205, %f680, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f206, %f682, 0f3F000000, 0f3F000000;
	ld.global.u32 	%r279, [additive];
	setp.eq.s32	%p93, %r279, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f650;}

	// inline asm
	@%p93 bra 	BB0_100;

	mov.u32 	%r355, 8;
	mov.u64 	%rd124, image_RNM1;
	cvta.global.u64 	%rd113, %rd124;
	// inline asm
	call (%rd112), _rt_buffer_get_64, (%rd113, %r99, %r355, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs53, %rs54, %rs55, %rs56}, [%rd112];
	// inline asm
	{  cvt.f32.f16 %f683, %rs53;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f684, %rs54;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f685, %rs55;}

	// inline asm
	// inline asm
	call (%rd118), _rt_buffer_get_64, (%rd113, %r99, %r355, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f686, %f198, %f683;
	add.f32 	%f687, %f199, %f684;
	add.f32 	%f688, %f200, %f685;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f688;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f687;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f686;}

	// inline asm
	st.v4.u16 	[%rd118], {%rs50, %rs51, %rs52, %rs46};
	bra.uni 	BB0_101;

BB0_100:
	mov.u32 	%r360, 8;
	mov.u64 	%rd131, image_RNM1;
	cvta.global.u64 	%rd126, %rd131;
	// inline asm
	call (%rd125), _rt_buffer_get_64, (%rd126, %r99, %r360, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f200;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f199;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f198;}

	// inline asm
	st.v4.u16 	[%rd125], {%rs57, %rs58, %rs59, %rs46};

BB0_101:
	ld.global.u32 	%r286, [additive];
	setp.eq.s32	%p94, %r286, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f650;}

	// inline asm
	@%p94 bra 	BB0_103;

	mov.u32 	%r356, 8;
	mov.u64 	%rd144, image_RNM2;
	cvta.global.u64 	%rd133, %rd144;
	// inline asm
	call (%rd132), _rt_buffer_get_64, (%rd133, %r99, %r356, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs67, %rs68, %rs69, %rs70}, [%rd132];
	// inline asm
	{  cvt.f32.f16 %f693, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f694, %rs68;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f695, %rs69;}

	// inline asm
	// inline asm
	call (%rd138), _rt_buffer_get_64, (%rd133, %r99, %r356, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f696, %f201, %f693;
	add.f32 	%f697, %f202, %f694;
	add.f32 	%f698, %f203, %f695;
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f698;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f697;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f696;}

	// inline asm
	st.v4.u16 	[%rd138], {%rs64, %rs65, %rs66, %rs60};
	bra.uni 	BB0_104;

BB0_103:
	mov.u32 	%r359, 8;
	mov.u64 	%rd151, image_RNM2;
	cvta.global.u64 	%rd146, %rd151;
	// inline asm
	call (%rd145), _rt_buffer_get_64, (%rd146, %r99, %r359, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f203;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f202;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f201;}

	// inline asm
	st.v4.u16 	[%rd145], {%rs71, %rs72, %rs73, %rs60};

BB0_104:
	ld.global.u32 	%r293, [additive];
	setp.eq.s32	%p95, %r293, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f650;}

	// inline asm
	@%p95 bra 	BB0_106;

	mov.u32 	%r357, 8;
	mov.u64 	%rd164, image_RNM3;
	cvta.global.u64 	%rd153, %rd164;
	// inline asm
	call (%rd152), _rt_buffer_get_64, (%rd153, %r99, %r357, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs81, %rs82, %rs83, %rs84}, [%rd152];
	// inline asm
	{  cvt.f32.f16 %f703, %rs81;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f704, %rs82;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f705, %rs83;}

	// inline asm
	// inline asm
	call (%rd158), _rt_buffer_get_64, (%rd153, %r99, %r357, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f706, %f204, %f703;
	add.f32 	%f707, %f205, %f704;
	add.f32 	%f708, %f206, %f705;
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f708;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f707;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f706;}

	// inline asm
	st.v4.u16 	[%rd158], {%rs78, %rs79, %rs80, %rs74};
	bra.uni 	BB0_125;

BB0_106:
	mov.u32 	%r358, 8;
	mov.u64 	%rd171, image_RNM3;
	cvta.global.u64 	%rd166, %rd171;
	// inline asm
	call (%rd165), _rt_buffer_get_64, (%rd166, %r99, %r358, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f206;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f205;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f204;}

	// inline asm
	st.v4.u16 	[%rd165], {%rs85, %rs86, %rs87, %rs74};

BB0_125:
	ret;
}


