//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 8 .b8 texCoords[8];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 lightmapDirect[1];
.global .texref albedoTex;
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9texCoordsE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9texCoordsE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9texCoordsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9texCoordsE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 67, 111, 111, 114, 100, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9texCoordsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<111>;
	.reg .b16 	%rs<144>;
	.reg .f32 	%f<983>;
	.reg .b32 	%r<425>;
	.reg .b64 	%rd<281>;


	mov.u64 	%rd280, __local_depot0;
	cvta.local.u64 	%SP, %rd280;
	ld.global.v2.u32 	{%r107, %r108}, [pixelID];
	cvt.u64.u32	%rd24, %r107;
	cvt.u64.u32	%rd25, %r108;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r105, 2;
	mov.u32 	%r106, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r105, %r106, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r1, [%rd22];
	shr.u32 	%r111, %r1, 16;
	cvt.u16.u32	%rs1, %r111;
	and.b16  	%rs5, %rs1, 255;
	cvt.u16.u32	%rs6, %r1;
	or.b16  	%rs7, %rs6, %rs5;
	setp.eq.s16	%p4, %rs7, 0;
	mov.f32 	%f902, 0f00000000;
	mov.f32 	%f903, %f902;
	mov.f32 	%f904, %f902;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs8, [%rd22+1];
	and.b16  	%rs10, %rs6, 255;
	cvt.rn.f32.u16	%f222, %rs10;
	div.rn.f32 	%f223, %f222, 0f437F0000;
	fma.rn.f32 	%f224, %f223, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f225, %rs8;
	div.rn.f32 	%f226, %f225, 0f437F0000;
	fma.rn.f32 	%f227, %f226, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f228, %rs5;
	div.rn.f32 	%f229, %f228, 0f437F0000;
	fma.rn.f32 	%f230, %f229, 0f40000000, 0fBF800000;
	mul.f32 	%f231, %f227, %f227;
	fma.rn.f32 	%f232, %f224, %f224, %f231;
	fma.rn.f32 	%f233, %f230, %f230, %f232;
	sqrt.rn.f32 	%f234, %f233;
	rcp.rn.f32 	%f235, %f234;
	mul.f32 	%f902, %f224, %f235;
	mul.f32 	%f903, %f227, %f235;
	mul.f32 	%f904, %f230, %f235;

BB0_2:
	ld.global.v2.u32 	{%r112, %r113}, [pixelID];
	ld.global.v2.u32 	{%r115, %r116}, [tileInfo];
	add.s32 	%r2, %r112, %r115;
	add.s32 	%r3, %r113, %r116;
	setp.eq.f32	%p5, %f903, 0f00000000;
	setp.eq.f32	%p6, %f902, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f904, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_110;
	bra.uni 	BB0_3;

BB0_110:
	ld.global.u32 	%r424, [imageEnabled];
	and.b32  	%r317, %r424, 1;
	setp.eq.b32	%p104, %r317, 1;
	@!%p104 bra 	BB0_112;
	bra.uni 	BB0_111;

BB0_111:
	cvt.u64.u32	%rd177, %r2;
	cvt.u64.u32	%rd178, %r3;
	mov.u64 	%rd181, image;
	cvta.global.u64 	%rd176, %rd181;
	mov.u64 	%rd180, 0;
	// inline asm
	call (%rd175), _rt_buffer_get_64, (%rd176, %r105, %r106, %rd177, %rd178, %rd180, %rd180);
	// inline asm
	mov.u16 	%rs100, 0;
	st.v4.u8 	[%rd175], {%rs100, %rs100, %rs100, %rs100};
	ld.global.u32 	%r424, [imageEnabled];

BB0_112:
	and.b32  	%r320, %r424, 4;
	setp.eq.s32	%p105, %r320, 0;
	@%p105 bra 	BB0_114;

	cvt.u64.u32	%rd184, %r2;
	cvt.u64.u32	%rd185, %r3;
	mov.u64 	%rd188, image_HDR;
	cvta.global.u64 	%rd183, %rd188;
	mov.u32 	%r322, 8;
	mov.u64 	%rd187, 0;
	// inline asm
	call (%rd182), _rt_buffer_get_64, (%rd183, %r105, %r322, %rd184, %rd185, %rd187, %rd187);
	// inline asm
	mov.f32 	%f813, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f813;}

	// inline asm
	mov.u16 	%rs102, 0;
	st.v4.u16 	[%rd182], {%rs101, %rs101, %rs101, %rs102};
	ld.global.u32 	%r424, [imageEnabled];

BB0_114:
	and.b32  	%r323, %r424, 16;
	setp.eq.s32	%p106, %r323, 0;
	@%p106 bra 	BB0_116;

	cvt.u64.u32	%rd192, %r3;
	cvt.u64.u32	%rd191, %r2;
	mov.u64 	%rd195, image_HDR2;
	cvta.global.u64 	%rd190, %rd195;
	mov.u32 	%r325, 8;
	mov.u64 	%rd194, 0;
	// inline asm
	call (%rd189), _rt_buffer_get_64, (%rd190, %r105, %r325, %rd191, %rd192, %rd194, %rd194);
	// inline asm
	mov.f32 	%f814, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs103, %f814;}

	// inline asm
	mov.u16 	%rs104, 0;
	st.v4.u16 	[%rd189], {%rs103, %rs103, %rs103, %rs104};

BB0_116:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	ld.global.u32 	%r326, [additive];
	setp.eq.s32	%p107, %r326, 0;
	@%p107 bra 	BB0_118;

	mov.u64 	%rd208, image_RNM0;
	cvta.global.u64 	%rd197, %rd208;
	mov.u32 	%r330, 8;
	mov.u64 	%rd207, 0;
	// inline asm
	call (%rd196), _rt_buffer_get_64, (%rd197, %r105, %r330, %rd20, %rd21, %rd207, %rd207);
	// inline asm
	ld.v4.u16 	{%rs111, %rs112, %rs113, %rs114}, [%rd196];
	// inline asm
	{  cvt.f32.f16 %f815, %rs111;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f816, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f817, %rs113;}

	// inline asm
	// inline asm
	call (%rd202), _rt_buffer_get_64, (%rd197, %r105, %r330, %rd20, %rd21, %rd207, %rd207);
	// inline asm
	add.f32 	%f818, %f815, 0f00000000;
	add.f32 	%f819, %f816, 0f00000000;
	add.f32 	%f820, %f817, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f820;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f819;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f818;}

	// inline asm
	mov.u16 	%rs115, 0;
	st.v4.u16 	[%rd202], {%rs108, %rs109, %rs110, %rs115};
	bra.uni 	BB0_119;

BB0_3:
	ld.global.v2.u32 	{%r128, %r129}, [pixelID];
	cvt.u64.u32	%rd31, %r128;
	cvt.u64.u32	%rd32, %r129;
	mov.u64 	%rd53, lightmapDirect;
	cvta.global.u64 	%rd30, %rd53;
	mov.u32 	%r121, 8;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r105, %r121, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs15, %rs16, %rs17, %rs18}, [%rd29];
	// inline asm
	{  cvt.f32.f16 %f236, %rs15;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f237, %rs16;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f238, %rs17;}

	// inline asm
	ld.global.v2.u32 	{%r132, %r133}, [pixelID];
	cvt.u64.u32	%rd37, %r132;
	cvt.u64.u32	%rd38, %r133;
	mov.u64 	%rd54, uvpos;
	cvta.global.u64 	%rd36, %rd54;
	mov.u32 	%r123, 12;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r105, %r123, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.f32 	%f242, [%rd35+8];
	ld.f32 	%f243, [%rd35+4];
	ld.f32 	%f244, [%rd35];
	mul.f32 	%f245, %f244, 0f3456BF95;
	mul.f32 	%f246, %f243, 0f3456BF95;
	mul.f32 	%f247, %f242, 0f3456BF95;
	abs.f32 	%f248, %f902;
	div.rn.f32 	%f249, %f245, %f248;
	abs.f32 	%f250, %f903;
	div.rn.f32 	%f251, %f246, %f250;
	abs.f32 	%f252, %f904;
	div.rn.f32 	%f253, %f247, %f252;
	abs.f32 	%f254, %f249;
	abs.f32 	%f255, %f251;
	abs.f32 	%f256, %f253;
	mov.f32 	%f257, 0f38D1B717;
	max.f32 	%f258, %f254, %f257;
	max.f32 	%f259, %f255, %f257;
	max.f32 	%f260, %f256, %f257;
	fma.rn.f32 	%f10, %f902, %f258, %f244;
	fma.rn.f32 	%f11, %f903, %f259, %f243;
	fma.rn.f32 	%f12, %f904, %f260, %f242;
	setp.gt.f32	%p10, %f248, %f252;
	neg.f32 	%f261, %f903;
	selp.f32	%f262, %f261, 0f00000000, %p10;
	neg.f32 	%f263, %f904;
	selp.f32	%f264, %f902, %f263, %p10;
	selp.f32	%f265, 0f00000000, %f903, %p10;
	mul.f32 	%f266, %f264, %f264;
	fma.rn.f32 	%f267, %f262, %f262, %f266;
	fma.rn.f32 	%f268, %f265, %f265, %f267;
	sqrt.rn.f32 	%f269, %f268;
	rcp.rn.f32 	%f270, %f269;
	mul.f32 	%f13, %f262, %f270;
	mul.f32 	%f14, %f264, %f270;
	mul.f32 	%f15, %f265, %f270;
	ld.global.v2.u32 	{%r136, %r137}, [pixelID];
	cvt.u64.u32	%rd43, %r136;
	cvt.u64.u32	%rd44, %r137;
	mov.u64 	%rd55, rnd_seeds;
	cvta.global.u64 	%rd42, %rd55;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r105, %r106, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.u32 	%r419, [%rd41];
	ld.global.v2.u32 	{%r140, %r141}, [pixelID];
	cvt.u64.u32	%rd49, %r140;
	cvt.u64.u32	%rd50, %r141;
	mov.u64 	%rd56, uvtangent;
	cvta.global.u64 	%rd48, %rd56;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r105, %r106, %rd49, %rd50, %rd27, %rd27);
	// inline asm
	ld.u32 	%r5, [%rd47];
	shr.u32 	%r6, %r5, 16;
	cvt.u16.u32	%rs19, %r6;
	and.b16  	%rs20, %rs19, 255;
	cvt.u16.u32	%rs21, %r5;
	or.b16  	%rs22, %rs21, %rs20;
	setp.eq.s16	%p11, %rs22, 0;
	mov.f32 	%f905, 0f00000000;
	mov.f32 	%f906, %f905;
	mov.f32 	%f907, %f905;
	@%p11 bra 	BB0_5;

	ld.u8 	%rs23, [%rd47+1];
	and.b16  	%rs25, %rs21, 255;
	cvt.rn.f32.u16	%f271, %rs25;
	div.rn.f32 	%f272, %f271, 0f437F0000;
	fma.rn.f32 	%f273, %f272, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f274, %rs23;
	div.rn.f32 	%f275, %f274, 0f437F0000;
	fma.rn.f32 	%f276, %f275, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f277, %rs20;
	div.rn.f32 	%f278, %f277, 0f437F0000;
	fma.rn.f32 	%f279, %f278, 0f40000000, 0fBF800000;
	mul.f32 	%f280, %f276, %f276;
	fma.rn.f32 	%f281, %f273, %f273, %f280;
	fma.rn.f32 	%f282, %f279, %f279, %f281;
	sqrt.rn.f32 	%f283, %f282;
	rcp.rn.f32 	%f284, %f283;
	mul.f32 	%f905, %f273, %f284;
	mul.f32 	%f906, %f276, %f284;
	mul.f32 	%f907, %f279, %f284;

BB0_5:
	mov.f32 	%f908, 0f00000000;
	mov.u32 	%r390, 4;
	mov.u64 	%rd272, 0;
	mov.u32 	%r389, 2;
	mul.f32 	%f288, %f904, %f906;
	mul.f32 	%f289, %f903, %f907;
	sub.f32 	%f290, %f289, %f288;
	mul.f32 	%f291, %f902, %f907;
	mul.f32 	%f292, %f904, %f905;
	sub.f32 	%f293, %f292, %f291;
	mul.f32 	%f294, %f903, %f905;
	mul.f32 	%f295, %f902, %f906;
	sub.f32 	%f296, %f295, %f294;
	setp.lt.u32	%p12, %r5, 16777216;
	selp.f32	%f297, 0fBF800000, 0f3F800000, %p12;
	mul.f32 	%f298, %f290, %f297;
	mul.f32 	%f299, %f293, %f297;
	mul.f32 	%f300, %f296, %f297;
	mul.f32 	%f301, %f298, 0f00000000;
	mul.f32 	%f302, %f299, 0f00000000;
	mul.f32 	%f303, %f300, 0f00000000;
	fma.rn.f32 	%f304, %f905, 0f3F5105EC, %f301;
	fma.rn.f32 	%f305, %f906, 0f3F5105EC, %f302;
	fma.rn.f32 	%f306, %f907, 0f3F5105EC, %f303;
	mul.f32 	%f22, %f902, 0f3F13CD3A;
	add.f32 	%f23, %f22, %f304;
	mul.f32 	%f24, %f903, 0f3F13CD3A;
	add.f32 	%f25, %f24, %f305;
	mul.f32 	%f26, %f904, 0f3F13CD3A;
	add.f32 	%f27, %f26, %f306;
	ld.global.v2.u32 	{%r146, %r147}, [pixelID];
	cvt.u64.u32	%rd59, %r146;
	cvt.u64.u32	%rd60, %r147;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd48, %r389, %r390, %rd59, %rd60, %rd272, %rd272);
	// inline asm
	ld.u32 	%r7, [%rd57];
	shr.u32 	%r8, %r7, 16;
	cvt.u16.u32	%rs28, %r8;
	and.b16  	%rs29, %rs28, 255;
	cvt.u16.u32	%rs30, %r7;
	or.b16  	%rs31, %rs30, %rs29;
	setp.eq.s16	%p13, %rs31, 0;
	mov.f32 	%f909, %f908;
	mov.f32 	%f910, %f908;
	@%p13 bra 	BB0_7;

	ld.u8 	%rs32, [%rd57+1];
	and.b16  	%rs34, %rs30, 255;
	cvt.rn.f32.u16	%f307, %rs34;
	div.rn.f32 	%f308, %f307, 0f437F0000;
	fma.rn.f32 	%f309, %f308, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f310, %rs32;
	div.rn.f32 	%f311, %f310, 0f437F0000;
	fma.rn.f32 	%f312, %f311, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f313, %rs29;
	div.rn.f32 	%f314, %f313, 0f437F0000;
	fma.rn.f32 	%f315, %f314, 0f40000000, 0fBF800000;
	mul.f32 	%f316, %f312, %f312;
	fma.rn.f32 	%f317, %f309, %f309, %f316;
	fma.rn.f32 	%f318, %f315, %f315, %f317;
	sqrt.rn.f32 	%f319, %f318;
	rcp.rn.f32 	%f320, %f319;
	mul.f32 	%f908, %f309, %f320;
	mul.f32 	%f909, %f312, %f320;
	mul.f32 	%f910, %f315, %f320;

BB0_7:
	mul.f32 	%f895, %f903, 0f3F13CD3A;
	mul.f32 	%f894, %f902, 0f3F13CD3A;
	mov.u64 	%rd275, uvtangent;
	cvta.global.u64 	%rd274, %rd275;
	mov.f32 	%f911, 0f00000000;
	mov.u32 	%r392, 4;
	mov.u64 	%rd273, 0;
	mov.u32 	%r391, 2;
	mul.f32 	%f324, %f904, %f909;
	mul.f32 	%f325, %f903, %f910;
	sub.f32 	%f326, %f325, %f324;
	mul.f32 	%f327, %f902, %f910;
	mul.f32 	%f328, %f904, %f908;
	sub.f32 	%f329, %f328, %f327;
	mul.f32 	%f330, %f903, %f908;
	mul.f32 	%f331, %f902, %f909;
	sub.f32 	%f332, %f331, %f330;
	setp.lt.u32	%p14, %r7, 16777216;
	selp.f32	%f333, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f334, %f326, %f333;
	mul.f32 	%f335, %f329, %f333;
	mul.f32 	%f336, %f332, %f333;
	mul.f32 	%f337, %f334, 0f3F3504F3;
	mul.f32 	%f338, %f335, 0f3F3504F3;
	mul.f32 	%f339, %f336, 0f3F3504F3;
	fma.rn.f32 	%f340, %f908, 0fBED105EC, %f337;
	fma.rn.f32 	%f341, %f909, 0fBED105EC, %f338;
	fma.rn.f32 	%f342, %f910, 0fBED105EC, %f339;
	add.f32 	%f34, %f894, %f340;
	add.f32 	%f35, %f895, %f341;
	add.f32 	%f36, %f26, %f342;
	ld.global.v2.u32 	{%r152, %r153}, [pixelID];
	cvt.u64.u32	%rd66, %r152;
	cvt.u64.u32	%rd67, %r153;
	// inline asm
	call (%rd64), _rt_buffer_get_64, (%rd274, %r391, %r392, %rd66, %rd67, %rd273, %rd273);
	// inline asm
	ld.u32 	%r9, [%rd64];
	shr.u32 	%r10, %r9, 16;
	cvt.u16.u32	%rs37, %r10;
	and.b16  	%rs38, %rs37, 255;
	cvt.u16.u32	%rs39, %r9;
	or.b16  	%rs40, %rs39, %rs38;
	setp.eq.s16	%p15, %rs40, 0;
	mov.f32 	%f912, %f911;
	mov.f32 	%f913, %f911;
	@%p15 bra 	BB0_9;

	ld.u8 	%rs41, [%rd64+1];
	and.b16  	%rs43, %rs39, 255;
	cvt.rn.f32.u16	%f343, %rs43;
	div.rn.f32 	%f344, %f343, 0f437F0000;
	fma.rn.f32 	%f345, %f344, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f346, %rs41;
	div.rn.f32 	%f347, %f346, 0f437F0000;
	fma.rn.f32 	%f348, %f347, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f349, %rs38;
	div.rn.f32 	%f350, %f349, 0f437F0000;
	fma.rn.f32 	%f351, %f350, 0f40000000, 0fBF800000;
	mul.f32 	%f352, %f348, %f348;
	fma.rn.f32 	%f353, %f345, %f345, %f352;
	fma.rn.f32 	%f354, %f351, %f351, %f353;
	sqrt.rn.f32 	%f355, %f354;
	rcp.rn.f32 	%f356, %f355;
	mul.f32 	%f911, %f345, %f356;
	mul.f32 	%f912, %f348, %f356;
	mul.f32 	%f913, %f351, %f356;

BB0_9:
	mul.f32 	%f898, %f904, 0f3F13CD3A;
	mul.f32 	%f897, %f903, 0f3F13CD3A;
	mul.f32 	%f896, %f902, 0f3F13CD3A;
	mov.f32 	%f950, 0f00000000;
	mul.f32 	%f369, %f904, %f912;
	mul.f32 	%f370, %f903, %f913;
	sub.f32 	%f371, %f370, %f369;
	mul.f32 	%f372, %f902, %f913;
	mul.f32 	%f373, %f904, %f911;
	sub.f32 	%f374, %f373, %f372;
	mul.f32 	%f375, %f903, %f911;
	mul.f32 	%f376, %f902, %f912;
	sub.f32 	%f377, %f376, %f375;
	setp.lt.u32	%p16, %r9, 16777216;
	selp.f32	%f378, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f379, %f371, %f378;
	mul.f32 	%f380, %f374, %f378;
	mul.f32 	%f381, %f377, %f378;
	mul.f32 	%f382, %f379, 0fBF3504F3;
	mul.f32 	%f383, %f380, 0fBF3504F3;
	mul.f32 	%f384, %f381, 0fBF3504F3;
	fma.rn.f32 	%f385, %f911, 0fBED105EC, %f382;
	fma.rn.f32 	%f386, %f912, 0fBED105EC, %f383;
	fma.rn.f32 	%f387, %f913, 0fBED105EC, %f384;
	add.f32 	%f43, %f896, %f385;
	add.f32 	%f44, %f897, %f386;
	add.f32 	%f45, %f898, %f387;
	ld.global.u32 	%r393, [samples];
	setp.lt.s32	%p17, %r393, 1;
	@%p17 bra 	BB0_10;

	cvt.rn.f32.s32	%f400, %r393;
	rcp.rn.f32 	%f46, %f400;
	mul.f32 	%f47, %f10, 0f3456BF95;
	mul.f32 	%f48, %f11, 0f3456BF95;
	mul.f32 	%f49, %f12, 0f3456BF95;
	mul.f32 	%f401, %f904, %f14;
	mul.f32 	%f402, %f903, %f15;
	sub.f32 	%f50, %f401, %f402;
	mul.f32 	%f403, %f902, %f15;
	mul.f32 	%f404, %f904, %f13;
	sub.f32 	%f51, %f403, %f404;
	mul.f32 	%f405, %f903, %f13;
	mul.f32 	%f406, %f902, %f14;
	sub.f32 	%f52, %f405, %f406;
	mov.f32 	%f950, 0f00000000;
	mov.u32 	%r394, 0;
	abs.f32 	%f407, %f48;
	abs.f32 	%f408, %f47;
	max.f32 	%f409, %f408, %f407;
	abs.f32 	%f410, %f49;
	max.f32 	%f411, %f409, %f410;
	mov.f32 	%f951, %f950;
	mov.f32 	%f952, %f950;
	mov.f32 	%f953, %f950;
	mov.f32 	%f954, %f950;
	mov.f32 	%f955, %f950;
	mov.f32 	%f956, %f950;
	mov.f32 	%f957, %f950;
	mov.f32 	%f958, %f950;
	mov.f32 	%f959, %f950;
	mov.f32 	%f960, %f950;
	mov.f32 	%f961, %f950;

BB0_12:
	setp.lt.s32	%p18, %r393, 1;
	@%p18 bra 	BB0_61;

	mov.u32 	%r396, 0;

BB0_14:
	cvt.rn.f32.s32	%f845, %r394;
	mad.lo.s32 	%r158, %r419, 1664525, 1013904223;
	and.b32  	%r159, %r158, 16777215;
	cvt.rn.f32.u32	%f413, %r159;
	fma.rn.f32 	%f414, %f413, 0f33800000, %f845;
	mul.f32 	%f79, %f46, %f414;
	mad.lo.s32 	%r17, %r158, 1664525, 1013904223;
	and.b32  	%r160, %r17, 16777215;
	cvt.rn.f32.u32	%f415, %r160;
	cvt.rn.f32.s32	%f416, %r396;
	fma.rn.f32 	%f417, %f415, 0f33800000, %f416;
	mul.f32 	%f418, %f46, %f417;
	mul.f32 	%f419, %f79, %f79;
	mov.f32 	%f420, 0f3F800000;
	sub.f32 	%f421, %f420, %f419;
	mov.f32 	%f422, 0f00000000;
	max.f32 	%f423, %f422, %f421;
	sqrt.rn.f32 	%f80, %f423;
	mul.f32 	%f944, %f418, 0f40C90FDB;
	abs.f32 	%f82, %f944;
	setp.neu.f32	%p19, %f82, 0f7F800000;
	mov.f32 	%f938, %f944;
	@%p19 bra 	BB0_16;

	mov.f32 	%f846, 0f00000000;
	mul.rn.f32 	%f938, %f944, %f846;

BB0_16:
	mul.f32 	%f425, %f938, 0f3F22F983;
	cvt.rni.s32.f32	%r407, %f425;
	cvt.rn.f32.s32	%f426, %r407;
	neg.f32 	%f427, %f426;
	mov.f32 	%f428, 0f3FC90FDA;
	fma.rn.f32 	%f429, %f427, %f428, %f938;
	mov.f32 	%f430, 0f33A22168;
	fma.rn.f32 	%f431, %f427, %f430, %f429;
	mov.f32 	%f432, 0f27C234C5;
	fma.rn.f32 	%f939, %f427, %f432, %f431;
	abs.f32 	%f433, %f938;
	setp.leu.f32	%p20, %f433, 0f47CE4780;
	@%p20 bra 	BB0_27;

	add.u64 	%rd72, %SP, 12;
	cvta.to.local.u64 	%rd276, %rd72;
	mov.u32 	%r398, 0;
	mov.u64 	%rd277, 0;
	mov.u32 	%r399, %r398;

BB0_18:
	.pragma "nounroll";
	mov.b32 	 %r349, %f938;
	shl.b32 	%r348, %r349, 8;
	or.b32  	%r347, %r348, -2147483648;
	add.u64 	%rd257, %SP, 12;
	cvta.to.local.u64 	%rd256, %rd257;
	shl.b64 	%rd73, %rd277, 2;
	mov.u64 	%rd74, __cudart_i2opi_f;
	add.s64 	%rd75, %rd74, %rd73;
	ld.const.u32 	%r166, [%rd75];
	// inline asm
	{
	mad.lo.cc.u32   %r164, %r166, %r347, %r399;
	madc.hi.u32     %r399, %r166, %r347,  0;
	}
	// inline asm
	st.local.u32 	[%rd276], %r164;
	add.s32 	%r398, %r398, 1;
	cvt.s64.s32	%rd277, %r398;
	mul.wide.s32 	%rd78, %r398, 4;
	add.s64 	%rd276, %rd256, %rd78;
	setp.ne.s32	%p21, %r398, 6;
	@%p21 bra 	BB0_18;

	mov.b32 	 %r351, %f938;
	shr.u32 	%r350, %r351, 23;
	add.u64 	%rd258, %SP, 12;
	and.b32  	%r169, %r350, 255;
	add.s32 	%r170, %r169, -128;
	shr.u32 	%r171, %r170, 5;
	cvta.to.local.u64 	%rd80, %rd258;
	st.local.u32 	[%rd80+24], %r399;
	mov.u32 	%r172, 6;
	sub.s32 	%r173, %r172, %r171;
	mul.wide.s32 	%rd81, %r173, 4;
	add.s64 	%rd10, %rd80, %rd81;
	ld.local.u32 	%r400, [%rd10];
	ld.local.u32 	%r401, [%rd10+-4];
	and.b32  	%r29, %r350, 31;
	setp.eq.s32	%p22, %r29, 0;
	@%p22 bra 	BB0_21;

	mov.u32 	%r174, 32;
	sub.s32 	%r175, %r174, %r29;
	shr.u32 	%r176, %r401, %r175;
	shl.b32 	%r177, %r400, %r29;
	add.s32 	%r400, %r176, %r177;
	ld.local.u32 	%r178, [%rd10+-8];
	shr.u32 	%r179, %r178, %r175;
	shl.b32 	%r180, %r401, %r29;
	add.s32 	%r401, %r179, %r180;

BB0_21:
	mov.b32 	 %r365, %f938;
	and.b32  	%r403, %r365, -2147483648;
	shr.u32 	%r181, %r401, 30;
	shl.b32 	%r182, %r400, 2;
	add.s32 	%r402, %r181, %r182;
	shl.b32 	%r35, %r401, 2;
	shr.u32 	%r183, %r402, 31;
	shr.u32 	%r184, %r400, 30;
	add.s32 	%r36, %r183, %r184;
	setp.eq.s32	%p23, %r183, 0;
	@%p23 bra 	BB0_22;
	bra.uni 	BB0_23;

BB0_22:
	mov.u32 	%r404, %r35;
	bra.uni 	BB0_24;

BB0_23:
	mov.b32 	 %r367, %f938;
	and.b32  	%r366, %r367, -2147483648;
	not.b32 	%r185, %r402;
	neg.s32 	%r404, %r35;
	setp.eq.s32	%p24, %r35, 0;
	selp.u32	%r186, 1, 0, %p24;
	add.s32 	%r402, %r186, %r185;
	xor.b32  	%r403, %r366, -2147483648;

BB0_24:
	mov.b32 	 %r369, %f938;
	and.b32  	%r368, %r369, -2147483648;
	clz.b32 	%r406, %r402;
	setp.eq.s32	%p25, %r406, 0;
	shl.b32 	%r187, %r402, %r406;
	mov.u32 	%r188, 32;
	sub.s32 	%r189, %r188, %r406;
	shr.u32 	%r190, %r404, %r189;
	add.s32 	%r191, %r190, %r187;
	selp.b32	%r44, %r402, %r191, %p25;
	mov.u32 	%r192, -921707870;
	mul.hi.u32 	%r405, %r44, %r192;
	setp.eq.s32	%p26, %r368, 0;
	neg.s32 	%r193, %r36;
	selp.b32	%r407, %r36, %r193, %p26;
	setp.lt.s32	%p27, %r405, 1;
	@%p27 bra 	BB0_26;

	mul.lo.s32 	%r194, %r44, -921707870;
	shr.u32 	%r195, %r194, 31;
	shl.b32 	%r196, %r405, 1;
	add.s32 	%r405, %r195, %r196;
	add.s32 	%r406, %r406, 1;

BB0_26:
	mov.u32 	%r197, 126;
	sub.s32 	%r198, %r197, %r406;
	shl.b32 	%r199, %r198, 23;
	add.s32 	%r200, %r405, 1;
	shr.u32 	%r201, %r200, 7;
	add.s32 	%r202, %r201, 1;
	shr.u32 	%r203, %r202, 1;
	add.s32 	%r204, %r203, %r199;
	or.b32  	%r205, %r204, %r403;
	mov.b32 	 %f939, %r205;

BB0_27:
	add.s32 	%r52, %r407, 1;
	and.b32  	%r53, %r52, 1;
	setp.eq.s32	%p28, %r53, 0;
	@%p28 bra 	BB0_29;
	bra.uni 	BB0_28;

BB0_29:
	mul.rn.f32 	%f854, %f939, %f939;
	mov.f32 	%f436, 0f3C08839E;
	mov.f32 	%f437, 0fB94CA1F9;
	fma.rn.f32 	%f940, %f437, %f854, %f436;
	bra.uni 	BB0_30;

BB0_28:
	mul.rn.f32 	%f850, %f939, %f939;
	mov.f32 	%f434, 0fBAB6061A;
	mov.f32 	%f435, 0f37CCF5CE;
	fma.rn.f32 	%f940, %f435, %f850, %f434;

BB0_30:
	@%p28 bra 	BB0_32;
	bra.uni 	BB0_31;

BB0_32:
	mul.rn.f32 	%f853, %f939, %f939;
	mov.f32 	%f849, 0f00000000;
	mov.f32 	%f441, 0fBE2AAAA3;
	fma.rn.f32 	%f442, %f940, %f853, %f441;
	fma.rn.f32 	%f941, %f442, %f853, %f849;
	bra.uni 	BB0_33;

BB0_31:
	mul.rn.f32 	%f851, %f939, %f939;
	mov.f32 	%f438, 0f3D2AAAA5;
	fma.rn.f32 	%f439, %f940, %f851, %f438;
	mov.f32 	%f440, 0fBF000000;
	fma.rn.f32 	%f941, %f439, %f851, %f440;

BB0_33:
	fma.rn.f32 	%f942, %f941, %f939, %f939;
	@%p28 bra 	BB0_35;

	mul.rn.f32 	%f852, %f939, %f939;
	mov.f32 	%f836, 0f3F800000;
	fma.rn.f32 	%f942, %f941, %f852, %f836;

BB0_35:
	add.s32 	%r379, %r407, 1;
	and.b32  	%r206, %r379, 2;
	setp.eq.s32	%p31, %r206, 0;
	@%p31 bra 	BB0_37;

	mov.f32 	%f837, 0f00000000;
	mov.f32 	%f446, 0fBF800000;
	fma.rn.f32 	%f942, %f942, %f446, %f837;

BB0_37:
	abs.f32 	%f838, %f944;
	setp.neu.f32	%p110, %f838, 0f7F800000;
	@%p110 bra 	BB0_39;

	mov.f32 	%f848, 0f00000000;
	mul.rn.f32 	%f944, %f944, %f848;

BB0_39:
	mov.f32 	%f841, 0f27C234C5;
	mov.f32 	%f840, 0f33A22168;
	mov.f32 	%f839, 0f3FC90FDA;
	mul.f32 	%f448, %f944, 0f3F22F983;
	cvt.rni.s32.f32	%r417, %f448;
	cvt.rn.f32.s32	%f449, %r417;
	neg.f32 	%f450, %f449;
	fma.rn.f32 	%f452, %f450, %f839, %f944;
	fma.rn.f32 	%f454, %f450, %f840, %f452;
	fma.rn.f32 	%f945, %f450, %f841, %f454;
	abs.f32 	%f456, %f944;
	setp.leu.f32	%p33, %f456, 0f47CE4780;
	@%p33 bra 	BB0_50;

	mov.u64 	%rd279, 0;
	add.u64 	%rd83, %SP, 12;
	cvta.to.local.u64 	%rd278, %rd83;
	mov.b32 	 %r55, %f944;
	shl.b32 	%r209, %r55, 8;
	or.b32  	%r57, %r209, -2147483648;
	mov.u32 	%r408, 0;
	mov.u32 	%r409, %r408;

BB0_41:
	.pragma "nounroll";
	add.u64 	%rd260, %SP, 12;
	cvta.to.local.u64 	%rd259, %rd260;
	shl.b64 	%rd84, %rd279, 2;
	mov.u64 	%rd85, __cudart_i2opi_f;
	add.s64 	%rd86, %rd85, %rd84;
	ld.const.u32 	%r212, [%rd86];
	// inline asm
	{
	mad.lo.cc.u32   %r210, %r212, %r57, %r409;
	madc.hi.u32     %r409, %r212, %r57,  0;
	}
	// inline asm
	st.local.u32 	[%rd278], %r210;
	add.s32 	%r408, %r408, 1;
	cvt.s64.s32	%rd279, %r408;
	mul.wide.s32 	%rd87, %r408, 4;
	add.s64 	%rd278, %rd259, %rd87;
	setp.ne.s32	%p34, %r408, 6;
	@%p34 bra 	BB0_41;

	mov.b32 	 %r381, %f944;
	shr.u32 	%r380, %r381, 23;
	add.u64 	%rd261, %SP, 12;
	and.b32  	%r215, %r380, 255;
	add.s32 	%r216, %r215, -128;
	shr.u32 	%r217, %r216, 5;
	cvta.to.local.u64 	%rd89, %rd261;
	st.local.u32 	[%rd89+24], %r409;
	mov.u32 	%r218, 6;
	sub.s32 	%r219, %r218, %r217;
	mul.wide.s32 	%rd90, %r219, 4;
	add.s64 	%rd17, %rd89, %rd90;
	ld.local.u32 	%r410, [%rd17];
	ld.local.u32 	%r411, [%rd17+-4];
	and.b32  	%r65, %r380, 31;
	setp.eq.s32	%p35, %r65, 0;
	@%p35 bra 	BB0_44;

	mov.u32 	%r220, 32;
	sub.s32 	%r221, %r220, %r65;
	shr.u32 	%r222, %r411, %r221;
	shl.b32 	%r223, %r410, %r65;
	add.s32 	%r410, %r222, %r223;
	ld.local.u32 	%r224, [%rd17+-8];
	shr.u32 	%r225, %r224, %r221;
	shl.b32 	%r226, %r411, %r65;
	add.s32 	%r411, %r225, %r226;

BB0_44:
	mov.b32 	 %r384, %f944;
	and.b32  	%r413, %r384, -2147483648;
	shr.u32 	%r227, %r411, 30;
	shl.b32 	%r228, %r410, 2;
	add.s32 	%r412, %r227, %r228;
	shl.b32 	%r71, %r411, 2;
	shr.u32 	%r229, %r412, 31;
	shr.u32 	%r230, %r410, 30;
	add.s32 	%r72, %r229, %r230;
	setp.eq.s32	%p36, %r229, 0;
	@%p36 bra 	BB0_45;
	bra.uni 	BB0_46;

BB0_45:
	mov.u32 	%r414, %r71;
	bra.uni 	BB0_47;

BB0_46:
	mov.b32 	 %r386, %f944;
	and.b32  	%r385, %r386, -2147483648;
	not.b32 	%r231, %r412;
	neg.s32 	%r414, %r71;
	setp.eq.s32	%p37, %r71, 0;
	selp.u32	%r232, 1, 0, %p37;
	add.s32 	%r412, %r232, %r231;
	xor.b32  	%r413, %r385, -2147483648;

BB0_47:
	mov.b32 	 %r388, %f944;
	and.b32  	%r387, %r388, -2147483648;
	clz.b32 	%r416, %r412;
	setp.eq.s32	%p38, %r416, 0;
	shl.b32 	%r233, %r412, %r416;
	mov.u32 	%r234, 32;
	sub.s32 	%r235, %r234, %r416;
	shr.u32 	%r236, %r414, %r235;
	add.s32 	%r237, %r236, %r233;
	selp.b32	%r80, %r412, %r237, %p38;
	mov.u32 	%r238, -921707870;
	mul.hi.u32 	%r415, %r80, %r238;
	setp.eq.s32	%p39, %r387, 0;
	neg.s32 	%r239, %r72;
	selp.b32	%r417, %r72, %r239, %p39;
	setp.lt.s32	%p40, %r415, 1;
	@%p40 bra 	BB0_49;

	mul.lo.s32 	%r240, %r80, -921707870;
	shr.u32 	%r241, %r240, 31;
	shl.b32 	%r242, %r415, 1;
	add.s32 	%r415, %r241, %r242;
	add.s32 	%r416, %r416, 1;

BB0_49:
	mov.u32 	%r243, 126;
	sub.s32 	%r244, %r243, %r416;
	shl.b32 	%r245, %r244, 23;
	add.s32 	%r246, %r415, 1;
	shr.u32 	%r247, %r246, 7;
	add.s32 	%r248, %r247, 1;
	shr.u32 	%r249, %r248, 1;
	add.s32 	%r250, %r249, %r245;
	or.b32  	%r251, %r250, %r413;
	mov.b32 	 %f945, %r251;

BB0_50:
	and.b32  	%r88, %r417, 1;
	setp.eq.s32	%p41, %r88, 0;
	@%p41 bra 	BB0_52;
	bra.uni 	BB0_51;

BB0_52:
	mul.rn.f32 	%f859, %f945, %f945;
	mov.f32 	%f459, 0f3C08839E;
	mov.f32 	%f460, 0fB94CA1F9;
	fma.rn.f32 	%f946, %f460, %f859, %f459;
	bra.uni 	BB0_53;

BB0_51:
	mul.rn.f32 	%f855, %f945, %f945;
	mov.f32 	%f457, 0fBAB6061A;
	mov.f32 	%f458, 0f37CCF5CE;
	fma.rn.f32 	%f946, %f458, %f855, %f457;

BB0_53:
	@%p41 bra 	BB0_55;
	bra.uni 	BB0_54;

BB0_55:
	mul.rn.f32 	%f858, %f945, %f945;
	mov.f32 	%f847, 0f00000000;
	mov.f32 	%f464, 0fBE2AAAA3;
	fma.rn.f32 	%f465, %f946, %f858, %f464;
	fma.rn.f32 	%f947, %f465, %f858, %f847;
	bra.uni 	BB0_56;

BB0_54:
	mul.rn.f32 	%f856, %f945, %f945;
	mov.f32 	%f461, 0f3D2AAAA5;
	fma.rn.f32 	%f462, %f946, %f856, %f461;
	mov.f32 	%f463, 0fBF000000;
	fma.rn.f32 	%f947, %f462, %f856, %f463;

BB0_56:
	fma.rn.f32 	%f948, %f947, %f945, %f945;
	@%p41 bra 	BB0_58;

	mul.rn.f32 	%f857, %f945, %f945;
	mov.f32 	%f842, 0f3F800000;
	fma.rn.f32 	%f948, %f947, %f857, %f842;

BB0_58:
	and.b32  	%r252, %r417, 2;
	setp.eq.s32	%p44, %r252, 0;
	@%p44 bra 	BB0_60;

	mov.f32 	%f843, 0f00000000;
	mov.f32 	%f469, 0fBF800000;
	fma.rn.f32 	%f948, %f948, %f469, %f843;

BB0_60:
	mad.lo.s32 	%r354, %r419, 1664525, 1013904223;
	mad.lo.s32 	%r419, %r354, 1664525, 1013904223;
	max.f32 	%f844, %f411, %f257;
	mul.f32 	%f478, %f80, %f942;
	add.u64 	%rd91, %SP, 0;
	cvta.to.local.u64 	%rd92, %rd91;
	mul.f32 	%f479, %f80, %f948;
	mul.f32 	%f480, %f13, %f479;
	mul.f32 	%f481, %f14, %f479;
	mul.f32 	%f482, %f15, %f479;
	fma.rn.f32 	%f483, %f50, %f478, %f480;
	fma.rn.f32 	%f484, %f51, %f478, %f481;
	fma.rn.f32 	%f485, %f52, %f478, %f482;
	fma.rn.f32 	%f473, %f902, %f79, %f483;
	fma.rn.f32 	%f474, %f903, %f79, %f484;
	fma.rn.f32 	%f475, %f904, %f79, %f485;
	mov.u32 	%r254, 0;
	st.local.u32 	[%rd92+8], %r254;
	st.local.u32 	[%rd92+4], %r254;
	st.local.u32 	[%rd92], %r254;
	ld.global.u32 	%r253, [root];
	mov.f32 	%f477, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r253, %f10, %f11, %f12, %f473, %f474, %f475, %r254, %f844, %f477, %rd91, %r123);
	// inline asm
	mul.f32 	%f486, %f25, %f474;
	fma.rn.f32 	%f487, %f23, %f473, %f486;
	fma.rn.f32 	%f488, %f27, %f475, %f487;
	cvt.sat.f32.f32	%f489, %f488;
	ld.local.f32 	%f490, [%rd92];
	ld.local.f32 	%f491, [%rd92+4];
	ld.local.f32 	%f492, [%rd92+8];
	fma.rn.f32 	%f955, %f489, %f490, %f955;
	fma.rn.f32 	%f954, %f489, %f491, %f954;
	fma.rn.f32 	%f953, %f489, %f492, %f953;
	mul.f32 	%f493, %f35, %f474;
	fma.rn.f32 	%f494, %f34, %f473, %f493;
	fma.rn.f32 	%f495, %f36, %f475, %f494;
	cvt.sat.f32.f32	%f496, %f495;
	fma.rn.f32 	%f958, %f496, %f490, %f958;
	fma.rn.f32 	%f957, %f496, %f491, %f957;
	fma.rn.f32 	%f956, %f496, %f492, %f956;
	mul.f32 	%f497, %f44, %f474;
	fma.rn.f32 	%f498, %f43, %f473, %f497;
	fma.rn.f32 	%f499, %f45, %f475, %f498;
	cvt.sat.f32.f32	%f500, %f499;
	fma.rn.f32 	%f961, %f500, %f490, %f961;
	fma.rn.f32 	%f960, %f500, %f491, %f960;
	fma.rn.f32 	%f959, %f500, %f492, %f959;
	mul.f32 	%f501, %f903, %f474;
	fma.rn.f32 	%f502, %f902, %f473, %f501;
	fma.rn.f32 	%f503, %f904, %f475, %f502;
	cvt.sat.f32.f32	%f504, %f503;
	fma.rn.f32 	%f952, %f504, %f490, %f952;
	fma.rn.f32 	%f951, %f504, %f491, %f951;
	fma.rn.f32 	%f950, %f504, %f492, %f950;
	ld.global.u32 	%r393, [samples];
	add.s32 	%r396, %r396, 1;
	setp.lt.s32	%p45, %r396, %r393;
	@%p45 bra 	BB0_14;

BB0_61:
	add.s32 	%r394, %r394, 1;
	setp.lt.s32	%p46, %r394, %r393;
	@%p46 bra 	BB0_12;
	bra.uni 	BB0_62;

BB0_118:
	mov.u64 	%rd215, image_RNM0;
	cvta.global.u64 	%rd210, %rd215;
	mov.u32 	%r332, 8;
	mov.u64 	%rd214, 0;
	// inline asm
	call (%rd209), _rt_buffer_get_64, (%rd210, %r105, %r332, %rd20, %rd21, %rd214, %rd214);
	// inline asm
	mov.f32 	%f821, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f821;}

	// inline asm
	mov.u16 	%rs117, 0;
	st.v4.u16 	[%rd209], {%rs116, %rs116, %rs116, %rs117};

BB0_119:
	ld.global.u32 	%r333, [additive];
	setp.eq.s32	%p108, %r333, 0;
	@%p108 bra 	BB0_121;

	mov.u64 	%rd228, image_RNM1;
	cvta.global.u64 	%rd217, %rd228;
	mov.u32 	%r337, 8;
	mov.u64 	%rd227, 0;
	// inline asm
	call (%rd216), _rt_buffer_get_64, (%rd217, %r105, %r337, %rd20, %rd21, %rd227, %rd227);
	// inline asm
	ld.v4.u16 	{%rs124, %rs125, %rs126, %rs127}, [%rd216];
	// inline asm
	{  cvt.f32.f16 %f822, %rs124;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f823, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f824, %rs126;}

	// inline asm
	// inline asm
	call (%rd222), _rt_buffer_get_64, (%rd217, %r105, %r337, %rd20, %rd21, %rd227, %rd227);
	// inline asm
	add.f32 	%f825, %f822, 0f00000000;
	add.f32 	%f826, %f823, 0f00000000;
	add.f32 	%f827, %f824, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f827;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f826;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f825;}

	// inline asm
	mov.u16 	%rs128, 0;
	st.v4.u16 	[%rd222], {%rs121, %rs122, %rs123, %rs128};
	bra.uni 	BB0_122;

BB0_10:
	mov.f32 	%f951, %f950;
	mov.f32 	%f952, %f950;
	mov.f32 	%f953, %f950;
	mov.f32 	%f954, %f950;
	mov.f32 	%f955, %f950;
	mov.f32 	%f956, %f950;
	mov.f32 	%f957, %f950;
	mov.f32 	%f958, %f950;
	mov.f32 	%f959, %f950;
	mov.f32 	%f960, %f950;
	mov.f32 	%f961, %f950;

BB0_62:
	mul.lo.s32 	%r256, %r393, %r393;
	cvt.rn.f32.s32	%f505, %r256;
	rcp.rn.f32 	%f506, %f505;
	cvt.rn.f32.u32	%f507, %r3;
	cvt.rn.f32.u32	%f508, %r2;
	tex.2d.v4.f32.f32	{%f509, %f510, %f511, %f512}, [albedoTex, {%f508, %f507}];
	mul.f32 	%f153, %f955, %f506;
	mul.f32 	%f154, %f954, %f506;
	mul.f32 	%f155, %f953, %f506;
	mul.f32 	%f156, %f958, %f506;
	mul.f32 	%f157, %f957, %f506;
	mul.f32 	%f158, %f956, %f506;
	mul.f32 	%f159, %f961, %f506;
	mul.f32 	%f160, %f960, %f506;
	mul.f32 	%f161, %f959, %f506;
	mul.f32 	%f513, %f952, %f506;
	mul.f32 	%f514, %f951, %f506;
	mul.f32 	%f515, %f950, %f506;
	fma.rn.f32 	%f162, %f952, %f506, %f513;
	fma.rn.f32 	%f163, %f951, %f506, %f514;
	fma.rn.f32 	%f164, %f950, %f506, %f515;
	mul.f32 	%f165, %f162, %f509;
	mul.f32 	%f166, %f163, %f510;
	mul.f32 	%f167, %f164, %f511;
	add.f32 	%f168, %f236, %f165;
	add.f32 	%f169, %f237, %f166;
	add.f32 	%f170, %f238, %f167;
	ld.global.u32 	%r422, [imageEnabled];
	and.b32  	%r257, %r422, 1;
	setp.eq.b32	%p47, %r257, 1;
	@!%p47 bra 	BB0_97;
	bra.uni 	BB0_63;

BB0_63:
	abs.f32 	%f172, %f168;
	setp.lt.f32	%p48, %f172, 0f00800000;
	mul.f32 	%f521, %f172, 0f4B800000;
	selp.f32	%f522, 0fC3170000, 0fC2FE0000, %p48;
	selp.f32	%f523, %f521, %f172, %p48;
	mov.b32 	 %r258, %f523;
	and.b32  	%r259, %r258, 8388607;
	or.b32  	%r260, %r259, 1065353216;
	mov.b32 	 %f524, %r260;
	shr.u32 	%r261, %r258, 23;
	cvt.rn.f32.u32	%f525, %r261;
	add.f32 	%f526, %f522, %f525;
	setp.gt.f32	%p49, %f524, 0f3FB504F3;
	mul.f32 	%f527, %f524, 0f3F000000;
	add.f32 	%f528, %f526, 0f3F800000;
	selp.f32	%f529, %f527, %f524, %p49;
	selp.f32	%f530, %f528, %f526, %p49;
	add.f32 	%f531, %f529, 0fBF800000;
	add.f32 	%f517, %f529, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f516,%f517;
	// inline asm
	add.f32 	%f532, %f531, %f531;
	mul.f32 	%f533, %f516, %f532;
	mul.f32 	%f534, %f533, %f533;
	mov.f32 	%f535, 0f3C4CAF63;
	mov.f32 	%f536, 0f3B18F0FE;
	fma.rn.f32 	%f537, %f536, %f534, %f535;
	mov.f32 	%f538, 0f3DAAAABD;
	fma.rn.f32 	%f539, %f537, %f534, %f538;
	mul.rn.f32 	%f540, %f539, %f534;
	mul.rn.f32 	%f541, %f540, %f533;
	sub.f32 	%f542, %f531, %f533;
	neg.f32 	%f543, %f533;
	add.f32 	%f544, %f542, %f542;
	fma.rn.f32 	%f545, %f543, %f531, %f544;
	mul.rn.f32 	%f546, %f516, %f545;
	add.f32 	%f547, %f541, %f533;
	sub.f32 	%f548, %f533, %f547;
	add.f32 	%f549, %f541, %f548;
	add.f32 	%f550, %f546, %f549;
	add.f32 	%f551, %f547, %f550;
	sub.f32 	%f552, %f547, %f551;
	add.f32 	%f553, %f550, %f552;
	mov.f32 	%f554, 0f3F317200;
	mul.rn.f32 	%f555, %f530, %f554;
	mov.f32 	%f556, 0f35BFBE8E;
	mul.rn.f32 	%f557, %f530, %f556;
	add.f32 	%f558, %f555, %f551;
	sub.f32 	%f559, %f555, %f558;
	add.f32 	%f560, %f551, %f559;
	add.f32 	%f561, %f553, %f560;
	add.f32 	%f562, %f557, %f561;
	add.f32 	%f563, %f558, %f562;
	sub.f32 	%f564, %f558, %f563;
	add.f32 	%f565, %f562, %f564;
	mov.f32 	%f566, 0f3EE66666;
	mul.rn.f32 	%f567, %f566, %f563;
	neg.f32 	%f568, %f567;
	fma.rn.f32 	%f569, %f566, %f563, %f568;
	fma.rn.f32 	%f570, %f566, %f565, %f569;
	mov.f32 	%f571, 0f00000000;
	fma.rn.f32 	%f572, %f571, %f563, %f570;
	add.rn.f32 	%f573, %f567, %f572;
	neg.f32 	%f574, %f573;
	add.rn.f32 	%f575, %f567, %f574;
	add.rn.f32 	%f576, %f575, %f572;
	mov.b32 	 %r262, %f573;
	setp.eq.s32	%p50, %r262, 1118925336;
	add.s32 	%r263, %r262, -1;
	mov.b32 	 %f577, %r263;
	add.f32 	%f578, %f576, 0f37000000;
	selp.f32	%f579, %f577, %f573, %p50;
	selp.f32	%f173, %f578, %f576, %p50;
	mul.f32 	%f580, %f579, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f581, %f580;
	mov.f32 	%f582, 0fBF317200;
	fma.rn.f32 	%f583, %f581, %f582, %f579;
	mov.f32 	%f584, 0fB5BFBE8E;
	fma.rn.f32 	%f585, %f581, %f584, %f583;
	mul.f32 	%f586, %f585, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f587, %f586;
	add.f32 	%f588, %f581, 0f00000000;
	ex2.approx.f32 	%f589, %f588;
	mul.f32 	%f590, %f587, %f589;
	setp.lt.f32	%p51, %f579, 0fC2D20000;
	selp.f32	%f591, 0f00000000, %f590, %p51;
	setp.gt.f32	%p52, %f579, 0f42D20000;
	selp.f32	%f974, 0f7F800000, %f591, %p52;
	setp.eq.f32	%p53, %f974, 0f7F800000;
	@%p53 bra 	BB0_65;

	fma.rn.f32 	%f974, %f974, %f173, %f974;

BB0_65:
	mov.f32 	%f863, 0f3E666666;
	cvt.rzi.f32.f32	%f862, %f863;
	fma.rn.f32 	%f861, %f862, 0fC0000000, 0f3EE66666;
	abs.f32 	%f860, %f861;
	setp.lt.f32	%p54, %f168, 0f00000000;
	setp.eq.f32	%p55, %f860, 0f3F800000;
	and.pred  	%p1, %p54, %p55;
	mov.b32 	 %r264, %f974;
	xor.b32  	%r265, %r264, -2147483648;
	mov.b32 	 %f592, %r265;
	selp.f32	%f976, %f592, %f974, %p1;
	setp.eq.f32	%p56, %f168, 0f00000000;
	@%p56 bra 	BB0_68;
	bra.uni 	BB0_66;

BB0_68:
	add.f32 	%f595, %f168, %f168;
	selp.f32	%f976, %f595, 0f00000000, %p55;
	bra.uni 	BB0_69;

BB0_121:
	mov.u64 	%rd235, image_RNM1;
	cvta.global.u64 	%rd230, %rd235;
	mov.u32 	%r339, 8;
	mov.u64 	%rd234, 0;
	// inline asm
	call (%rd229), _rt_buffer_get_64, (%rd230, %r105, %r339, %rd20, %rd21, %rd234, %rd234);
	// inline asm
	mov.f32 	%f828, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs129, %f828;}

	// inline asm
	mov.u16 	%rs130, 0;
	st.v4.u16 	[%rd229], {%rs129, %rs129, %rs129, %rs130};

BB0_122:
	ld.global.u32 	%r340, [additive];
	setp.eq.s32	%p109, %r340, 0;
	@%p109 bra 	BB0_124;

	mov.u64 	%rd248, image_RNM2;
	cvta.global.u64 	%rd237, %rd248;
	mov.u32 	%r344, 8;
	mov.u64 	%rd247, 0;
	// inline asm
	call (%rd236), _rt_buffer_get_64, (%rd237, %r105, %r344, %rd20, %rd21, %rd247, %rd247);
	// inline asm
	ld.v4.u16 	{%rs137, %rs138, %rs139, %rs140}, [%rd236];
	// inline asm
	{  cvt.f32.f16 %f829, %rs137;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f830, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f831, %rs139;}

	// inline asm
	// inline asm
	call (%rd242), _rt_buffer_get_64, (%rd237, %r105, %r344, %rd20, %rd21, %rd247, %rd247);
	// inline asm
	add.f32 	%f832, %f829, 0f00000000;
	add.f32 	%f833, %f830, 0f00000000;
	add.f32 	%f834, %f831, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f834;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f833;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f832;}

	// inline asm
	mov.u16 	%rs141, 0;
	st.v4.u16 	[%rd242], {%rs134, %rs135, %rs136, %rs141};
	bra.uni 	BB0_125;

BB0_124:
	mov.u64 	%rd255, image_RNM2;
	cvta.global.u64 	%rd250, %rd255;
	mov.u32 	%r346, 8;
	mov.u64 	%rd254, 0;
	// inline asm
	call (%rd249), _rt_buffer_get_64, (%rd250, %r105, %r346, %rd20, %rd21, %rd254, %rd254);
	// inline asm
	mov.f32 	%f835, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs142, %f835;}

	// inline asm
	mov.u16 	%rs143, 0;
	st.v4.u16 	[%rd249], {%rs142, %rs142, %rs142, %rs143};
	bra.uni 	BB0_125;

BB0_66:
	setp.geu.f32	%p57, %f168, 0f00000000;
	@%p57 bra 	BB0_69;

	mov.f32 	%f887, 0f3EE66666;
	cvt.rzi.f32.f32	%f594, %f887;
	setp.neu.f32	%p58, %f594, 0f3EE66666;
	selp.f32	%f976, 0f7FFFFFFF, %f976, %p58;

BB0_69:
	abs.f32 	%f864, %f168;
	add.f32 	%f596, %f864, 0f3EE66666;
	mov.b32 	 %r266, %f596;
	setp.lt.s32	%p60, %r266, 2139095040;
	@%p60 bra 	BB0_74;

	abs.f32 	%f885, %f168;
	setp.gtu.f32	%p61, %f885, 0f7F800000;
	@%p61 bra 	BB0_73;
	bra.uni 	BB0_71;

BB0_73:
	add.f32 	%f976, %f168, 0f3EE66666;
	bra.uni 	BB0_74;

BB0_71:
	abs.f32 	%f886, %f168;
	setp.neu.f32	%p62, %f886, 0f7F800000;
	@%p62 bra 	BB0_74;

	selp.f32	%f976, 0fFF800000, 0f7F800000, %p1;

BB0_74:
	mov.f32 	%f873, 0fB5BFBE8E;
	mov.f32 	%f872, 0fBF317200;
	mov.f32 	%f871, 0f00000000;
	mov.f32 	%f870, 0f35BFBE8E;
	mov.f32 	%f869, 0f3F317200;
	mov.f32 	%f868, 0f3DAAAABD;
	mov.f32 	%f867, 0f3C4CAF63;
	mov.f32 	%f866, 0f3B18F0FE;
	mov.f32 	%f865, 0f3EE66666;
	setp.eq.f32	%p63, %f168, 0f3F800000;
	selp.f32	%f184, 0f3F800000, %f976, %p63;
	abs.f32 	%f185, %f169;
	setp.lt.f32	%p64, %f185, 0f00800000;
	mul.f32 	%f599, %f185, 0f4B800000;
	selp.f32	%f600, 0fC3170000, 0fC2FE0000, %p64;
	selp.f32	%f601, %f599, %f185, %p64;
	mov.b32 	 %r267, %f601;
	and.b32  	%r268, %r267, 8388607;
	or.b32  	%r269, %r268, 1065353216;
	mov.b32 	 %f602, %r269;
	shr.u32 	%r270, %r267, 23;
	cvt.rn.f32.u32	%f603, %r270;
	add.f32 	%f604, %f600, %f603;
	setp.gt.f32	%p65, %f602, 0f3FB504F3;
	mul.f32 	%f605, %f602, 0f3F000000;
	add.f32 	%f606, %f604, 0f3F800000;
	selp.f32	%f607, %f605, %f602, %p65;
	selp.f32	%f608, %f606, %f604, %p65;
	add.f32 	%f609, %f607, 0fBF800000;
	add.f32 	%f598, %f607, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f597,%f598;
	// inline asm
	add.f32 	%f610, %f609, %f609;
	mul.f32 	%f611, %f597, %f610;
	mul.f32 	%f612, %f611, %f611;
	fma.rn.f32 	%f615, %f866, %f612, %f867;
	fma.rn.f32 	%f617, %f615, %f612, %f868;
	mul.rn.f32 	%f618, %f617, %f612;
	mul.rn.f32 	%f619, %f618, %f611;
	sub.f32 	%f620, %f609, %f611;
	neg.f32 	%f621, %f611;
	add.f32 	%f622, %f620, %f620;
	fma.rn.f32 	%f623, %f621, %f609, %f622;
	mul.rn.f32 	%f624, %f597, %f623;
	add.f32 	%f625, %f619, %f611;
	sub.f32 	%f626, %f611, %f625;
	add.f32 	%f627, %f619, %f626;
	add.f32 	%f628, %f624, %f627;
	add.f32 	%f629, %f625, %f628;
	sub.f32 	%f630, %f625, %f629;
	add.f32 	%f631, %f628, %f630;
	mul.rn.f32 	%f633, %f608, %f869;
	mul.rn.f32 	%f635, %f608, %f870;
	add.f32 	%f636, %f633, %f629;
	sub.f32 	%f637, %f633, %f636;
	add.f32 	%f638, %f629, %f637;
	add.f32 	%f639, %f631, %f638;
	add.f32 	%f640, %f635, %f639;
	add.f32 	%f641, %f636, %f640;
	sub.f32 	%f642, %f636, %f641;
	add.f32 	%f643, %f640, %f642;
	mul.rn.f32 	%f645, %f865, %f641;
	neg.f32 	%f646, %f645;
	fma.rn.f32 	%f647, %f865, %f641, %f646;
	fma.rn.f32 	%f648, %f865, %f643, %f647;
	fma.rn.f32 	%f650, %f871, %f641, %f648;
	add.rn.f32 	%f651, %f645, %f650;
	neg.f32 	%f652, %f651;
	add.rn.f32 	%f653, %f645, %f652;
	add.rn.f32 	%f654, %f653, %f650;
	mov.b32 	 %r271, %f651;
	setp.eq.s32	%p66, %r271, 1118925336;
	add.s32 	%r272, %r271, -1;
	mov.b32 	 %f655, %r272;
	add.f32 	%f656, %f654, 0f37000000;
	selp.f32	%f657, %f655, %f651, %p66;
	selp.f32	%f186, %f656, %f654, %p66;
	mul.f32 	%f658, %f657, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f659, %f658;
	fma.rn.f32 	%f661, %f659, %f872, %f657;
	fma.rn.f32 	%f663, %f659, %f873, %f661;
	mul.f32 	%f664, %f663, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f665, %f664;
	add.f32 	%f666, %f659, 0f00000000;
	ex2.approx.f32 	%f667, %f666;
	mul.f32 	%f668, %f665, %f667;
	setp.lt.f32	%p67, %f657, 0fC2D20000;
	selp.f32	%f669, 0f00000000, %f668, %p67;
	setp.gt.f32	%p68, %f657, 0f42D20000;
	selp.f32	%f977, 0f7F800000, %f669, %p68;
	setp.eq.f32	%p69, %f977, 0f7F800000;
	@%p69 bra 	BB0_76;

	fma.rn.f32 	%f977, %f977, %f186, %f977;

BB0_76:
	setp.lt.f32	%p70, %f169, 0f00000000;
	and.pred  	%p2, %p70, %p55;
	mov.b32 	 %r273, %f977;
	xor.b32  	%r274, %r273, -2147483648;
	mov.b32 	 %f670, %r274;
	selp.f32	%f979, %f670, %f977, %p2;
	setp.eq.f32	%p72, %f169, 0f00000000;
	@%p72 bra 	BB0_79;
	bra.uni 	BB0_77;

BB0_79:
	add.f32 	%f673, %f169, %f169;
	selp.f32	%f979, %f673, 0f00000000, %p55;
	bra.uni 	BB0_80;

BB0_77:
	setp.geu.f32	%p73, %f169, 0f00000000;
	@%p73 bra 	BB0_80;

	mov.f32 	%f884, 0f3EE66666;
	cvt.rzi.f32.f32	%f672, %f884;
	setp.neu.f32	%p74, %f672, 0f3EE66666;
	selp.f32	%f979, 0f7FFFFFFF, %f979, %p74;

BB0_80:
	abs.f32 	%f888, %f169;
	add.f32 	%f674, %f888, 0f3EE66666;
	mov.b32 	 %r275, %f674;
	setp.lt.s32	%p76, %r275, 2139095040;
	@%p76 bra 	BB0_85;

	abs.f32 	%f889, %f169;
	setp.gtu.f32	%p77, %f889, 0f7F800000;
	@%p77 bra 	BB0_84;
	bra.uni 	BB0_82;

BB0_84:
	add.f32 	%f979, %f169, 0f3EE66666;
	bra.uni 	BB0_85;

BB0_82:
	abs.f32 	%f890, %f169;
	setp.neu.f32	%p78, %f890, 0f7F800000;
	@%p78 bra 	BB0_85;

	selp.f32	%f979, 0fFF800000, 0f7F800000, %p2;

BB0_85:
	mov.f32 	%f882, 0fB5BFBE8E;
	mov.f32 	%f881, 0fBF317200;
	mov.f32 	%f880, 0f00000000;
	mov.f32 	%f879, 0f35BFBE8E;
	mov.f32 	%f878, 0f3F317200;
	mov.f32 	%f877, 0f3DAAAABD;
	mov.f32 	%f876, 0f3C4CAF63;
	mov.f32 	%f875, 0f3B18F0FE;
	mov.f32 	%f874, 0f3EE66666;
	setp.eq.f32	%p79, %f169, 0f3F800000;
	selp.f32	%f197, 0f3F800000, %f979, %p79;
	abs.f32 	%f198, %f170;
	setp.lt.f32	%p80, %f198, 0f00800000;
	mul.f32 	%f677, %f198, 0f4B800000;
	selp.f32	%f678, 0fC3170000, 0fC2FE0000, %p80;
	selp.f32	%f679, %f677, %f198, %p80;
	mov.b32 	 %r276, %f679;
	and.b32  	%r277, %r276, 8388607;
	or.b32  	%r278, %r277, 1065353216;
	mov.b32 	 %f680, %r278;
	shr.u32 	%r279, %r276, 23;
	cvt.rn.f32.u32	%f681, %r279;
	add.f32 	%f682, %f678, %f681;
	setp.gt.f32	%p81, %f680, 0f3FB504F3;
	mul.f32 	%f683, %f680, 0f3F000000;
	add.f32 	%f684, %f682, 0f3F800000;
	selp.f32	%f685, %f683, %f680, %p81;
	selp.f32	%f686, %f684, %f682, %p81;
	add.f32 	%f687, %f685, 0fBF800000;
	add.f32 	%f676, %f685, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f675,%f676;
	// inline asm
	add.f32 	%f688, %f687, %f687;
	mul.f32 	%f689, %f675, %f688;
	mul.f32 	%f690, %f689, %f689;
	fma.rn.f32 	%f693, %f875, %f690, %f876;
	fma.rn.f32 	%f695, %f693, %f690, %f877;
	mul.rn.f32 	%f696, %f695, %f690;
	mul.rn.f32 	%f697, %f696, %f689;
	sub.f32 	%f698, %f687, %f689;
	neg.f32 	%f699, %f689;
	add.f32 	%f700, %f698, %f698;
	fma.rn.f32 	%f701, %f699, %f687, %f700;
	mul.rn.f32 	%f702, %f675, %f701;
	add.f32 	%f703, %f697, %f689;
	sub.f32 	%f704, %f689, %f703;
	add.f32 	%f705, %f697, %f704;
	add.f32 	%f706, %f702, %f705;
	add.f32 	%f707, %f703, %f706;
	sub.f32 	%f708, %f703, %f707;
	add.f32 	%f709, %f706, %f708;
	mul.rn.f32 	%f711, %f686, %f878;
	mul.rn.f32 	%f713, %f686, %f879;
	add.f32 	%f714, %f711, %f707;
	sub.f32 	%f715, %f711, %f714;
	add.f32 	%f716, %f707, %f715;
	add.f32 	%f717, %f709, %f716;
	add.f32 	%f718, %f713, %f717;
	add.f32 	%f719, %f714, %f718;
	sub.f32 	%f720, %f714, %f719;
	add.f32 	%f721, %f718, %f720;
	mul.rn.f32 	%f723, %f874, %f719;
	neg.f32 	%f724, %f723;
	fma.rn.f32 	%f725, %f874, %f719, %f724;
	fma.rn.f32 	%f726, %f874, %f721, %f725;
	fma.rn.f32 	%f728, %f880, %f719, %f726;
	add.rn.f32 	%f729, %f723, %f728;
	neg.f32 	%f730, %f729;
	add.rn.f32 	%f731, %f723, %f730;
	add.rn.f32 	%f732, %f731, %f728;
	mov.b32 	 %r280, %f729;
	setp.eq.s32	%p82, %r280, 1118925336;
	add.s32 	%r281, %r280, -1;
	mov.b32 	 %f733, %r281;
	add.f32 	%f734, %f732, 0f37000000;
	selp.f32	%f735, %f733, %f729, %p82;
	selp.f32	%f199, %f734, %f732, %p82;
	mul.f32 	%f736, %f735, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f737, %f736;
	fma.rn.f32 	%f739, %f737, %f881, %f735;
	fma.rn.f32 	%f741, %f737, %f882, %f739;
	mul.f32 	%f742, %f741, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f743, %f742;
	add.f32 	%f744, %f737, 0f00000000;
	ex2.approx.f32 	%f745, %f744;
	mul.f32 	%f746, %f743, %f745;
	setp.lt.f32	%p83, %f735, 0fC2D20000;
	selp.f32	%f747, 0f00000000, %f746, %p83;
	setp.gt.f32	%p84, %f735, 0f42D20000;
	selp.f32	%f980, 0f7F800000, %f747, %p84;
	setp.eq.f32	%p85, %f980, 0f7F800000;
	@%p85 bra 	BB0_87;

	fma.rn.f32 	%f980, %f980, %f199, %f980;

BB0_87:
	setp.lt.f32	%p86, %f170, 0f00000000;
	and.pred  	%p3, %p86, %p55;
	mov.b32 	 %r282, %f980;
	xor.b32  	%r283, %r282, -2147483648;
	mov.b32 	 %f748, %r283;
	selp.f32	%f982, %f748, %f980, %p3;
	setp.eq.f32	%p88, %f170, 0f00000000;
	@%p88 bra 	BB0_90;
	bra.uni 	BB0_88;

BB0_90:
	add.f32 	%f751, %f170, %f170;
	selp.f32	%f982, %f751, 0f00000000, %p55;
	bra.uni 	BB0_91;

BB0_88:
	setp.geu.f32	%p89, %f170, 0f00000000;
	@%p89 bra 	BB0_91;

	mov.f32 	%f883, 0f3EE66666;
	cvt.rzi.f32.f32	%f750, %f883;
	setp.neu.f32	%p90, %f750, 0f3EE66666;
	selp.f32	%f982, 0f7FFFFFFF, %f982, %p90;

BB0_91:
	abs.f32 	%f899, %f170;
	add.f32 	%f752, %f899, 0f3EE66666;
	mov.b32 	 %r284, %f752;
	setp.lt.s32	%p92, %r284, 2139095040;
	@%p92 bra 	BB0_96;

	abs.f32 	%f900, %f170;
	setp.gtu.f32	%p93, %f900, 0f7F800000;
	@%p93 bra 	BB0_95;
	bra.uni 	BB0_93;

BB0_95:
	add.f32 	%f982, %f170, 0f3EE66666;
	bra.uni 	BB0_96;

BB0_93:
	abs.f32 	%f901, %f170;
	setp.neu.f32	%p94, %f901, 0f7F800000;
	@%p94 bra 	BB0_96;

	selp.f32	%f982, 0fFF800000, 0f7F800000, %p3;

BB0_96:
	mov.u64 	%rd262, 0;
	mov.u32 	%r370, 2;
	mov.u32 	%r355, 4;
	setp.eq.f32	%p95, %f170, 0f3F800000;
	selp.f32	%f753, 0f3F800000, %f982, %p95;
	cvt.u64.u32	%rd97, %r3;
	cvt.u64.u32	%rd96, %r2;
	mov.u64 	%rd100, image;
	cvta.global.u64 	%rd95, %rd100;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r370, %r355, %rd96, %rd97, %rd262, %rd262);
	// inline asm
	cvt.sat.f32.f32	%f754, %f753;
	mul.f32 	%f755, %f754, 0f437FFD71;
	cvt.rzi.u32.f32	%r287, %f755;
	cvt.sat.f32.f32	%f756, %f197;
	mul.f32 	%f757, %f756, 0f437FFD71;
	cvt.rzi.u32.f32	%r288, %f757;
	cvt.sat.f32.f32	%f758, %f184;
	mul.f32 	%f759, %f758, 0f437FFD71;
	cvt.rzi.u32.f32	%r289, %f759;
	cvt.u16.u32	%rs46, %r287;
	cvt.u16.u32	%rs47, %r289;
	cvt.u16.u32	%rs48, %r288;
	mov.u16 	%rs49, 255;
	st.v4.u8 	[%rd94], {%rs46, %rs48, %rs47, %rs49};
	ld.global.u32 	%r422, [imageEnabled];

BB0_97:
	and.b32  	%r290, %r422, 4;
	setp.eq.s32	%p96, %r290, 0;
	@%p96 bra 	BB0_99;

	mov.u64 	%rd263, 0;
	mov.u32 	%r371, 2;
	mov.u32 	%r356, 8;
	cvt.u64.u32	%rd103, %r2;
	cvt.u64.u32	%rd104, %r3;
	mov.u64 	%rd107, image_HDR;
	cvta.global.u64 	%rd102, %rd107;
	// inline asm
	call (%rd101), _rt_buffer_get_64, (%rd102, %r371, %r356, %rd103, %rd104, %rd263, %rd263);
	// inline asm
	mov.f32 	%f763, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs53, %f763;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f170;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f169;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f168;}

	// inline asm
	st.v4.u16 	[%rd101], {%rs50, %rs51, %rs52, %rs53};
	ld.global.u32 	%r422, [imageEnabled];

BB0_99:
	and.b32  	%r293, %r422, 16;
	setp.eq.s32	%p97, %r293, 0;
	@%p97 bra 	BB0_101;

	mov.u64 	%rd264, 0;
	mov.u32 	%r372, 2;
	mov.u32 	%r357, 8;
	cvt.u64.u32	%rd111, %r3;
	cvt.u64.u32	%rd110, %r2;
	mov.u64 	%rd114, image_HDR2;
	cvta.global.u64 	%rd109, %rd114;
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd109, %r372, %r357, %rd110, %rd111, %rd264, %rd264);
	// inline asm
	mov.f32 	%f767, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f767;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f167;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f166;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs54, %f165;}

	// inline asm
	st.v4.u16 	[%rd108], {%rs54, %rs55, %rs56, %rs57};

BB0_101:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	add.f32 	%f769, %f153, %f156;
	add.f32 	%f770, %f769, %f159;
	add.f32 	%f771, %f154, %f157;
	add.f32 	%f772, %f771, %f160;
	add.f32 	%f773, %f155, %f158;
	add.f32 	%f774, %f773, %f161;
	mul.f32 	%f775, %f770, 0f3F13CD3A;
	mul.f32 	%f776, %f772, 0f3F13CD3A;
	mul.f32 	%f777, %f774, 0f3F13CD3A;
	div.rn.f32 	%f778, %f162, %f775;
	div.rn.f32 	%f779, %f163, %f776;
	div.rn.f32 	%f780, %f164, %f777;
	setp.eq.f32	%p98, %f162, 0f00000000;
	selp.f32	%f781, 0f00000000, %f778, %p98;
	setp.eq.f32	%p99, %f163, 0f00000000;
	selp.f32	%f782, 0f00000000, %f779, %p99;
	setp.eq.f32	%p100, %f164, 0f00000000;
	selp.f32	%f783, 0f00000000, %f780, %p100;
	mul.f32 	%f210, %f153, %f781;
	mul.f32 	%f211, %f154, %f782;
	mul.f32 	%f212, %f155, %f783;
	mul.f32 	%f213, %f156, %f781;
	mul.f32 	%f214, %f157, %f782;
	mul.f32 	%f215, %f158, %f783;
	mul.f32 	%f216, %f159, %f781;
	mul.f32 	%f217, %f160, %f782;
	mul.f32 	%f218, %f161, %f783;
	ld.global.u32 	%r296, [additive];
	setp.eq.s32	%p101, %r296, 0;
	mov.f32 	%f768, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f768;}

	// inline asm
	@%p101 bra 	BB0_103;

	mov.u64 	%rd265, 0;
	mov.u32 	%r373, 2;
	mov.u32 	%r358, 8;
	mov.u64 	%rd127, image_RNM0;
	cvta.global.u64 	%rd116, %rd127;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd116, %r373, %r358, %rd18, %rd19, %rd265, %rd265);
	// inline asm
	ld.v4.u16 	{%rs65, %rs66, %rs67, %rs68}, [%rd115];
	// inline asm
	{  cvt.f32.f16 %f784, %rs65;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f785, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f786, %rs67;}

	// inline asm
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd116, %r373, %r358, %rd18, %rd19, %rd265, %rd265);
	// inline asm
	add.f32 	%f787, %f210, %f784;
	add.f32 	%f788, %f211, %f785;
	add.f32 	%f789, %f212, %f786;
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f789;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f788;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f787;}

	// inline asm
	st.v4.u16 	[%rd121], {%rs62, %rs63, %rs64, %rs58};
	bra.uni 	BB0_104;

BB0_103:
	mov.u64 	%rd270, 0;
	mov.u32 	%r378, 2;
	mov.u32 	%r363, 8;
	mov.u64 	%rd134, image_RNM0;
	cvta.global.u64 	%rd129, %rd134;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r378, %r363, %rd18, %rd19, %rd270, %rd270);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f212;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f211;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f210;}

	// inline asm
	st.v4.u16 	[%rd128], {%rs69, %rs70, %rs71, %rs58};

BB0_104:
	ld.global.u32 	%r303, [additive];
	setp.eq.s32	%p102, %r303, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f768;}

	// inline asm
	@%p102 bra 	BB0_106;

	mov.u64 	%rd266, 0;
	mov.u32 	%r374, 2;
	mov.u32 	%r359, 8;
	mov.u64 	%rd147, image_RNM1;
	cvta.global.u64 	%rd136, %rd147;
	// inline asm
	call (%rd135), _rt_buffer_get_64, (%rd136, %r374, %r359, %rd18, %rd19, %rd266, %rd266);
	// inline asm
	ld.v4.u16 	{%rs79, %rs80, %rs81, %rs82}, [%rd135];
	// inline asm
	{  cvt.f32.f16 %f794, %rs79;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f795, %rs80;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f796, %rs81;}

	// inline asm
	// inline asm
	call (%rd141), _rt_buffer_get_64, (%rd136, %r374, %r359, %rd18, %rd19, %rd266, %rd266);
	// inline asm
	add.f32 	%f797, %f213, %f794;
	add.f32 	%f798, %f214, %f795;
	add.f32 	%f799, %f215, %f796;
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f799;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f798;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f797;}

	// inline asm
	st.v4.u16 	[%rd141], {%rs76, %rs77, %rs78, %rs72};
	bra.uni 	BB0_107;

BB0_106:
	mov.u64 	%rd269, 0;
	mov.u32 	%r377, 2;
	mov.u32 	%r362, 8;
	mov.u64 	%rd154, image_RNM1;
	cvta.global.u64 	%rd149, %rd154;
	// inline asm
	call (%rd148), _rt_buffer_get_64, (%rd149, %r377, %r362, %rd18, %rd19, %rd269, %rd269);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f215;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs84, %f214;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f213;}

	// inline asm
	st.v4.u16 	[%rd148], {%rs83, %rs84, %rs85, %rs72};

BB0_107:
	ld.global.u32 	%r310, [additive];
	setp.eq.s32	%p103, %r310, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f768;}

	// inline asm
	@%p103 bra 	BB0_109;

	mov.u64 	%rd267, 0;
	mov.u32 	%r375, 2;
	mov.u32 	%r360, 8;
	mov.u64 	%rd167, image_RNM2;
	cvta.global.u64 	%rd156, %rd167;
	// inline asm
	call (%rd155), _rt_buffer_get_64, (%rd156, %r375, %r360, %rd18, %rd19, %rd267, %rd267);
	// inline asm
	ld.v4.u16 	{%rs93, %rs94, %rs95, %rs96}, [%rd155];
	// inline asm
	{  cvt.f32.f16 %f804, %rs93;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f805, %rs94;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f806, %rs95;}

	// inline asm
	// inline asm
	call (%rd161), _rt_buffer_get_64, (%rd156, %r375, %r360, %rd18, %rd19, %rd267, %rd267);
	// inline asm
	add.f32 	%f807, %f216, %f804;
	add.f32 	%f808, %f217, %f805;
	add.f32 	%f809, %f218, %f806;
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f809;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f808;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f807;}

	// inline asm
	st.v4.u16 	[%rd161], {%rs90, %rs91, %rs92, %rs86};
	bra.uni 	BB0_125;

BB0_109:
	mov.u64 	%rd268, 0;
	mov.u32 	%r376, 2;
	mov.u32 	%r361, 8;
	mov.u64 	%rd174, image_RNM2;
	cvta.global.u64 	%rd169, %rd174;
	// inline asm
	call (%rd168), _rt_buffer_get_64, (%rd169, %r376, %r361, %rd18, %rd19, %rd268, %rd268);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f218;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f217;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f216;}

	// inline asm
	st.v4.u16 	[%rd168], {%rs97, %rs98, %rs99, %rs86};

BB0_125:
	ret;
}


