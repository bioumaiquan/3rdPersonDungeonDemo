//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[44];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<158>;
	.reg .b16 	%rs<157>;
	.reg .f32 	%f<1408>;
	.reg .b32 	%r<449>;
	.reg .b64 	%rd<301>;


	mov.u64 	%rd300, __local_depot0;
	cvta.local.u64 	%SP, %rd300;
	ld.global.v2.u32 	{%r114, %r115}, [pixelID];
	cvt.u64.u32	%rd26, %r114;
	cvt.u64.u32	%rd27, %r115;
	mov.u64 	%rd30, uvnormal;
	cvta.global.u64 	%rd25, %rd30;
	mov.u32 	%r112, 2;
	mov.u32 	%r113, 4;
	mov.u64 	%rd29, 0;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r112, %r113, %rd26, %rd27, %rd29, %rd29);
	// inline asm
	ld.u32 	%r1, [%rd24];
	shr.u32 	%r118, %r1, 16;
	cvt.u16.u32	%rs1, %r118;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r1;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p7, %rs8, 0;
	mov.f32 	%f1256, 0f00000000;
	mov.f32 	%f1257, %f1256;
	mov.f32 	%f1258, %f1256;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs9, [%rd24+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f352, %rs11;
	div.rn.f32 	%f353, %f352, 0f437F0000;
	fma.rn.f32 	%f354, %f353, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f355, %rs9;
	div.rn.f32 	%f356, %f355, 0f437F0000;
	fma.rn.f32 	%f357, %f356, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f358, %rs6;
	div.rn.f32 	%f359, %f358, 0f437F0000;
	fma.rn.f32 	%f360, %f359, 0f40000000, 0fBF800000;
	mul.f32 	%f361, %f357, %f357;
	fma.rn.f32 	%f362, %f354, %f354, %f361;
	fma.rn.f32 	%f363, %f360, %f360, %f362;
	sqrt.rn.f32 	%f364, %f363;
	rcp.rn.f32 	%f365, %f364;
	mul.f32 	%f1256, %f354, %f365;
	mul.f32 	%f1257, %f357, %f365;
	mul.f32 	%f1258, %f360, %f365;

BB0_2:
	ld.global.v2.u32 	{%r119, %r120}, [pixelID];
	ld.global.v2.u32 	{%r122, %r123}, [tileInfo];
	add.s32 	%r2, %r119, %r122;
	add.s32 	%r3, %r120, %r123;
	setp.eq.f32	%p8, %f1257, 0f00000000;
	setp.eq.f32	%p9, %f1256, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f1258, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_146;
	bra.uni 	BB0_3;

BB0_146:
	ld.global.u32 	%r448, [imageEnabled];
	and.b32  	%r362, %r448, 1;
	setp.eq.b32	%p150, %r362, 1;
	@!%p150 bra 	BB0_148;
	bra.uni 	BB0_147;

BB0_147:
	cvt.u64.u32	%rd200, %r2;
	cvt.u64.u32	%rd201, %r3;
	mov.u64 	%rd204, image;
	cvta.global.u64 	%rd199, %rd204;
	mov.u64 	%rd203, 0;
	// inline asm
	call (%rd198), _rt_buffer_get_64, (%rd199, %r112, %r113, %rd200, %rd201, %rd203, %rd203);
	// inline asm
	mov.u16 	%rs102, 0;
	st.v4.u8 	[%rd198], {%rs102, %rs102, %rs102, %rs102};
	ld.global.u32 	%r448, [imageEnabled];

BB0_148:
	and.b32  	%r365, %r448, 8;
	setp.eq.s32	%p151, %r365, 0;
	@%p151 bra 	BB0_150;

	cvt.u64.u32	%rd208, %r3;
	cvt.u64.u32	%rd207, %r2;
	mov.u64 	%rd211, image_Mask;
	cvta.global.u64 	%rd206, %rd211;
	mov.u64 	%rd210, 0;
	// inline asm
	call (%rd205), _rt_buffer_get_64, (%rd206, %r112, %r112, %rd207, %rd208, %rd210, %rd210);
	// inline asm
	mov.f32 	%f1218, 0f00000000;
	cvt.rzi.u32.f32	%r368, %f1218;
	cvt.u16.u32	%rs103, %r368;
	mov.u16 	%rs104, 0;
	st.v2.u8 	[%rd205], {%rs103, %rs104};
	ld.global.u32 	%r448, [imageEnabled];

BB0_150:
	cvt.u64.u32	%rd22, %r2;
	cvt.u64.u32	%rd23, %r3;
	and.b32  	%r369, %r448, 4;
	setp.eq.s32	%p152, %r369, 0;
	@%p152 bra 	BB0_154;

	ld.global.u32 	%r370, [additive];
	setp.eq.s32	%p153, %r370, 0;
	@%p153 bra 	BB0_153;

	mov.u64 	%rd224, image_HDR;
	cvta.global.u64 	%rd213, %rd224;
	mov.u32 	%r374, 8;
	mov.u64 	%rd223, 0;
	// inline asm
	call (%rd212), _rt_buffer_get_64, (%rd213, %r112, %r374, %rd22, %rd23, %rd223, %rd223);
	// inline asm
	ld.v4.u16 	{%rs111, %rs112, %rs113, %rs114}, [%rd212];
	// inline asm
	{  cvt.f32.f16 %f1219, %rs111;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1220, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1221, %rs113;}

	// inline asm
	// inline asm
	call (%rd218), _rt_buffer_get_64, (%rd213, %r112, %r374, %rd22, %rd23, %rd223, %rd223);
	// inline asm
	add.f32 	%f1222, %f1219, 0f00000000;
	add.f32 	%f1223, %f1220, 0f00000000;
	add.f32 	%f1224, %f1221, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1224;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1223;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f1222;}

	// inline asm
	mov.u16 	%rs115, 0;
	st.v4.u16 	[%rd218], {%rs108, %rs109, %rs110, %rs115};
	bra.uni 	BB0_154;

BB0_3:
	ld.global.v2.u32 	{%r131, %r132}, [pixelID];
	cvt.u64.u32	%rd33, %r131;
	cvt.u64.u32	%rd34, %r132;
	mov.u64 	%rd43, uvpos;
	cvta.global.u64 	%rd32, %rd43;
	mov.u32 	%r128, 12;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r112, %r128, %rd33, %rd34, %rd29, %rd29);
	// inline asm
	ld.f32 	%f9, [%rd31+8];
	ld.f32 	%f8, [%rd31+4];
	ld.f32 	%f7, [%rd31];
	mul.f32 	%f369, %f7, 0f3456BF95;
	mul.f32 	%f370, %f8, 0f3456BF95;
	mul.f32 	%f371, %f9, 0f3456BF95;
	abs.f32 	%f10, %f1256;
	div.rn.f32 	%f372, %f369, %f10;
	abs.f32 	%f373, %f1257;
	div.rn.f32 	%f374, %f370, %f373;
	abs.f32 	%f11, %f1258;
	div.rn.f32 	%f375, %f371, %f11;
	abs.f32 	%f376, %f372;
	abs.f32 	%f377, %f374;
	abs.f32 	%f378, %f375;
	mov.f32 	%f379, 0f38D1B717;
	max.f32 	%f380, %f376, %f379;
	max.f32 	%f381, %f377, %f379;
	max.f32 	%f382, %f378, %f379;
	fma.rn.f32 	%f12, %f1256, %f380, %f7;
	fma.rn.f32 	%f13, %f1257, %f381, %f8;
	fma.rn.f32 	%f14, %f1258, %f382, %f9;
	ld.global.v2.u32 	{%r135, %r136}, [pixelID];
	cvt.u64.u32	%rd39, %r135;
	cvt.u64.u32	%rd40, %r136;
	mov.u64 	%rd44, uvtangent;
	cvta.global.u64 	%rd38, %rd44;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r112, %r113, %rd39, %rd40, %rd29, %rd29);
	// inline asm
	ld.u32 	%r4, [%rd37];
	shr.u32 	%r5, %r4, 16;
	cvt.u16.u32	%rs13, %r5;
	and.b16  	%rs14, %rs13, 255;
	cvt.u16.u32	%rs15, %r4;
	or.b16  	%rs16, %rs15, %rs14;
	setp.eq.s16	%p13, %rs16, 0;
	mov.f32 	%f50, 0f00000000;
	mov.f32 	%f1259, %f50;
	mov.f32 	%f1260, %f50;
	mov.f32 	%f1261, %f50;
	@%p13 bra 	BB0_5;

	ld.u8 	%rs17, [%rd37+1];
	and.b16  	%rs19, %rs15, 255;
	cvt.rn.f32.u16	%f383, %rs19;
	div.rn.f32 	%f384, %f383, 0f437F0000;
	fma.rn.f32 	%f385, %f384, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f386, %rs17;
	div.rn.f32 	%f387, %f386, 0f437F0000;
	fma.rn.f32 	%f388, %f387, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f389, %rs14;
	div.rn.f32 	%f390, %f389, 0f437F0000;
	fma.rn.f32 	%f391, %f390, 0f40000000, 0fBF800000;
	mul.f32 	%f392, %f388, %f388;
	fma.rn.f32 	%f393, %f385, %f385, %f392;
	fma.rn.f32 	%f394, %f391, %f391, %f393;
	sqrt.rn.f32 	%f395, %f394;
	rcp.rn.f32 	%f396, %f395;
	mul.f32 	%f1259, %f385, %f396;
	mul.f32 	%f1260, %f388, %f396;
	mul.f32 	%f1261, %f391, %f396;

BB0_5:
	mul.f32 	%f400, %f1258, %f1260;
	mul.f32 	%f401, %f1257, %f1261;
	sub.f32 	%f402, %f401, %f400;
	mul.f32 	%f403, %f1256, %f1261;
	mul.f32 	%f404, %f1258, %f1259;
	sub.f32 	%f405, %f404, %f403;
	mul.f32 	%f406, %f1257, %f1259;
	mul.f32 	%f407, %f1256, %f1260;
	sub.f32 	%f408, %f407, %f406;
	setp.lt.u32	%p14, %r4, 16777216;
	selp.f32	%f409, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f410, %f402, %f409;
	mul.f32 	%f411, %f405, %f409;
	mul.f32 	%f412, %f408, %f409;
	mul.f32 	%f413, %f410, 0f00000000;
	mul.f32 	%f414, %f411, 0f00000000;
	mul.f32 	%f415, %f412, 0f00000000;
	fma.rn.f32 	%f416, %f1259, 0f3F5105EC, %f413;
	fma.rn.f32 	%f417, %f1260, 0f3F5105EC, %f414;
	fma.rn.f32 	%f418, %f1261, 0f3F5105EC, %f415;
	mul.f32 	%f21, %f1256, 0f3F13CD3A;
	add.f32 	%f22, %f21, %f416;
	mul.f32 	%f23, %f1257, 0f3F13CD3A;
	add.f32 	%f24, %f23, %f417;
	mul.f32 	%f25, %f1258, 0f3F13CD3A;
	add.f32 	%f26, %f25, %f418;
	ld.global.v2.u32 	{%r141, %r142}, [pixelID];
	cvt.u64.u32	%rd47, %r141;
	cvt.u64.u32	%rd48, %r142;
	// inline asm
	call (%rd45), _rt_buffer_get_64, (%rd38, %r112, %r113, %rd47, %rd48, %rd29, %rd29);
	// inline asm
	ld.u32 	%r6, [%rd45];
	shr.u32 	%r7, %r6, 16;
	cvt.u16.u32	%rs22, %r7;
	and.b16  	%rs23, %rs22, 255;
	cvt.u16.u32	%rs24, %r6;
	or.b16  	%rs25, %rs24, %rs23;
	setp.eq.s16	%p15, %rs25, 0;
	mov.f32 	%f1262, %f50;
	mov.f32 	%f1263, %f50;
	mov.f32 	%f1264, %f50;
	@%p15 bra 	BB0_7;

	ld.u8 	%rs26, [%rd45+1];
	and.b16  	%rs28, %rs24, 255;
	cvt.rn.f32.u16	%f419, %rs28;
	div.rn.f32 	%f420, %f419, 0f437F0000;
	fma.rn.f32 	%f421, %f420, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f422, %rs26;
	div.rn.f32 	%f423, %f422, 0f437F0000;
	fma.rn.f32 	%f424, %f423, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f425, %rs23;
	div.rn.f32 	%f426, %f425, 0f437F0000;
	fma.rn.f32 	%f427, %f426, 0f40000000, 0fBF800000;
	mul.f32 	%f428, %f424, %f424;
	fma.rn.f32 	%f429, %f421, %f421, %f428;
	fma.rn.f32 	%f430, %f427, %f427, %f429;
	sqrt.rn.f32 	%f431, %f430;
	rcp.rn.f32 	%f432, %f431;
	mul.f32 	%f1262, %f421, %f432;
	mul.f32 	%f1263, %f424, %f432;
	mul.f32 	%f1264, %f427, %f432;

BB0_7:
	mul.f32 	%f436, %f1258, %f1263;
	mul.f32 	%f437, %f1257, %f1264;
	sub.f32 	%f438, %f437, %f436;
	mul.f32 	%f439, %f1256, %f1264;
	mul.f32 	%f440, %f1258, %f1262;
	sub.f32 	%f441, %f440, %f439;
	mul.f32 	%f442, %f1257, %f1262;
	mul.f32 	%f443, %f1256, %f1263;
	sub.f32 	%f444, %f443, %f442;
	setp.lt.u32	%p16, %r6, 16777216;
	selp.f32	%f445, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f446, %f438, %f445;
	mul.f32 	%f447, %f441, %f445;
	mul.f32 	%f448, %f444, %f445;
	mul.f32 	%f449, %f446, 0f3F3504F3;
	mul.f32 	%f450, %f447, 0f3F3504F3;
	mul.f32 	%f451, %f448, 0f3F3504F3;
	fma.rn.f32 	%f452, %f1262, 0fBED105EC, %f449;
	fma.rn.f32 	%f453, %f1263, 0fBED105EC, %f450;
	fma.rn.f32 	%f454, %f1264, 0fBED105EC, %f451;
	add.f32 	%f33, %f21, %f452;
	add.f32 	%f34, %f23, %f453;
	add.f32 	%f35, %f25, %f454;
	ld.global.v2.u32 	{%r147, %r148}, [pixelID];
	cvt.u64.u32	%rd54, %r147;
	cvt.u64.u32	%rd55, %r148;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd38, %r112, %r113, %rd54, %rd55, %rd29, %rd29);
	// inline asm
	ld.u32 	%r8, [%rd52];
	shr.u32 	%r9, %r8, 16;
	cvt.u16.u32	%rs31, %r9;
	and.b16  	%rs32, %rs31, 255;
	cvt.u16.u32	%rs33, %r8;
	or.b16  	%rs34, %rs33, %rs32;
	setp.eq.s16	%p17, %rs34, 0;
	mov.f32 	%f1265, %f50;
	mov.f32 	%f1266, %f50;
	mov.f32 	%f1267, %f50;
	@%p17 bra 	BB0_9;

	ld.u8 	%rs35, [%rd52+1];
	and.b16  	%rs37, %rs33, 255;
	cvt.rn.f32.u16	%f455, %rs37;
	div.rn.f32 	%f456, %f455, 0f437F0000;
	fma.rn.f32 	%f457, %f456, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f458, %rs35;
	div.rn.f32 	%f459, %f458, 0f437F0000;
	fma.rn.f32 	%f460, %f459, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f461, %rs32;
	div.rn.f32 	%f462, %f461, 0f437F0000;
	fma.rn.f32 	%f463, %f462, 0f40000000, 0fBF800000;
	mul.f32 	%f464, %f460, %f460;
	fma.rn.f32 	%f465, %f457, %f457, %f464;
	fma.rn.f32 	%f466, %f463, %f463, %f465;
	sqrt.rn.f32 	%f467, %f466;
	rcp.rn.f32 	%f468, %f467;
	mul.f32 	%f1265, %f457, %f468;
	mul.f32 	%f1266, %f460, %f468;
	mul.f32 	%f1267, %f463, %f468;

BB0_9:
	mul.f32 	%f482, %f1258, %f1266;
	mul.f32 	%f483, %f1257, %f1267;
	sub.f32 	%f484, %f483, %f482;
	mul.f32 	%f485, %f1256, %f1267;
	mul.f32 	%f486, %f1258, %f1265;
	sub.f32 	%f487, %f486, %f485;
	mul.f32 	%f488, %f1257, %f1265;
	mul.f32 	%f489, %f1256, %f1266;
	sub.f32 	%f490, %f489, %f488;
	setp.lt.u32	%p19, %r8, 16777216;
	selp.f32	%f491, 0fBF800000, 0f3F800000, %p19;
	mul.f32 	%f492, %f484, %f491;
	mul.f32 	%f493, %f487, %f491;
	mul.f32 	%f494, %f490, %f491;
	mul.f32 	%f495, %f492, 0fBF3504F3;
	mul.f32 	%f496, %f493, 0fBF3504F3;
	mul.f32 	%f497, %f494, 0fBF3504F3;
	fma.rn.f32 	%f498, %f1265, 0fBED105EC, %f495;
	fma.rn.f32 	%f499, %f1266, 0fBED105EC, %f496;
	fma.rn.f32 	%f500, %f1267, 0fBED105EC, %f497;
	add.f32 	%f42, %f21, %f498;
	add.f32 	%f43, %f23, %f499;
	add.f32 	%f44, %f25, %f500;
	ld.global.v2.u32 	{%r154, %r155}, [pixelID];
	cvt.u64.u32	%rd61, %r154;
	cvt.u64.u32	%rd62, %r155;
	mov.u64 	%rd65, rnd_seeds;
	cvta.global.u64 	%rd60, %rd65;
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd60, %r112, %r113, %rd61, %rd62, %rd29, %rd29);
	// inline asm
	ld.u32 	%r158, [%rd59];
	mad.lo.s32 	%r10, %r158, 1664525, 1013904223;
	ld.global.u32 	%r159, [lightMeshBufferSize];
	setp.eq.s32	%p20, %r159, 0;
	mov.pred 	%p18, 0;
	mov.u32 	%r12, 0;
	@%p20 bra 	BB0_10;

	ld.global.f32 	%f45, [lightPointSize];
	mul.f32 	%f46, %f12, 0f3456BF95;
	mul.f32 	%f47, %f13, 0f3456BF95;
	mul.f32 	%f48, %f14, 0f3456BF95;
	and.b32  	%r162, %r10, 16777215;
	cvt.rn.f32.u32	%f514, %r162;
	mul.f32 	%f515, %f514, 0fB3800000;
	fma.rn.f32 	%f49, %f515, 0f3F333333, 0f3F800000;
	mov.f32 	%f50, 0f00000000;
	mov.u32 	%r413, 0;
	abs.f32 	%f638, %f47;
	abs.f32 	%f639, %f46;
	max.f32 	%f640, %f639, %f638;
	abs.f32 	%f641, %f48;
	max.f32 	%f642, %f640, %f641;
	mov.u32 	%r12, %r413;
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;
	mov.f32 	%f55, %f50;
	mov.f32 	%f56, %f50;
	mov.f32 	%f57, %f50;
	mov.f32 	%f58, %f50;
	mov.f32 	%f59, %f50;
	mov.f32 	%f60, %f50;
	mov.f32 	%f61, %f50;
	mov.f32 	%f62, %f50;

BB0_12:
	mul.lo.s32 	%r13, %r413, 3;
	cvt.s64.s32	%rd68, %r13;
	mov.u64 	%rd72, lightMeshBuffer;
	cvta.global.u64 	%rd67, %rd72;
	mov.u32 	%r163, 1;
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd67, %r163, %r128, %rd68, %rd29, %rd29, %rd29);
	// inline asm
	ld.f32 	%f516, [%rd66];
	sub.f32 	%f517, %f516, %f7;
	ld.f32 	%f518, [%rd66+4];
	sub.f32 	%f519, %f518, %f8;
	ld.f32 	%f520, [%rd66+8];
	sub.f32 	%f521, %f520, %f9;
	mul.f32 	%f522, %f519, %f519;
	fma.rn.f32 	%f523, %f517, %f517, %f522;
	fma.rn.f32 	%f524, %f521, %f521, %f523;
	sqrt.rn.f32 	%f63, %f524;
	rcp.rn.f32 	%f525, %f63;
	mul.f32 	%f64, %f517, %f525;
	mul.f32 	%f65, %f519, %f525;
	mul.f32 	%f66, %f521, %f525;
	mul.f32 	%f526, %f1257, %f65;
	fma.rn.f32 	%f527, %f1256, %f64, %f526;
	fma.rn.f32 	%f67, %f1258, %f66, %f527;
	setp.leu.f32	%p21, %f67, 0f00000000;
	@%p21 bra 	BB0_28;

	mul.f32 	%f528, %f63, %f63;
	mul.f32 	%f529, %f528, 0f40C90FDB;
	div.rn.f32 	%f530, %f45, %f529;
	add.f32 	%f68, %f530, %f530;
	setp.gt.f32	%p23, %f68, %f49;
	ld.global.u32 	%r165, [samples];
	setp.ne.s32	%p24, %r165, 0;
	and.pred  	%p25, %p24, %p23;
	mov.pred 	%p157, -1;
	@%p25 bra 	BB0_30;

	ld.global.f32 	%f533, [lightInvCutoff];
	mul.f32 	%f69, %f63, %f533;
	mov.f32 	%f537, 0f40800000;
	abs.f32 	%f71, %f69;
	setp.lt.f32	%p26, %f71, 0f00800000;
	mul.f32 	%f539, %f71, 0f4B800000;
	selp.f32	%f540, 0fC3170000, 0fC2FE0000, %p26;
	selp.f32	%f541, %f539, %f71, %p26;
	mov.b32 	 %r166, %f541;
	and.b32  	%r167, %r166, 8388607;
	or.b32  	%r168, %r167, 1065353216;
	mov.b32 	 %f542, %r168;
	shr.u32 	%r169, %r166, 23;
	cvt.rn.f32.u32	%f543, %r169;
	add.f32 	%f544, %f540, %f543;
	setp.gt.f32	%p27, %f542, 0f3FB504F3;
	mul.f32 	%f545, %f542, 0f3F000000;
	add.f32 	%f546, %f544, 0f3F800000;
	selp.f32	%f547, %f545, %f542, %p27;
	selp.f32	%f548, %f546, %f544, %p27;
	add.f32 	%f549, %f547, 0fBF800000;
	add.f32 	%f532, %f547, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f531,%f532;
	// inline asm
	add.f32 	%f550, %f549, %f549;
	mul.f32 	%f551, %f531, %f550;
	mul.f32 	%f552, %f551, %f551;
	mov.f32 	%f553, 0f3C4CAF63;
	mov.f32 	%f554, 0f3B18F0FE;
	fma.rn.f32 	%f555, %f554, %f552, %f553;
	mov.f32 	%f556, 0f3DAAAABD;
	fma.rn.f32 	%f557, %f555, %f552, %f556;
	mul.rn.f32 	%f558, %f557, %f552;
	mul.rn.f32 	%f559, %f558, %f551;
	sub.f32 	%f560, %f549, %f551;
	neg.f32 	%f561, %f551;
	add.f32 	%f562, %f560, %f560;
	fma.rn.f32 	%f563, %f561, %f549, %f562;
	mul.rn.f32 	%f564, %f531, %f563;
	add.f32 	%f565, %f559, %f551;
	sub.f32 	%f566, %f551, %f565;
	add.f32 	%f567, %f559, %f566;
	add.f32 	%f568, %f564, %f567;
	add.f32 	%f569, %f565, %f568;
	sub.f32 	%f570, %f565, %f569;
	add.f32 	%f571, %f568, %f570;
	mov.f32 	%f572, 0f3F317200;
	mul.rn.f32 	%f573, %f548, %f572;
	mov.f32 	%f574, 0f35BFBE8E;
	mul.rn.f32 	%f575, %f548, %f574;
	add.f32 	%f576, %f573, %f569;
	sub.f32 	%f577, %f573, %f576;
	add.f32 	%f578, %f569, %f577;
	add.f32 	%f579, %f571, %f578;
	add.f32 	%f580, %f575, %f579;
	add.f32 	%f581, %f576, %f580;
	sub.f32 	%f582, %f576, %f581;
	add.f32 	%f583, %f580, %f582;
	mul.rn.f32 	%f584, %f537, %f581;
	neg.f32 	%f585, %f584;
	fma.rn.f32 	%f586, %f537, %f581, %f585;
	fma.rn.f32 	%f587, %f537, %f583, %f586;
	mov.f32 	%f588, 0f00000000;
	fma.rn.f32 	%f589, %f588, %f581, %f587;
	add.rn.f32 	%f590, %f584, %f589;
	neg.f32 	%f591, %f590;
	add.rn.f32 	%f592, %f584, %f591;
	add.rn.f32 	%f593, %f592, %f589;
	mov.b32 	 %r170, %f590;
	setp.eq.s32	%p28, %r170, 1118925336;
	add.s32 	%r171, %r170, -1;
	mov.b32 	 %f594, %r171;
	add.f32 	%f595, %f593, 0f37000000;
	selp.f32	%f596, %f594, %f590, %p28;
	selp.f32	%f72, %f595, %f593, %p28;
	mul.f32 	%f597, %f596, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f598, %f597;
	mov.f32 	%f599, 0fBF317200;
	fma.rn.f32 	%f600, %f598, %f599, %f596;
	mov.f32 	%f601, 0fB5BFBE8E;
	fma.rn.f32 	%f602, %f598, %f601, %f600;
	mul.f32 	%f603, %f602, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f604, %f603;
	add.f32 	%f605, %f598, 0f00000000;
	ex2.approx.f32 	%f606, %f605;
	mul.f32 	%f607, %f604, %f606;
	setp.lt.f32	%p29, %f596, 0fC2D20000;
	selp.f32	%f608, 0f00000000, %f607, %p29;
	setp.gt.f32	%p30, %f596, 0f42D20000;
	selp.f32	%f1281, 0f7F800000, %f608, %p30;
	setp.eq.f32	%p31, %f1281, 0f7F800000;
	@%p31 bra 	BB0_16;

	fma.rn.f32 	%f1281, %f1281, %f72, %f1281;

BB0_16:
	mov.f32 	%f1252, 0f40000000;
	cvt.rzi.f32.f32	%f1251, %f1252;
	add.f32 	%f1250, %f1251, %f1251;
	mov.f32 	%f1249, 0f40800000;
	sub.f32 	%f1248, %f1249, %f1250;
	abs.f32 	%f1247, %f1248;
	setp.lt.f32	%p32, %f69, 0f00000000;
	setp.eq.f32	%p33, %f1247, 0f3F800000;
	and.pred  	%p1, %p32, %p33;
	mov.b32 	 %r172, %f1281;
	xor.b32  	%r173, %r172, -2147483648;
	mov.b32 	 %f609, %r173;
	selp.f32	%f1283, %f609, %f1281, %p1;
	setp.eq.f32	%p34, %f69, 0f00000000;
	@%p34 bra 	BB0_19;
	bra.uni 	BB0_17;

BB0_19:
	add.f32 	%f612, %f69, %f69;
	selp.f32	%f1283, %f612, 0f00000000, %p33;
	bra.uni 	BB0_20;

BB0_17:
	setp.geu.f32	%p35, %f69, 0f00000000;
	@%p35 bra 	BB0_20;

	mov.f32 	%f1255, 0f40800000;
	cvt.rzi.f32.f32	%f611, %f1255;
	setp.neu.f32	%p36, %f611, 0f40800000;
	selp.f32	%f1283, 0f7FFFFFFF, %f1283, %p36;

BB0_20:
	add.f32 	%f613, %f71, 0f40800000;
	mov.b32 	 %r174, %f613;
	setp.lt.s32	%p38, %r174, 2139095040;
	@%p38 bra 	BB0_25;

	setp.gtu.f32	%p39, %f71, 0f7F800000;
	@%p39 bra 	BB0_24;
	bra.uni 	BB0_22;

BB0_24:
	add.f32 	%f1283, %f69, 0f40800000;
	bra.uni 	BB0_25;

BB0_22:
	setp.neu.f32	%p40, %f71, 0f7F800000;
	@%p40 bra 	BB0_25;

	selp.f32	%f1283, 0fFF800000, 0f7F800000, %p1;

BB0_25:
	mov.u32 	%r399, 1;
	mov.u64 	%rd293, lightMeshBuffer;
	cvta.global.u64 	%rd292, %rd293;
	mul.lo.s32 	%r398, %r413, 3;
	mov.f32 	%f614, 0f3F800000;
	sub.f32 	%f615, %f614, %f1283;
	setp.eq.f32	%p41, %f69, 0f3F800000;
	selp.f32	%f616, 0f00000000, %f615, %p41;
	cvt.sat.f32.f32	%f617, %f616;
	mul.f32 	%f618, %f68, %f617;
	add.s32 	%r177, %r398, 1;
	cvt.s64.s32	%rd75, %r177;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd292, %r399, %r128, %rd75, %rd29, %rd29, %rd29);
	// inline asm
	ld.f32 	%f619, [%rd73];
	mul.f32 	%f620, %f64, %f619;
	ld.f32 	%f621, [%rd73+4];
	mul.f32 	%f622, %f65, %f621;
	neg.f32 	%f623, %f622;
	sub.f32 	%f624, %f623, %f620;
	ld.f32 	%f625, [%rd73+8];
	mul.f32 	%f626, %f66, %f625;
	sub.f32 	%f627, %f624, %f626;
	cvt.sat.f32.f32	%f628, %f627;
	mul.f32 	%f83, %f618, %f628;
	setp.leu.f32	%p42, %f83, 0f3727C5AC;
	@%p42 bra 	BB0_27;

	mov.u32 	%r412, 1;
	mov.u64 	%rd295, lightMeshBuffer;
	cvta.global.u64 	%rd294, %rd295;
	mul.lo.s32 	%r411, %r413, 3;
	cvt.sat.f32.f32	%f637, %f67;
	add.u64 	%rd80, %SP, 12;
	cvta.to.local.u64 	%rd87, %rd80;
	max.f32 	%f635, %f642, %f379;
	sub.f32 	%f636, %f63, %f635;
	mov.u32 	%r183, 1065353216;
	st.local.u32 	[%rd87], %r183;
	ld.global.u32 	%r178, [root];
	// inline asm
	call _rt_trace_64, (%r178, %f12, %f13, %f14, %f64, %f65, %f66, %r412, %f635, %f636, %rd80, %r113);
	// inline asm
	add.s32 	%r184, %r411, 2;
	cvt.s64.s32	%rd83, %r184;
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd294, %r412, %r128, %rd83, %rd29, %rd29, %rd29);
	// inline asm
	ld.f32 	%f644, [%rd81];
	ld.local.f32 	%f645, [%rd87];
	mul.f32 	%f646, %f645, %f644;
	ld.f32 	%f647, [%rd81+4];
	mul.f32 	%f648, %f645, %f647;
	ld.f32 	%f649, [%rd81+8];
	mul.f32 	%f650, %f645, %f649;
	mul.f32 	%f651, %f83, %f646;
	mul.f32 	%f652, %f83, %f648;
	mul.f32 	%f653, %f83, %f650;
	fma.rn.f32 	%f53, %f637, %f651, %f53;
	fma.rn.f32 	%f52, %f637, %f652, %f52;
	fma.rn.f32 	%f51, %f637, %f653, %f51;
	mul.f32 	%f654, %f24, %f65;
	fma.rn.f32 	%f655, %f22, %f64, %f654;
	fma.rn.f32 	%f656, %f26, %f66, %f655;
	cvt.sat.f32.f32	%f657, %f656;
	fma.rn.f32 	%f56, %f651, %f657, %f56;
	fma.rn.f32 	%f55, %f652, %f657, %f55;
	fma.rn.f32 	%f54, %f657, %f653, %f54;
	mul.f32 	%f658, %f34, %f65;
	fma.rn.f32 	%f659, %f33, %f64, %f658;
	fma.rn.f32 	%f660, %f35, %f66, %f659;
	cvt.sat.f32.f32	%f661, %f660;
	fma.rn.f32 	%f59, %f651, %f661, %f59;
	fma.rn.f32 	%f58, %f652, %f661, %f58;
	fma.rn.f32 	%f57, %f653, %f661, %f57;
	mul.f32 	%f662, %f43, %f65;
	fma.rn.f32 	%f663, %f42, %f64, %f662;
	fma.rn.f32 	%f664, %f44, %f66, %f663;
	cvt.sat.f32.f32	%f665, %f664;
	fma.rn.f32 	%f62, %f651, %f665, %f62;
	fma.rn.f32 	%f61, %f652, %f665, %f61;
	fma.rn.f32 	%f60, %f653, %f665, %f60;
	add.f32 	%f50, %f50, %f645;

BB0_27:
	add.s32 	%r12, %r12, 1;

BB0_28:
	ld.global.u32 	%r185, [lightMeshBufferSize];
	add.s32 	%r413, %r413, 1;
	setp.lt.u32	%p44, %r413, %r185;
	@%p44 bra 	BB0_12;
	bra.uni 	BB0_29;

BB0_10:
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;
	mov.f32 	%f55, %f50;
	mov.f32 	%f56, %f50;
	mov.f32 	%f57, %f50;
	mov.f32 	%f58, %f50;
	mov.f32 	%f59, %f50;
	mov.f32 	%f60, %f50;
	mov.f32 	%f61, %f50;
	mov.f32 	%f62, %f50;

BB0_29:
	mov.pred 	%p157, %p18;

BB0_30:
	cvt.rn.f32.s32	%f666, %r12;
	mov.f32 	%f667, 0f3F800000;
	max.f32 	%f668, %f666, %f667;
	rcp.rn.f32 	%f669, %f668;
	mul.f32 	%f1392, %f53, %f669;
	mul.f32 	%f1393, %f52, %f669;
	mul.f32 	%f1394, %f51, %f669;
	div.rn.f32 	%f1395, %f50, %f668;
	mul.f32 	%f1389, %f56, %f669;
	mul.f32 	%f1390, %f55, %f669;
	mul.f32 	%f1391, %f54, %f669;
	mul.f32 	%f1386, %f59, %f669;
	mul.f32 	%f1387, %f58, %f669;
	mul.f32 	%f1388, %f57, %f669;
	mul.f32 	%f1383, %f62, %f669;
	mul.f32 	%f1384, %f61, %f669;
	mul.f32 	%f1385, %f60, %f669;
	@!%p157 bra 	BB0_85;
	bra.uni 	BB0_31;

BB0_31:
	abs.f32 	%f1254, %f1258;
	abs.f32 	%f1253, %f1256;
	setp.gt.f32	%p45, %f1253, %f1254;
	neg.f32 	%f682, %f1257;
	selp.f32	%f683, %f682, 0f00000000, %p45;
	neg.f32 	%f684, %f1258;
	selp.f32	%f685, %f1256, %f684, %p45;
	selp.f32	%f686, 0f00000000, %f1257, %p45;
	mul.f32 	%f687, %f685, %f685;
	fma.rn.f32 	%f688, %f683, %f683, %f687;
	fma.rn.f32 	%f689, %f686, %f686, %f688;
	sqrt.rn.f32 	%f690, %f689;
	rcp.rn.f32 	%f691, %f690;
	mul.f32 	%f149, %f683, %f691;
	mul.f32 	%f150, %f685, %f691;
	mul.f32 	%f151, %f686, %f691;
	ld.global.u32 	%r417, [samples];
	mov.f32 	%f681, 0f00000000;
	setp.lt.s32	%p46, %r417, 1;
	@%p46 bra 	BB0_32;

	mad.lo.s32 	%r443, %r158, 1664525, 1013904223;
	cvt.rn.f32.s32	%f704, %r417;
	rcp.rn.f32 	%f152, %f704;
	add.u64 	%rd89, %SP, 16;
	cvta.to.local.u64 	%rd5, %rd89;
	mul.f32 	%f153, %f12, 0f3456BF95;
	mul.f32 	%f154, %f13, 0f3456BF95;
	mul.f32 	%f155, %f14, 0f3456BF95;
	mul.f32 	%f705, %f1256, %f150;
	mul.f32 	%f706, %f1257, %f149;
	sub.f32 	%f156, %f706, %f705;
	mul.f32 	%f707, %f1258, %f149;
	mul.f32 	%f708, %f1256, %f151;
	sub.f32 	%f157, %f708, %f707;
	mul.f32 	%f709, %f1257, %f151;
	mul.f32 	%f710, %f1258, %f150;
	sub.f32 	%f158, %f710, %f709;
	mov.f32 	%f1359, 0f00000000;
	mov.u32 	%r418, 0;
	abs.f32 	%f711, %f154;
	abs.f32 	%f712, %f153;
	max.f32 	%f713, %f712, %f711;
	abs.f32 	%f714, %f155;
	max.f32 	%f715, %f713, %f714;
	mov.f32 	%f1360, %f1359;
	mov.f32 	%f1361, %f1359;
	mov.f32 	%f1362, %f1359;
	mov.f32 	%f1363, %f1359;
	mov.f32 	%f1364, %f1359;
	mov.f32 	%f1365, %f1359;
	mov.f32 	%f1366, %f1359;
	mov.f32 	%f1367, %f1359;
	mov.f32 	%f1368, %f1359;
	mov.f32 	%f1369, %f1359;
	mov.f32 	%f1370, %f1359;

BB0_34:
	setp.lt.s32	%p47, %r417, 1;
	@%p47 bra 	BB0_83;

	cvt.rn.f32.s32	%f171, %r418;
	max.f32 	%f172, %f715, %f379;
	add.u64 	%rd90, %SP, 0;
	cvta.to.local.u64 	%rd6, %rd90;
	mov.u32 	%r420, 0;

BB0_36:
	mad.lo.s32 	%r188, %r443, 1664525, 1013904223;
	and.b32  	%r189, %r188, 16777215;
	cvt.rn.f32.u32	%f717, %r189;
	fma.rn.f32 	%f718, %f717, 0f33800000, %f171;
	mul.f32 	%f185, %f152, %f718;
	mad.lo.s32 	%r443, %r188, 1664525, 1013904223;
	and.b32  	%r190, %r443, 16777215;
	cvt.rn.f32.u32	%f719, %r190;
	cvt.rn.f32.s32	%f720, %r420;
	fma.rn.f32 	%f721, %f719, 0f33800000, %f720;
	mul.f32 	%f722, %f152, %f721;
	mul.f32 	%f723, %f185, %f185;
	sub.f32 	%f725, %f667, %f723;
	mov.f32 	%f726, 0f00000000;
	max.f32 	%f727, %f726, %f725;
	sqrt.rn.f32 	%f186, %f727;
	mul.f32 	%f1353, %f722, 0f40C90FDB;
	abs.f32 	%f188, %f1353;
	setp.neu.f32	%p48, %f188, 0f7F800000;
	mov.f32 	%f1347, %f1353;
	@%p48 bra 	BB0_38;

	mul.rn.f32 	%f1347, %f1353, %f726;

BB0_38:
	mul.f32 	%f729, %f1347, 0f3F22F983;
	cvt.rni.s32.f32	%r431, %f729;
	cvt.rn.f32.s32	%f730, %r431;
	neg.f32 	%f731, %f730;
	mov.f32 	%f732, 0f3FC90FDA;
	fma.rn.f32 	%f733, %f731, %f732, %f1347;
	mov.f32 	%f734, 0f33A22168;
	fma.rn.f32 	%f735, %f731, %f734, %f733;
	mov.f32 	%f736, 0f27C234C5;
	fma.rn.f32 	%f1348, %f731, %f736, %f735;
	abs.f32 	%f737, %f1347;
	setp.leu.f32	%p49, %f737, 0f47CE4780;
	@%p49 bra 	BB0_49;

	mov.b32 	 %r26, %f1347;
	shr.u32 	%r27, %r26, 23;
	shl.b32 	%r193, %r26, 8;
	or.b32  	%r28, %r193, -2147483648;
	mov.u32 	%r422, 0;
	mov.u64 	%rd297, 0;
	mov.u64 	%rd296, %rd5;
	mov.u32 	%r423, %r422;

BB0_40:
	.pragma "nounroll";
	shl.b64 	%rd92, %rd297, 2;
	mov.u64 	%rd93, __cudart_i2opi_f;
	add.s64 	%rd94, %rd93, %rd92;
	ld.const.u32 	%r196, [%rd94];
	// inline asm
	{
	mad.lo.cc.u32   %r194, %r196, %r28, %r423;
	madc.hi.u32     %r423, %r196, %r28,  0;
	}
	// inline asm
	st.local.u32 	[%rd296], %r194;
	add.s32 	%r422, %r422, 1;
	cvt.s64.s32	%rd297, %r422;
	mul.wide.s32 	%rd95, %r422, 4;
	add.s64 	%rd296, %rd5, %rd95;
	setp.ne.s32	%p50, %r422, 6;
	@%p50 bra 	BB0_40;

	and.b32  	%r199, %r27, 255;
	add.s32 	%r200, %r199, -128;
	shr.u32 	%r201, %r200, 5;
	and.b32  	%r33, %r26, -2147483648;
	st.local.u32 	[%rd5+24], %r423;
	mov.u32 	%r202, 6;
	sub.s32 	%r203, %r202, %r201;
	mul.wide.s32 	%rd96, %r203, 4;
	add.s64 	%rd12, %rd5, %rd96;
	ld.local.u32 	%r424, [%rd12];
	ld.local.u32 	%r425, [%rd12+-4];
	and.b32  	%r36, %r27, 31;
	setp.eq.s32	%p51, %r36, 0;
	@%p51 bra 	BB0_43;

	mov.u32 	%r204, 32;
	sub.s32 	%r205, %r204, %r36;
	shr.u32 	%r206, %r425, %r205;
	shl.b32 	%r207, %r424, %r36;
	add.s32 	%r424, %r206, %r207;
	ld.local.u32 	%r208, [%rd12+-8];
	shr.u32 	%r209, %r208, %r205;
	shl.b32 	%r210, %r425, %r36;
	add.s32 	%r425, %r209, %r210;

BB0_43:
	shr.u32 	%r211, %r425, 30;
	shl.b32 	%r212, %r424, 2;
	add.s32 	%r426, %r211, %r212;
	shl.b32 	%r42, %r425, 2;
	shr.u32 	%r213, %r426, 31;
	shr.u32 	%r214, %r424, 30;
	add.s32 	%r43, %r213, %r214;
	setp.eq.s32	%p52, %r213, 0;
	@%p52 bra 	BB0_44;
	bra.uni 	BB0_45;

BB0_44:
	mov.u32 	%r427, %r33;
	mov.u32 	%r428, %r42;
	bra.uni 	BB0_46;

BB0_45:
	not.b32 	%r215, %r426;
	neg.s32 	%r428, %r42;
	setp.eq.s32	%p53, %r42, 0;
	selp.u32	%r216, 1, 0, %p53;
	add.s32 	%r426, %r216, %r215;
	xor.b32  	%r427, %r33, -2147483648;

BB0_46:
	clz.b32 	%r430, %r426;
	setp.eq.s32	%p54, %r430, 0;
	shl.b32 	%r217, %r426, %r430;
	mov.u32 	%r218, 32;
	sub.s32 	%r219, %r218, %r430;
	shr.u32 	%r220, %r428, %r219;
	add.s32 	%r221, %r220, %r217;
	selp.b32	%r51, %r426, %r221, %p54;
	mov.u32 	%r222, -921707870;
	mul.hi.u32 	%r429, %r51, %r222;
	setp.eq.s32	%p55, %r33, 0;
	neg.s32 	%r223, %r43;
	selp.b32	%r431, %r43, %r223, %p55;
	setp.lt.s32	%p56, %r429, 1;
	@%p56 bra 	BB0_48;

	mul.lo.s32 	%r224, %r51, -921707870;
	shr.u32 	%r225, %r224, 31;
	shl.b32 	%r226, %r429, 1;
	add.s32 	%r429, %r225, %r226;
	add.s32 	%r430, %r430, 1;

BB0_48:
	mov.u32 	%r227, 126;
	sub.s32 	%r228, %r227, %r430;
	shl.b32 	%r229, %r228, 23;
	add.s32 	%r230, %r429, 1;
	shr.u32 	%r231, %r230, 7;
	add.s32 	%r232, %r231, 1;
	shr.u32 	%r233, %r232, 1;
	add.s32 	%r234, %r233, %r229;
	or.b32  	%r235, %r234, %r427;
	mov.b32 	 %f1348, %r235;

BB0_49:
	mul.rn.f32 	%f194, %f1348, %f1348;
	add.s32 	%r59, %r431, 1;
	and.b32  	%r60, %r59, 1;
	setp.eq.s32	%p57, %r60, 0;
	@%p57 bra 	BB0_51;
	bra.uni 	BB0_50;

BB0_51:
	mov.f32 	%f740, 0f3C08839E;
	mov.f32 	%f741, 0fB94CA1F9;
	fma.rn.f32 	%f1349, %f741, %f194, %f740;
	bra.uni 	BB0_52;

BB0_50:
	mov.f32 	%f738, 0fBAB6061A;
	mov.f32 	%f739, 0f37CCF5CE;
	fma.rn.f32 	%f1349, %f739, %f194, %f738;

BB0_52:
	@%p57 bra 	BB0_54;
	bra.uni 	BB0_53;

BB0_54:
	mov.f32 	%f745, 0fBE2AAAA3;
	fma.rn.f32 	%f746, %f1349, %f194, %f745;
	fma.rn.f32 	%f1350, %f746, %f194, %f726;
	bra.uni 	BB0_55;

BB0_53:
	mov.f32 	%f742, 0f3D2AAAA5;
	fma.rn.f32 	%f743, %f1349, %f194, %f742;
	mov.f32 	%f744, 0fBF000000;
	fma.rn.f32 	%f1350, %f743, %f194, %f744;

BB0_55:
	fma.rn.f32 	%f1351, %f1350, %f1348, %f1348;
	@%p57 bra 	BB0_57;

	fma.rn.f32 	%f1351, %f1350, %f194, %f667;

BB0_57:
	and.b32  	%r236, %r59, 2;
	setp.eq.s32	%p60, %r236, 0;
	@%p60 bra 	BB0_59;

	mov.f32 	%f750, 0fBF800000;
	fma.rn.f32 	%f1351, %f1351, %f750, %f726;

BB0_59:
	@%p48 bra 	BB0_61;

	mul.rn.f32 	%f1353, %f1353, %f726;

BB0_61:
	mul.f32 	%f752, %f1353, 0f3F22F983;
	cvt.rni.s32.f32	%r441, %f752;
	cvt.rn.f32.s32	%f753, %r441;
	neg.f32 	%f754, %f753;
	fma.rn.f32 	%f756, %f754, %f732, %f1353;
	fma.rn.f32 	%f758, %f754, %f734, %f756;
	fma.rn.f32 	%f1354, %f754, %f736, %f758;
	abs.f32 	%f760, %f1353;
	setp.leu.f32	%p62, %f760, 0f47CE4780;
	@%p62 bra 	BB0_72;

	mov.b32 	 %r62, %f1353;
	shr.u32 	%r63, %r62, 23;
	shl.b32 	%r239, %r62, 8;
	or.b32  	%r64, %r239, -2147483648;
	mov.u32 	%r432, 0;
	mov.u64 	%rd298, %rd5;
	mov.u64 	%rd299, %rd29;
	mov.u32 	%r433, %r432;

BB0_63:
	.pragma "nounroll";
	shl.b64 	%rd98, %rd299, 2;
	mov.u64 	%rd99, __cudart_i2opi_f;
	add.s64 	%rd100, %rd99, %rd98;
	ld.const.u32 	%r242, [%rd100];
	// inline asm
	{
	mad.lo.cc.u32   %r240, %r242, %r64, %r433;
	madc.hi.u32     %r433, %r242, %r64,  0;
	}
	// inline asm
	st.local.u32 	[%rd298], %r240;
	add.s32 	%r432, %r432, 1;
	cvt.s64.s32	%rd299, %r432;
	mul.wide.s32 	%rd101, %r432, 4;
	add.s64 	%rd298, %rd5, %rd101;
	setp.ne.s32	%p63, %r432, 6;
	@%p63 bra 	BB0_63;

	and.b32  	%r245, %r63, 255;
	add.s32 	%r246, %r245, -128;
	shr.u32 	%r247, %r246, 5;
	and.b32  	%r69, %r62, -2147483648;
	st.local.u32 	[%rd5+24], %r433;
	mov.u32 	%r248, 6;
	sub.s32 	%r249, %r248, %r247;
	mul.wide.s32 	%rd102, %r249, 4;
	add.s64 	%rd18, %rd5, %rd102;
	ld.local.u32 	%r434, [%rd18];
	ld.local.u32 	%r435, [%rd18+-4];
	and.b32  	%r72, %r63, 31;
	setp.eq.s32	%p64, %r72, 0;
	@%p64 bra 	BB0_66;

	mov.u32 	%r250, 32;
	sub.s32 	%r251, %r250, %r72;
	shr.u32 	%r252, %r435, %r251;
	shl.b32 	%r253, %r434, %r72;
	add.s32 	%r434, %r252, %r253;
	ld.local.u32 	%r254, [%rd18+-8];
	shr.u32 	%r255, %r254, %r251;
	shl.b32 	%r256, %r435, %r72;
	add.s32 	%r435, %r255, %r256;

BB0_66:
	shr.u32 	%r257, %r435, 30;
	shl.b32 	%r258, %r434, 2;
	add.s32 	%r436, %r257, %r258;
	shl.b32 	%r78, %r435, 2;
	shr.u32 	%r259, %r436, 31;
	shr.u32 	%r260, %r434, 30;
	add.s32 	%r79, %r259, %r260;
	setp.eq.s32	%p65, %r259, 0;
	@%p65 bra 	BB0_67;
	bra.uni 	BB0_68;

BB0_67:
	mov.u32 	%r437, %r69;
	mov.u32 	%r438, %r78;
	bra.uni 	BB0_69;

BB0_68:
	not.b32 	%r261, %r436;
	neg.s32 	%r438, %r78;
	setp.eq.s32	%p66, %r78, 0;
	selp.u32	%r262, 1, 0, %p66;
	add.s32 	%r436, %r262, %r261;
	xor.b32  	%r437, %r69, -2147483648;

BB0_69:
	clz.b32 	%r440, %r436;
	setp.eq.s32	%p67, %r440, 0;
	shl.b32 	%r263, %r436, %r440;
	mov.u32 	%r264, 32;
	sub.s32 	%r265, %r264, %r440;
	shr.u32 	%r266, %r438, %r265;
	add.s32 	%r267, %r266, %r263;
	selp.b32	%r87, %r436, %r267, %p67;
	mov.u32 	%r268, -921707870;
	mul.hi.u32 	%r439, %r87, %r268;
	setp.eq.s32	%p68, %r69, 0;
	neg.s32 	%r269, %r79;
	selp.b32	%r441, %r79, %r269, %p68;
	setp.lt.s32	%p69, %r439, 1;
	@%p69 bra 	BB0_71;

	mul.lo.s32 	%r270, %r87, -921707870;
	shr.u32 	%r271, %r270, 31;
	shl.b32 	%r272, %r439, 1;
	add.s32 	%r439, %r271, %r272;
	add.s32 	%r440, %r440, 1;

BB0_71:
	mov.u32 	%r273, 126;
	sub.s32 	%r274, %r273, %r440;
	shl.b32 	%r275, %r274, 23;
	add.s32 	%r276, %r439, 1;
	shr.u32 	%r277, %r276, 7;
	add.s32 	%r278, %r277, 1;
	shr.u32 	%r279, %r278, 1;
	add.s32 	%r280, %r279, %r275;
	or.b32  	%r281, %r280, %r437;
	mov.b32 	 %f1354, %r281;

BB0_72:
	mul.rn.f32 	%f211, %f1354, %f1354;
	and.b32  	%r95, %r441, 1;
	setp.eq.s32	%p70, %r95, 0;
	@%p70 bra 	BB0_74;
	bra.uni 	BB0_73;

BB0_74:
	mov.f32 	%f763, 0f3C08839E;
	mov.f32 	%f764, 0fB94CA1F9;
	fma.rn.f32 	%f1355, %f764, %f211, %f763;
	bra.uni 	BB0_75;

BB0_73:
	mov.f32 	%f761, 0fBAB6061A;
	mov.f32 	%f762, 0f37CCF5CE;
	fma.rn.f32 	%f1355, %f762, %f211, %f761;

BB0_75:
	@%p70 bra 	BB0_77;
	bra.uni 	BB0_76;

BB0_77:
	mov.f32 	%f768, 0fBE2AAAA3;
	fma.rn.f32 	%f769, %f1355, %f211, %f768;
	fma.rn.f32 	%f1356, %f769, %f211, %f726;
	bra.uni 	BB0_78;

BB0_76:
	mov.f32 	%f765, 0f3D2AAAA5;
	fma.rn.f32 	%f766, %f1355, %f211, %f765;
	mov.f32 	%f767, 0fBF000000;
	fma.rn.f32 	%f1356, %f766, %f211, %f767;

BB0_78:
	fma.rn.f32 	%f1357, %f1356, %f1354, %f1354;
	@%p70 bra 	BB0_80;

	fma.rn.f32 	%f1357, %f1356, %f211, %f667;

BB0_80:
	and.b32  	%r282, %r441, 2;
	setp.eq.s32	%p73, %r282, 0;
	@%p73 bra 	BB0_82;

	mov.f32 	%f773, 0fBF800000;
	fma.rn.f32 	%f1357, %f1357, %f773, %f726;

BB0_82:
	mul.f32 	%f782, %f186, %f1351;
	mul.f32 	%f783, %f186, %f1357;
	mul.f32 	%f784, %f149, %f783;
	mul.f32 	%f785, %f150, %f783;
	mul.f32 	%f786, %f151, %f783;
	fma.rn.f32 	%f787, %f158, %f782, %f784;
	fma.rn.f32 	%f788, %f157, %f782, %f785;
	fma.rn.f32 	%f789, %f156, %f782, %f786;
	fma.rn.f32 	%f777, %f1256, %f185, %f787;
	fma.rn.f32 	%f778, %f1257, %f185, %f788;
	fma.rn.f32 	%f779, %f1258, %f185, %f789;
	mov.u32 	%r284, 0;
	st.local.u32 	[%rd6+8], %r284;
	st.local.u32 	[%rd6+4], %r284;
	st.local.u32 	[%rd6], %r284;
	ld.global.u32 	%r283, [root];
	mov.f32 	%f781, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r283, %f12, %f13, %f14, %f777, %f778, %f779, %r284, %f172, %f781, %rd90, %r128);
	// inline asm
	ld.local.f32 	%f790, [%rd6];
	max.f32 	%f792, %f790, %f726;
	ld.local.f32 	%f793, [%rd6+4];
	max.f32 	%f794, %f793, %f726;
	ld.local.f32 	%f795, [%rd6+8];
	max.f32 	%f796, %f795, %f726;
	mul.f32 	%f797, %f24, %f778;
	fma.rn.f32 	%f798, %f22, %f777, %f797;
	fma.rn.f32 	%f799, %f26, %f779, %f798;
	cvt.sat.f32.f32	%f800, %f799;
	fma.rn.f32 	%f1364, %f792, %f800, %f1364;
	fma.rn.f32 	%f1363, %f794, %f800, %f1363;
	fma.rn.f32 	%f1362, %f796, %f800, %f1362;
	mul.f32 	%f801, %f34, %f778;
	fma.rn.f32 	%f802, %f33, %f777, %f801;
	fma.rn.f32 	%f803, %f35, %f779, %f802;
	cvt.sat.f32.f32	%f804, %f803;
	fma.rn.f32 	%f1367, %f792, %f804, %f1367;
	fma.rn.f32 	%f1366, %f794, %f804, %f1366;
	fma.rn.f32 	%f1365, %f796, %f804, %f1365;
	mul.f32 	%f805, %f43, %f778;
	fma.rn.f32 	%f806, %f42, %f777, %f805;
	fma.rn.f32 	%f807, %f44, %f779, %f806;
	cvt.sat.f32.f32	%f808, %f807;
	fma.rn.f32 	%f1370, %f792, %f808, %f1370;
	fma.rn.f32 	%f1369, %f794, %f808, %f1369;
	fma.rn.f32 	%f1368, %f796, %f808, %f1368;
	mul.f32 	%f809, %f1257, %f778;
	fma.rn.f32 	%f810, %f1256, %f777, %f809;
	fma.rn.f32 	%f811, %f1258, %f779, %f810;
	cvt.sat.f32.f32	%f812, %f811;
	fma.rn.f32 	%f1361, %f792, %f812, %f1361;
	fma.rn.f32 	%f1360, %f794, %f812, %f1360;
	fma.rn.f32 	%f1359, %f796, %f812, %f1359;
	ld.global.u32 	%r417, [samples];
	add.s32 	%r420, %r420, 1;
	setp.lt.s32	%p74, %r420, %r417;
	@%p74 bra 	BB0_36;

BB0_83:
	add.s32 	%r418, %r418, 1;
	setp.lt.s32	%p75, %r418, %r417;
	@%p75 bra 	BB0_34;
	bra.uni 	BB0_84;

BB0_153:
	mov.u64 	%rd231, image_HDR;
	cvta.global.u64 	%rd226, %rd231;
	mov.u32 	%r376, 8;
	mov.u64 	%rd230, 0;
	// inline asm
	call (%rd225), _rt_buffer_get_64, (%rd226, %r112, %r376, %rd22, %rd23, %rd230, %rd230);
	// inline asm
	mov.f32 	%f1225, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f1225;}

	// inline asm
	mov.u16 	%rs117, 0;
	st.v4.u16 	[%rd225], {%rs116, %rs116, %rs116, %rs117};

BB0_154:
	ld.global.u32 	%r377, [additive];
	setp.eq.s32	%p154, %r377, 0;
	@%p154 bra 	BB0_156;

	mov.u64 	%rd244, image_RNM0;
	cvta.global.u64 	%rd233, %rd244;
	mov.u32 	%r381, 8;
	mov.u64 	%rd243, 0;
	// inline asm
	call (%rd232), _rt_buffer_get_64, (%rd233, %r112, %r381, %rd22, %rd23, %rd243, %rd243);
	// inline asm
	ld.v4.u16 	{%rs124, %rs125, %rs126, %rs127}, [%rd232];
	// inline asm
	{  cvt.f32.f16 %f1226, %rs124;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1227, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1228, %rs126;}

	// inline asm
	// inline asm
	call (%rd238), _rt_buffer_get_64, (%rd233, %r112, %r381, %rd22, %rd23, %rd243, %rd243);
	// inline asm
	add.f32 	%f1229, %f1226, 0f00000000;
	add.f32 	%f1230, %f1227, 0f00000000;
	add.f32 	%f1231, %f1228, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f1231;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f1230;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f1229;}

	// inline asm
	mov.u16 	%rs128, 0;
	st.v4.u16 	[%rd238], {%rs121, %rs122, %rs123, %rs128};
	bra.uni 	BB0_157;

BB0_156:
	mov.u64 	%rd251, image_RNM0;
	cvta.global.u64 	%rd246, %rd251;
	mov.u32 	%r383, 8;
	mov.u64 	%rd250, 0;
	// inline asm
	call (%rd245), _rt_buffer_get_64, (%rd246, %r112, %r383, %rd22, %rd23, %rd250, %rd250);
	// inline asm
	mov.f32 	%f1232, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs129, %f1232;}

	// inline asm
	mov.u16 	%rs130, 0;
	st.v4.u16 	[%rd245], {%rs129, %rs129, %rs129, %rs130};

BB0_157:
	ld.global.u32 	%r384, [additive];
	setp.eq.s32	%p155, %r384, 0;
	@%p155 bra 	BB0_159;

	mov.u64 	%rd264, image_RNM1;
	cvta.global.u64 	%rd253, %rd264;
	mov.u32 	%r388, 8;
	mov.u64 	%rd263, 0;
	// inline asm
	call (%rd252), _rt_buffer_get_64, (%rd253, %r112, %r388, %rd22, %rd23, %rd263, %rd263);
	// inline asm
	ld.v4.u16 	{%rs137, %rs138, %rs139, %rs140}, [%rd252];
	// inline asm
	{  cvt.f32.f16 %f1233, %rs137;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1234, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1235, %rs139;}

	// inline asm
	// inline asm
	call (%rd258), _rt_buffer_get_64, (%rd253, %r112, %r388, %rd22, %rd23, %rd263, %rd263);
	// inline asm
	add.f32 	%f1236, %f1233, 0f00000000;
	add.f32 	%f1237, %f1234, 0f00000000;
	add.f32 	%f1238, %f1235, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f1238;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f1237;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f1236;}

	// inline asm
	mov.u16 	%rs141, 0;
	st.v4.u16 	[%rd258], {%rs134, %rs135, %rs136, %rs141};
	bra.uni 	BB0_160;

BB0_159:
	mov.u64 	%rd271, image_RNM1;
	cvta.global.u64 	%rd266, %rd271;
	mov.u32 	%r390, 8;
	mov.u64 	%rd270, 0;
	// inline asm
	call (%rd265), _rt_buffer_get_64, (%rd266, %r112, %r390, %rd22, %rd23, %rd270, %rd270);
	// inline asm
	mov.f32 	%f1239, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs142, %f1239;}

	// inline asm
	mov.u16 	%rs143, 0;
	st.v4.u16 	[%rd265], {%rs142, %rs142, %rs142, %rs143};

BB0_160:
	ld.global.u32 	%r391, [additive];
	setp.eq.s32	%p156, %r391, 0;
	@%p156 bra 	BB0_162;

	mov.u64 	%rd284, image_RNM2;
	cvta.global.u64 	%rd273, %rd284;
	mov.u32 	%r395, 8;
	mov.u64 	%rd283, 0;
	// inline asm
	call (%rd272), _rt_buffer_get_64, (%rd273, %r112, %r395, %rd22, %rd23, %rd283, %rd283);
	// inline asm
	ld.v4.u16 	{%rs150, %rs151, %rs152, %rs153}, [%rd272];
	// inline asm
	{  cvt.f32.f16 %f1240, %rs150;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1241, %rs151;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1242, %rs152;}

	// inline asm
	// inline asm
	call (%rd278), _rt_buffer_get_64, (%rd273, %r112, %r395, %rd22, %rd23, %rd283, %rd283);
	// inline asm
	add.f32 	%f1243, %f1240, 0f00000000;
	add.f32 	%f1244, %f1241, 0f00000000;
	add.f32 	%f1245, %f1242, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs149, %f1245;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f1244;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f1243;}

	// inline asm
	mov.u16 	%rs154, 0;
	st.v4.u16 	[%rd278], {%rs147, %rs148, %rs149, %rs154};
	bra.uni 	BB0_163;

BB0_162:
	mov.u64 	%rd291, image_RNM2;
	cvta.global.u64 	%rd286, %rd291;
	mov.u32 	%r397, 8;
	mov.u64 	%rd290, 0;
	// inline asm
	call (%rd285), _rt_buffer_get_64, (%rd286, %r112, %r397, %rd22, %rd23, %rd290, %rd290);
	// inline asm
	mov.f32 	%f1246, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs155, %f1246;}

	// inline asm
	mov.u16 	%rs156, 0;
	st.v4.u16 	[%rd285], {%rs155, %rs155, %rs155, %rs156};
	bra.uni 	BB0_163;

BB0_32:
	mov.f32 	%f1359, %f681;
	mov.f32 	%f1360, %f681;
	mov.f32 	%f1361, %f681;
	mov.f32 	%f1362, %f681;
	mov.f32 	%f1363, %f681;
	mov.f32 	%f1364, %f681;
	mov.f32 	%f1365, %f681;
	mov.f32 	%f1366, %f681;
	mov.f32 	%f1367, %f681;
	mov.f32 	%f1368, %f681;
	mov.f32 	%f1369, %f681;
	mov.f32 	%f1370, %f681;

BB0_84:
	mul.lo.s32 	%r286, %r417, %r417;
	cvt.rn.f32.s32	%f813, %r286;
	rcp.rn.f32 	%f814, %f813;
	mul.f32 	%f815, %f1361, %f814;
	mul.f32 	%f816, %f1360, %f814;
	mul.f32 	%f817, %f1359, %f814;
	div.rn.f32 	%f1395, %f681, %f813;
	mul.f32 	%f1389, %f1364, %f814;
	mul.f32 	%f1390, %f1363, %f814;
	mul.f32 	%f1391, %f1362, %f814;
	mul.f32 	%f1386, %f1367, %f814;
	mul.f32 	%f1387, %f1366, %f814;
	mul.f32 	%f1388, %f1365, %f814;
	mul.f32 	%f1383, %f1370, %f814;
	mul.f32 	%f1384, %f1369, %f814;
	mul.f32 	%f1385, %f1368, %f814;
	fma.rn.f32 	%f1392, %f1361, %f814, %f815;
	fma.rn.f32 	%f1393, %f1360, %f814, %f816;
	fma.rn.f32 	%f1394, %f1359, %f814, %f817;

BB0_85:
	ld.global.u32 	%r446, [imageEnabled];
	and.b32  	%r287, %r446, 8;
	setp.eq.s32	%p76, %r287, 0;
	@%p76 bra 	BB0_98;

	mov.u32 	%r400, 2;
	cvt.u64.u32	%rd106, %r2;
	cvt.u64.u32	%rd107, %r3;
	mov.u64 	%rd110, image_Mask;
	cvta.global.u64 	%rd105, %rd110;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd105, %r400, %r400, %rd106, %rd107, %rd29, %rd29);
	// inline asm
	mov.f32 	%f821, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f822, %f821;
	fma.rn.f32 	%f823, %f822, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f285, %f823;
	abs.f32 	%f286, %f1395;
	setp.lt.f32	%p77, %f286, 0f00800000;
	mul.f32 	%f824, %f286, 0f4B800000;
	selp.f32	%f825, 0fC3170000, 0fC2FE0000, %p77;
	selp.f32	%f826, %f824, %f286, %p77;
	mov.b32 	 %r290, %f826;
	and.b32  	%r291, %r290, 8388607;
	or.b32  	%r292, %r291, 1065353216;
	mov.b32 	 %f827, %r292;
	shr.u32 	%r293, %r290, 23;
	cvt.rn.f32.u32	%f828, %r293;
	add.f32 	%f829, %f825, %f828;
	setp.gt.f32	%p78, %f827, 0f3FB504F3;
	mul.f32 	%f830, %f827, 0f3F000000;
	add.f32 	%f831, %f829, 0f3F800000;
	selp.f32	%f832, %f830, %f827, %p78;
	selp.f32	%f833, %f831, %f829, %p78;
	add.f32 	%f834, %f832, 0fBF800000;
	add.f32 	%f820, %f832, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f819,%f820;
	// inline asm
	add.f32 	%f835, %f834, %f834;
	mul.f32 	%f836, %f819, %f835;
	mul.f32 	%f837, %f836, %f836;
	mov.f32 	%f838, 0f3C4CAF63;
	mov.f32 	%f839, 0f3B18F0FE;
	fma.rn.f32 	%f840, %f839, %f837, %f838;
	mov.f32 	%f841, 0f3DAAAABD;
	fma.rn.f32 	%f842, %f840, %f837, %f841;
	mul.rn.f32 	%f843, %f842, %f837;
	mul.rn.f32 	%f844, %f843, %f836;
	sub.f32 	%f845, %f834, %f836;
	neg.f32 	%f846, %f836;
	add.f32 	%f847, %f845, %f845;
	fma.rn.f32 	%f848, %f846, %f834, %f847;
	mul.rn.f32 	%f849, %f819, %f848;
	add.f32 	%f850, %f844, %f836;
	sub.f32 	%f851, %f836, %f850;
	add.f32 	%f852, %f844, %f851;
	add.f32 	%f853, %f849, %f852;
	add.f32 	%f854, %f850, %f853;
	sub.f32 	%f855, %f850, %f854;
	add.f32 	%f856, %f853, %f855;
	mov.f32 	%f857, 0f3F317200;
	mul.rn.f32 	%f858, %f833, %f857;
	mov.f32 	%f859, 0f35BFBE8E;
	mul.rn.f32 	%f860, %f833, %f859;
	add.f32 	%f861, %f858, %f854;
	sub.f32 	%f862, %f858, %f861;
	add.f32 	%f863, %f854, %f862;
	add.f32 	%f864, %f856, %f863;
	add.f32 	%f865, %f860, %f864;
	add.f32 	%f866, %f861, %f865;
	sub.f32 	%f867, %f861, %f866;
	add.f32 	%f868, %f865, %f867;
	mov.f32 	%f869, 0f3EE8BA2E;
	mul.rn.f32 	%f870, %f869, %f866;
	neg.f32 	%f871, %f870;
	fma.rn.f32 	%f872, %f869, %f866, %f871;
	fma.rn.f32 	%f873, %f869, %f868, %f872;
	mov.f32 	%f874, 0f00000000;
	fma.rn.f32 	%f875, %f874, %f866, %f873;
	add.rn.f32 	%f876, %f870, %f875;
	neg.f32 	%f877, %f876;
	add.rn.f32 	%f878, %f870, %f877;
	add.rn.f32 	%f879, %f878, %f875;
	mov.b32 	 %r294, %f876;
	setp.eq.s32	%p79, %r294, 1118925336;
	add.s32 	%r295, %r294, -1;
	mov.b32 	 %f880, %r295;
	add.f32 	%f881, %f879, 0f37000000;
	selp.f32	%f882, %f880, %f876, %p79;
	selp.f32	%f287, %f881, %f879, %p79;
	mul.f32 	%f883, %f882, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f884, %f883;
	mov.f32 	%f885, 0fBF317200;
	fma.rn.f32 	%f886, %f884, %f885, %f882;
	mov.f32 	%f887, 0fB5BFBE8E;
	fma.rn.f32 	%f888, %f884, %f887, %f886;
	mul.f32 	%f889, %f888, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f890, %f889;
	add.f32 	%f891, %f884, 0f00000000;
	ex2.approx.f32 	%f892, %f891;
	mul.f32 	%f893, %f890, %f892;
	setp.lt.f32	%p80, %f882, 0fC2D20000;
	selp.f32	%f894, 0f00000000, %f893, %p80;
	setp.gt.f32	%p81, %f882, 0f42D20000;
	selp.f32	%f1396, 0f7F800000, %f894, %p81;
	setp.eq.f32	%p82, %f1396, 0f7F800000;
	@%p82 bra 	BB0_88;

	fma.rn.f32 	%f1396, %f1396, %f287, %f1396;

BB0_88:
	setp.lt.f32	%p83, %f1395, 0f00000000;
	setp.eq.f32	%p84, %f285, 0f3F800000;
	and.pred  	%p3, %p83, %p84;
	mov.b32 	 %r296, %f1396;
	xor.b32  	%r297, %r296, -2147483648;
	mov.b32 	 %f895, %r297;
	selp.f32	%f1398, %f895, %f1396, %p3;
	setp.eq.f32	%p85, %f1395, 0f00000000;
	@%p85 bra 	BB0_91;
	bra.uni 	BB0_89;

BB0_91:
	add.f32 	%f898, %f1395, %f1395;
	selp.f32	%f1398, %f898, 0f00000000, %p84;
	bra.uni 	BB0_92;

BB0_89:
	setp.geu.f32	%p86, %f1395, 0f00000000;
	@%p86 bra 	BB0_92;

	cvt.rzi.f32.f32	%f897, %f869;
	setp.neu.f32	%p87, %f897, 0f3EE8BA2E;
	selp.f32	%f1398, 0f7FFFFFFF, %f1398, %p87;

BB0_92:
	add.f32 	%f899, %f286, 0f3EE8BA2E;
	mov.b32 	 %r298, %f899;
	setp.lt.s32	%p89, %r298, 2139095040;
	@%p89 bra 	BB0_97;

	setp.gtu.f32	%p90, %f286, 0f7F800000;
	@%p90 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f1398, %f1395, 0f3EE8BA2E;
	bra.uni 	BB0_97;

BB0_94:
	setp.neu.f32	%p91, %f286, 0f7F800000;
	@%p91 bra 	BB0_97;

	selp.f32	%f1398, 0fFF800000, 0f7F800000, %p3;

BB0_97:
	mul.f32 	%f900, %f1398, 0f437F0000;
	setp.eq.f32	%p92, %f1395, 0f3F800000;
	selp.f32	%f901, 0f437F0000, %f900, %p92;
	cvt.rzi.u32.f32	%r299, %f901;
	cvt.u16.u32	%rs40, %r299;
	mov.u16 	%rs41, 255;
	st.v2.u8 	[%rd104], {%rs40, %rs41};
	ld.global.u32 	%r446, [imageEnabled];

BB0_98:
	ld.global.f32 	%f902, [lightColor];
	mul.f32 	%f298, %f1392, %f902;
	ld.global.f32 	%f903, [lightColor+4];
	mul.f32 	%f299, %f1393, %f903;
	ld.global.f32 	%f904, [lightColor+8];
	mul.f32 	%f300, %f1394, %f904;
	and.b32  	%r300, %r446, 1;
	setp.eq.b32	%p93, %r300, 1;
	@!%p93 bra 	BB0_133;
	bra.uni 	BB0_99;

BB0_99:
	mov.f32 	%f907, 0f3E666666;
	cvt.rzi.f32.f32	%f908, %f907;
	fma.rn.f32 	%f909, %f908, 0fC0000000, 0f3EE66666;
	abs.f32 	%f301, %f909;
	abs.f32 	%f302, %f298;
	setp.lt.f32	%p94, %f302, 0f00800000;
	mul.f32 	%f910, %f302, 0f4B800000;
	selp.f32	%f911, 0fC3170000, 0fC2FE0000, %p94;
	selp.f32	%f912, %f910, %f302, %p94;
	mov.b32 	 %r301, %f912;
	and.b32  	%r302, %r301, 8388607;
	or.b32  	%r303, %r302, 1065353216;
	mov.b32 	 %f913, %r303;
	shr.u32 	%r304, %r301, 23;
	cvt.rn.f32.u32	%f914, %r304;
	add.f32 	%f915, %f911, %f914;
	setp.gt.f32	%p95, %f913, 0f3FB504F3;
	mul.f32 	%f916, %f913, 0f3F000000;
	add.f32 	%f917, %f915, 0f3F800000;
	selp.f32	%f918, %f916, %f913, %p95;
	selp.f32	%f919, %f917, %f915, %p95;
	add.f32 	%f920, %f918, 0fBF800000;
	add.f32 	%f906, %f918, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f905,%f906;
	// inline asm
	add.f32 	%f921, %f920, %f920;
	mul.f32 	%f922, %f905, %f921;
	mul.f32 	%f923, %f922, %f922;
	mov.f32 	%f924, 0f3C4CAF63;
	mov.f32 	%f925, 0f3B18F0FE;
	fma.rn.f32 	%f926, %f925, %f923, %f924;
	mov.f32 	%f927, 0f3DAAAABD;
	fma.rn.f32 	%f928, %f926, %f923, %f927;
	mul.rn.f32 	%f929, %f928, %f923;
	mul.rn.f32 	%f930, %f929, %f922;
	sub.f32 	%f931, %f920, %f922;
	neg.f32 	%f932, %f922;
	add.f32 	%f933, %f931, %f931;
	fma.rn.f32 	%f934, %f932, %f920, %f933;
	mul.rn.f32 	%f935, %f905, %f934;
	add.f32 	%f936, %f930, %f922;
	sub.f32 	%f937, %f922, %f936;
	add.f32 	%f938, %f930, %f937;
	add.f32 	%f939, %f935, %f938;
	add.f32 	%f940, %f936, %f939;
	sub.f32 	%f941, %f936, %f940;
	add.f32 	%f942, %f939, %f941;
	mov.f32 	%f943, 0f3F317200;
	mul.rn.f32 	%f944, %f919, %f943;
	mov.f32 	%f945, 0f35BFBE8E;
	mul.rn.f32 	%f946, %f919, %f945;
	add.f32 	%f947, %f944, %f940;
	sub.f32 	%f948, %f944, %f947;
	add.f32 	%f949, %f940, %f948;
	add.f32 	%f950, %f942, %f949;
	add.f32 	%f951, %f946, %f950;
	add.f32 	%f952, %f947, %f951;
	sub.f32 	%f953, %f947, %f952;
	add.f32 	%f954, %f951, %f953;
	mov.f32 	%f955, 0f3EE66666;
	mul.rn.f32 	%f956, %f955, %f952;
	neg.f32 	%f957, %f956;
	fma.rn.f32 	%f958, %f955, %f952, %f957;
	fma.rn.f32 	%f959, %f955, %f954, %f958;
	mov.f32 	%f960, 0f00000000;
	fma.rn.f32 	%f961, %f960, %f952, %f959;
	add.rn.f32 	%f962, %f956, %f961;
	neg.f32 	%f963, %f962;
	add.rn.f32 	%f964, %f956, %f963;
	add.rn.f32 	%f965, %f964, %f961;
	mov.b32 	 %r305, %f962;
	setp.eq.s32	%p96, %r305, 1118925336;
	add.s32 	%r306, %r305, -1;
	mov.b32 	 %f966, %r306;
	add.f32 	%f967, %f965, 0f37000000;
	selp.f32	%f968, %f966, %f962, %p96;
	selp.f32	%f303, %f967, %f965, %p96;
	mul.f32 	%f969, %f968, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f970, %f969;
	mov.f32 	%f971, 0fBF317200;
	fma.rn.f32 	%f972, %f970, %f971, %f968;
	mov.f32 	%f973, 0fB5BFBE8E;
	fma.rn.f32 	%f974, %f970, %f973, %f972;
	mul.f32 	%f975, %f974, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f976, %f975;
	add.f32 	%f977, %f970, 0f00000000;
	ex2.approx.f32 	%f978, %f977;
	mul.f32 	%f979, %f976, %f978;
	setp.lt.f32	%p97, %f968, 0fC2D20000;
	selp.f32	%f980, 0f00000000, %f979, %p97;
	setp.gt.f32	%p98, %f968, 0f42D20000;
	selp.f32	%f1399, 0f7F800000, %f980, %p98;
	setp.eq.f32	%p99, %f1399, 0f7F800000;
	@%p99 bra 	BB0_101;

	fma.rn.f32 	%f1399, %f1399, %f303, %f1399;

BB0_101:
	setp.lt.f32	%p100, %f298, 0f00000000;
	setp.eq.f32	%p101, %f301, 0f3F800000;
	and.pred  	%p4, %p100, %p101;
	mov.b32 	 %r307, %f1399;
	xor.b32  	%r308, %r307, -2147483648;
	mov.b32 	 %f981, %r308;
	selp.f32	%f1401, %f981, %f1399, %p4;
	setp.eq.f32	%p102, %f298, 0f00000000;
	@%p102 bra 	BB0_104;
	bra.uni 	BB0_102;

BB0_104:
	add.f32 	%f984, %f298, %f298;
	selp.f32	%f1401, %f984, 0f00000000, %p101;
	bra.uni 	BB0_105;

BB0_102:
	setp.geu.f32	%p103, %f298, 0f00000000;
	@%p103 bra 	BB0_105;

	cvt.rzi.f32.f32	%f983, %f955;
	setp.neu.f32	%p104, %f983, 0f3EE66666;
	selp.f32	%f1401, 0f7FFFFFFF, %f1401, %p104;

BB0_105:
	add.f32 	%f985, %f302, 0f3EE66666;
	mov.b32 	 %r309, %f985;
	setp.lt.s32	%p106, %r309, 2139095040;
	@%p106 bra 	BB0_110;

	setp.gtu.f32	%p107, %f302, 0f7F800000;
	@%p107 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f1401, %f298, 0f3EE66666;
	bra.uni 	BB0_110;

BB0_107:
	setp.neu.f32	%p108, %f302, 0f7F800000;
	@%p108 bra 	BB0_110;

	selp.f32	%f1401, 0fFF800000, 0f7F800000, %p4;

BB0_110:
	setp.eq.f32	%p109, %f298, 0f3F800000;
	selp.f32	%f314, 0f3F800000, %f1401, %p109;
	abs.f32 	%f315, %f299;
	setp.lt.f32	%p110, %f315, 0f00800000;
	mul.f32 	%f988, %f315, 0f4B800000;
	selp.f32	%f989, 0fC3170000, 0fC2FE0000, %p110;
	selp.f32	%f990, %f988, %f315, %p110;
	mov.b32 	 %r310, %f990;
	and.b32  	%r311, %r310, 8388607;
	or.b32  	%r312, %r311, 1065353216;
	mov.b32 	 %f991, %r312;
	shr.u32 	%r313, %r310, 23;
	cvt.rn.f32.u32	%f992, %r313;
	add.f32 	%f993, %f989, %f992;
	setp.gt.f32	%p111, %f991, 0f3FB504F3;
	mul.f32 	%f994, %f991, 0f3F000000;
	add.f32 	%f995, %f993, 0f3F800000;
	selp.f32	%f996, %f994, %f991, %p111;
	selp.f32	%f997, %f995, %f993, %p111;
	add.f32 	%f998, %f996, 0fBF800000;
	add.f32 	%f987, %f996, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f986,%f987;
	// inline asm
	add.f32 	%f999, %f998, %f998;
	mul.f32 	%f1000, %f986, %f999;
	mul.f32 	%f1001, %f1000, %f1000;
	fma.rn.f32 	%f1004, %f925, %f1001, %f924;
	fma.rn.f32 	%f1006, %f1004, %f1001, %f927;
	mul.rn.f32 	%f1007, %f1006, %f1001;
	mul.rn.f32 	%f1008, %f1007, %f1000;
	sub.f32 	%f1009, %f998, %f1000;
	neg.f32 	%f1010, %f1000;
	add.f32 	%f1011, %f1009, %f1009;
	fma.rn.f32 	%f1012, %f1010, %f998, %f1011;
	mul.rn.f32 	%f1013, %f986, %f1012;
	add.f32 	%f1014, %f1008, %f1000;
	sub.f32 	%f1015, %f1000, %f1014;
	add.f32 	%f1016, %f1008, %f1015;
	add.f32 	%f1017, %f1013, %f1016;
	add.f32 	%f1018, %f1014, %f1017;
	sub.f32 	%f1019, %f1014, %f1018;
	add.f32 	%f1020, %f1017, %f1019;
	mul.rn.f32 	%f1022, %f997, %f943;
	mul.rn.f32 	%f1024, %f997, %f945;
	add.f32 	%f1025, %f1022, %f1018;
	sub.f32 	%f1026, %f1022, %f1025;
	add.f32 	%f1027, %f1018, %f1026;
	add.f32 	%f1028, %f1020, %f1027;
	add.f32 	%f1029, %f1024, %f1028;
	add.f32 	%f1030, %f1025, %f1029;
	sub.f32 	%f1031, %f1025, %f1030;
	add.f32 	%f1032, %f1029, %f1031;
	mul.rn.f32 	%f1034, %f955, %f1030;
	neg.f32 	%f1035, %f1034;
	fma.rn.f32 	%f1036, %f955, %f1030, %f1035;
	fma.rn.f32 	%f1037, %f955, %f1032, %f1036;
	fma.rn.f32 	%f1039, %f960, %f1030, %f1037;
	add.rn.f32 	%f1040, %f1034, %f1039;
	neg.f32 	%f1041, %f1040;
	add.rn.f32 	%f1042, %f1034, %f1041;
	add.rn.f32 	%f1043, %f1042, %f1039;
	mov.b32 	 %r314, %f1040;
	setp.eq.s32	%p112, %r314, 1118925336;
	add.s32 	%r315, %r314, -1;
	mov.b32 	 %f1044, %r315;
	add.f32 	%f1045, %f1043, 0f37000000;
	selp.f32	%f1046, %f1044, %f1040, %p112;
	selp.f32	%f316, %f1045, %f1043, %p112;
	mul.f32 	%f1047, %f1046, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1048, %f1047;
	fma.rn.f32 	%f1050, %f1048, %f971, %f1046;
	fma.rn.f32 	%f1052, %f1048, %f973, %f1050;
	mul.f32 	%f1053, %f1052, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1054, %f1053;
	add.f32 	%f1055, %f1048, 0f00000000;
	ex2.approx.f32 	%f1056, %f1055;
	mul.f32 	%f1057, %f1054, %f1056;
	setp.lt.f32	%p113, %f1046, 0fC2D20000;
	selp.f32	%f1058, 0f00000000, %f1057, %p113;
	setp.gt.f32	%p114, %f1046, 0f42D20000;
	selp.f32	%f1402, 0f7F800000, %f1058, %p114;
	setp.eq.f32	%p115, %f1402, 0f7F800000;
	@%p115 bra 	BB0_112;

	fma.rn.f32 	%f1402, %f1402, %f316, %f1402;

BB0_112:
	setp.lt.f32	%p116, %f299, 0f00000000;
	and.pred  	%p5, %p116, %p101;
	mov.b32 	 %r316, %f1402;
	xor.b32  	%r317, %r316, -2147483648;
	mov.b32 	 %f1059, %r317;
	selp.f32	%f1404, %f1059, %f1402, %p5;
	setp.eq.f32	%p118, %f299, 0f00000000;
	@%p118 bra 	BB0_115;
	bra.uni 	BB0_113;

BB0_115:
	add.f32 	%f1062, %f299, %f299;
	selp.f32	%f1404, %f1062, 0f00000000, %p101;
	bra.uni 	BB0_116;

BB0_113:
	setp.geu.f32	%p119, %f299, 0f00000000;
	@%p119 bra 	BB0_116;

	cvt.rzi.f32.f32	%f1061, %f955;
	setp.neu.f32	%p120, %f1061, 0f3EE66666;
	selp.f32	%f1404, 0f7FFFFFFF, %f1404, %p120;

BB0_116:
	add.f32 	%f1063, %f315, 0f3EE66666;
	mov.b32 	 %r318, %f1063;
	setp.lt.s32	%p122, %r318, 2139095040;
	@%p122 bra 	BB0_121;

	setp.gtu.f32	%p123, %f315, 0f7F800000;
	@%p123 bra 	BB0_120;
	bra.uni 	BB0_118;

BB0_120:
	add.f32 	%f1404, %f299, 0f3EE66666;
	bra.uni 	BB0_121;

BB0_118:
	setp.neu.f32	%p124, %f315, 0f7F800000;
	@%p124 bra 	BB0_121;

	selp.f32	%f1404, 0fFF800000, 0f7F800000, %p5;

BB0_121:
	setp.eq.f32	%p125, %f299, 0f3F800000;
	selp.f32	%f327, 0f3F800000, %f1404, %p125;
	abs.f32 	%f328, %f300;
	setp.lt.f32	%p126, %f328, 0f00800000;
	mul.f32 	%f1066, %f328, 0f4B800000;
	selp.f32	%f1067, 0fC3170000, 0fC2FE0000, %p126;
	selp.f32	%f1068, %f1066, %f328, %p126;
	mov.b32 	 %r319, %f1068;
	and.b32  	%r320, %r319, 8388607;
	or.b32  	%r321, %r320, 1065353216;
	mov.b32 	 %f1069, %r321;
	shr.u32 	%r322, %r319, 23;
	cvt.rn.f32.u32	%f1070, %r322;
	add.f32 	%f1071, %f1067, %f1070;
	setp.gt.f32	%p127, %f1069, 0f3FB504F3;
	mul.f32 	%f1072, %f1069, 0f3F000000;
	add.f32 	%f1073, %f1071, 0f3F800000;
	selp.f32	%f1074, %f1072, %f1069, %p127;
	selp.f32	%f1075, %f1073, %f1071, %p127;
	add.f32 	%f1076, %f1074, 0fBF800000;
	add.f32 	%f1065, %f1074, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1064,%f1065;
	// inline asm
	add.f32 	%f1077, %f1076, %f1076;
	mul.f32 	%f1078, %f1064, %f1077;
	mul.f32 	%f1079, %f1078, %f1078;
	fma.rn.f32 	%f1082, %f925, %f1079, %f924;
	fma.rn.f32 	%f1084, %f1082, %f1079, %f927;
	mul.rn.f32 	%f1085, %f1084, %f1079;
	mul.rn.f32 	%f1086, %f1085, %f1078;
	sub.f32 	%f1087, %f1076, %f1078;
	neg.f32 	%f1088, %f1078;
	add.f32 	%f1089, %f1087, %f1087;
	fma.rn.f32 	%f1090, %f1088, %f1076, %f1089;
	mul.rn.f32 	%f1091, %f1064, %f1090;
	add.f32 	%f1092, %f1086, %f1078;
	sub.f32 	%f1093, %f1078, %f1092;
	add.f32 	%f1094, %f1086, %f1093;
	add.f32 	%f1095, %f1091, %f1094;
	add.f32 	%f1096, %f1092, %f1095;
	sub.f32 	%f1097, %f1092, %f1096;
	add.f32 	%f1098, %f1095, %f1097;
	mul.rn.f32 	%f1100, %f1075, %f943;
	mul.rn.f32 	%f1102, %f1075, %f945;
	add.f32 	%f1103, %f1100, %f1096;
	sub.f32 	%f1104, %f1100, %f1103;
	add.f32 	%f1105, %f1096, %f1104;
	add.f32 	%f1106, %f1098, %f1105;
	add.f32 	%f1107, %f1102, %f1106;
	add.f32 	%f1108, %f1103, %f1107;
	sub.f32 	%f1109, %f1103, %f1108;
	add.f32 	%f1110, %f1107, %f1109;
	mul.rn.f32 	%f1112, %f955, %f1108;
	neg.f32 	%f1113, %f1112;
	fma.rn.f32 	%f1114, %f955, %f1108, %f1113;
	fma.rn.f32 	%f1115, %f955, %f1110, %f1114;
	fma.rn.f32 	%f1117, %f960, %f1108, %f1115;
	add.rn.f32 	%f1118, %f1112, %f1117;
	neg.f32 	%f1119, %f1118;
	add.rn.f32 	%f1120, %f1112, %f1119;
	add.rn.f32 	%f1121, %f1120, %f1117;
	mov.b32 	 %r323, %f1118;
	setp.eq.s32	%p128, %r323, 1118925336;
	add.s32 	%r324, %r323, -1;
	mov.b32 	 %f1122, %r324;
	add.f32 	%f1123, %f1121, 0f37000000;
	selp.f32	%f1124, %f1122, %f1118, %p128;
	selp.f32	%f329, %f1123, %f1121, %p128;
	mul.f32 	%f1125, %f1124, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1126, %f1125;
	fma.rn.f32 	%f1128, %f1126, %f971, %f1124;
	fma.rn.f32 	%f1130, %f1126, %f973, %f1128;
	mul.f32 	%f1131, %f1130, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1132, %f1131;
	add.f32 	%f1133, %f1126, 0f00000000;
	ex2.approx.f32 	%f1134, %f1133;
	mul.f32 	%f1135, %f1132, %f1134;
	setp.lt.f32	%p129, %f1124, 0fC2D20000;
	selp.f32	%f1136, 0f00000000, %f1135, %p129;
	setp.gt.f32	%p130, %f1124, 0f42D20000;
	selp.f32	%f1405, 0f7F800000, %f1136, %p130;
	setp.eq.f32	%p131, %f1405, 0f7F800000;
	@%p131 bra 	BB0_123;

	fma.rn.f32 	%f1405, %f1405, %f329, %f1405;

BB0_123:
	setp.lt.f32	%p132, %f300, 0f00000000;
	and.pred  	%p6, %p132, %p101;
	mov.b32 	 %r325, %f1405;
	xor.b32  	%r326, %r325, -2147483648;
	mov.b32 	 %f1137, %r326;
	selp.f32	%f1407, %f1137, %f1405, %p6;
	setp.eq.f32	%p134, %f300, 0f00000000;
	@%p134 bra 	BB0_126;
	bra.uni 	BB0_124;

BB0_126:
	add.f32 	%f1140, %f300, %f300;
	selp.f32	%f1407, %f1140, 0f00000000, %p101;
	bra.uni 	BB0_127;

BB0_124:
	setp.geu.f32	%p135, %f300, 0f00000000;
	@%p135 bra 	BB0_127;

	cvt.rzi.f32.f32	%f1139, %f955;
	setp.neu.f32	%p136, %f1139, 0f3EE66666;
	selp.f32	%f1407, 0f7FFFFFFF, %f1407, %p136;

BB0_127:
	add.f32 	%f1141, %f328, 0f3EE66666;
	mov.b32 	 %r327, %f1141;
	setp.lt.s32	%p138, %r327, 2139095040;
	@%p138 bra 	BB0_132;

	setp.gtu.f32	%p139, %f328, 0f7F800000;
	@%p139 bra 	BB0_131;
	bra.uni 	BB0_129;

BB0_131:
	add.f32 	%f1407, %f300, 0f3EE66666;
	bra.uni 	BB0_132;

BB0_129:
	setp.neu.f32	%p140, %f328, 0f7F800000;
	@%p140 bra 	BB0_132;

	selp.f32	%f1407, 0fFF800000, 0f7F800000, %p6;

BB0_132:
	mov.u32 	%r401, 2;
	setp.eq.f32	%p141, %f300, 0f3F800000;
	selp.f32	%f1142, 0f3F800000, %f1407, %p141;
	cvt.u64.u32	%rd114, %r3;
	cvt.u64.u32	%rd113, %r2;
	mov.u64 	%rd117, image;
	cvta.global.u64 	%rd112, %rd117;
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd112, %r401, %r113, %rd113, %rd114, %rd29, %rd29);
	// inline asm
	cvt.sat.f32.f32	%f1143, %f1142;
	mul.f32 	%f1144, %f1143, 0f437FFD71;
	cvt.rzi.u32.f32	%r330, %f1144;
	cvt.sat.f32.f32	%f1145, %f327;
	mul.f32 	%f1146, %f1145, 0f437FFD71;
	cvt.rzi.u32.f32	%r331, %f1146;
	cvt.sat.f32.f32	%f1147, %f314;
	mul.f32 	%f1148, %f1147, 0f437FFD71;
	cvt.rzi.u32.f32	%r332, %f1148;
	cvt.u16.u32	%rs42, %r330;
	cvt.u16.u32	%rs43, %r332;
	cvt.u16.u32	%rs44, %r331;
	mov.u16 	%rs45, 255;
	st.v4.u8 	[%rd111], {%rs42, %rs44, %rs43, %rs45};
	ld.global.u32 	%r446, [imageEnabled];

BB0_133:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	and.b32  	%r333, %r446, 4;
	setp.eq.s32	%p142, %r333, 0;
	@%p142 bra 	BB0_137;

	ld.global.u32 	%r334, [additive];
	setp.eq.s32	%p143, %r334, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f667;}

	// inline asm
	@%p143 bra 	BB0_136;

	mov.u32 	%r402, 2;
	mov.u64 	%rd130, image_HDR;
	cvta.global.u64 	%rd119, %rd130;
	mov.u32 	%r338, 8;
	// inline asm
	call (%rd118), _rt_buffer_get_64, (%rd119, %r402, %r338, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs53, %rs54, %rs55, %rs56}, [%rd118];
	// inline asm
	{  cvt.f32.f16 %f1150, %rs53;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1151, %rs54;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1152, %rs55;}

	// inline asm
	// inline asm
	call (%rd124), _rt_buffer_get_64, (%rd119, %r402, %r338, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1153, %f298, %f1150;
	add.f32 	%f1154, %f299, %f1151;
	add.f32 	%f1155, %f300, %f1152;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f1155;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f1154;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f1153;}

	// inline asm
	st.v4.u16 	[%rd124], {%rs50, %rs51, %rs52, %rs46};
	bra.uni 	BB0_137;

BB0_136:
	mov.u32 	%r403, 2;
	mov.u64 	%rd137, image_HDR;
	cvta.global.u64 	%rd132, %rd137;
	mov.u32 	%r340, 8;
	// inline asm
	call (%rd131), _rt_buffer_get_64, (%rd132, %r403, %r340, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f300;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f299;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f298;}

	// inline asm
	st.v4.u16 	[%rd131], {%rs57, %rs58, %rs59, %rs46};

BB0_137:
	ld.global.f32 	%f1160, [lightColor];
	mul.f32 	%f1161, %f1389, %f1160;
	ld.global.f32 	%f1162, [lightColor+4];
	mul.f32 	%f1163, %f1390, %f1162;
	ld.global.f32 	%f1164, [lightColor+8];
	mul.f32 	%f1165, %f1391, %f1164;
	mul.f32 	%f1166, %f1386, %f1160;
	mul.f32 	%f1167, %f1387, %f1162;
	mul.f32 	%f1168, %f1388, %f1164;
	mul.f32 	%f1169, %f1383, %f1160;
	mul.f32 	%f1170, %f1384, %f1162;
	mul.f32 	%f1171, %f1385, %f1164;
	add.f32 	%f1172, %f1161, %f1166;
	add.f32 	%f1173, %f1163, %f1167;
	add.f32 	%f1174, %f1165, %f1168;
	add.f32 	%f1175, %f1172, %f1169;
	add.f32 	%f1176, %f1173, %f1170;
	add.f32 	%f1177, %f1174, %f1171;
	mul.f32 	%f1178, %f1175, 0f3F13CD3A;
	mul.f32 	%f1179, %f1176, 0f3F13CD3A;
	mul.f32 	%f1180, %f1177, 0f3F13CD3A;
	div.rn.f32 	%f1181, %f298, %f1178;
	div.rn.f32 	%f1182, %f299, %f1179;
	div.rn.f32 	%f1183, %f300, %f1180;
	setp.eq.f32	%p144, %f298, 0f00000000;
	selp.f32	%f1184, 0f00000000, %f1181, %p144;
	setp.eq.f32	%p145, %f299, 0f00000000;
	selp.f32	%f1185, 0f00000000, %f1182, %p145;
	setp.eq.f32	%p146, %f300, 0f00000000;
	selp.f32	%f1186, 0f00000000, %f1183, %p146;
	mul.f32 	%f340, %f1161, %f1184;
	mul.f32 	%f341, %f1163, %f1185;
	mul.f32 	%f342, %f1165, %f1186;
	mul.f32 	%f343, %f1166, %f1184;
	mul.f32 	%f344, %f1167, %f1185;
	mul.f32 	%f345, %f1168, %f1186;
	mul.f32 	%f346, %f1169, %f1184;
	mul.f32 	%f347, %f1170, %f1185;
	mul.f32 	%f348, %f1171, %f1186;
	ld.global.u32 	%r341, [additive];
	setp.eq.s32	%p147, %r341, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f667;}

	// inline asm
	@%p147 bra 	BB0_139;

	mov.u32 	%r404, 2;
	mov.u64 	%rd150, image_RNM0;
	cvta.global.u64 	%rd139, %rd150;
	mov.u32 	%r345, 8;
	// inline asm
	call (%rd138), _rt_buffer_get_64, (%rd139, %r404, %r345, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs67, %rs68, %rs69, %rs70}, [%rd138];
	// inline asm
	{  cvt.f32.f16 %f1187, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1188, %rs68;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1189, %rs69;}

	// inline asm
	// inline asm
	call (%rd144), _rt_buffer_get_64, (%rd139, %r404, %r345, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1190, %f340, %f1187;
	add.f32 	%f1191, %f341, %f1188;
	add.f32 	%f1192, %f342, %f1189;
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f1192;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1191;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f1190;}

	// inline asm
	st.v4.u16 	[%rd144], {%rs64, %rs65, %rs66, %rs60};
	bra.uni 	BB0_140;

BB0_139:
	mov.u32 	%r409, 2;
	mov.u64 	%rd157, image_RNM0;
	cvta.global.u64 	%rd152, %rd157;
	mov.u32 	%r347, 8;
	// inline asm
	call (%rd151), _rt_buffer_get_64, (%rd152, %r409, %r347, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f342;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f341;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f340;}

	// inline asm
	st.v4.u16 	[%rd151], {%rs71, %rs72, %rs73, %rs60};

BB0_140:
	ld.global.u32 	%r348, [additive];
	setp.eq.s32	%p148, %r348, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f667;}

	// inline asm
	@%p148 bra 	BB0_142;

	mov.u32 	%r405, 2;
	mov.u64 	%rd170, image_RNM1;
	cvta.global.u64 	%rd159, %rd170;
	mov.u32 	%r352, 8;
	// inline asm
	call (%rd158), _rt_buffer_get_64, (%rd159, %r405, %r352, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs81, %rs82, %rs83, %rs84}, [%rd158];
	// inline asm
	{  cvt.f32.f16 %f1197, %rs81;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1198, %rs82;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1199, %rs83;}

	// inline asm
	// inline asm
	call (%rd164), _rt_buffer_get_64, (%rd159, %r405, %r352, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1200, %f343, %f1197;
	add.f32 	%f1201, %f344, %f1198;
	add.f32 	%f1202, %f345, %f1199;
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f1202;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f1201;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f1200;}

	// inline asm
	st.v4.u16 	[%rd164], {%rs78, %rs79, %rs80, %rs74};
	bra.uni 	BB0_143;

BB0_142:
	mov.u32 	%r408, 2;
	mov.u64 	%rd177, image_RNM1;
	cvta.global.u64 	%rd172, %rd177;
	mov.u32 	%r354, 8;
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd172, %r408, %r354, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f345;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f344;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f343;}

	// inline asm
	st.v4.u16 	[%rd171], {%rs85, %rs86, %rs87, %rs74};

BB0_143:
	ld.global.u32 	%r355, [additive];
	setp.eq.s32	%p149, %r355, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f667;}

	// inline asm
	@%p149 bra 	BB0_145;

	mov.u32 	%r406, 2;
	mov.u64 	%rd190, image_RNM2;
	cvta.global.u64 	%rd179, %rd190;
	mov.u32 	%r359, 8;
	// inline asm
	call (%rd178), _rt_buffer_get_64, (%rd179, %r406, %r359, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs95, %rs96, %rs97, %rs98}, [%rd178];
	// inline asm
	{  cvt.f32.f16 %f1207, %rs95;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1208, %rs96;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1209, %rs97;}

	// inline asm
	// inline asm
	call (%rd184), _rt_buffer_get_64, (%rd179, %r406, %r359, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1210, %f346, %f1207;
	add.f32 	%f1211, %f347, %f1208;
	add.f32 	%f1212, %f348, %f1209;
	// inline asm
	{  cvt.rn.f16.f32 %rs94, %f1212;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs93, %f1211;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f1210;}

	// inline asm
	st.v4.u16 	[%rd184], {%rs92, %rs93, %rs94, %rs88};
	bra.uni 	BB0_163;

BB0_145:
	mov.u32 	%r407, 2;
	mov.u64 	%rd197, image_RNM2;
	cvta.global.u64 	%rd192, %rd197;
	mov.u32 	%r361, 8;
	// inline asm
	call (%rd191), _rt_buffer_get_64, (%rd192, %r407, %r361, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f348;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f347;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f346;}

	// inline asm
	st.v4.u16 	[%rd191], {%rs99, %rs100, %rs101, %rs88};

BB0_163:
	ret;
}


