//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 8 .b8 texCoords[8];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 1 .b8 lightmapDirect[1];
.global .texref albedoTex;
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9texCoordsE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9texCoordsE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9texCoordsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9texCoordsE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 67, 111, 111, 114, 100, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9texCoordsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<95>;
	.reg .b16 	%rs<33>;
	.reg .f32 	%f<601>;
	.reg .b32 	%r<319>;
	.reg .b64 	%rd<117>;


	mov.u64 	%rd116, __local_depot0;
	cvta.local.u64 	%SP, %rd116;
	ld.global.v2.u32 	{%r101, %r102}, [pixelID];
	cvt.u64.u32	%rd18, %r101;
	cvt.u64.u32	%rd19, %r102;
	mov.u64 	%rd22, uvnormal;
	cvta.global.u64 	%rd17, %rd22;
	mov.u32 	%r99, 2;
	mov.u32 	%r100, 4;
	mov.u64 	%rd21, 0;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd17, %r99, %r100, %rd18, %rd19, %rd21, %rd21);
	// inline asm
	ld.u32 	%r1, [%rd16];
	shr.u32 	%r105, %r1, 16;
	cvt.u16.u32	%rs1, %r105;
	and.b16  	%rs2, %rs1, 255;
	cvt.u16.u32	%rs3, %r1;
	or.b16  	%rs4, %rs3, %rs2;
	setp.eq.s16	%p4, %rs4, 0;
	mov.f32 	%f565, 0f00000000;
	mov.f32 	%f566, %f565;
	mov.f32 	%f567, %f565;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs5, [%rd16+1];
	and.b16  	%rs7, %rs3, 255;
	cvt.rn.f32.u16	%f125, %rs7;
	div.rn.f32 	%f126, %f125, 0f437F0000;
	fma.rn.f32 	%f127, %f126, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f128, %rs5;
	div.rn.f32 	%f129, %f128, 0f437F0000;
	fma.rn.f32 	%f130, %f129, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f131, %rs2;
	div.rn.f32 	%f132, %f131, 0f437F0000;
	fma.rn.f32 	%f133, %f132, 0f40000000, 0fBF800000;
	mul.f32 	%f134, %f130, %f130;
	fma.rn.f32 	%f135, %f127, %f127, %f134;
	fma.rn.f32 	%f136, %f133, %f133, %f135;
	sqrt.rn.f32 	%f137, %f136;
	rcp.rn.f32 	%f138, %f137;
	mul.f32 	%f565, %f127, %f138;
	mul.f32 	%f566, %f130, %f138;
	mul.f32 	%f567, %f133, %f138;

BB0_2:
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	ld.global.v2.u32 	{%r109, %r110}, [tileInfo];
	add.s32 	%r2, %r106, %r109;
	add.s32 	%r3, %r107, %r110;
	setp.eq.f32	%p5, %f566, 0f00000000;
	setp.eq.f32	%p6, %f565, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f567, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_95;
	bra.uni 	BB0_3;

BB0_95:
	ld.global.u32 	%r318, [imageEnabled];
	and.b32  	%r272, %r318, 1;
	setp.eq.b32	%p92, %r272, 1;
	@!%p92 bra 	BB0_97;
	bra.uni 	BB0_96;

BB0_96:
	cvt.u64.u32	%rd90, %r2;
	cvt.u64.u32	%rd91, %r3;
	mov.u64 	%rd94, image;
	cvta.global.u64 	%rd89, %rd94;
	mov.u64 	%rd93, 0;
	// inline asm
	call (%rd88), _rt_buffer_get_64, (%rd89, %r99, %r100, %rd90, %rd91, %rd93, %rd93);
	// inline asm
	mov.u16 	%rs28, 0;
	st.v4.u8 	[%rd88], {%rs28, %rs28, %rs28, %rs28};
	ld.global.u32 	%r318, [imageEnabled];

BB0_97:
	and.b32  	%r275, %r318, 4;
	setp.eq.s32	%p93, %r275, 0;
	@%p93 bra 	BB0_99;

	cvt.u64.u32	%rd97, %r2;
	cvt.u64.u32	%rd98, %r3;
	mov.u64 	%rd101, image_HDR;
	cvta.global.u64 	%rd96, %rd101;
	mov.u32 	%r277, 8;
	mov.u64 	%rd100, 0;
	// inline asm
	call (%rd95), _rt_buffer_get_64, (%rd96, %r99, %r277, %rd97, %rd98, %rd100, %rd100);
	// inline asm
	mov.f32 	%f533, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f533;}

	// inline asm
	mov.u16 	%rs30, 0;
	st.v4.u16 	[%rd95], {%rs29, %rs29, %rs29, %rs30};
	ld.global.u32 	%r318, [imageEnabled];

BB0_99:
	and.b32  	%r278, %r318, 16;
	setp.eq.s32	%p94, %r278, 0;
	@%p94 bra 	BB0_101;

	cvt.u64.u32	%rd104, %r2;
	cvt.u64.u32	%rd105, %r3;
	mov.u64 	%rd108, image_HDR2;
	cvta.global.u64 	%rd103, %rd108;
	mov.u32 	%r280, 8;
	mov.u64 	%rd107, 0;
	// inline asm
	call (%rd102), _rt_buffer_get_64, (%rd103, %r99, %r280, %rd104, %rd105, %rd107, %rd107);
	// inline asm
	mov.f32 	%f534, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f534;}

	// inline asm
	mov.u16 	%rs32, 0;
	st.v4.u16 	[%rd102], {%rs31, %rs31, %rs31, %rs32};
	bra.uni 	BB0_101;

BB0_3:
	ld.global.v2.u32 	{%r120, %r121}, [pixelID];
	cvt.u64.u32	%rd25, %r120;
	cvt.u64.u32	%rd26, %r121;
	mov.u64 	%rd41, lightmapDirect;
	cvta.global.u64 	%rd24, %rd41;
	mov.u32 	%r115, 8;
	// inline asm
	call (%rd23), _rt_buffer_get_64, (%rd24, %r99, %r115, %rd25, %rd26, %rd21, %rd21);
	// inline asm
	ld.v4.u16 	{%rs12, %rs13, %rs14, %rs15}, [%rd23];
	// inline asm
	{  cvt.f32.f16 %f139, %rs12;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f140, %rs13;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f141, %rs14;}

	// inline asm
	ld.global.v2.u32 	{%r124, %r125}, [pixelID];
	cvt.u64.u32	%rd31, %r124;
	cvt.u64.u32	%rd32, %r125;
	mov.u64 	%rd42, uvpos;
	cvta.global.u64 	%rd30, %rd42;
	mov.u32 	%r117, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r99, %r117, %rd31, %rd32, %rd21, %rd21);
	// inline asm
	ld.f32 	%f145, [%rd29+8];
	ld.f32 	%f146, [%rd29+4];
	ld.f32 	%f147, [%rd29];
	mul.f32 	%f148, %f147, 0f3456BF95;
	mul.f32 	%f149, %f146, 0f3456BF95;
	mul.f32 	%f150, %f145, 0f3456BF95;
	abs.f32 	%f151, %f565;
	div.rn.f32 	%f152, %f148, %f151;
	abs.f32 	%f153, %f566;
	div.rn.f32 	%f154, %f149, %f153;
	abs.f32 	%f155, %f567;
	div.rn.f32 	%f156, %f150, %f155;
	abs.f32 	%f157, %f152;
	abs.f32 	%f158, %f154;
	abs.f32 	%f159, %f156;
	mov.f32 	%f160, 0f38D1B717;
	max.f32 	%f161, %f157, %f160;
	max.f32 	%f162, %f158, %f160;
	max.f32 	%f163, %f159, %f160;
	fma.rn.f32 	%f10, %f565, %f161, %f147;
	fma.rn.f32 	%f11, %f566, %f162, %f146;
	fma.rn.f32 	%f12, %f567, %f163, %f145;
	setp.gt.f32	%p10, %f151, %f155;
	neg.f32 	%f164, %f566;
	selp.f32	%f165, %f164, 0f00000000, %p10;
	neg.f32 	%f166, %f567;
	selp.f32	%f167, %f565, %f166, %p10;
	selp.f32	%f168, 0f00000000, %f566, %p10;
	mul.f32 	%f169, %f167, %f167;
	fma.rn.f32 	%f170, %f165, %f165, %f169;
	fma.rn.f32 	%f171, %f168, %f168, %f170;
	sqrt.rn.f32 	%f172, %f171;
	rcp.rn.f32 	%f173, %f172;
	mul.f32 	%f13, %f165, %f173;
	mul.f32 	%f14, %f167, %f173;
	mul.f32 	%f15, %f168, %f173;
	ld.global.v2.u32 	{%r128, %r129}, [pixelID];
	cvt.u64.u32	%rd37, %r128;
	cvt.u64.u32	%rd38, %r129;
	mov.u64 	%rd43, rnd_seeds;
	cvta.global.u64 	%rd36, %rd43;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r99, %r100, %rd37, %rd38, %rd21, %rd21);
	// inline asm
	ld.global.u32 	%r287, [samples];
	mov.f32 	%f586, 0f00000000;
	setp.lt.s32	%p11, %r287, 1;
	@%p11 bra 	BB0_4;

	cvt.rn.f32.s32	%f177, %r287;
	rcp.rn.f32 	%f16, %f177;
	ld.u32 	%r313, [%rd35];
	mul.f32 	%f17, %f10, 0f3456BF95;
	mul.f32 	%f18, %f11, 0f3456BF95;
	mul.f32 	%f19, %f12, 0f3456BF95;
	mul.f32 	%f178, %f565, %f14;
	mul.f32 	%f179, %f566, %f13;
	sub.f32 	%f20, %f179, %f178;
	mul.f32 	%f180, %f567, %f13;
	mul.f32 	%f181, %f565, %f15;
	sub.f32 	%f21, %f181, %f180;
	mul.f32 	%f182, %f566, %f15;
	mul.f32 	%f183, %f567, %f14;
	sub.f32 	%f22, %f183, %f182;
	mov.f32 	%f586, 0f00000000;
	mov.u32 	%r288, 0;
	abs.f32 	%f184, %f18;
	abs.f32 	%f185, %f17;
	max.f32 	%f186, %f185, %f184;
	abs.f32 	%f187, %f19;
	max.f32 	%f188, %f186, %f187;
	mov.f32 	%f587, %f586;
	mov.f32 	%f588, %f586;

BB0_6:
	setp.lt.s32	%p12, %r287, 1;
	@%p12 bra 	BB0_55;

	cvt.rn.f32.s32	%f26, %r288;
	max.f32 	%f27, %f188, %f160;
	mov.u32 	%r290, 0;

BB0_8:
	mad.lo.s32 	%r134, %r313, 1664525, 1013904223;
	and.b32  	%r135, %r134, 16777215;
	cvt.rn.f32.u32	%f190, %r135;
	fma.rn.f32 	%f191, %f190, 0f33800000, %f26;
	mul.f32 	%f192, %f16, %f191;
	mad.lo.s32 	%r313, %r134, 1664525, 1013904223;
	and.b32  	%r136, %r313, 16777215;
	cvt.rn.f32.u32	%f193, %r136;
	cvt.rn.f32.s32	%f194, %r290;
	fma.rn.f32 	%f195, %f193, 0f33800000, %f194;
	mul.f32 	%f196, %f16, %f195;
	sqrt.rn.f32 	%f31, %f192;
	mul.f32 	%f580, %f196, 0f40C90FDB;
	abs.f32 	%f33, %f580;
	setp.neu.f32	%p13, %f33, 0f7F800000;
	mov.f32 	%f574, %f580;
	@%p13 bra 	BB0_10;

	mov.f32 	%f197, 0f00000000;
	mul.rn.f32 	%f574, %f580, %f197;

BB0_10:
	mul.f32 	%f198, %f574, 0f3F22F983;
	cvt.rni.s32.f32	%r301, %f198;
	cvt.rn.f32.s32	%f199, %r301;
	neg.f32 	%f200, %f199;
	mov.f32 	%f201, 0f3FC90FDA;
	fma.rn.f32 	%f202, %f200, %f201, %f574;
	mov.f32 	%f203, 0f33A22168;
	fma.rn.f32 	%f204, %f200, %f203, %f202;
	mov.f32 	%f205, 0f27C234C5;
	fma.rn.f32 	%f575, %f200, %f205, %f204;
	abs.f32 	%f206, %f574;
	setp.leu.f32	%p14, %f206, 0f47CE4780;
	@%p14 bra 	BB0_21;

	add.u64 	%rd45, %SP, 12;
	cvta.to.local.u64 	%rd3, %rd45;
	mov.b32 	 %r13, %f574;
	shr.u32 	%r14, %r13, 23;
	shl.b32 	%r139, %r13, 8;
	or.b32  	%r15, %r139, -2147483648;
	mov.u32 	%r292, 0;
	mov.u64 	%rd113, 0;
	mov.u64 	%rd112, %rd3;
	mov.u32 	%r293, %r292;

BB0_12:
	.pragma "nounroll";
	shl.b64 	%rd46, %rd113, 2;
	mov.u64 	%rd47, __cudart_i2opi_f;
	add.s64 	%rd48, %rd47, %rd46;
	ld.const.u32 	%r142, [%rd48];
	// inline asm
	{
	mad.lo.cc.u32   %r140, %r142, %r15, %r293;
	madc.hi.u32     %r293, %r142, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd112], %r140;
	add.s32 	%r292, %r292, 1;
	cvt.s64.s32	%rd113, %r292;
	mul.wide.s32 	%rd51, %r292, 4;
	add.s64 	%rd112, %rd3, %rd51;
	setp.ne.s32	%p15, %r292, 6;
	@%p15 bra 	BB0_12;

	and.b32  	%r145, %r14, 255;
	add.s32 	%r146, %r145, -128;
	shr.u32 	%r147, %r146, 5;
	and.b32  	%r20, %r13, -2147483648;
	cvta.to.local.u64 	%rd53, %rd45;
	st.local.u32 	[%rd53+24], %r293;
	mov.u32 	%r148, 6;
	sub.s32 	%r149, %r148, %r147;
	mul.wide.s32 	%rd54, %r149, 4;
	add.s64 	%rd8, %rd53, %rd54;
	ld.local.u32 	%r294, [%rd8];
	ld.local.u32 	%r295, [%rd8+-4];
	and.b32  	%r23, %r14, 31;
	setp.eq.s32	%p16, %r23, 0;
	@%p16 bra 	BB0_15;

	mov.u32 	%r150, 32;
	sub.s32 	%r151, %r150, %r23;
	shr.u32 	%r152, %r295, %r151;
	shl.b32 	%r153, %r294, %r23;
	add.s32 	%r294, %r152, %r153;
	ld.local.u32 	%r154, [%rd8+-8];
	shr.u32 	%r155, %r154, %r151;
	shl.b32 	%r156, %r295, %r23;
	add.s32 	%r295, %r155, %r156;

BB0_15:
	shr.u32 	%r157, %r295, 30;
	shl.b32 	%r158, %r294, 2;
	add.s32 	%r296, %r157, %r158;
	shl.b32 	%r29, %r295, 2;
	shr.u32 	%r159, %r296, 31;
	shr.u32 	%r160, %r294, 30;
	add.s32 	%r30, %r159, %r160;
	setp.eq.s32	%p17, %r159, 0;
	@%p17 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r297, %r20;
	mov.u32 	%r298, %r29;
	bra.uni 	BB0_18;

BB0_17:
	not.b32 	%r161, %r296;
	neg.s32 	%r298, %r29;
	setp.eq.s32	%p18, %r29, 0;
	selp.u32	%r162, 1, 0, %p18;
	add.s32 	%r296, %r162, %r161;
	xor.b32  	%r297, %r20, -2147483648;

BB0_18:
	clz.b32 	%r300, %r296;
	setp.eq.s32	%p19, %r300, 0;
	shl.b32 	%r163, %r296, %r300;
	mov.u32 	%r164, 32;
	sub.s32 	%r165, %r164, %r300;
	shr.u32 	%r166, %r298, %r165;
	add.s32 	%r167, %r166, %r163;
	selp.b32	%r38, %r296, %r167, %p19;
	mov.u32 	%r168, -921707870;
	mul.hi.u32 	%r299, %r38, %r168;
	setp.eq.s32	%p20, %r20, 0;
	neg.s32 	%r169, %r30;
	selp.b32	%r301, %r30, %r169, %p20;
	setp.lt.s32	%p21, %r299, 1;
	@%p21 bra 	BB0_20;

	mul.lo.s32 	%r170, %r38, -921707870;
	shr.u32 	%r171, %r170, 31;
	shl.b32 	%r172, %r299, 1;
	add.s32 	%r299, %r171, %r172;
	add.s32 	%r300, %r300, 1;

BB0_20:
	mov.u32 	%r173, 126;
	sub.s32 	%r174, %r173, %r300;
	shl.b32 	%r175, %r174, 23;
	add.s32 	%r176, %r299, 1;
	shr.u32 	%r177, %r176, 7;
	add.s32 	%r178, %r177, 1;
	shr.u32 	%r179, %r178, 1;
	add.s32 	%r180, %r179, %r175;
	or.b32  	%r181, %r180, %r297;
	mov.b32 	 %f575, %r181;

BB0_21:
	mul.rn.f32 	%f39, %f575, %f575;
	add.s32 	%r46, %r301, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p22, %r47, 0;
	@%p22 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f209, 0f3C08839E;
	mov.f32 	%f210, 0fB94CA1F9;
	fma.rn.f32 	%f576, %f210, %f39, %f209;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f207, 0fBAB6061A;
	mov.f32 	%f208, 0f37CCF5CE;
	fma.rn.f32 	%f576, %f208, %f39, %f207;

BB0_24:
	@%p22 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f214, 0fBE2AAAA3;
	fma.rn.f32 	%f215, %f576, %f39, %f214;
	mov.f32 	%f216, 0f00000000;
	fma.rn.f32 	%f577, %f215, %f39, %f216;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f211, 0f3D2AAAA5;
	fma.rn.f32 	%f212, %f576, %f39, %f211;
	mov.f32 	%f213, 0fBF000000;
	fma.rn.f32 	%f577, %f212, %f39, %f213;

BB0_27:
	fma.rn.f32 	%f578, %f577, %f575, %f575;
	@%p22 bra 	BB0_29;

	mov.f32 	%f217, 0f3F800000;
	fma.rn.f32 	%f578, %f577, %f39, %f217;

BB0_29:
	and.b32  	%r182, %r46, 2;
	setp.eq.s32	%p25, %r182, 0;
	@%p25 bra 	BB0_31;

	mov.f32 	%f218, 0f00000000;
	mov.f32 	%f219, 0fBF800000;
	fma.rn.f32 	%f578, %f578, %f219, %f218;

BB0_31:
	@%p13 bra 	BB0_33;

	mov.f32 	%f220, 0f00000000;
	mul.rn.f32 	%f580, %f580, %f220;

BB0_33:
	mul.f32 	%f221, %f580, 0f3F22F983;
	cvt.rni.s32.f32	%r311, %f221;
	cvt.rn.f32.s32	%f222, %r311;
	neg.f32 	%f223, %f222;
	fma.rn.f32 	%f225, %f223, %f201, %f580;
	fma.rn.f32 	%f227, %f223, %f203, %f225;
	fma.rn.f32 	%f581, %f223, %f205, %f227;
	abs.f32 	%f229, %f580;
	setp.leu.f32	%p27, %f229, 0f47CE4780;
	@%p27 bra 	BB0_44;

	add.u64 	%rd56, %SP, 12;
	cvta.to.local.u64 	%rd9, %rd56;
	mov.b32 	 %r49, %f580;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r185, %r49, 8;
	or.b32  	%r51, %r185, -2147483648;
	mov.u32 	%r302, 0;
	mov.u64 	%rd114, %rd9;
	mov.u64 	%rd115, %rd21;
	mov.u32 	%r303, %r302;

BB0_35:
	.pragma "nounroll";
	shl.b64 	%rd57, %rd115, 2;
	mov.u64 	%rd58, __cudart_i2opi_f;
	add.s64 	%rd59, %rd58, %rd57;
	ld.const.u32 	%r188, [%rd59];
	// inline asm
	{
	mad.lo.cc.u32   %r186, %r188, %r51, %r303;
	madc.hi.u32     %r303, %r188, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd114], %r186;
	add.s32 	%r302, %r302, 1;
	cvt.s64.s32	%rd115, %r302;
	mul.wide.s32 	%rd60, %r302, 4;
	add.s64 	%rd114, %rd9, %rd60;
	setp.ne.s32	%p28, %r302, 6;
	@%p28 bra 	BB0_35;

	and.b32  	%r191, %r50, 255;
	add.s32 	%r192, %r191, -128;
	shr.u32 	%r193, %r192, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd62, %rd56;
	st.local.u32 	[%rd62+24], %r303;
	mov.u32 	%r194, 6;
	sub.s32 	%r195, %r194, %r193;
	mul.wide.s32 	%rd63, %r195, 4;
	add.s64 	%rd15, %rd62, %rd63;
	ld.local.u32 	%r304, [%rd15];
	ld.local.u32 	%r305, [%rd15+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p29, %r59, 0;
	@%p29 bra 	BB0_38;

	mov.u32 	%r196, 32;
	sub.s32 	%r197, %r196, %r59;
	shr.u32 	%r198, %r305, %r197;
	shl.b32 	%r199, %r304, %r59;
	add.s32 	%r304, %r198, %r199;
	ld.local.u32 	%r200, [%rd15+-8];
	shr.u32 	%r201, %r200, %r197;
	shl.b32 	%r202, %r305, %r59;
	add.s32 	%r305, %r201, %r202;

BB0_38:
	shr.u32 	%r203, %r305, 30;
	shl.b32 	%r204, %r304, 2;
	add.s32 	%r306, %r203, %r204;
	shl.b32 	%r65, %r305, 2;
	shr.u32 	%r205, %r306, 31;
	shr.u32 	%r206, %r304, 30;
	add.s32 	%r66, %r205, %r206;
	setp.eq.s32	%p30, %r205, 0;
	@%p30 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r307, %r56;
	mov.u32 	%r308, %r65;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r207, %r306;
	neg.s32 	%r308, %r65;
	setp.eq.s32	%p31, %r65, 0;
	selp.u32	%r208, 1, 0, %p31;
	add.s32 	%r306, %r208, %r207;
	xor.b32  	%r307, %r56, -2147483648;

BB0_41:
	clz.b32 	%r310, %r306;
	setp.eq.s32	%p32, %r310, 0;
	shl.b32 	%r209, %r306, %r310;
	mov.u32 	%r210, 32;
	sub.s32 	%r211, %r210, %r310;
	shr.u32 	%r212, %r308, %r211;
	add.s32 	%r213, %r212, %r209;
	selp.b32	%r74, %r306, %r213, %p32;
	mov.u32 	%r214, -921707870;
	mul.hi.u32 	%r309, %r74, %r214;
	setp.eq.s32	%p33, %r56, 0;
	neg.s32 	%r215, %r66;
	selp.b32	%r311, %r66, %r215, %p33;
	setp.lt.s32	%p34, %r309, 1;
	@%p34 bra 	BB0_43;

	mul.lo.s32 	%r216, %r74, -921707870;
	shr.u32 	%r217, %r216, 31;
	shl.b32 	%r218, %r309, 1;
	add.s32 	%r309, %r217, %r218;
	add.s32 	%r310, %r310, 1;

BB0_43:
	mov.u32 	%r219, 126;
	sub.s32 	%r220, %r219, %r310;
	shl.b32 	%r221, %r220, 23;
	add.s32 	%r222, %r309, 1;
	shr.u32 	%r223, %r222, 7;
	add.s32 	%r224, %r223, 1;
	shr.u32 	%r225, %r224, 1;
	add.s32 	%r226, %r225, %r221;
	or.b32  	%r227, %r226, %r307;
	mov.b32 	 %f581, %r227;

BB0_44:
	mul.rn.f32 	%f56, %f581, %f581;
	and.b32  	%r82, %r311, 1;
	setp.eq.s32	%p35, %r82, 0;
	@%p35 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f232, 0f3C08839E;
	mov.f32 	%f233, 0fB94CA1F9;
	fma.rn.f32 	%f582, %f233, %f56, %f232;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f230, 0fBAB6061A;
	mov.f32 	%f231, 0f37CCF5CE;
	fma.rn.f32 	%f582, %f231, %f56, %f230;

BB0_47:
	@%p35 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f237, 0fBE2AAAA3;
	fma.rn.f32 	%f238, %f582, %f56, %f237;
	mov.f32 	%f239, 0f00000000;
	fma.rn.f32 	%f583, %f238, %f56, %f239;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f234, 0f3D2AAAA5;
	fma.rn.f32 	%f235, %f582, %f56, %f234;
	mov.f32 	%f236, 0fBF000000;
	fma.rn.f32 	%f583, %f235, %f56, %f236;

BB0_50:
	fma.rn.f32 	%f584, %f583, %f581, %f581;
	@%p35 bra 	BB0_52;

	mov.f32 	%f240, 0f3F800000;
	fma.rn.f32 	%f584, %f583, %f56, %f240;

BB0_52:
	and.b32  	%r228, %r311, 2;
	setp.eq.s32	%p38, %r228, 0;
	@%p38 bra 	BB0_54;

	mov.f32 	%f241, 0f00000000;
	mov.f32 	%f242, 0fBF800000;
	fma.rn.f32 	%f584, %f584, %f242, %f241;

BB0_54:
	mul.f32 	%f251, %f31, %f578;
	add.u64 	%rd64, %SP, 0;
	cvta.to.local.u64 	%rd65, %rd64;
	mul.f32 	%f252, %f251, %f251;
	mov.f32 	%f253, 0f3F800000;
	sub.f32 	%f254, %f253, %f252;
	mul.f32 	%f255, %f31, %f584;
	mul.f32 	%f256, %f255, %f255;
	sub.f32 	%f257, %f254, %f256;
	mov.f32 	%f258, 0f00000000;
	max.f32 	%f259, %f258, %f257;
	sqrt.rn.f32 	%f260, %f259;
	mul.f32 	%f261, %f13, %f255;
	mul.f32 	%f262, %f14, %f255;
	mul.f32 	%f263, %f15, %f255;
	fma.rn.f32 	%f264, %f22, %f251, %f261;
	fma.rn.f32 	%f265, %f21, %f251, %f262;
	fma.rn.f32 	%f266, %f20, %f251, %f263;
	fma.rn.f32 	%f246, %f565, %f260, %f264;
	fma.rn.f32 	%f247, %f566, %f260, %f265;
	fma.rn.f32 	%f248, %f567, %f260, %f266;
	mov.u32 	%r230, 0;
	st.local.u32 	[%rd65+8], %r230;
	st.local.u32 	[%rd65+4], %r230;
	st.local.u32 	[%rd65], %r230;
	ld.global.u32 	%r229, [root];
	mov.f32 	%f250, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r229, %f10, %f11, %f12, %f246, %f247, %f248, %r230, %f27, %f250, %rd64, %r117);
	// inline asm
	ld.local.f32 	%f267, [%rd65];
	add.f32 	%f588, %f588, %f267;
	ld.local.f32 	%f268, [%rd65+4];
	add.f32 	%f587, %f587, %f268;
	ld.local.f32 	%f269, [%rd65+8];
	add.f32 	%f586, %f586, %f269;
	ld.global.u32 	%r287, [samples];
	add.s32 	%r290, %r290, 1;
	setp.lt.s32	%p39, %r290, %r287;
	@%p39 bra 	BB0_8;

BB0_55:
	add.s32 	%r288, %r288, 1;
	setp.lt.s32	%p40, %r288, %r287;
	@%p40 bra 	BB0_6;
	bra.uni 	BB0_56;

BB0_4:
	mov.f32 	%f587, %f586;
	mov.f32 	%f588, %f586;

BB0_56:
	cvt.rn.f32.u32	%f270, %r3;
	cvt.rn.f32.u32	%f271, %r2;
	tex.2d.v4.f32.f32	{%f272, %f273, %f274, %f275}, [albedoTex, {%f271, %f270}];
	mul.lo.s32 	%r232, %r287, %r287;
	cvt.rn.f32.s32	%f276, %r232;
	rcp.rn.f32 	%f277, %f276;
	mul.f32 	%f278, %f588, %f277;
	mul.f32 	%f279, %f587, %f277;
	mul.f32 	%f280, %f586, %f277;
	mul.f32 	%f77, %f278, %f272;
	mul.f32 	%f78, %f279, %f273;
	mul.f32 	%f79, %f280, %f274;
	add.f32 	%f80, %f139, %f77;
	add.f32 	%f81, %f140, %f78;
	add.f32 	%f82, %f141, %f79;
	ld.global.u32 	%r316, [imageEnabled];
	and.b32  	%r233, %r316, 1;
	setp.eq.b32	%p41, %r233, 1;
	@!%p41 bra 	BB0_91;
	bra.uni 	BB0_57;

BB0_57:
	mov.f32 	%f283, 0f3E666666;
	cvt.rzi.f32.f32	%f284, %f283;
	fma.rn.f32 	%f285, %f284, 0fC0000000, 0f3EE66666;
	abs.f32 	%f83, %f285;
	abs.f32 	%f84, %f80;
	setp.lt.f32	%p42, %f84, 0f00800000;
	mul.f32 	%f286, %f84, 0f4B800000;
	selp.f32	%f287, 0fC3170000, 0fC2FE0000, %p42;
	selp.f32	%f288, %f286, %f84, %p42;
	mov.b32 	 %r234, %f288;
	and.b32  	%r235, %r234, 8388607;
	or.b32  	%r236, %r235, 1065353216;
	mov.b32 	 %f289, %r236;
	shr.u32 	%r237, %r234, 23;
	cvt.rn.f32.u32	%f290, %r237;
	add.f32 	%f291, %f287, %f290;
	setp.gt.f32	%p43, %f289, 0f3FB504F3;
	mul.f32 	%f292, %f289, 0f3F000000;
	add.f32 	%f293, %f291, 0f3F800000;
	selp.f32	%f294, %f292, %f289, %p43;
	selp.f32	%f295, %f293, %f291, %p43;
	add.f32 	%f296, %f294, 0fBF800000;
	add.f32 	%f282, %f294, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f281,%f282;
	// inline asm
	add.f32 	%f297, %f296, %f296;
	mul.f32 	%f298, %f281, %f297;
	mul.f32 	%f299, %f298, %f298;
	mov.f32 	%f300, 0f3C4CAF63;
	mov.f32 	%f301, 0f3B18F0FE;
	fma.rn.f32 	%f302, %f301, %f299, %f300;
	mov.f32 	%f303, 0f3DAAAABD;
	fma.rn.f32 	%f304, %f302, %f299, %f303;
	mul.rn.f32 	%f305, %f304, %f299;
	mul.rn.f32 	%f306, %f305, %f298;
	sub.f32 	%f307, %f296, %f298;
	neg.f32 	%f308, %f298;
	add.f32 	%f309, %f307, %f307;
	fma.rn.f32 	%f310, %f308, %f296, %f309;
	mul.rn.f32 	%f311, %f281, %f310;
	add.f32 	%f312, %f306, %f298;
	sub.f32 	%f313, %f298, %f312;
	add.f32 	%f314, %f306, %f313;
	add.f32 	%f315, %f311, %f314;
	add.f32 	%f316, %f312, %f315;
	sub.f32 	%f317, %f312, %f316;
	add.f32 	%f318, %f315, %f317;
	mov.f32 	%f319, 0f3F317200;
	mul.rn.f32 	%f320, %f295, %f319;
	mov.f32 	%f321, 0f35BFBE8E;
	mul.rn.f32 	%f322, %f295, %f321;
	add.f32 	%f323, %f320, %f316;
	sub.f32 	%f324, %f320, %f323;
	add.f32 	%f325, %f316, %f324;
	add.f32 	%f326, %f318, %f325;
	add.f32 	%f327, %f322, %f326;
	add.f32 	%f328, %f323, %f327;
	sub.f32 	%f329, %f323, %f328;
	add.f32 	%f330, %f327, %f329;
	mov.f32 	%f331, 0f3EE66666;
	mul.rn.f32 	%f332, %f331, %f328;
	neg.f32 	%f333, %f332;
	fma.rn.f32 	%f334, %f331, %f328, %f333;
	fma.rn.f32 	%f335, %f331, %f330, %f334;
	mov.f32 	%f336, 0f00000000;
	fma.rn.f32 	%f337, %f336, %f328, %f335;
	add.rn.f32 	%f338, %f332, %f337;
	neg.f32 	%f339, %f338;
	add.rn.f32 	%f340, %f332, %f339;
	add.rn.f32 	%f341, %f340, %f337;
	mov.b32 	 %r238, %f338;
	setp.eq.s32	%p44, %r238, 1118925336;
	add.s32 	%r239, %r238, -1;
	mov.b32 	 %f342, %r239;
	add.f32 	%f343, %f341, 0f37000000;
	selp.f32	%f344, %f342, %f338, %p44;
	selp.f32	%f85, %f343, %f341, %p44;
	mul.f32 	%f345, %f344, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f346, %f345;
	mov.f32 	%f347, 0fBF317200;
	fma.rn.f32 	%f348, %f346, %f347, %f344;
	mov.f32 	%f349, 0fB5BFBE8E;
	fma.rn.f32 	%f350, %f346, %f349, %f348;
	mul.f32 	%f351, %f350, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f352, %f351;
	add.f32 	%f353, %f346, 0f00000000;
	ex2.approx.f32 	%f354, %f353;
	mul.f32 	%f355, %f352, %f354;
	setp.lt.f32	%p45, %f344, 0fC2D20000;
	selp.f32	%f356, 0f00000000, %f355, %p45;
	setp.gt.f32	%p46, %f344, 0f42D20000;
	selp.f32	%f592, 0f7F800000, %f356, %p46;
	setp.eq.f32	%p47, %f592, 0f7F800000;
	@%p47 bra 	BB0_59;

	fma.rn.f32 	%f592, %f592, %f85, %f592;

BB0_59:
	setp.lt.f32	%p48, %f80, 0f00000000;
	setp.eq.f32	%p49, %f83, 0f3F800000;
	and.pred  	%p1, %p48, %p49;
	mov.b32 	 %r240, %f592;
	xor.b32  	%r241, %r240, -2147483648;
	mov.b32 	 %f357, %r241;
	selp.f32	%f594, %f357, %f592, %p1;
	setp.eq.f32	%p50, %f80, 0f00000000;
	@%p50 bra 	BB0_62;
	bra.uni 	BB0_60;

BB0_62:
	add.f32 	%f360, %f80, %f80;
	selp.f32	%f594, %f360, 0f00000000, %p49;
	bra.uni 	BB0_63;

BB0_60:
	setp.geu.f32	%p51, %f80, 0f00000000;
	@%p51 bra 	BB0_63;

	mov.f32 	%f558, 0f3EE66666;
	cvt.rzi.f32.f32	%f359, %f558;
	setp.neu.f32	%p52, %f359, 0f3EE66666;
	selp.f32	%f594, 0f7FFFFFFF, %f594, %p52;

BB0_63:
	abs.f32 	%f535, %f80;
	add.f32 	%f361, %f535, 0f3EE66666;
	mov.b32 	 %r242, %f361;
	setp.lt.s32	%p54, %r242, 2139095040;
	@%p54 bra 	BB0_68;

	abs.f32 	%f556, %f80;
	setp.gtu.f32	%p55, %f556, 0f7F800000;
	@%p55 bra 	BB0_67;
	bra.uni 	BB0_65;

BB0_67:
	add.f32 	%f594, %f80, 0f3EE66666;
	bra.uni 	BB0_68;

BB0_65:
	abs.f32 	%f557, %f80;
	setp.neu.f32	%p56, %f557, 0f7F800000;
	@%p56 bra 	BB0_68;

	selp.f32	%f594, 0fFF800000, 0f7F800000, %p1;

BB0_68:
	mov.f32 	%f544, 0fB5BFBE8E;
	mov.f32 	%f543, 0fBF317200;
	mov.f32 	%f542, 0f00000000;
	mov.f32 	%f541, 0f35BFBE8E;
	mov.f32 	%f540, 0f3F317200;
	mov.f32 	%f539, 0f3DAAAABD;
	mov.f32 	%f538, 0f3C4CAF63;
	mov.f32 	%f537, 0f3B18F0FE;
	mov.f32 	%f536, 0f3EE66666;
	setp.eq.f32	%p57, %f80, 0f3F800000;
	selp.f32	%f96, 0f3F800000, %f594, %p57;
	abs.f32 	%f97, %f81;
	setp.lt.f32	%p58, %f97, 0f00800000;
	mul.f32 	%f364, %f97, 0f4B800000;
	selp.f32	%f365, 0fC3170000, 0fC2FE0000, %p58;
	selp.f32	%f366, %f364, %f97, %p58;
	mov.b32 	 %r243, %f366;
	and.b32  	%r244, %r243, 8388607;
	or.b32  	%r245, %r244, 1065353216;
	mov.b32 	 %f367, %r245;
	shr.u32 	%r246, %r243, 23;
	cvt.rn.f32.u32	%f368, %r246;
	add.f32 	%f369, %f365, %f368;
	setp.gt.f32	%p59, %f367, 0f3FB504F3;
	mul.f32 	%f370, %f367, 0f3F000000;
	add.f32 	%f371, %f369, 0f3F800000;
	selp.f32	%f372, %f370, %f367, %p59;
	selp.f32	%f373, %f371, %f369, %p59;
	add.f32 	%f374, %f372, 0fBF800000;
	add.f32 	%f363, %f372, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f362,%f363;
	// inline asm
	add.f32 	%f375, %f374, %f374;
	mul.f32 	%f376, %f362, %f375;
	mul.f32 	%f377, %f376, %f376;
	fma.rn.f32 	%f380, %f537, %f377, %f538;
	fma.rn.f32 	%f382, %f380, %f377, %f539;
	mul.rn.f32 	%f383, %f382, %f377;
	mul.rn.f32 	%f384, %f383, %f376;
	sub.f32 	%f385, %f374, %f376;
	neg.f32 	%f386, %f376;
	add.f32 	%f387, %f385, %f385;
	fma.rn.f32 	%f388, %f386, %f374, %f387;
	mul.rn.f32 	%f389, %f362, %f388;
	add.f32 	%f390, %f384, %f376;
	sub.f32 	%f391, %f376, %f390;
	add.f32 	%f392, %f384, %f391;
	add.f32 	%f393, %f389, %f392;
	add.f32 	%f394, %f390, %f393;
	sub.f32 	%f395, %f390, %f394;
	add.f32 	%f396, %f393, %f395;
	mul.rn.f32 	%f398, %f373, %f540;
	mul.rn.f32 	%f400, %f373, %f541;
	add.f32 	%f401, %f398, %f394;
	sub.f32 	%f402, %f398, %f401;
	add.f32 	%f403, %f394, %f402;
	add.f32 	%f404, %f396, %f403;
	add.f32 	%f405, %f400, %f404;
	add.f32 	%f406, %f401, %f405;
	sub.f32 	%f407, %f401, %f406;
	add.f32 	%f408, %f405, %f407;
	mul.rn.f32 	%f410, %f536, %f406;
	neg.f32 	%f411, %f410;
	fma.rn.f32 	%f412, %f536, %f406, %f411;
	fma.rn.f32 	%f413, %f536, %f408, %f412;
	fma.rn.f32 	%f415, %f542, %f406, %f413;
	add.rn.f32 	%f416, %f410, %f415;
	neg.f32 	%f417, %f416;
	add.rn.f32 	%f418, %f410, %f417;
	add.rn.f32 	%f419, %f418, %f415;
	mov.b32 	 %r247, %f416;
	setp.eq.s32	%p60, %r247, 1118925336;
	add.s32 	%r248, %r247, -1;
	mov.b32 	 %f420, %r248;
	add.f32 	%f421, %f419, 0f37000000;
	selp.f32	%f422, %f420, %f416, %p60;
	selp.f32	%f98, %f421, %f419, %p60;
	mul.f32 	%f423, %f422, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f424, %f423;
	fma.rn.f32 	%f426, %f424, %f543, %f422;
	fma.rn.f32 	%f428, %f424, %f544, %f426;
	mul.f32 	%f429, %f428, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f430, %f429;
	add.f32 	%f431, %f424, 0f00000000;
	ex2.approx.f32 	%f432, %f431;
	mul.f32 	%f433, %f430, %f432;
	setp.lt.f32	%p61, %f422, 0fC2D20000;
	selp.f32	%f434, 0f00000000, %f433, %p61;
	setp.gt.f32	%p62, %f422, 0f42D20000;
	selp.f32	%f595, 0f7F800000, %f434, %p62;
	setp.eq.f32	%p63, %f595, 0f7F800000;
	@%p63 bra 	BB0_70;

	fma.rn.f32 	%f595, %f595, %f98, %f595;

BB0_70:
	setp.lt.f32	%p64, %f81, 0f00000000;
	and.pred  	%p2, %p64, %p49;
	mov.b32 	 %r249, %f595;
	xor.b32  	%r250, %r249, -2147483648;
	mov.b32 	 %f435, %r250;
	selp.f32	%f597, %f435, %f595, %p2;
	setp.eq.f32	%p66, %f81, 0f00000000;
	@%p66 bra 	BB0_73;
	bra.uni 	BB0_71;

BB0_73:
	add.f32 	%f438, %f81, %f81;
	selp.f32	%f597, %f438, 0f00000000, %p49;
	bra.uni 	BB0_74;

BB0_71:
	setp.geu.f32	%p67, %f81, 0f00000000;
	@%p67 bra 	BB0_74;

	mov.f32 	%f555, 0f3EE66666;
	cvt.rzi.f32.f32	%f437, %f555;
	setp.neu.f32	%p68, %f437, 0f3EE66666;
	selp.f32	%f597, 0f7FFFFFFF, %f597, %p68;

BB0_74:
	abs.f32 	%f559, %f81;
	add.f32 	%f439, %f559, 0f3EE66666;
	mov.b32 	 %r251, %f439;
	setp.lt.s32	%p70, %r251, 2139095040;
	@%p70 bra 	BB0_79;

	abs.f32 	%f560, %f81;
	setp.gtu.f32	%p71, %f560, 0f7F800000;
	@%p71 bra 	BB0_78;
	bra.uni 	BB0_76;

BB0_78:
	add.f32 	%f597, %f81, 0f3EE66666;
	bra.uni 	BB0_79;

BB0_76:
	abs.f32 	%f561, %f81;
	setp.neu.f32	%p72, %f561, 0f7F800000;
	@%p72 bra 	BB0_79;

	selp.f32	%f597, 0fFF800000, 0f7F800000, %p2;

BB0_79:
	mov.f32 	%f553, 0fB5BFBE8E;
	mov.f32 	%f552, 0fBF317200;
	mov.f32 	%f551, 0f00000000;
	mov.f32 	%f550, 0f35BFBE8E;
	mov.f32 	%f549, 0f3F317200;
	mov.f32 	%f548, 0f3DAAAABD;
	mov.f32 	%f547, 0f3C4CAF63;
	mov.f32 	%f546, 0f3B18F0FE;
	mov.f32 	%f545, 0f3EE66666;
	setp.eq.f32	%p73, %f81, 0f3F800000;
	selp.f32	%f109, 0f3F800000, %f597, %p73;
	abs.f32 	%f110, %f82;
	setp.lt.f32	%p74, %f110, 0f00800000;
	mul.f32 	%f442, %f110, 0f4B800000;
	selp.f32	%f443, 0fC3170000, 0fC2FE0000, %p74;
	selp.f32	%f444, %f442, %f110, %p74;
	mov.b32 	 %r252, %f444;
	and.b32  	%r253, %r252, 8388607;
	or.b32  	%r254, %r253, 1065353216;
	mov.b32 	 %f445, %r254;
	shr.u32 	%r255, %r252, 23;
	cvt.rn.f32.u32	%f446, %r255;
	add.f32 	%f447, %f443, %f446;
	setp.gt.f32	%p75, %f445, 0f3FB504F3;
	mul.f32 	%f448, %f445, 0f3F000000;
	add.f32 	%f449, %f447, 0f3F800000;
	selp.f32	%f450, %f448, %f445, %p75;
	selp.f32	%f451, %f449, %f447, %p75;
	add.f32 	%f452, %f450, 0fBF800000;
	add.f32 	%f441, %f450, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f440,%f441;
	// inline asm
	add.f32 	%f453, %f452, %f452;
	mul.f32 	%f454, %f440, %f453;
	mul.f32 	%f455, %f454, %f454;
	fma.rn.f32 	%f458, %f546, %f455, %f547;
	fma.rn.f32 	%f460, %f458, %f455, %f548;
	mul.rn.f32 	%f461, %f460, %f455;
	mul.rn.f32 	%f462, %f461, %f454;
	sub.f32 	%f463, %f452, %f454;
	neg.f32 	%f464, %f454;
	add.f32 	%f465, %f463, %f463;
	fma.rn.f32 	%f466, %f464, %f452, %f465;
	mul.rn.f32 	%f467, %f440, %f466;
	add.f32 	%f468, %f462, %f454;
	sub.f32 	%f469, %f454, %f468;
	add.f32 	%f470, %f462, %f469;
	add.f32 	%f471, %f467, %f470;
	add.f32 	%f472, %f468, %f471;
	sub.f32 	%f473, %f468, %f472;
	add.f32 	%f474, %f471, %f473;
	mul.rn.f32 	%f476, %f451, %f549;
	mul.rn.f32 	%f478, %f451, %f550;
	add.f32 	%f479, %f476, %f472;
	sub.f32 	%f480, %f476, %f479;
	add.f32 	%f481, %f472, %f480;
	add.f32 	%f482, %f474, %f481;
	add.f32 	%f483, %f478, %f482;
	add.f32 	%f484, %f479, %f483;
	sub.f32 	%f485, %f479, %f484;
	add.f32 	%f486, %f483, %f485;
	mul.rn.f32 	%f488, %f545, %f484;
	neg.f32 	%f489, %f488;
	fma.rn.f32 	%f490, %f545, %f484, %f489;
	fma.rn.f32 	%f491, %f545, %f486, %f490;
	fma.rn.f32 	%f493, %f551, %f484, %f491;
	add.rn.f32 	%f494, %f488, %f493;
	neg.f32 	%f495, %f494;
	add.rn.f32 	%f496, %f488, %f495;
	add.rn.f32 	%f497, %f496, %f493;
	mov.b32 	 %r256, %f494;
	setp.eq.s32	%p76, %r256, 1118925336;
	add.s32 	%r257, %r256, -1;
	mov.b32 	 %f498, %r257;
	add.f32 	%f499, %f497, 0f37000000;
	selp.f32	%f500, %f498, %f494, %p76;
	selp.f32	%f111, %f499, %f497, %p76;
	mul.f32 	%f501, %f500, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f502, %f501;
	fma.rn.f32 	%f504, %f502, %f552, %f500;
	fma.rn.f32 	%f506, %f502, %f553, %f504;
	mul.f32 	%f507, %f506, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f508, %f507;
	add.f32 	%f509, %f502, 0f00000000;
	ex2.approx.f32 	%f510, %f509;
	mul.f32 	%f511, %f508, %f510;
	setp.lt.f32	%p77, %f500, 0fC2D20000;
	selp.f32	%f512, 0f00000000, %f511, %p77;
	setp.gt.f32	%p78, %f500, 0f42D20000;
	selp.f32	%f598, 0f7F800000, %f512, %p78;
	setp.eq.f32	%p79, %f598, 0f7F800000;
	@%p79 bra 	BB0_81;

	fma.rn.f32 	%f598, %f598, %f111, %f598;

BB0_81:
	setp.lt.f32	%p80, %f82, 0f00000000;
	and.pred  	%p3, %p80, %p49;
	mov.b32 	 %r258, %f598;
	xor.b32  	%r259, %r258, -2147483648;
	mov.b32 	 %f513, %r259;
	selp.f32	%f600, %f513, %f598, %p3;
	setp.eq.f32	%p82, %f82, 0f00000000;
	@%p82 bra 	BB0_84;
	bra.uni 	BB0_82;

BB0_84:
	add.f32 	%f516, %f82, %f82;
	selp.f32	%f600, %f516, 0f00000000, %p49;
	bra.uni 	BB0_85;

BB0_82:
	setp.geu.f32	%p83, %f82, 0f00000000;
	@%p83 bra 	BB0_85;

	mov.f32 	%f554, 0f3EE66666;
	cvt.rzi.f32.f32	%f515, %f554;
	setp.neu.f32	%p84, %f515, 0f3EE66666;
	selp.f32	%f600, 0f7FFFFFFF, %f600, %p84;

BB0_85:
	abs.f32 	%f562, %f82;
	add.f32 	%f517, %f562, 0f3EE66666;
	mov.b32 	 %r260, %f517;
	setp.lt.s32	%p86, %r260, 2139095040;
	@%p86 bra 	BB0_90;

	abs.f32 	%f563, %f82;
	setp.gtu.f32	%p87, %f563, 0f7F800000;
	@%p87 bra 	BB0_89;
	bra.uni 	BB0_87;

BB0_89:
	add.f32 	%f600, %f82, 0f3EE66666;
	bra.uni 	BB0_90;

BB0_87:
	abs.f32 	%f564, %f82;
	setp.neu.f32	%p88, %f564, 0f7F800000;
	@%p88 bra 	BB0_90;

	selp.f32	%f600, 0fFF800000, 0f7F800000, %p3;

BB0_90:
	mov.u32 	%r282, 4;
	mov.u64 	%rd109, 0;
	mov.u32 	%r281, 2;
	setp.eq.f32	%p89, %f82, 0f3F800000;
	selp.f32	%f518, 0f3F800000, %f600, %p89;
	cvt.u64.u32	%rd70, %r3;
	cvt.u64.u32	%rd69, %r2;
	mov.u64 	%rd73, image;
	cvta.global.u64 	%rd68, %rd73;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd68, %r281, %r282, %rd69, %rd70, %rd109, %rd109);
	// inline asm
	cvt.sat.f32.f32	%f519, %f518;
	mul.f32 	%f520, %f519, 0f437FFD71;
	cvt.rzi.u32.f32	%r263, %f520;
	cvt.sat.f32.f32	%f521, %f109;
	mul.f32 	%f522, %f521, 0f437FFD71;
	cvt.rzi.u32.f32	%r264, %f522;
	cvt.sat.f32.f32	%f523, %f96;
	mul.f32 	%f524, %f523, 0f437FFD71;
	cvt.rzi.u32.f32	%r265, %f524;
	cvt.u16.u32	%rs16, %r263;
	cvt.u16.u32	%rs17, %r265;
	cvt.u16.u32	%rs18, %r264;
	mov.u16 	%rs19, 255;
	st.v4.u8 	[%rd67], {%rs16, %rs18, %rs17, %rs19};
	ld.global.u32 	%r316, [imageEnabled];

BB0_91:
	and.b32  	%r266, %r316, 4;
	setp.eq.s32	%p90, %r266, 0;
	@%p90 bra 	BB0_93;

	mov.u32 	%r284, 8;
	mov.u64 	%rd110, 0;
	mov.u32 	%r283, 2;
	cvt.u64.u32	%rd76, %r2;
	cvt.u64.u32	%rd77, %r3;
	mov.u64 	%rd80, image_HDR;
	cvta.global.u64 	%rd75, %rd80;
	// inline asm
	call (%rd74), _rt_buffer_get_64, (%rd75, %r283, %r284, %rd76, %rd77, %rd110, %rd110);
	// inline asm
	mov.f32 	%f528, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f528;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f82;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f81;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f80;}

	// inline asm
	st.v4.u16 	[%rd74], {%rs20, %rs21, %rs22, %rs23};
	ld.global.u32 	%r316, [imageEnabled];

BB0_93:
	and.b32  	%r269, %r316, 16;
	setp.eq.s32	%p91, %r269, 0;
	@%p91 bra 	BB0_101;

	mov.u32 	%r286, 8;
	mov.u64 	%rd111, 0;
	mov.u32 	%r285, 2;
	cvt.u64.u32	%rd83, %r2;
	cvt.u64.u32	%rd84, %r3;
	mov.u64 	%rd87, image_HDR2;
	cvta.global.u64 	%rd82, %rd87;
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd82, %r285, %r286, %rd83, %rd84, %rd111, %rd111);
	// inline asm
	mov.f32 	%f532, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f532;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f79;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f78;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f77;}

	// inline asm
	st.v4.u16 	[%rd81], {%rs24, %rs25, %rs26, %rs27};

BB0_101:
	ret;
}


