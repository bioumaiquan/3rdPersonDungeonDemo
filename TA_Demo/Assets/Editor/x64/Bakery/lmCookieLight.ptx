//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 4 .u32 samples;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightRadius;
.global .align 4 .b8 lightPos[12];
.global .align 4 .b8 lightColor[12];
.global .align 4 .u32 ignoreNormal;
.global .align 4 .u32 lightCookie;
.global .align 4 .b8 lightMatrix[36];
.global .align 4 .f32 lightFOV;
.global .align 4 .f32 lightFalloffFakeDistanceMult;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightRadiusE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightCookieE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightMatrixE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightFOVE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo28lightFalloffFakeDistanceMultE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11lightRadiusE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename11lightCookieE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename11lightMatrixE[10] = {77, 97, 116, 114, 105, 120, 51, 120, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightFOVE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename28lightFalloffFakeDistanceMultE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11lightRadiusE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11lightCookieE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11lightMatrixE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightFOVE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum28lightFalloffFakeDistanceMultE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11lightRadiusE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11lightCookieE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11lightMatrixE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightFOVE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic28lightFalloffFakeDistanceMultE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11lightRadiusE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11lightCookieE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11lightMatrixE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightFOVE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation28lightFalloffFakeDistanceMultE[1];

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<113>;
	.reg .b16 	%rs<76>;
	.reg .f32 	%f<784>;
	.reg .b32 	%r<163>;
	.reg .b64 	%rd<150>;


	mov.u64 	%rd149, __local_depot0;
	cvta.local.u64 	%SP, %rd149;
	ld.global.v2.u32 	{%r26, %r27}, [pixelID];
	cvt.u64.u32	%rd12, %r26;
	cvt.u64.u32	%rd13, %r27;
	mov.u64 	%rd16, uvnormal;
	cvta.global.u64 	%rd11, %rd16;
	mov.u32 	%r24, 2;
	mov.u32 	%r25, 4;
	mov.u64 	%rd15, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r24, %r25, %rd12, %rd13, %rd15, %rd15);
	// inline asm
	ld.u32 	%r1, [%rd10];
	shr.u32 	%r30, %r1, 16;
	cvt.u16.u32	%rs1, %r30;
	and.b16  	%rs4, %rs1, 255;
	cvt.u16.u32	%rs5, %r1;
	or.b16  	%rs6, %rs5, %rs4;
	setp.eq.s16	%p6, %rs6, 0;
	mov.f32 	%f763, 0f00000000;
	mov.f32 	%f764, %f763;
	mov.f32 	%f765, %f763;
	@%p6 bra 	BB0_2;

	ld.u8 	%rs7, [%rd10+1];
	and.b16  	%rs9, %rs5, 255;
	cvt.rn.f32.u16	%f99, %rs9;
	div.rn.f32 	%f100, %f99, 0f437F0000;
	fma.rn.f32 	%f101, %f100, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f102, %rs7;
	div.rn.f32 	%f103, %f102, 0f437F0000;
	fma.rn.f32 	%f104, %f103, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f105, %rs4;
	div.rn.f32 	%f106, %f105, 0f437F0000;
	fma.rn.f32 	%f107, %f106, 0f40000000, 0fBF800000;
	mul.f32 	%f108, %f104, %f104;
	fma.rn.f32 	%f109, %f101, %f101, %f108;
	fma.rn.f32 	%f110, %f107, %f107, %f109;
	sqrt.rn.f32 	%f111, %f110;
	rcp.rn.f32 	%f112, %f111;
	mul.f32 	%f763, %f101, %f112;
	mul.f32 	%f764, %f104, %f112;
	mul.f32 	%f765, %f107, %f112;

BB0_2:
	ld.global.v2.u32 	{%r31, %r32}, [pixelID];
	ld.global.v2.u32 	{%r34, %r35}, [tileInfo];
	add.s32 	%r2, %r31, %r34;
	add.s32 	%r3, %r32, %r35;
	setp.eq.f32	%p7, %f764, 0f00000000;
	setp.eq.f32	%p8, %f763, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	setp.eq.f32	%p10, %f765, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_84;
	bra.uni 	BB0_3;

BB0_84:
	ld.global.u32 	%r162, [imageEnabled];
	and.b32  	%r138, %r162, 1;
	setp.eq.b32	%p108, %r138, 1;
	@!%p108 bra 	BB0_86;
	bra.uni 	BB0_85;

BB0_85:
	cvt.u64.u32	%rd110, %r2;
	cvt.u64.u32	%rd111, %r3;
	mov.u64 	%rd114, image;
	cvta.global.u64 	%rd109, %rd114;
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd109, %r24, %r25, %rd110, %rd111, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs57, 0;
	st.v4.u8 	[%rd108], {%rs57, %rs57, %rs57, %rs57};
	ld.global.u32 	%r162, [imageEnabled];

BB0_86:
	and.b32  	%r141, %r162, 8;
	setp.eq.s32	%p109, %r141, 0;
	@%p109 bra 	BB0_88;

	cvt.u64.u32	%rd117, %r2;
	cvt.u64.u32	%rd118, %r3;
	mov.u64 	%rd121, image_Mask;
	cvta.global.u64 	%rd116, %rd121;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd116, %r24, %r24, %rd117, %rd118, %rd15, %rd15);
	// inline asm
	mov.f32 	%f715, 0f00000000;
	cvt.rzi.u32.f32	%r144, %f715;
	cvt.u16.u32	%rs58, %r144;
	mov.u16 	%rs59, 0;
	st.v2.u8 	[%rd115], {%rs58, %rs59};
	ld.global.u32 	%r162, [imageEnabled];

BB0_88:
	and.b32  	%r145, %r162, 4;
	setp.eq.s32	%p110, %r145, 0;
	@%p110 bra 	BB0_92;

	ld.global.u32 	%r146, [additive];
	setp.eq.s32	%p111, %r146, 0;
	cvt.u64.u32	%rd8, %r2;
	cvt.u64.u32	%rd9, %r3;
	@%p111 bra 	BB0_91;

	mov.u64 	%rd134, image_HDR;
	cvta.global.u64 	%rd123, %rd134;
	mov.u32 	%r150, 8;
	// inline asm
	call (%rd122), _rt_buffer_get_64, (%rd123, %r24, %r150, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd122];
	// inline asm
	{  cvt.f32.f16 %f716, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f717, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f718, %rs68;}

	// inline asm
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd123, %r24, %r150, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	add.f32 	%f719, %f716, 0f00000000;
	add.f32 	%f720, %f717, 0f00000000;
	add.f32 	%f721, %f718, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f721;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f720;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f719;}

	// inline asm
	mov.u16 	%rs70, 0;
	st.v4.u16 	[%rd128], {%rs63, %rs64, %rs65, %rs70};
	bra.uni 	BB0_92;

BB0_3:
	ld.global.v2.u32 	{%r41, %r42}, [pixelID];
	cvt.u64.u32	%rd19, %r41;
	cvt.u64.u32	%rd20, %r42;
	mov.u64 	%rd23, uvpos;
	cvta.global.u64 	%rd18, %rd23;
	mov.u32 	%r40, 12;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd18, %r24, %r40, %rd19, %rd20, %rd15, %rd15);
	// inline asm
	ld.global.f32 	%f115, [lightPos];
	ld.f32 	%f9, [%rd17+8];
	ld.f32 	%f8, [%rd17+4];
	ld.f32 	%f7, [%rd17];
	sub.f32 	%f116, %f115, %f7;
	ld.global.f32 	%f117, [lightPos+4];
	sub.f32 	%f118, %f117, %f8;
	ld.global.f32 	%f119, [lightPos+8];
	sub.f32 	%f120, %f119, %f9;
	mul.f32 	%f121, %f118, %f118;
	fma.rn.f32 	%f122, %f116, %f116, %f121;
	fma.rn.f32 	%f123, %f120, %f120, %f122;
	sqrt.rn.f32 	%f124, %f123;
	rcp.rn.f32 	%f125, %f124;
	mul.f32 	%f10, %f116, %f125;
	mul.f32 	%f11, %f118, %f125;
	mul.f32 	%f12, %f120, %f125;
	ld.global.f32 	%f126, [lightFalloffFakeDistanceMult];
	mul.f32 	%f13, %f124, %f126;
	ld.global.f32 	%f127, [lightInvCutoff];
	mul.f32 	%f14, %f124, %f127;
	mov.f32 	%f131, 0f40800000;
	abs.f32 	%f16, %f14;
	setp.lt.f32	%p12, %f16, 0f00800000;
	mul.f32 	%f133, %f16, 0f4B800000;
	selp.f32	%f134, 0fC3170000, 0fC2FE0000, %p12;
	selp.f32	%f135, %f133, %f16, %p12;
	mov.b32 	 %r45, %f135;
	and.b32  	%r46, %r45, 8388607;
	or.b32  	%r47, %r46, 1065353216;
	mov.b32 	 %f136, %r47;
	shr.u32 	%r48, %r45, 23;
	cvt.rn.f32.u32	%f137, %r48;
	add.f32 	%f138, %f134, %f137;
	setp.gt.f32	%p13, %f136, 0f3FB504F3;
	mul.f32 	%f139, %f136, 0f3F000000;
	add.f32 	%f140, %f138, 0f3F800000;
	selp.f32	%f141, %f139, %f136, %p13;
	selp.f32	%f142, %f140, %f138, %p13;
	add.f32 	%f143, %f141, 0fBF800000;
	add.f32 	%f114, %f141, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f113,%f114;
	// inline asm
	add.f32 	%f144, %f143, %f143;
	mul.f32 	%f145, %f113, %f144;
	mul.f32 	%f146, %f145, %f145;
	mov.f32 	%f147, 0f3C4CAF63;
	mov.f32 	%f148, 0f3B18F0FE;
	fma.rn.f32 	%f149, %f148, %f146, %f147;
	mov.f32 	%f150, 0f3DAAAABD;
	fma.rn.f32 	%f151, %f149, %f146, %f150;
	mul.rn.f32 	%f152, %f151, %f146;
	mul.rn.f32 	%f153, %f152, %f145;
	sub.f32 	%f154, %f143, %f145;
	neg.f32 	%f155, %f145;
	add.f32 	%f156, %f154, %f154;
	fma.rn.f32 	%f157, %f155, %f143, %f156;
	mul.rn.f32 	%f158, %f113, %f157;
	add.f32 	%f159, %f153, %f145;
	sub.f32 	%f160, %f145, %f159;
	add.f32 	%f161, %f153, %f160;
	add.f32 	%f162, %f158, %f161;
	add.f32 	%f163, %f159, %f162;
	sub.f32 	%f164, %f159, %f163;
	add.f32 	%f165, %f162, %f164;
	mov.f32 	%f166, 0f3F317200;
	mul.rn.f32 	%f167, %f142, %f166;
	mov.f32 	%f168, 0f35BFBE8E;
	mul.rn.f32 	%f169, %f142, %f168;
	add.f32 	%f170, %f167, %f163;
	sub.f32 	%f171, %f167, %f170;
	add.f32 	%f172, %f163, %f171;
	add.f32 	%f173, %f165, %f172;
	add.f32 	%f174, %f169, %f173;
	add.f32 	%f175, %f170, %f174;
	sub.f32 	%f176, %f170, %f175;
	add.f32 	%f177, %f174, %f176;
	mul.rn.f32 	%f178, %f131, %f175;
	neg.f32 	%f179, %f178;
	fma.rn.f32 	%f180, %f131, %f175, %f179;
	fma.rn.f32 	%f181, %f131, %f177, %f180;
	mov.f32 	%f182, 0f00000000;
	fma.rn.f32 	%f183, %f182, %f175, %f181;
	add.rn.f32 	%f184, %f178, %f183;
	neg.f32 	%f185, %f184;
	add.rn.f32 	%f186, %f178, %f185;
	add.rn.f32 	%f187, %f186, %f183;
	mov.b32 	 %r49, %f184;
	setp.eq.s32	%p14, %r49, 1118925336;
	add.s32 	%r50, %r49, -1;
	mov.b32 	 %f188, %r50;
	add.f32 	%f189, %f187, 0f37000000;
	selp.f32	%f190, %f188, %f184, %p14;
	selp.f32	%f17, %f189, %f187, %p14;
	mul.f32 	%f191, %f190, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f192, %f191;
	mov.f32 	%f193, 0fBF317200;
	fma.rn.f32 	%f194, %f192, %f193, %f190;
	mov.f32 	%f195, 0fB5BFBE8E;
	fma.rn.f32 	%f196, %f192, %f195, %f194;
	mul.f32 	%f197, %f196, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f198, %f197;
	add.f32 	%f199, %f192, 0f00000000;
	ex2.approx.f32 	%f200, %f199;
	mul.f32 	%f201, %f198, %f200;
	setp.lt.f32	%p15, %f190, 0fC2D20000;
	selp.f32	%f202, 0f00000000, %f201, %p15;
	setp.gt.f32	%p16, %f190, 0f42D20000;
	selp.f32	%f766, 0f7F800000, %f202, %p16;
	setp.eq.f32	%p17, %f766, 0f7F800000;
	@%p17 bra 	BB0_5;

	fma.rn.f32 	%f766, %f766, %f17, %f766;

BB0_5:
	mov.f32 	%f728, 0f40000000;
	cvt.rzi.f32.f32	%f727, %f728;
	add.f32 	%f726, %f727, %f727;
	mov.f32 	%f725, 0f40800000;
	sub.f32 	%f724, %f725, %f726;
	abs.f32 	%f723, %f724;
	setp.lt.f32	%p18, %f14, 0f00000000;
	setp.eq.f32	%p19, %f723, 0f3F800000;
	and.pred  	%p1, %p18, %p19;
	mov.b32 	 %r51, %f766;
	xor.b32  	%r52, %r51, -2147483648;
	mov.b32 	 %f203, %r52;
	selp.f32	%f768, %f203, %f766, %p1;
	setp.eq.f32	%p20, %f14, 0f00000000;
	@%p20 bra 	BB0_8;
	bra.uni 	BB0_6;

BB0_8:
	add.f32 	%f206, %f14, %f14;
	selp.f32	%f768, %f206, 0f00000000, %p19;
	bra.uni 	BB0_9;

BB0_6:
	setp.geu.f32	%p21, %f14, 0f00000000;
	@%p21 bra 	BB0_9;

	mov.f32 	%f762, 0f40800000;
	cvt.rzi.f32.f32	%f205, %f762;
	setp.neu.f32	%p22, %f205, 0f40800000;
	selp.f32	%f768, 0f7FFFFFFF, %f768, %p22;

BB0_9:
	abs.f32 	%f729, %f14;
	add.f32 	%f207, %f729, 0f40800000;
	mov.b32 	 %r53, %f207;
	setp.lt.s32	%p24, %r53, 2139095040;
	@%p24 bra 	BB0_14;

	abs.f32 	%f760, %f14;
	setp.gtu.f32	%p25, %f760, 0f7F800000;
	@%p25 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f768, %f14, 0f40800000;
	bra.uni 	BB0_14;

BB0_11:
	abs.f32 	%f761, %f14;
	setp.neu.f32	%p26, %f761, 0f7F800000;
	@%p26 bra 	BB0_14;

	selp.f32	%f768, 0fFF800000, 0f7F800000, %p1;

BB0_14:
	mov.f32 	%f730, 0f00000000;
	mov.f32 	%f771, 0f3F800000;
	sub.f32 	%f217, %f771, %f768;
	setp.eq.f32	%p27, %f14, 0f3F800000;
	selp.f32	%f218, 0f00000000, %f217, %p27;
	cvt.sat.f32.f32	%f219, %f218;
	fma.rn.f32 	%f220, %f13, %f13, 0f3F800000;
	div.rn.f32 	%f221, %f219, %f220;
	mul.f32 	%f222, %f764, %f11;
	fma.rn.f32 	%f223, %f763, %f10, %f222;
	fma.rn.f32 	%f224, %f765, %f12, %f223;
	ld.global.u32 	%r56, [ignoreNormal];
	setp.eq.s32	%p28, %r56, 0;
	selp.f32	%f225, %f224, 0f3F800000, %p28;
	cvt.sat.f32.f32	%f226, %f225;
	ld.global.f32 	%f227, [lightMatrix+24];
	mul.f32 	%f228, %f10, %f227;
	ld.global.f32 	%f229, [lightMatrix+28];
	mul.f32 	%f230, %f11, %f229;
	neg.f32 	%f231, %f230;
	sub.f32 	%f232, %f231, %f228;
	ld.global.f32 	%f233, [lightMatrix+32];
	mul.f32 	%f234, %f12, %f233;
	sub.f32 	%f235, %f232, %f234;
	setp.gt.f32	%p29, %f235, 0f00000000;
	ld.global.f32 	%f236, [lightMatrix];
	mul.f32 	%f237, %f236, %f10;
	sub.f32 	%f238, %f730, %f237;
	ld.global.f32 	%f239, [lightMatrix+4];
	mul.f32 	%f240, %f239, %f11;
	sub.f32 	%f241, %f238, %f240;
	ld.global.f32 	%f242, [lightMatrix+8];
	mul.f32 	%f243, %f242, %f12;
	sub.f32 	%f244, %f241, %f243;
	selp.f32	%f245, 0f3F800000, 0f00000000, %p29;
	ld.global.f32 	%f246, [lightMatrix+12];
	mul.f32 	%f247, %f246, %f10;
	sub.f32 	%f248, %f730, %f247;
	ld.global.f32 	%f249, [lightMatrix+16];
	mul.f32 	%f250, %f249, %f11;
	sub.f32 	%f251, %f248, %f250;
	ld.global.f32 	%f252, [lightMatrix+20];
	mul.f32 	%f253, %f252, %f12;
	sub.f32 	%f254, %f251, %f253;
	ld.global.u32 	%r54, [lightCookie];
	ld.global.f32 	%f255, [lightFOV];
	fma.rn.f32 	%f212, %f244, %f255, 0f3F000000;
	fma.rn.f32 	%f213, %f254, %f255, 0f3F000000;
	// inline asm
	call (%f208, %f209, %f210, %f211), _rt_texture_get_f_id, (%r54, %r24, %f212, %f213, %f730, %f730);
	// inline asm
	max.f32 	%f256, %f208, %f209;
	max.f32 	%f257, %f256, %f210;
	mul.f32 	%f258, %f245, %f257;
	mul.f32 	%f31, %f221, %f226;
	mul.f32 	%f259, %f31, %f258;
	ld.global.f32 	%f260, [lightColor+4];
	ld.global.f32 	%f261, [lightColor];
	max.f32 	%f262, %f261, %f260;
	ld.global.f32 	%f263, [lightColor+8];
	max.f32 	%f264, %f262, %f263;
	mul.f32 	%f265, %f259, %f264;
	setp.lt.f32	%p30, %f265, 0f3727C5AC;
	@%p30 bra 	BB0_74;
	bra.uni 	BB0_15;

BB0_74:
	ld.global.u32 	%r160, [imageEnabled];
	and.b32  	%r121, %r160, 1;
	setp.eq.b32	%p103, %r121, 1;
	@!%p103 bra 	BB0_76;
	bra.uni 	BB0_75;

BB0_75:
	cvt.u64.u32	%rd69, %r2;
	cvt.u64.u32	%rd70, %r3;
	mov.u64 	%rd73, image;
	cvta.global.u64 	%rd68, %rd73;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd68, %r24, %r25, %rd69, %rd70, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs37, 1;
	mov.u16 	%rs38, 0;
	st.v4.u8 	[%rd67], {%rs38, %rs38, %rs38, %rs37};
	ld.global.u32 	%r160, [imageEnabled];

BB0_76:
	and.b32  	%r124, %r160, 8;
	setp.eq.s32	%p104, %r124, 0;
	@%p104 bra 	BB0_78;

	cvt.u64.u32	%rd76, %r2;
	cvt.u64.u32	%rd77, %r3;
	mov.u64 	%rd80, image_Mask;
	cvta.global.u64 	%rd75, %rd80;
	// inline asm
	call (%rd74), _rt_buffer_get_64, (%rd75, %r24, %r24, %rd76, %rd77, %rd15, %rd15);
	// inline asm
	mov.f32 	%f704, 0f00000000;
	cvt.rzi.u32.f32	%r127, %f704;
	cvt.u16.u32	%rs39, %r127;
	mov.u16 	%rs40, 255;
	st.v2.u8 	[%rd74], {%rs39, %rs40};
	ld.global.u32 	%r160, [imageEnabled];

BB0_78:
	and.b32  	%r128, %r160, 4;
	setp.eq.s32	%p105, %r128, 0;
	@%p105 bra 	BB0_82;

	ld.global.u32 	%r129, [additive];
	setp.eq.s32	%p106, %r129, 0;
	cvt.u64.u32	%rd6, %r2;
	cvt.u64.u32	%rd7, %r3;
	mov.f32 	%f705, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f705;}

	// inline asm
	@%p106 bra 	BB0_81;

	mov.u64 	%rd93, image_HDR;
	cvta.global.u64 	%rd82, %rd93;
	mov.u32 	%r133, 8;
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd82, %r24, %r133, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs48, %rs49, %rs50, %rs51}, [%rd81];
	// inline asm
	{  cvt.f32.f16 %f706, %rs48;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f707, %rs49;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f708, %rs50;}

	// inline asm
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd82, %r24, %r133, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	add.f32 	%f709, %f706, 0f00000000;
	add.f32 	%f710, %f707, 0f00000000;
	add.f32 	%f711, %f708, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f711;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f710;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f709;}

	// inline asm
	st.v4.u16 	[%rd87], {%rs45, %rs46, %rs47, %rs41};
	bra.uni 	BB0_82;

BB0_15:
	mov.f32 	%f770, 0f00000000;
	mul.f32 	%f267, %f7, 0f3456BF95;
	abs.f32 	%f268, %f763;
	div.rn.f32 	%f269, %f267, %f268;
	abs.f32 	%f270, %f764;
	mul.f32 	%f271, %f8, 0f3456BF95;
	div.rn.f32 	%f272, %f271, %f270;
	abs.f32 	%f273, %f765;
	mul.f32 	%f274, %f9, 0f3456BF95;
	div.rn.f32 	%f275, %f274, %f273;
	abs.f32 	%f276, %f269;
	abs.f32 	%f277, %f272;
	abs.f32 	%f278, %f275;
	mov.f32 	%f279, 0f38D1B717;
	max.f32 	%f280, %f276, %f279;
	max.f32 	%f281, %f277, %f279;
	max.f32 	%f282, %f278, %f279;
	fma.rn.f32 	%f32, %f763, %f280, %f7;
	fma.rn.f32 	%f33, %f764, %f281, %f8;
	fma.rn.f32 	%f34, %f765, %f282, %f9;
	ld.global.u32 	%r156, [samples];
	setp.lt.s32	%p31, %r156, 1;
	@%p31 bra 	BB0_18;

	mul.f32 	%f284, %f32, 0f3456BF95;
	abs.f32 	%f285, %f284;
	mul.f32 	%f286, %f33, 0f3456BF95;
	abs.f32 	%f287, %f286;
	mul.f32 	%f288, %f34, 0f3456BF95;
	abs.f32 	%f289, %f288;
	max.f32 	%f290, %f285, %f287;
	max.f32 	%f291, %f290, %f289;
	max.f32 	%f35, %f291, %f279;
	add.u64 	%rd24, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd24;
	mov.f32 	%f770, 0f00000000;
	mov.u32 	%r155, 0;

BB0_17:
	cvt.rn.f32.s32	%f301, %r155;
	mul.f32 	%f302, %f301, 0f3DD32618;
	cvt.rmi.f32.f32	%f303, %f302;
	sub.f32 	%f304, %f302, %f303;
	mul.f32 	%f305, %f301, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f306, %f305;
	sub.f32 	%f307, %f305, %f306;
	mul.f32 	%f308, %f301, 0f3DC74539;
	cvt.rmi.f32.f32	%f309, %f308;
	sub.f32 	%f310, %f308, %f309;
	add.f32 	%f311, %f307, 0f4199851F;
	add.f32 	%f312, %f310, 0f4199851F;
	add.f32 	%f313, %f304, 0f4199851F;
	mul.f32 	%f314, %f307, %f312;
	fma.rn.f32 	%f315, %f304, %f311, %f314;
	fma.rn.f32 	%f316, %f313, %f310, %f315;
	add.f32 	%f317, %f304, %f316;
	add.f32 	%f318, %f307, %f316;
	add.f32 	%f319, %f310, %f316;
	add.f32 	%f320, %f317, %f318;
	mul.f32 	%f321, %f319, %f320;
	cvt.rmi.f32.f32	%f322, %f321;
	sub.f32 	%f323, %f321, %f322;
	add.f32 	%f324, %f317, %f319;
	mul.f32 	%f325, %f318, %f324;
	cvt.rmi.f32.f32	%f326, %f325;
	sub.f32 	%f327, %f325, %f326;
	add.f32 	%f328, %f318, %f319;
	mul.f32 	%f329, %f317, %f328;
	cvt.rmi.f32.f32	%f330, %f329;
	sub.f32 	%f331, %f329, %f330;
	fma.rn.f32 	%f332, %f323, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f333, %f327, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f334, %f331, 0f40000000, 0fBF800000;
	ld.global.f32 	%f335, [lightRadius];
	ld.global.f32 	%f336, [lightPos];
	fma.rn.f32 	%f337, %f335, %f332, %f336;
	ld.global.f32 	%f338, [lightPos+4];
	fma.rn.f32 	%f339, %f335, %f333, %f338;
	ld.global.f32 	%f340, [lightPos+8];
	fma.rn.f32 	%f341, %f335, %f334, %f340;
	sub.f32 	%f342, %f337, %f7;
	sub.f32 	%f343, %f339, %f8;
	sub.f32 	%f344, %f341, %f9;
	mul.f32 	%f345, %f343, %f343;
	fma.rn.f32 	%f346, %f342, %f342, %f345;
	fma.rn.f32 	%f347, %f344, %f344, %f346;
	sqrt.rn.f32 	%f300, %f347;
	rcp.rn.f32 	%f348, %f300;
	mul.f32 	%f296, %f348, %f342;
	mul.f32 	%f297, %f348, %f343;
	mul.f32 	%f298, %f348, %f344;
	mov.u32 	%r61, 1065353216;
	st.local.u32 	[%rd2], %r61;
	ld.global.u32 	%r58, [root];
	mov.u32 	%r59, 1;
	// inline asm
	call _rt_trace_64, (%r58, %f32, %f33, %f34, %f296, %f297, %f298, %r59, %f35, %f300, %rd24, %r25);
	// inline asm
	ld.local.f32 	%f349, [%rd2];
	add.f32 	%f770, %f770, %f349;
	ld.global.u32 	%r156, [samples];
	add.s32 	%r155, %r155, 1;
	setp.lt.s32	%p32, %r155, %r156;
	@%p32 bra 	BB0_17;

BB0_18:
	setp.eq.s32	%p33, %r156, 0;
	@%p33 bra 	BB0_20;

	cvt.rn.f32.s32	%f351, %r156;
	div.rn.f32 	%f771, %f770, %f351;

BB0_20:
	ld.global.f32 	%f352, [lightColor];
	mul.f32 	%f353, %f31, %f771;
	mul.f32 	%f354, %f352, %f353;
	ld.global.f32 	%f355, [lightColor+4];
	mul.f32 	%f356, %f353, %f355;
	ld.global.f32 	%f357, [lightColor+8];
	mul.f32 	%f358, %f353, %f357;
	mul.f32 	%f41, %f208, %f354;
	mul.f32 	%f42, %f209, %f356;
	mul.f32 	%f43, %f210, %f358;
	ld.global.u32 	%r158, [imageEnabled];
	and.b32  	%r62, %r158, 8;
	setp.eq.s32	%p34, %r62, 0;
	@%p34 bra 	BB0_33;

	mov.f32 	%f738, 0fB5BFBE8E;
	mov.f32 	%f737, 0fBF317200;
	mov.f32 	%f736, 0f35BFBE8E;
	mov.f32 	%f735, 0f3F317200;
	mov.f32 	%f734, 0f3DAAAABD;
	mov.f32 	%f733, 0f3C4CAF63;
	mov.f32 	%f732, 0f3B18F0FE;
	cvt.u64.u32	%rd28, %r2;
	cvt.u64.u32	%rd29, %r3;
	mov.u64 	%rd32, image_Mask;
	cvta.global.u64 	%rd27, %rd32;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r24, %r24, %rd28, %rd29, %rd15, %rd15);
	// inline asm
	mov.f32 	%f361, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f362, %f361;
	fma.rn.f32 	%f363, %f362, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f44, %f363;
	abs.f32 	%f45, %f771;
	setp.lt.f32	%p35, %f45, 0f00800000;
	mul.f32 	%f364, %f45, 0f4B800000;
	selp.f32	%f365, 0fC3170000, 0fC2FE0000, %p35;
	selp.f32	%f366, %f364, %f45, %p35;
	mov.b32 	 %r65, %f366;
	and.b32  	%r66, %r65, 8388607;
	or.b32  	%r67, %r66, 1065353216;
	mov.b32 	 %f367, %r67;
	shr.u32 	%r68, %r65, 23;
	cvt.rn.f32.u32	%f368, %r68;
	add.f32 	%f369, %f365, %f368;
	setp.gt.f32	%p36, %f367, 0f3FB504F3;
	mul.f32 	%f370, %f367, 0f3F000000;
	add.f32 	%f371, %f369, 0f3F800000;
	selp.f32	%f372, %f370, %f367, %p36;
	selp.f32	%f373, %f371, %f369, %p36;
	add.f32 	%f374, %f372, 0fBF800000;
	add.f32 	%f360, %f372, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f359,%f360;
	// inline asm
	add.f32 	%f375, %f374, %f374;
	mul.f32 	%f376, %f359, %f375;
	mul.f32 	%f377, %f376, %f376;
	fma.rn.f32 	%f380, %f732, %f377, %f733;
	fma.rn.f32 	%f382, %f380, %f377, %f734;
	mul.rn.f32 	%f383, %f382, %f377;
	mul.rn.f32 	%f384, %f383, %f376;
	sub.f32 	%f385, %f374, %f376;
	neg.f32 	%f386, %f376;
	add.f32 	%f387, %f385, %f385;
	fma.rn.f32 	%f388, %f386, %f374, %f387;
	mul.rn.f32 	%f389, %f359, %f388;
	add.f32 	%f390, %f384, %f376;
	sub.f32 	%f391, %f376, %f390;
	add.f32 	%f392, %f384, %f391;
	add.f32 	%f393, %f389, %f392;
	add.f32 	%f394, %f390, %f393;
	sub.f32 	%f395, %f390, %f394;
	add.f32 	%f396, %f393, %f395;
	mul.rn.f32 	%f398, %f373, %f735;
	mul.rn.f32 	%f400, %f373, %f736;
	add.f32 	%f401, %f398, %f394;
	sub.f32 	%f402, %f398, %f401;
	add.f32 	%f403, %f394, %f402;
	add.f32 	%f404, %f396, %f403;
	add.f32 	%f405, %f400, %f404;
	add.f32 	%f406, %f401, %f405;
	sub.f32 	%f407, %f401, %f406;
	add.f32 	%f408, %f405, %f407;
	mov.f32 	%f409, 0f3EE8BA2E;
	mul.rn.f32 	%f410, %f409, %f406;
	neg.f32 	%f411, %f410;
	fma.rn.f32 	%f412, %f409, %f406, %f411;
	fma.rn.f32 	%f413, %f409, %f408, %f412;
	mov.f32 	%f414, 0f00000000;
	fma.rn.f32 	%f415, %f414, %f406, %f413;
	add.rn.f32 	%f416, %f410, %f415;
	neg.f32 	%f417, %f416;
	add.rn.f32 	%f418, %f410, %f417;
	add.rn.f32 	%f419, %f418, %f415;
	mov.b32 	 %r69, %f416;
	setp.eq.s32	%p37, %r69, 1118925336;
	add.s32 	%r70, %r69, -1;
	mov.b32 	 %f420, %r70;
	add.f32 	%f421, %f419, 0f37000000;
	selp.f32	%f422, %f420, %f416, %p37;
	selp.f32	%f46, %f421, %f419, %p37;
	mul.f32 	%f423, %f422, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f424, %f423;
	fma.rn.f32 	%f426, %f424, %f737, %f422;
	fma.rn.f32 	%f428, %f424, %f738, %f426;
	mul.f32 	%f429, %f428, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f430, %f429;
	add.f32 	%f431, %f424, 0f00000000;
	ex2.approx.f32 	%f432, %f431;
	mul.f32 	%f433, %f430, %f432;
	setp.lt.f32	%p38, %f422, 0fC2D20000;
	selp.f32	%f434, 0f00000000, %f433, %p38;
	setp.gt.f32	%p39, %f422, 0f42D20000;
	selp.f32	%f772, 0f7F800000, %f434, %p39;
	setp.eq.f32	%p40, %f772, 0f7F800000;
	@%p40 bra 	BB0_23;

	fma.rn.f32 	%f772, %f772, %f46, %f772;

BB0_23:
	setp.lt.f32	%p41, %f771, 0f00000000;
	setp.eq.f32	%p42, %f44, 0f3F800000;
	and.pred  	%p2, %p41, %p42;
	mov.b32 	 %r71, %f772;
	xor.b32  	%r72, %r71, -2147483648;
	mov.b32 	 %f435, %r72;
	selp.f32	%f774, %f435, %f772, %p2;
	setp.eq.f32	%p43, %f771, 0f00000000;
	@%p43 bra 	BB0_26;
	bra.uni 	BB0_24;

BB0_26:
	add.f32 	%f438, %f771, %f771;
	selp.f32	%f774, %f438, 0f00000000, %p42;
	bra.uni 	BB0_27;

BB0_91:
	mov.u64 	%rd141, image_HDR;
	cvta.global.u64 	%rd136, %rd141;
	mov.u32 	%r152, 8;
	// inline asm
	call (%rd135), _rt_buffer_get_64, (%rd136, %r24, %r152, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	mov.f32 	%f722, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f722;}

	// inline asm
	mov.u16 	%rs72, 0;
	st.v4.u16 	[%rd135], {%rs71, %rs71, %rs71, %rs72};

BB0_92:
	ld.global.u8 	%rs73, [imageEnabled];
	and.b16  	%rs74, %rs73, 64;
	setp.eq.s16	%p112, %rs74, 0;
	@%p112 bra 	BB0_94;

	cvt.u64.u32	%rd144, %r2;
	cvt.u64.u32	%rd145, %r3;
	mov.u64 	%rd148, image_Dir;
	cvta.global.u64 	%rd143, %rd148;
	// inline asm
	call (%rd142), _rt_buffer_get_64, (%rd143, %r24, %r25, %rd144, %rd145, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs75, 0;
	st.v4.u8 	[%rd142], {%rs75, %rs75, %rs75, %rs75};
	bra.uni 	BB0_94;

BB0_81:
	mov.u64 	%rd100, image_HDR;
	cvta.global.u64 	%rd95, %rd100;
	mov.u32 	%r135, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r24, %r135, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	mov.f32 	%f712, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f712;}

	// inline asm
	st.v4.u16 	[%rd94], {%rs52, %rs52, %rs52, %rs41};

BB0_82:
	ld.global.u8 	%rs53, [imageEnabled];
	and.b16  	%rs54, %rs53, 64;
	setp.eq.s16	%p107, %rs54, 0;
	@%p107 bra 	BB0_94;

	cvt.u64.u32	%rd103, %r2;
	cvt.u64.u32	%rd104, %r3;
	mov.u64 	%rd107, image_Dir;
	cvta.global.u64 	%rd102, %rd107;
	// inline asm
	call (%rd101), _rt_buffer_get_64, (%rd102, %r24, %r25, %rd103, %rd104, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs55, 255;
	mov.u16 	%rs56, 0;
	st.v4.u8 	[%rd101], {%rs56, %rs56, %rs56, %rs55};
	bra.uni 	BB0_94;

BB0_24:
	setp.geu.f32	%p44, %f771, 0f00000000;
	@%p44 bra 	BB0_27;

	cvt.rzi.f32.f32	%f437, %f409;
	setp.neu.f32	%p45, %f437, 0f3EE8BA2E;
	selp.f32	%f774, 0f7FFFFFFF, %f774, %p45;

BB0_27:
	add.f32 	%f439, %f45, 0f3EE8BA2E;
	mov.b32 	 %r73, %f439;
	setp.lt.s32	%p47, %r73, 2139095040;
	@%p47 bra 	BB0_32;

	setp.gtu.f32	%p48, %f45, 0f7F800000;
	@%p48 bra 	BB0_31;
	bra.uni 	BB0_29;

BB0_31:
	add.f32 	%f774, %f771, 0f3EE8BA2E;
	bra.uni 	BB0_32;

BB0_29:
	setp.neu.f32	%p49, %f45, 0f7F800000;
	@%p49 bra 	BB0_32;

	selp.f32	%f774, 0fFF800000, 0f7F800000, %p2;

BB0_32:
	mul.f32 	%f440, %f774, 0f437F0000;
	setp.eq.f32	%p50, %f771, 0f3F800000;
	selp.f32	%f441, 0f437F0000, %f440, %p50;
	cvt.rzi.u32.f32	%r74, %f441;
	cvt.u16.u32	%rs11, %r74;
	mov.u16 	%rs12, 255;
	st.v2.u8 	[%rd26], {%rs11, %rs12};
	ld.global.u32 	%r158, [imageEnabled];

BB0_33:
	and.b32  	%r75, %r158, 1;
	setp.eq.b32	%p51, %r75, 1;
	@!%p51 bra 	BB0_68;
	bra.uni 	BB0_34;

BB0_34:
	mov.f32 	%f745, 0fB5BFBE8E;
	mov.f32 	%f744, 0fBF317200;
	mov.f32 	%f743, 0f35BFBE8E;
	mov.f32 	%f742, 0f3F317200;
	mov.f32 	%f741, 0f3DAAAABD;
	mov.f32 	%f740, 0f3C4CAF63;
	mov.f32 	%f739, 0f3B18F0FE;
	mov.f32 	%f444, 0f3E666666;
	cvt.rzi.f32.f32	%f445, %f444;
	fma.rn.f32 	%f446, %f445, 0fC0000000, 0f3EE66666;
	abs.f32 	%f57, %f446;
	abs.f32 	%f58, %f41;
	setp.lt.f32	%p52, %f58, 0f00800000;
	mul.f32 	%f447, %f58, 0f4B800000;
	selp.f32	%f448, 0fC3170000, 0fC2FE0000, %p52;
	selp.f32	%f449, %f447, %f58, %p52;
	mov.b32 	 %r76, %f449;
	and.b32  	%r77, %r76, 8388607;
	or.b32  	%r78, %r77, 1065353216;
	mov.b32 	 %f450, %r78;
	shr.u32 	%r79, %r76, 23;
	cvt.rn.f32.u32	%f451, %r79;
	add.f32 	%f452, %f448, %f451;
	setp.gt.f32	%p53, %f450, 0f3FB504F3;
	mul.f32 	%f453, %f450, 0f3F000000;
	add.f32 	%f454, %f452, 0f3F800000;
	selp.f32	%f455, %f453, %f450, %p53;
	selp.f32	%f456, %f454, %f452, %p53;
	add.f32 	%f457, %f455, 0fBF800000;
	add.f32 	%f443, %f455, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f442,%f443;
	// inline asm
	add.f32 	%f458, %f457, %f457;
	mul.f32 	%f459, %f442, %f458;
	mul.f32 	%f460, %f459, %f459;
	fma.rn.f32 	%f463, %f739, %f460, %f740;
	fma.rn.f32 	%f465, %f463, %f460, %f741;
	mul.rn.f32 	%f466, %f465, %f460;
	mul.rn.f32 	%f467, %f466, %f459;
	sub.f32 	%f468, %f457, %f459;
	neg.f32 	%f469, %f459;
	add.f32 	%f470, %f468, %f468;
	fma.rn.f32 	%f471, %f469, %f457, %f470;
	mul.rn.f32 	%f472, %f442, %f471;
	add.f32 	%f473, %f467, %f459;
	sub.f32 	%f474, %f459, %f473;
	add.f32 	%f475, %f467, %f474;
	add.f32 	%f476, %f472, %f475;
	add.f32 	%f477, %f473, %f476;
	sub.f32 	%f478, %f473, %f477;
	add.f32 	%f479, %f476, %f478;
	mul.rn.f32 	%f481, %f456, %f742;
	mul.rn.f32 	%f483, %f456, %f743;
	add.f32 	%f484, %f481, %f477;
	sub.f32 	%f485, %f481, %f484;
	add.f32 	%f486, %f477, %f485;
	add.f32 	%f487, %f479, %f486;
	add.f32 	%f488, %f483, %f487;
	add.f32 	%f489, %f484, %f488;
	sub.f32 	%f490, %f484, %f489;
	add.f32 	%f491, %f488, %f490;
	mov.f32 	%f492, 0f3EE66666;
	mul.rn.f32 	%f493, %f492, %f489;
	neg.f32 	%f494, %f493;
	fma.rn.f32 	%f495, %f492, %f489, %f494;
	fma.rn.f32 	%f496, %f492, %f491, %f495;
	mov.f32 	%f497, 0f00000000;
	fma.rn.f32 	%f498, %f497, %f489, %f496;
	add.rn.f32 	%f499, %f493, %f498;
	neg.f32 	%f500, %f499;
	add.rn.f32 	%f501, %f493, %f500;
	add.rn.f32 	%f502, %f501, %f498;
	mov.b32 	 %r80, %f499;
	setp.eq.s32	%p54, %r80, 1118925336;
	add.s32 	%r81, %r80, -1;
	mov.b32 	 %f503, %r81;
	add.f32 	%f504, %f502, 0f37000000;
	selp.f32	%f505, %f503, %f499, %p54;
	selp.f32	%f59, %f504, %f502, %p54;
	mul.f32 	%f506, %f505, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f507, %f506;
	fma.rn.f32 	%f509, %f507, %f744, %f505;
	fma.rn.f32 	%f511, %f507, %f745, %f509;
	mul.f32 	%f512, %f511, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f513, %f512;
	add.f32 	%f514, %f507, 0f00000000;
	ex2.approx.f32 	%f515, %f514;
	mul.f32 	%f516, %f513, %f515;
	setp.lt.f32	%p55, %f505, 0fC2D20000;
	selp.f32	%f517, 0f00000000, %f516, %p55;
	setp.gt.f32	%p56, %f505, 0f42D20000;
	selp.f32	%f775, 0f7F800000, %f517, %p56;
	setp.eq.f32	%p57, %f775, 0f7F800000;
	@%p57 bra 	BB0_36;

	fma.rn.f32 	%f775, %f775, %f59, %f775;

BB0_36:
	setp.lt.f32	%p58, %f41, 0f00000000;
	setp.eq.f32	%p59, %f57, 0f3F800000;
	and.pred  	%p3, %p58, %p59;
	mov.b32 	 %r82, %f775;
	xor.b32  	%r83, %r82, -2147483648;
	mov.b32 	 %f518, %r83;
	selp.f32	%f777, %f518, %f775, %p3;
	setp.eq.f32	%p60, %f41, 0f00000000;
	@%p60 bra 	BB0_39;
	bra.uni 	BB0_37;

BB0_39:
	add.f32 	%f521, %f41, %f41;
	selp.f32	%f777, %f521, 0f00000000, %p59;
	bra.uni 	BB0_40;

BB0_37:
	setp.geu.f32	%p61, %f41, 0f00000000;
	@%p61 bra 	BB0_40;

	cvt.rzi.f32.f32	%f520, %f492;
	setp.neu.f32	%p62, %f520, 0f3EE66666;
	selp.f32	%f777, 0f7FFFFFFF, %f777, %p62;

BB0_40:
	add.f32 	%f522, %f58, 0f3EE66666;
	mov.b32 	 %r84, %f522;
	setp.lt.s32	%p64, %r84, 2139095040;
	@%p64 bra 	BB0_45;

	setp.gtu.f32	%p65, %f58, 0f7F800000;
	@%p65 bra 	BB0_44;
	bra.uni 	BB0_42;

BB0_44:
	add.f32 	%f777, %f41, 0f3EE66666;
	bra.uni 	BB0_45;

BB0_42:
	setp.neu.f32	%p66, %f58, 0f7F800000;
	@%p66 bra 	BB0_45;

	selp.f32	%f777, 0fFF800000, 0f7F800000, %p3;

BB0_45:
	mov.f32 	%f752, 0fB5BFBE8E;
	mov.f32 	%f751, 0fBF317200;
	mov.f32 	%f750, 0f35BFBE8E;
	mov.f32 	%f749, 0f3F317200;
	mov.f32 	%f748, 0f3DAAAABD;
	mov.f32 	%f747, 0f3C4CAF63;
	mov.f32 	%f746, 0f3B18F0FE;
	setp.eq.f32	%p67, %f41, 0f3F800000;
	selp.f32	%f70, 0f3F800000, %f777, %p67;
	abs.f32 	%f71, %f42;
	setp.lt.f32	%p68, %f71, 0f00800000;
	mul.f32 	%f525, %f71, 0f4B800000;
	selp.f32	%f526, 0fC3170000, 0fC2FE0000, %p68;
	selp.f32	%f527, %f525, %f71, %p68;
	mov.b32 	 %r85, %f527;
	and.b32  	%r86, %r85, 8388607;
	or.b32  	%r87, %r86, 1065353216;
	mov.b32 	 %f528, %r87;
	shr.u32 	%r88, %r85, 23;
	cvt.rn.f32.u32	%f529, %r88;
	add.f32 	%f530, %f526, %f529;
	setp.gt.f32	%p69, %f528, 0f3FB504F3;
	mul.f32 	%f531, %f528, 0f3F000000;
	add.f32 	%f532, %f530, 0f3F800000;
	selp.f32	%f533, %f531, %f528, %p69;
	selp.f32	%f534, %f532, %f530, %p69;
	add.f32 	%f535, %f533, 0fBF800000;
	add.f32 	%f524, %f533, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f523,%f524;
	// inline asm
	add.f32 	%f536, %f535, %f535;
	mul.f32 	%f537, %f523, %f536;
	mul.f32 	%f538, %f537, %f537;
	fma.rn.f32 	%f541, %f746, %f538, %f747;
	fma.rn.f32 	%f543, %f541, %f538, %f748;
	mul.rn.f32 	%f544, %f543, %f538;
	mul.rn.f32 	%f545, %f544, %f537;
	sub.f32 	%f546, %f535, %f537;
	neg.f32 	%f547, %f537;
	add.f32 	%f548, %f546, %f546;
	fma.rn.f32 	%f549, %f547, %f535, %f548;
	mul.rn.f32 	%f550, %f523, %f549;
	add.f32 	%f551, %f545, %f537;
	sub.f32 	%f552, %f537, %f551;
	add.f32 	%f553, %f545, %f552;
	add.f32 	%f554, %f550, %f553;
	add.f32 	%f555, %f551, %f554;
	sub.f32 	%f556, %f551, %f555;
	add.f32 	%f557, %f554, %f556;
	mul.rn.f32 	%f559, %f534, %f749;
	mul.rn.f32 	%f561, %f534, %f750;
	add.f32 	%f562, %f559, %f555;
	sub.f32 	%f563, %f559, %f562;
	add.f32 	%f564, %f555, %f563;
	add.f32 	%f565, %f557, %f564;
	add.f32 	%f566, %f561, %f565;
	add.f32 	%f567, %f562, %f566;
	sub.f32 	%f568, %f562, %f567;
	add.f32 	%f569, %f566, %f568;
	mul.rn.f32 	%f571, %f492, %f567;
	neg.f32 	%f572, %f571;
	fma.rn.f32 	%f573, %f492, %f567, %f572;
	fma.rn.f32 	%f574, %f492, %f569, %f573;
	fma.rn.f32 	%f576, %f497, %f567, %f574;
	add.rn.f32 	%f577, %f571, %f576;
	neg.f32 	%f578, %f577;
	add.rn.f32 	%f579, %f571, %f578;
	add.rn.f32 	%f580, %f579, %f576;
	mov.b32 	 %r89, %f577;
	setp.eq.s32	%p70, %r89, 1118925336;
	add.s32 	%r90, %r89, -1;
	mov.b32 	 %f581, %r90;
	add.f32 	%f582, %f580, 0f37000000;
	selp.f32	%f583, %f581, %f577, %p70;
	selp.f32	%f72, %f582, %f580, %p70;
	mul.f32 	%f584, %f583, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f585, %f584;
	fma.rn.f32 	%f587, %f585, %f751, %f583;
	fma.rn.f32 	%f589, %f585, %f752, %f587;
	mul.f32 	%f590, %f589, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f591, %f590;
	add.f32 	%f592, %f585, 0f00000000;
	ex2.approx.f32 	%f593, %f592;
	mul.f32 	%f594, %f591, %f593;
	setp.lt.f32	%p71, %f583, 0fC2D20000;
	selp.f32	%f595, 0f00000000, %f594, %p71;
	setp.gt.f32	%p72, %f583, 0f42D20000;
	selp.f32	%f778, 0f7F800000, %f595, %p72;
	setp.eq.f32	%p73, %f778, 0f7F800000;
	@%p73 bra 	BB0_47;

	fma.rn.f32 	%f778, %f778, %f72, %f778;

BB0_47:
	setp.lt.f32	%p74, %f42, 0f00000000;
	and.pred  	%p4, %p74, %p59;
	mov.b32 	 %r91, %f778;
	xor.b32  	%r92, %r91, -2147483648;
	mov.b32 	 %f596, %r92;
	selp.f32	%f780, %f596, %f778, %p4;
	setp.eq.f32	%p76, %f42, 0f00000000;
	@%p76 bra 	BB0_50;
	bra.uni 	BB0_48;

BB0_50:
	add.f32 	%f599, %f42, %f42;
	selp.f32	%f780, %f599, 0f00000000, %p59;
	bra.uni 	BB0_51;

BB0_48:
	setp.geu.f32	%p77, %f42, 0f00000000;
	@%p77 bra 	BB0_51;

	cvt.rzi.f32.f32	%f598, %f492;
	setp.neu.f32	%p78, %f598, 0f3EE66666;
	selp.f32	%f780, 0f7FFFFFFF, %f780, %p78;

BB0_51:
	add.f32 	%f600, %f71, 0f3EE66666;
	mov.b32 	 %r93, %f600;
	setp.lt.s32	%p80, %r93, 2139095040;
	@%p80 bra 	BB0_56;

	setp.gtu.f32	%p81, %f71, 0f7F800000;
	@%p81 bra 	BB0_55;
	bra.uni 	BB0_53;

BB0_55:
	add.f32 	%f780, %f42, 0f3EE66666;
	bra.uni 	BB0_56;

BB0_53:
	setp.neu.f32	%p82, %f71, 0f7F800000;
	@%p82 bra 	BB0_56;

	selp.f32	%f780, 0fFF800000, 0f7F800000, %p4;

BB0_56:
	mov.f32 	%f759, 0fB5BFBE8E;
	mov.f32 	%f758, 0fBF317200;
	mov.f32 	%f757, 0f35BFBE8E;
	mov.f32 	%f756, 0f3F317200;
	mov.f32 	%f755, 0f3DAAAABD;
	mov.f32 	%f754, 0f3C4CAF63;
	mov.f32 	%f753, 0f3B18F0FE;
	setp.eq.f32	%p83, %f42, 0f3F800000;
	selp.f32	%f83, 0f3F800000, %f780, %p83;
	abs.f32 	%f84, %f43;
	setp.lt.f32	%p84, %f84, 0f00800000;
	mul.f32 	%f603, %f84, 0f4B800000;
	selp.f32	%f604, 0fC3170000, 0fC2FE0000, %p84;
	selp.f32	%f605, %f603, %f84, %p84;
	mov.b32 	 %r94, %f605;
	and.b32  	%r95, %r94, 8388607;
	or.b32  	%r96, %r95, 1065353216;
	mov.b32 	 %f606, %r96;
	shr.u32 	%r97, %r94, 23;
	cvt.rn.f32.u32	%f607, %r97;
	add.f32 	%f608, %f604, %f607;
	setp.gt.f32	%p85, %f606, 0f3FB504F3;
	mul.f32 	%f609, %f606, 0f3F000000;
	add.f32 	%f610, %f608, 0f3F800000;
	selp.f32	%f611, %f609, %f606, %p85;
	selp.f32	%f612, %f610, %f608, %p85;
	add.f32 	%f613, %f611, 0fBF800000;
	add.f32 	%f602, %f611, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f601,%f602;
	// inline asm
	add.f32 	%f614, %f613, %f613;
	mul.f32 	%f615, %f601, %f614;
	mul.f32 	%f616, %f615, %f615;
	fma.rn.f32 	%f619, %f753, %f616, %f754;
	fma.rn.f32 	%f621, %f619, %f616, %f755;
	mul.rn.f32 	%f622, %f621, %f616;
	mul.rn.f32 	%f623, %f622, %f615;
	sub.f32 	%f624, %f613, %f615;
	neg.f32 	%f625, %f615;
	add.f32 	%f626, %f624, %f624;
	fma.rn.f32 	%f627, %f625, %f613, %f626;
	mul.rn.f32 	%f628, %f601, %f627;
	add.f32 	%f629, %f623, %f615;
	sub.f32 	%f630, %f615, %f629;
	add.f32 	%f631, %f623, %f630;
	add.f32 	%f632, %f628, %f631;
	add.f32 	%f633, %f629, %f632;
	sub.f32 	%f634, %f629, %f633;
	add.f32 	%f635, %f632, %f634;
	mul.rn.f32 	%f637, %f612, %f756;
	mul.rn.f32 	%f639, %f612, %f757;
	add.f32 	%f640, %f637, %f633;
	sub.f32 	%f641, %f637, %f640;
	add.f32 	%f642, %f633, %f641;
	add.f32 	%f643, %f635, %f642;
	add.f32 	%f644, %f639, %f643;
	add.f32 	%f645, %f640, %f644;
	sub.f32 	%f646, %f640, %f645;
	add.f32 	%f647, %f644, %f646;
	mul.rn.f32 	%f649, %f492, %f645;
	neg.f32 	%f650, %f649;
	fma.rn.f32 	%f651, %f492, %f645, %f650;
	fma.rn.f32 	%f652, %f492, %f647, %f651;
	fma.rn.f32 	%f654, %f497, %f645, %f652;
	add.rn.f32 	%f655, %f649, %f654;
	neg.f32 	%f656, %f655;
	add.rn.f32 	%f657, %f649, %f656;
	add.rn.f32 	%f658, %f657, %f654;
	mov.b32 	 %r98, %f655;
	setp.eq.s32	%p86, %r98, 1118925336;
	add.s32 	%r99, %r98, -1;
	mov.b32 	 %f659, %r99;
	add.f32 	%f660, %f658, 0f37000000;
	selp.f32	%f661, %f659, %f655, %p86;
	selp.f32	%f85, %f660, %f658, %p86;
	mul.f32 	%f662, %f661, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f663, %f662;
	fma.rn.f32 	%f665, %f663, %f758, %f661;
	fma.rn.f32 	%f667, %f663, %f759, %f665;
	mul.f32 	%f668, %f667, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f669, %f668;
	add.f32 	%f670, %f663, 0f00000000;
	ex2.approx.f32 	%f671, %f670;
	mul.f32 	%f672, %f669, %f671;
	setp.lt.f32	%p87, %f661, 0fC2D20000;
	selp.f32	%f673, 0f00000000, %f672, %p87;
	setp.gt.f32	%p88, %f661, 0f42D20000;
	selp.f32	%f781, 0f7F800000, %f673, %p88;
	setp.eq.f32	%p89, %f781, 0f7F800000;
	@%p89 bra 	BB0_58;

	fma.rn.f32 	%f781, %f781, %f85, %f781;

BB0_58:
	setp.lt.f32	%p90, %f43, 0f00000000;
	and.pred  	%p5, %p90, %p59;
	mov.b32 	 %r100, %f781;
	xor.b32  	%r101, %r100, -2147483648;
	mov.b32 	 %f674, %r101;
	selp.f32	%f783, %f674, %f781, %p5;
	setp.eq.f32	%p92, %f43, 0f00000000;
	@%p92 bra 	BB0_61;
	bra.uni 	BB0_59;

BB0_61:
	add.f32 	%f677, %f43, %f43;
	selp.f32	%f783, %f677, 0f00000000, %p59;
	bra.uni 	BB0_62;

BB0_59:
	setp.geu.f32	%p93, %f43, 0f00000000;
	@%p93 bra 	BB0_62;

	cvt.rzi.f32.f32	%f676, %f492;
	setp.neu.f32	%p94, %f676, 0f3EE66666;
	selp.f32	%f783, 0f7FFFFFFF, %f783, %p94;

BB0_62:
	add.f32 	%f678, %f84, 0f3EE66666;
	mov.b32 	 %r102, %f678;
	setp.lt.s32	%p96, %r102, 2139095040;
	@%p96 bra 	BB0_67;

	setp.gtu.f32	%p97, %f84, 0f7F800000;
	@%p97 bra 	BB0_66;
	bra.uni 	BB0_64;

BB0_66:
	add.f32 	%f783, %f43, 0f3EE66666;
	bra.uni 	BB0_67;

BB0_64:
	setp.neu.f32	%p98, %f84, 0f7F800000;
	@%p98 bra 	BB0_67;

	selp.f32	%f783, 0fFF800000, 0f7F800000, %p5;

BB0_67:
	setp.eq.f32	%p99, %f43, 0f3F800000;
	selp.f32	%f679, 0f3F800000, %f783, %p99;
	cvt.u64.u32	%rd36, %r3;
	cvt.u64.u32	%rd35, %r2;
	mov.u64 	%rd39, image;
	cvta.global.u64 	%rd34, %rd39;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r24, %r25, %rd35, %rd36, %rd15, %rd15);
	// inline asm
	cvt.sat.f32.f32	%f680, %f679;
	mul.f32 	%f681, %f680, 0f437FFD71;
	cvt.rzi.u32.f32	%r105, %f681;
	cvt.sat.f32.f32	%f682, %f83;
	mul.f32 	%f683, %f682, 0f437FFD71;
	cvt.rzi.u32.f32	%r106, %f683;
	cvt.sat.f32.f32	%f684, %f70;
	mul.f32 	%f685, %f684, 0f437FFD71;
	cvt.rzi.u32.f32	%r107, %f685;
	cvt.u16.u32	%rs13, %r105;
	cvt.u16.u32	%rs14, %r107;
	cvt.u16.u32	%rs15, %r106;
	mov.u16 	%rs16, 255;
	st.v4.u8 	[%rd33], {%rs13, %rs15, %rs14, %rs16};
	ld.global.u32 	%r158, [imageEnabled];

BB0_68:
	and.b32  	%r108, %r158, 4;
	setp.eq.s32	%p100, %r108, 0;
	@%p100 bra 	BB0_72;

	ld.global.u32 	%r109, [additive];
	setp.eq.s32	%p101, %r109, 0;
	cvt.u64.u32	%rd4, %r2;
	cvt.u64.u32	%rd5, %r3;
	mov.f32 	%f686, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f686;}

	// inline asm
	@%p101 bra 	BB0_71;

	mov.u64 	%rd52, image_HDR;
	cvta.global.u64 	%rd41, %rd52;
	mov.u32 	%r113, 8;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd41, %r24, %r113, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs24, %rs25, %rs26, %rs27}, [%rd40];
	// inline asm
	{  cvt.f32.f16 %f687, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f688, %rs25;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f689, %rs26;}

	// inline asm
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd41, %r24, %r113, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	add.f32 	%f690, %f41, %f687;
	add.f32 	%f691, %f42, %f688;
	add.f32 	%f692, %f43, %f689;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f692;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f691;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f690;}

	// inline asm
	st.v4.u16 	[%rd46], {%rs21, %rs22, %rs23, %rs17};
	bra.uni 	BB0_72;

BB0_71:
	mov.u64 	%rd59, image_HDR;
	cvta.global.u64 	%rd54, %rd59;
	mov.u32 	%r115, 8;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r24, %r115, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f43;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f42;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f41;}

	// inline asm
	st.v4.u16 	[%rd53], {%rs28, %rs29, %rs30, %rs17};

BB0_72:
	ld.global.u8 	%rs31, [imageEnabled];
	and.b16  	%rs32, %rs31, 64;
	setp.eq.s16	%p102, %rs32, 0;
	@%p102 bra 	BB0_94;

	cvt.u64.u32	%rd62, %r2;
	cvt.u64.u32	%rd63, %r3;
	mov.u64 	%rd66, image_Dir;
	cvta.global.u64 	%rd61, %rd66;
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd61, %r24, %r25, %rd62, %rd63, %rd15, %rd15);
	// inline asm
	fma.rn.f32 	%f696, %f10, 0f3F000000, 0f3F000000;
	mul.f32 	%f697, %f696, 0f437F0000;
	cvt.rzi.u32.f32	%r118, %f697;
	fma.rn.f32 	%f698, %f11, 0f3F000000, 0f3F000000;
	mul.f32 	%f699, %f698, 0f437F0000;
	cvt.rzi.u32.f32	%r119, %f699;
	fma.rn.f32 	%f700, %f12, 0f3F000000, 0f3F000000;
	mul.f32 	%f701, %f700, 0f437F0000;
	cvt.rzi.u32.f32	%r120, %f701;
	cvt.u16.u32	%rs33, %r120;
	cvt.u16.u32	%rs34, %r119;
	cvt.u16.u32	%rs35, %r118;
	mov.u16 	%rs36, 255;
	st.v4.u8 	[%rd60], {%rs35, %rs34, %rs33, %rs36};

BB0_94:
	ret;
}


