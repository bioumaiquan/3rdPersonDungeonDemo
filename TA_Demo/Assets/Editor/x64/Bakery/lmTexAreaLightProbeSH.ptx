//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[44];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<151>;
	.reg .b16 	%rs<158>;
	.reg .f32 	%f<1347>;
	.reg .b32 	%r<429>;
	.reg .b64 	%rd<317>;


	mov.u64 	%rd316, __local_depot0;
	cvta.local.u64 	%SP, %rd316;
	ld.global.v2.u32 	{%r108, %r109}, [pixelID];
	cvt.u64.u32	%rd23, %r108;
	cvt.u64.u32	%rd24, %r109;
	mov.u64 	%rd27, uvnormal;
	cvta.global.u64 	%rd22, %rd27;
	mov.u32 	%r106, 2;
	mov.u32 	%r107, 4;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r106, %r107, %rd23, %rd24, %rd26, %rd26);
	// inline asm
	ld.u32 	%r1, [%rd21];
	shr.u32 	%r112, %r1, 16;
	cvt.u16.u32	%rs1, %r112;
	and.b16  	%rs7, %rs1, 255;
	cvt.u16.u32	%rs8, %r1;
	or.b16  	%rs9, %rs8, %rs7;
	setp.eq.s16	%p7, %rs9, 0;
	mov.f32 	%f1177, 0f00000000;
	mov.f32 	%f1178, %f1177;
	mov.f32 	%f1179, %f1177;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs10, [%rd21+1];
	and.b16  	%rs12, %rs8, 255;
	cvt.rn.f32.u16	%f373, %rs12;
	div.rn.f32 	%f374, %f373, 0f437F0000;
	fma.rn.f32 	%f375, %f374, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f376, %rs10;
	div.rn.f32 	%f377, %f376, 0f437F0000;
	fma.rn.f32 	%f378, %f377, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f379, %rs7;
	div.rn.f32 	%f380, %f379, 0f437F0000;
	fma.rn.f32 	%f381, %f380, 0f40000000, 0fBF800000;
	mul.f32 	%f382, %f378, %f378;
	fma.rn.f32 	%f383, %f375, %f375, %f382;
	fma.rn.f32 	%f384, %f381, %f381, %f383;
	sqrt.rn.f32 	%f385, %f384;
	rcp.rn.f32 	%f386, %f385;
	mul.f32 	%f1177, %f375, %f386;
	mul.f32 	%f1178, %f378, %f386;
	mul.f32 	%f1179, %f381, %f386;

BB0_2:
	ld.global.v2.u32 	{%r113, %r114}, [pixelID];
	ld.global.v2.u32 	{%r116, %r117}, [tileInfo];
	add.s32 	%r2, %r113, %r116;
	add.s32 	%r3, %r114, %r117;
	setp.eq.f32	%p8, %f1178, 0f00000000;
	setp.eq.f32	%p9, %f1177, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f1179, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_143;
	bra.uni 	BB0_3;

BB0_143:
	ld.global.u32 	%r428, [imageEnabled];
	and.b32  	%r345, %r428, 1;
	setp.eq.b32	%p142, %r345, 1;
	@!%p142 bra 	BB0_145;
	bra.uni 	BB0_144;

BB0_144:
	cvt.u64.u32	%rd196, %r2;
	cvt.u64.u32	%rd197, %r3;
	mov.u64 	%rd200, image;
	cvta.global.u64 	%rd195, %rd200;
	mov.u64 	%rd199, 0;
	// inline asm
	call (%rd194), _rt_buffer_get_64, (%rd195, %r106, %r107, %rd196, %rd197, %rd199, %rd199);
	// inline asm
	mov.u16 	%rs90, 0;
	st.v4.u8 	[%rd194], {%rs90, %rs90, %rs90, %rs90};
	ld.global.u32 	%r428, [imageEnabled];

BB0_145:
	and.b32  	%r348, %r428, 8;
	setp.eq.s32	%p143, %r348, 0;
	@%p143 bra 	BB0_147;

	cvt.u64.u32	%rd204, %r3;
	cvt.u64.u32	%rd203, %r2;
	mov.u64 	%rd207, image_Mask;
	cvta.global.u64 	%rd202, %rd207;
	mov.u64 	%rd206, 0;
	// inline asm
	call (%rd201), _rt_buffer_get_64, (%rd202, %r106, %r106, %rd203, %rd204, %rd206, %rd206);
	// inline asm
	mov.f32 	%f1132, 0f00000000;
	cvt.rzi.u32.f32	%r351, %f1132;
	cvt.u16.u32	%rs91, %r351;
	mov.u16 	%rs92, 0;
	st.v2.u8 	[%rd201], {%rs91, %rs92};
	ld.global.u32 	%r428, [imageEnabled];

BB0_147:
	cvt.u64.u32	%rd19, %r2;
	cvt.u64.u32	%rd20, %r3;
	and.b32  	%r352, %r428, 4;
	setp.eq.s32	%p144, %r352, 0;
	@%p144 bra 	BB0_151;

	ld.global.u32 	%r353, [additive];
	setp.eq.s32	%p145, %r353, 0;
	@%p145 bra 	BB0_150;

	mov.u64 	%rd220, image_HDR;
	cvta.global.u64 	%rd209, %rd220;
	mov.u32 	%r357, 8;
	mov.u64 	%rd219, 0;
	// inline asm
	call (%rd208), _rt_buffer_get_64, (%rd209, %r106, %r357, %rd19, %rd20, %rd219, %rd219);
	// inline asm
	ld.v4.u16 	{%rs99, %rs100, %rs101, %rs102}, [%rd208];
	// inline asm
	{  cvt.f32.f16 %f1133, %rs99;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1134, %rs100;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1135, %rs101;}

	// inline asm
	// inline asm
	call (%rd214), _rt_buffer_get_64, (%rd209, %r106, %r357, %rd19, %rd20, %rd219, %rd219);
	// inline asm
	add.f32 	%f1136, %f1133, 0f00000000;
	add.f32 	%f1137, %f1134, 0f00000000;
	add.f32 	%f1138, %f1135, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f1138;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f1137;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs96, %f1136;}

	// inline asm
	mov.u16 	%rs103, 0;
	st.v4.u16 	[%rd214], {%rs96, %rs97, %rs98, %rs103};
	bra.uni 	BB0_151;

BB0_3:
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd30, %r126;
	cvt.u64.u32	%rd31, %r127;
	mov.u64 	%rd40, uvpos;
	cvta.global.u64 	%rd29, %rd40;
	mov.u32 	%r122, 12;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r106, %r122, %rd30, %rd31, %rd26, %rd26);
	// inline asm
	ld.f32 	%f9, [%rd28+8];
	ld.f32 	%f8, [%rd28+4];
	ld.f32 	%f7, [%rd28];
	mul.f32 	%f403, %f7, 0f3456BF95;
	mul.f32 	%f404, %f8, 0f3456BF95;
	mul.f32 	%f405, %f9, 0f3456BF95;
	abs.f32 	%f10, %f1177;
	div.rn.f32 	%f406, %f403, %f10;
	abs.f32 	%f407, %f1178;
	div.rn.f32 	%f408, %f404, %f407;
	abs.f32 	%f11, %f1179;
	div.rn.f32 	%f409, %f405, %f11;
	abs.f32 	%f410, %f406;
	abs.f32 	%f411, %f408;
	abs.f32 	%f412, %f409;
	mov.f32 	%f413, 0f38D1B717;
	max.f32 	%f414, %f410, %f413;
	max.f32 	%f415, %f411, %f413;
	max.f32 	%f416, %f412, %f413;
	fma.rn.f32 	%f12, %f1177, %f414, %f7;
	fma.rn.f32 	%f13, %f1178, %f415, %f8;
	fma.rn.f32 	%f14, %f1179, %f416, %f9;
	ld.global.v2.u32 	{%r130, %r131}, [pixelID];
	cvt.u64.u32	%rd36, %r130;
	cvt.u64.u32	%rd37, %r131;
	mov.u64 	%rd41, rnd_seeds;
	cvta.global.u64 	%rd35, %rd41;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r106, %r107, %rd36, %rd37, %rd26, %rd26);
	// inline asm
	ld.u32 	%r134, [%rd34];
	mad.lo.s32 	%r4, %r134, 1664525, 1013904223;
	ld.global.u32 	%r135, [lightMeshBufferSize];
	setp.eq.s32	%p14, %r135, 0;
	mov.pred 	%p13, 0;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r6, 0;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	and.b32  	%r138, %r4, 16777215;
	cvt.rn.f32.u32	%f433, %r138;
	mul.f32 	%f434, %f433, 0fB3800000;
	fma.rn.f32 	%f19, %f434, 0f3F333333, 0f3F800000;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r393, 0;
	abs.f32 	%f557, %f17;
	abs.f32 	%f558, %f16;
	max.f32 	%f559, %f558, %f557;
	abs.f32 	%f560, %f18;
	max.f32 	%f561, %f559, %f560;
	mov.u32 	%r6, %r393;
	mov.f32 	%f21, %f20;
	mov.f32 	%f22, %f20;
	mov.f32 	%f23, %f20;
	mov.f32 	%f24, %f20;
	mov.f32 	%f25, %f20;
	mov.f32 	%f26, %f20;
	mov.f32 	%f27, %f20;
	mov.f32 	%f28, %f20;
	mov.f32 	%f29, %f20;
	mov.f32 	%f30, %f20;
	mov.f32 	%f31, %f20;
	mov.f32 	%f32, %f20;
	mov.f32 	%f33, %f20;
	mov.f32 	%f34, %f20;
	mov.f32 	%f35, %f20;

BB0_6:
	mul.lo.s32 	%r7, %r393, 3;
	cvt.s64.s32	%rd44, %r7;
	mov.u64 	%rd48, lightMeshBuffer;
	cvta.global.u64 	%rd43, %rd48;
	mov.u32 	%r139, 1;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r139, %r122, %rd44, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f435, [%rd42];
	sub.f32 	%f436, %f435, %f7;
	ld.f32 	%f437, [%rd42+4];
	sub.f32 	%f438, %f437, %f8;
	ld.f32 	%f439, [%rd42+8];
	sub.f32 	%f440, %f439, %f9;
	mul.f32 	%f441, %f438, %f438;
	fma.rn.f32 	%f442, %f436, %f436, %f441;
	fma.rn.f32 	%f443, %f440, %f440, %f442;
	sqrt.rn.f32 	%f36, %f443;
	rcp.rn.f32 	%f444, %f36;
	mul.f32 	%f37, %f436, %f444;
	mul.f32 	%f38, %f438, %f444;
	mul.f32 	%f39, %f440, %f444;
	mul.f32 	%f445, %f1178, %f38;
	fma.rn.f32 	%f446, %f1177, %f37, %f445;
	fma.rn.f32 	%f40, %f1179, %f39, %f446;
	setp.leu.f32	%p15, %f40, 0f00000000;
	@%p15 bra 	BB0_22;

	mul.f32 	%f447, %f36, %f36;
	mul.f32 	%f448, %f447, 0f40C90FDB;
	div.rn.f32 	%f449, %f15, %f448;
	add.f32 	%f41, %f449, %f449;
	setp.gt.f32	%p17, %f41, %f19;
	ld.global.u32 	%r141, [samples];
	setp.ne.s32	%p18, %r141, 0;
	and.pred  	%p19, %p18, %p17;
	mov.pred 	%p150, -1;
	@%p19 bra 	BB0_24;

	ld.global.f32 	%f452, [lightInvCutoff];
	mul.f32 	%f42, %f36, %f452;
	mov.f32 	%f456, 0f40800000;
	abs.f32 	%f44, %f42;
	setp.lt.f32	%p20, %f44, 0f00800000;
	mul.f32 	%f458, %f44, 0f4B800000;
	selp.f32	%f459, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f460, %f458, %f44, %p20;
	mov.b32 	 %r142, %f460;
	and.b32  	%r143, %r142, 8388607;
	or.b32  	%r144, %r143, 1065353216;
	mov.b32 	 %f461, %r144;
	shr.u32 	%r145, %r142, 23;
	cvt.rn.f32.u32	%f462, %r145;
	add.f32 	%f463, %f459, %f462;
	setp.gt.f32	%p21, %f461, 0f3FB504F3;
	mul.f32 	%f464, %f461, 0f3F000000;
	add.f32 	%f465, %f463, 0f3F800000;
	selp.f32	%f466, %f464, %f461, %p21;
	selp.f32	%f467, %f465, %f463, %p21;
	add.f32 	%f468, %f466, 0fBF800000;
	add.f32 	%f451, %f466, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f450,%f451;
	// inline asm
	add.f32 	%f469, %f468, %f468;
	mul.f32 	%f470, %f450, %f469;
	mul.f32 	%f471, %f470, %f470;
	mov.f32 	%f472, 0f3C4CAF63;
	mov.f32 	%f473, 0f3B18F0FE;
	fma.rn.f32 	%f474, %f473, %f471, %f472;
	mov.f32 	%f475, 0f3DAAAABD;
	fma.rn.f32 	%f476, %f474, %f471, %f475;
	mul.rn.f32 	%f477, %f476, %f471;
	mul.rn.f32 	%f478, %f477, %f470;
	sub.f32 	%f479, %f468, %f470;
	neg.f32 	%f480, %f470;
	add.f32 	%f481, %f479, %f479;
	fma.rn.f32 	%f482, %f480, %f468, %f481;
	mul.rn.f32 	%f483, %f450, %f482;
	add.f32 	%f484, %f478, %f470;
	sub.f32 	%f485, %f470, %f484;
	add.f32 	%f486, %f478, %f485;
	add.f32 	%f487, %f483, %f486;
	add.f32 	%f488, %f484, %f487;
	sub.f32 	%f489, %f484, %f488;
	add.f32 	%f490, %f487, %f489;
	mov.f32 	%f491, 0f3F317200;
	mul.rn.f32 	%f492, %f467, %f491;
	mov.f32 	%f493, 0f35BFBE8E;
	mul.rn.f32 	%f494, %f467, %f493;
	add.f32 	%f495, %f492, %f488;
	sub.f32 	%f496, %f492, %f495;
	add.f32 	%f497, %f488, %f496;
	add.f32 	%f498, %f490, %f497;
	add.f32 	%f499, %f494, %f498;
	add.f32 	%f500, %f495, %f499;
	sub.f32 	%f501, %f495, %f500;
	add.f32 	%f502, %f499, %f501;
	mul.rn.f32 	%f503, %f456, %f500;
	neg.f32 	%f504, %f503;
	fma.rn.f32 	%f505, %f456, %f500, %f504;
	fma.rn.f32 	%f506, %f456, %f502, %f505;
	mov.f32 	%f507, 0f00000000;
	fma.rn.f32 	%f508, %f507, %f500, %f506;
	add.rn.f32 	%f509, %f503, %f508;
	neg.f32 	%f510, %f509;
	add.rn.f32 	%f511, %f503, %f510;
	add.rn.f32 	%f512, %f511, %f508;
	mov.b32 	 %r146, %f509;
	setp.eq.s32	%p22, %r146, 1118925336;
	add.s32 	%r147, %r146, -1;
	mov.b32 	 %f513, %r147;
	add.f32 	%f514, %f512, 0f37000000;
	selp.f32	%f515, %f513, %f509, %p22;
	selp.f32	%f45, %f514, %f512, %p22;
	mul.f32 	%f516, %f515, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f517, %f516;
	mov.f32 	%f518, 0fBF317200;
	fma.rn.f32 	%f519, %f517, %f518, %f515;
	mov.f32 	%f520, 0fB5BFBE8E;
	fma.rn.f32 	%f521, %f517, %f520, %f519;
	mul.f32 	%f522, %f521, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f523, %f522;
	add.f32 	%f524, %f517, 0f00000000;
	ex2.approx.f32 	%f525, %f524;
	mul.f32 	%f526, %f523, %f525;
	setp.lt.f32	%p23, %f515, 0fC2D20000;
	selp.f32	%f527, 0f00000000, %f526, %p23;
	setp.gt.f32	%p24, %f515, 0f42D20000;
	selp.f32	%f1196, 0f7F800000, %f527, %p24;
	setp.eq.f32	%p25, %f1196, 0f7F800000;
	@%p25 bra 	BB0_10;

	fma.rn.f32 	%f1196, %f1196, %f45, %f1196;

BB0_10:
	mov.f32 	%f1173, 0f40000000;
	cvt.rzi.f32.f32	%f1172, %f1173;
	add.f32 	%f1171, %f1172, %f1172;
	mov.f32 	%f1170, 0f40800000;
	sub.f32 	%f1169, %f1170, %f1171;
	abs.f32 	%f1168, %f1169;
	setp.lt.f32	%p26, %f42, 0f00000000;
	setp.eq.f32	%p27, %f1168, 0f3F800000;
	and.pred  	%p1, %p26, %p27;
	mov.b32 	 %r148, %f1196;
	xor.b32  	%r149, %r148, -2147483648;
	mov.b32 	 %f528, %r149;
	selp.f32	%f1198, %f528, %f1196, %p1;
	setp.eq.f32	%p28, %f42, 0f00000000;
	@%p28 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f531, %f42, %f42;
	selp.f32	%f1198, %f531, 0f00000000, %p27;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p29, %f42, 0f00000000;
	@%p29 bra 	BB0_14;

	mov.f32 	%f1176, 0f40800000;
	cvt.rzi.f32.f32	%f530, %f1176;
	setp.neu.f32	%p30, %f530, 0f40800000;
	selp.f32	%f1198, 0f7FFFFFFF, %f1198, %p30;

BB0_14:
	add.f32 	%f532, %f44, 0f40800000;
	mov.b32 	 %r150, %f532;
	setp.lt.s32	%p32, %r150, 2139095040;
	@%p32 bra 	BB0_19;

	setp.gtu.f32	%p33, %f44, 0f7F800000;
	@%p33 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f1198, %f42, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p34, %f44, 0f7F800000;
	@%p34 bra 	BB0_19;

	selp.f32	%f1198, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u32 	%r389, 1;
	mov.u64 	%rd309, lightMeshBuffer;
	cvta.global.u64 	%rd308, %rd309;
	mul.lo.s32 	%r388, %r393, 3;
	mov.f32 	%f533, 0f3F800000;
	sub.f32 	%f534, %f533, %f1198;
	setp.eq.f32	%p35, %f42, 0f3F800000;
	selp.f32	%f535, 0f00000000, %f534, %p35;
	cvt.sat.f32.f32	%f536, %f535;
	mul.f32 	%f537, %f41, %f536;
	add.s32 	%r153, %r388, 1;
	cvt.s64.s32	%rd51, %r153;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd308, %r389, %r122, %rd51, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f538, [%rd49];
	mul.f32 	%f539, %f37, %f538;
	ld.f32 	%f540, [%rd49+4];
	mul.f32 	%f541, %f38, %f540;
	neg.f32 	%f542, %f541;
	sub.f32 	%f543, %f542, %f539;
	ld.f32 	%f544, [%rd49+8];
	mul.f32 	%f545, %f39, %f544;
	sub.f32 	%f546, %f543, %f545;
	cvt.sat.f32.f32	%f547, %f546;
	mul.f32 	%f56, %f537, %f547;
	setp.leu.f32	%p36, %f56, 0f3727C5AC;
	@%p36 bra 	BB0_21;

	mov.u32 	%r392, 1;
	mov.u64 	%rd311, lightMeshBuffer;
	cvta.global.u64 	%rd310, %rd311;
	mul.lo.s32 	%r391, %r393, 3;
	cvt.sat.f32.f32	%f556, %f40;
	add.u64 	%rd56, %SP, 12;
	cvta.to.local.u64 	%rd63, %rd56;
	max.f32 	%f554, %f561, %f413;
	sub.f32 	%f555, %f36, %f554;
	mov.u32 	%r159, 1065353216;
	st.local.u32 	[%rd63], %r159;
	ld.global.u32 	%r154, [root];
	// inline asm
	call _rt_trace_64, (%r154, %f12, %f13, %f14, %f37, %f38, %f39, %r392, %f554, %f555, %rd56, %r107);
	// inline asm
	add.s32 	%r160, %r391, 2;
	cvt.s64.s32	%rd59, %r160;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd310, %r392, %r122, %rd59, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f563, [%rd57];
	ld.local.f32 	%f564, [%rd63];
	mul.f32 	%f565, %f564, %f563;
	ld.f32 	%f566, [%rd57+4];
	mul.f32 	%f567, %f564, %f566;
	ld.f32 	%f568, [%rd57+8];
	mul.f32 	%f569, %f564, %f568;
	mul.f32 	%f570, %f56, %f565;
	mul.f32 	%f571, %f56, %f567;
	mul.f32 	%f572, %f56, %f569;
	fma.rn.f32 	%f23, %f556, %f570, %f23;
	fma.rn.f32 	%f22, %f556, %f571, %f22;
	fma.rn.f32 	%f21, %f556, %f572, %f21;
	fma.rn.f32 	%f29, %f37, %f570, %f29;
	fma.rn.f32 	%f28, %f37, %f571, %f28;
	fma.rn.f32 	%f27, %f37, %f572, %f27;
	fma.rn.f32 	%f32, %f38, %f570, %f32;
	fma.rn.f32 	%f31, %f38, %f571, %f31;
	fma.rn.f32 	%f30, %f38, %f572, %f30;
	fma.rn.f32 	%f35, %f39, %f570, %f35;
	fma.rn.f32 	%f34, %f39, %f571, %f34;
	fma.rn.f32 	%f33, %f39, %f572, %f33;
	add.f32 	%f26, %f26, %f570;
	add.f32 	%f25, %f25, %f571;
	add.f32 	%f24, %f24, %f572;
	add.f32 	%f20, %f20, %f564;

BB0_21:
	add.s32 	%r6, %r6, 1;

BB0_22:
	ld.global.u32 	%r161, [lightMeshBufferSize];
	add.s32 	%r393, %r393, 1;
	setp.lt.u32	%p38, %r393, %r161;
	@%p38 bra 	BB0_6;
	bra.uni 	BB0_23;

BB0_4:
	mov.f32 	%f21, %f20;
	mov.f32 	%f22, %f20;
	mov.f32 	%f23, %f20;
	mov.f32 	%f24, %f20;
	mov.f32 	%f25, %f20;
	mov.f32 	%f26, %f20;
	mov.f32 	%f27, %f20;
	mov.f32 	%f28, %f20;
	mov.f32 	%f29, %f20;
	mov.f32 	%f30, %f20;
	mov.f32 	%f31, %f20;
	mov.f32 	%f32, %f20;
	mov.f32 	%f33, %f20;
	mov.f32 	%f34, %f20;
	mov.f32 	%f35, %f20;

BB0_23:
	mov.pred 	%p150, %p13;

BB0_24:
	cvt.rn.f32.s32	%f573, %r6;
	mov.f32 	%f574, 0f3F800000;
	max.f32 	%f575, %f573, %f574;
	rcp.rn.f32 	%f576, %f575;
	mul.f32 	%f1331, %f23, %f576;
	mul.f32 	%f1332, %f22, %f576;
	mul.f32 	%f1333, %f21, %f576;
	div.rn.f32 	%f1334, %f20, %f575;
	mul.f32 	%f1328, %f26, %f576;
	mul.f32 	%f1329, %f25, %f576;
	mul.f32 	%f1330, %f24, %f576;
	mul.f32 	%f1325, %f29, %f576;
	mul.f32 	%f1326, %f28, %f576;
	mul.f32 	%f1327, %f27, %f576;
	mul.f32 	%f1322, %f32, %f576;
	mul.f32 	%f1323, %f31, %f576;
	mul.f32 	%f1324, %f30, %f576;
	mul.f32 	%f1319, %f35, %f576;
	mul.f32 	%f1320, %f34, %f576;
	mul.f32 	%f1321, %f33, %f576;
	@!%p150 bra 	BB0_79;
	bra.uni 	BB0_25;

BB0_25:
	abs.f32 	%f1175, %f1179;
	abs.f32 	%f1174, %f1177;
	setp.gt.f32	%p39, %f1174, %f1175;
	neg.f32 	%f592, %f1178;
	selp.f32	%f593, %f592, 0f00000000, %p39;
	neg.f32 	%f594, %f1179;
	selp.f32	%f595, %f1177, %f594, %p39;
	selp.f32	%f596, 0f00000000, %f1178, %p39;
	mul.f32 	%f597, %f595, %f595;
	fma.rn.f32 	%f598, %f593, %f593, %f597;
	fma.rn.f32 	%f599, %f596, %f596, %f598;
	sqrt.rn.f32 	%f600, %f599;
	rcp.rn.f32 	%f601, %f600;
	mul.f32 	%f137, %f593, %f601;
	mul.f32 	%f138, %f595, %f601;
	mul.f32 	%f139, %f596, %f601;
	ld.global.u32 	%r397, [samples];
	mov.f32 	%f591, 0f00000000;
	setp.lt.s32	%p40, %r397, 1;
	@%p40 bra 	BB0_26;

	mad.lo.s32 	%r423, %r134, 1664525, 1013904223;
	cvt.rn.f32.s32	%f617, %r397;
	rcp.rn.f32 	%f140, %f617;
	add.u64 	%rd65, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd65;
	mul.f32 	%f141, %f12, 0f3456BF95;
	mul.f32 	%f142, %f13, 0f3456BF95;
	mul.f32 	%f143, %f14, 0f3456BF95;
	mul.f32 	%f618, %f1177, %f138;
	mul.f32 	%f619, %f1178, %f137;
	sub.f32 	%f144, %f619, %f618;
	mul.f32 	%f620, %f1179, %f137;
	mul.f32 	%f621, %f1177, %f139;
	sub.f32 	%f145, %f621, %f620;
	mul.f32 	%f622, %f1178, %f139;
	mul.f32 	%f623, %f1179, %f138;
	sub.f32 	%f146, %f623, %f622;
	mov.f32 	%f1289, 0f00000000;
	mov.u32 	%r398, 0;
	abs.f32 	%f624, %f142;
	abs.f32 	%f625, %f141;
	max.f32 	%f626, %f625, %f624;
	abs.f32 	%f627, %f143;
	max.f32 	%f628, %f626, %f627;
	mov.f32 	%f1290, %f1289;
	mov.f32 	%f1291, %f1289;
	mov.f32 	%f1292, %f1289;
	mov.f32 	%f1293, %f1289;
	mov.f32 	%f1294, %f1289;
	mov.f32 	%f1295, %f1289;
	mov.f32 	%f1296, %f1289;
	mov.f32 	%f1297, %f1289;
	mov.f32 	%f1298, %f1289;
	mov.f32 	%f1299, %f1289;
	mov.f32 	%f1300, %f1289;
	mov.f32 	%f1301, %f1289;
	mov.f32 	%f1302, %f1289;
	mov.f32 	%f1303, %f1289;

BB0_28:
	setp.lt.s32	%p41, %r397, 1;
	@%p41 bra 	BB0_77;

	cvt.rn.f32.s32	%f162, %r398;
	max.f32 	%f163, %f628, %f413;
	add.u64 	%rd66, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd66;
	mov.u32 	%r400, 0;

BB0_30:
	mad.lo.s32 	%r164, %r423, 1664525, 1013904223;
	and.b32  	%r165, %r164, 16777215;
	cvt.rn.f32.u32	%f630, %r165;
	fma.rn.f32 	%f631, %f630, 0f33800000, %f162;
	mul.f32 	%f632, %f140, %f631;
	mad.lo.s32 	%r423, %r164, 1664525, 1013904223;
	and.b32  	%r166, %r423, 16777215;
	cvt.rn.f32.u32	%f633, %r166;
	cvt.rn.f32.s32	%f634, %r400;
	fma.rn.f32 	%f635, %f633, 0f33800000, %f634;
	mul.f32 	%f636, %f140, %f635;
	fma.rn.f32 	%f179, %f632, 0fC0000000, 0f3F800000;
	mul.f32 	%f637, %f179, %f179;
	sub.f32 	%f639, %f574, %f637;
	mov.f32 	%f640, 0f00000000;
	max.f32 	%f641, %f640, %f639;
	sqrt.rn.f32 	%f180, %f641;
	mul.f32 	%f1283, %f636, 0f40C90FDB;
	abs.f32 	%f182, %f1283;
	setp.neu.f32	%p42, %f182, 0f7F800000;
	mov.f32 	%f1277, %f1283;
	@%p42 bra 	BB0_32;

	mul.rn.f32 	%f1277, %f1283, %f640;

BB0_32:
	mul.f32 	%f643, %f1277, 0f3F22F983;
	cvt.rni.s32.f32	%r411, %f643;
	cvt.rn.f32.s32	%f644, %r411;
	neg.f32 	%f645, %f644;
	mov.f32 	%f646, 0f3FC90FDA;
	fma.rn.f32 	%f647, %f645, %f646, %f1277;
	mov.f32 	%f648, 0f33A22168;
	fma.rn.f32 	%f649, %f645, %f648, %f647;
	mov.f32 	%f650, 0f27C234C5;
	fma.rn.f32 	%f1278, %f645, %f650, %f649;
	abs.f32 	%f651, %f1277;
	setp.leu.f32	%p43, %f651, 0f47CE4780;
	@%p43 bra 	BB0_43;

	mov.b32 	 %r20, %f1277;
	shr.u32 	%r21, %r20, 23;
	shl.b32 	%r169, %r20, 8;
	or.b32  	%r22, %r169, -2147483648;
	mov.u32 	%r402, 0;
	mov.u64 	%rd313, 0;
	mov.u64 	%rd312, %rd2;
	mov.u32 	%r403, %r402;

BB0_34:
	.pragma "nounroll";
	shl.b64 	%rd68, %rd313, 2;
	mov.u64 	%rd69, __cudart_i2opi_f;
	add.s64 	%rd70, %rd69, %rd68;
	ld.const.u32 	%r172, [%rd70];
	// inline asm
	{
	mad.lo.cc.u32   %r170, %r172, %r22, %r403;
	madc.hi.u32     %r403, %r172, %r22,  0;
	}
	// inline asm
	st.local.u32 	[%rd312], %r170;
	add.s32 	%r402, %r402, 1;
	cvt.s64.s32	%rd313, %r402;
	mul.wide.s32 	%rd71, %r402, 4;
	add.s64 	%rd312, %rd2, %rd71;
	setp.ne.s32	%p44, %r402, 6;
	@%p44 bra 	BB0_34;

	and.b32  	%r175, %r21, 255;
	add.s32 	%r176, %r175, -128;
	shr.u32 	%r177, %r176, 5;
	and.b32  	%r27, %r20, -2147483648;
	st.local.u32 	[%rd2+24], %r403;
	mov.u32 	%r178, 6;
	sub.s32 	%r179, %r178, %r177;
	mul.wide.s32 	%rd72, %r179, 4;
	add.s64 	%rd9, %rd2, %rd72;
	ld.local.u32 	%r404, [%rd9];
	ld.local.u32 	%r405, [%rd9+-4];
	and.b32  	%r30, %r21, 31;
	setp.eq.s32	%p45, %r30, 0;
	@%p45 bra 	BB0_37;

	mov.u32 	%r180, 32;
	sub.s32 	%r181, %r180, %r30;
	shr.u32 	%r182, %r405, %r181;
	shl.b32 	%r183, %r404, %r30;
	add.s32 	%r404, %r182, %r183;
	ld.local.u32 	%r184, [%rd9+-8];
	shr.u32 	%r185, %r184, %r181;
	shl.b32 	%r186, %r405, %r30;
	add.s32 	%r405, %r185, %r186;

BB0_37:
	shr.u32 	%r187, %r405, 30;
	shl.b32 	%r188, %r404, 2;
	add.s32 	%r406, %r187, %r188;
	shl.b32 	%r36, %r405, 2;
	shr.u32 	%r189, %r406, 31;
	shr.u32 	%r190, %r404, 30;
	add.s32 	%r37, %r189, %r190;
	setp.eq.s32	%p46, %r189, 0;
	@%p46 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.u32 	%r407, %r27;
	mov.u32 	%r408, %r36;
	bra.uni 	BB0_40;

BB0_39:
	not.b32 	%r191, %r406;
	neg.s32 	%r408, %r36;
	setp.eq.s32	%p47, %r36, 0;
	selp.u32	%r192, 1, 0, %p47;
	add.s32 	%r406, %r192, %r191;
	xor.b32  	%r407, %r27, -2147483648;

BB0_40:
	clz.b32 	%r410, %r406;
	setp.eq.s32	%p48, %r410, 0;
	shl.b32 	%r193, %r406, %r410;
	mov.u32 	%r194, 32;
	sub.s32 	%r195, %r194, %r410;
	shr.u32 	%r196, %r408, %r195;
	add.s32 	%r197, %r196, %r193;
	selp.b32	%r45, %r406, %r197, %p48;
	mov.u32 	%r198, -921707870;
	mul.hi.u32 	%r409, %r45, %r198;
	setp.eq.s32	%p49, %r27, 0;
	neg.s32 	%r199, %r37;
	selp.b32	%r411, %r37, %r199, %p49;
	setp.lt.s32	%p50, %r409, 1;
	@%p50 bra 	BB0_42;

	mul.lo.s32 	%r200, %r45, -921707870;
	shr.u32 	%r201, %r200, 31;
	shl.b32 	%r202, %r409, 1;
	add.s32 	%r409, %r201, %r202;
	add.s32 	%r410, %r410, 1;

BB0_42:
	mov.u32 	%r203, 126;
	sub.s32 	%r204, %r203, %r410;
	shl.b32 	%r205, %r204, 23;
	add.s32 	%r206, %r409, 1;
	shr.u32 	%r207, %r206, 7;
	add.s32 	%r208, %r207, 1;
	shr.u32 	%r209, %r208, 1;
	add.s32 	%r210, %r209, %r205;
	or.b32  	%r211, %r210, %r407;
	mov.b32 	 %f1278, %r211;

BB0_43:
	mul.rn.f32 	%f188, %f1278, %f1278;
	add.s32 	%r53, %r411, 1;
	and.b32  	%r54, %r53, 1;
	setp.eq.s32	%p51, %r54, 0;
	@%p51 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f654, 0f3C08839E;
	mov.f32 	%f655, 0fB94CA1F9;
	fma.rn.f32 	%f1279, %f655, %f188, %f654;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f652, 0fBAB6061A;
	mov.f32 	%f653, 0f37CCF5CE;
	fma.rn.f32 	%f1279, %f653, %f188, %f652;

BB0_46:
	@%p51 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	mov.f32 	%f659, 0fBE2AAAA3;
	fma.rn.f32 	%f660, %f1279, %f188, %f659;
	fma.rn.f32 	%f1280, %f660, %f188, %f640;
	bra.uni 	BB0_49;

BB0_47:
	mov.f32 	%f656, 0f3D2AAAA5;
	fma.rn.f32 	%f657, %f1279, %f188, %f656;
	mov.f32 	%f658, 0fBF000000;
	fma.rn.f32 	%f1280, %f657, %f188, %f658;

BB0_49:
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1278;
	@%p51 bra 	BB0_51;

	fma.rn.f32 	%f1281, %f1280, %f188, %f574;

BB0_51:
	and.b32  	%r212, %r53, 2;
	setp.eq.s32	%p54, %r212, 0;
	@%p54 bra 	BB0_53;

	mov.f32 	%f664, 0fBF800000;
	fma.rn.f32 	%f1281, %f1281, %f664, %f640;

BB0_53:
	@%p42 bra 	BB0_55;

	mul.rn.f32 	%f1283, %f1283, %f640;

BB0_55:
	mul.f32 	%f666, %f1283, 0f3F22F983;
	cvt.rni.s32.f32	%r421, %f666;
	cvt.rn.f32.s32	%f667, %r421;
	neg.f32 	%f668, %f667;
	fma.rn.f32 	%f670, %f668, %f646, %f1283;
	fma.rn.f32 	%f672, %f668, %f648, %f670;
	fma.rn.f32 	%f1284, %f668, %f650, %f672;
	abs.f32 	%f674, %f1283;
	setp.leu.f32	%p56, %f674, 0f47CE4780;
	@%p56 bra 	BB0_66;

	mov.b32 	 %r56, %f1283;
	shr.u32 	%r57, %r56, 23;
	shl.b32 	%r215, %r56, 8;
	or.b32  	%r58, %r215, -2147483648;
	mov.u32 	%r412, 0;
	mov.u64 	%rd314, %rd2;
	mov.u64 	%rd315, %rd26;
	mov.u32 	%r413, %r412;

BB0_57:
	.pragma "nounroll";
	shl.b64 	%rd74, %rd315, 2;
	mov.u64 	%rd75, __cudart_i2opi_f;
	add.s64 	%rd76, %rd75, %rd74;
	ld.const.u32 	%r218, [%rd76];
	// inline asm
	{
	mad.lo.cc.u32   %r216, %r218, %r58, %r413;
	madc.hi.u32     %r413, %r218, %r58,  0;
	}
	// inline asm
	st.local.u32 	[%rd314], %r216;
	add.s32 	%r412, %r412, 1;
	cvt.s64.s32	%rd315, %r412;
	mul.wide.s32 	%rd77, %r412, 4;
	add.s64 	%rd314, %rd2, %rd77;
	setp.ne.s32	%p57, %r412, 6;
	@%p57 bra 	BB0_57;

	and.b32  	%r221, %r57, 255;
	add.s32 	%r222, %r221, -128;
	shr.u32 	%r223, %r222, 5;
	and.b32  	%r63, %r56, -2147483648;
	st.local.u32 	[%rd2+24], %r413;
	mov.u32 	%r224, 6;
	sub.s32 	%r225, %r224, %r223;
	mul.wide.s32 	%rd78, %r225, 4;
	add.s64 	%rd15, %rd2, %rd78;
	ld.local.u32 	%r414, [%rd15];
	ld.local.u32 	%r415, [%rd15+-4];
	and.b32  	%r66, %r57, 31;
	setp.eq.s32	%p58, %r66, 0;
	@%p58 bra 	BB0_60;

	mov.u32 	%r226, 32;
	sub.s32 	%r227, %r226, %r66;
	shr.u32 	%r228, %r415, %r227;
	shl.b32 	%r229, %r414, %r66;
	add.s32 	%r414, %r228, %r229;
	ld.local.u32 	%r230, [%rd15+-8];
	shr.u32 	%r231, %r230, %r227;
	shl.b32 	%r232, %r415, %r66;
	add.s32 	%r415, %r231, %r232;

BB0_60:
	shr.u32 	%r233, %r415, 30;
	shl.b32 	%r234, %r414, 2;
	add.s32 	%r416, %r233, %r234;
	shl.b32 	%r72, %r415, 2;
	shr.u32 	%r235, %r416, 31;
	shr.u32 	%r236, %r414, 30;
	add.s32 	%r73, %r235, %r236;
	setp.eq.s32	%p59, %r235, 0;
	@%p59 bra 	BB0_61;
	bra.uni 	BB0_62;

BB0_61:
	mov.u32 	%r417, %r63;
	mov.u32 	%r418, %r72;
	bra.uni 	BB0_63;

BB0_62:
	not.b32 	%r237, %r416;
	neg.s32 	%r418, %r72;
	setp.eq.s32	%p60, %r72, 0;
	selp.u32	%r238, 1, 0, %p60;
	add.s32 	%r416, %r238, %r237;
	xor.b32  	%r417, %r63, -2147483648;

BB0_63:
	clz.b32 	%r420, %r416;
	setp.eq.s32	%p61, %r420, 0;
	shl.b32 	%r239, %r416, %r420;
	mov.u32 	%r240, 32;
	sub.s32 	%r241, %r240, %r420;
	shr.u32 	%r242, %r418, %r241;
	add.s32 	%r243, %r242, %r239;
	selp.b32	%r81, %r416, %r243, %p61;
	mov.u32 	%r244, -921707870;
	mul.hi.u32 	%r419, %r81, %r244;
	setp.eq.s32	%p62, %r63, 0;
	neg.s32 	%r245, %r73;
	selp.b32	%r421, %r73, %r245, %p62;
	setp.lt.s32	%p63, %r419, 1;
	@%p63 bra 	BB0_65;

	mul.lo.s32 	%r246, %r81, -921707870;
	shr.u32 	%r247, %r246, 31;
	shl.b32 	%r248, %r419, 1;
	add.s32 	%r419, %r247, %r248;
	add.s32 	%r420, %r420, 1;

BB0_65:
	mov.u32 	%r249, 126;
	sub.s32 	%r250, %r249, %r420;
	shl.b32 	%r251, %r250, 23;
	add.s32 	%r252, %r419, 1;
	shr.u32 	%r253, %r252, 7;
	add.s32 	%r254, %r253, 1;
	shr.u32 	%r255, %r254, 1;
	add.s32 	%r256, %r255, %r251;
	or.b32  	%r257, %r256, %r417;
	mov.b32 	 %f1284, %r257;

BB0_66:
	mul.rn.f32 	%f205, %f1284, %f1284;
	and.b32  	%r89, %r421, 1;
	setp.eq.s32	%p64, %r89, 0;
	@%p64 bra 	BB0_68;
	bra.uni 	BB0_67;

BB0_68:
	mov.f32 	%f677, 0f3C08839E;
	mov.f32 	%f678, 0fB94CA1F9;
	fma.rn.f32 	%f1285, %f678, %f205, %f677;
	bra.uni 	BB0_69;

BB0_67:
	mov.f32 	%f675, 0fBAB6061A;
	mov.f32 	%f676, 0f37CCF5CE;
	fma.rn.f32 	%f1285, %f676, %f205, %f675;

BB0_69:
	@%p64 bra 	BB0_71;
	bra.uni 	BB0_70;

BB0_71:
	mov.f32 	%f682, 0fBE2AAAA3;
	fma.rn.f32 	%f683, %f1285, %f205, %f682;
	fma.rn.f32 	%f1286, %f683, %f205, %f640;
	bra.uni 	BB0_72;

BB0_70:
	mov.f32 	%f679, 0f3D2AAAA5;
	fma.rn.f32 	%f680, %f1285, %f205, %f679;
	mov.f32 	%f681, 0fBF000000;
	fma.rn.f32 	%f1286, %f680, %f205, %f681;

BB0_72:
	fma.rn.f32 	%f1287, %f1286, %f1284, %f1284;
	@%p64 bra 	BB0_74;

	fma.rn.f32 	%f1287, %f1286, %f205, %f574;

BB0_74:
	and.b32  	%r258, %r421, 2;
	setp.eq.s32	%p67, %r258, 0;
	@%p67 bra 	BB0_76;

	mov.f32 	%f687, 0fBF800000;
	fma.rn.f32 	%f1287, %f1287, %f687, %f640;

BB0_76:
	mul.f32 	%f696, %f180, %f1281;
	mul.f32 	%f697, %f180, %f1287;
	mul.f32 	%f698, %f137, %f697;
	mul.f32 	%f699, %f138, %f697;
	mul.f32 	%f700, %f139, %f697;
	fma.rn.f32 	%f701, %f146, %f696, %f698;
	fma.rn.f32 	%f702, %f145, %f696, %f699;
	fma.rn.f32 	%f703, %f144, %f696, %f700;
	fma.rn.f32 	%f691, %f1177, %f179, %f701;
	fma.rn.f32 	%f692, %f1178, %f179, %f702;
	fma.rn.f32 	%f693, %f1179, %f179, %f703;
	mov.u32 	%r260, 0;
	st.local.u32 	[%rd3+8], %r260;
	st.local.u32 	[%rd3+4], %r260;
	st.local.u32 	[%rd3], %r260;
	ld.global.u32 	%r259, [root];
	mov.f32 	%f695, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r259, %f12, %f13, %f14, %f691, %f692, %f693, %r260, %f163, %f695, %rd66, %r122);
	// inline asm
	ld.local.f32 	%f704, [%rd3];
	max.f32 	%f706, %f704, %f640;
	ld.local.f32 	%f707, [%rd3+4];
	max.f32 	%f708, %f707, %f640;
	ld.local.f32 	%f709, [%rd3+8];
	max.f32 	%f710, %f709, %f640;
	fma.rn.f32 	%f1297, %f691, %f706, %f1297;
	fma.rn.f32 	%f1296, %f691, %f708, %f1296;
	fma.rn.f32 	%f1295, %f691, %f710, %f1295;
	fma.rn.f32 	%f1300, %f692, %f706, %f1300;
	fma.rn.f32 	%f1299, %f692, %f708, %f1299;
	fma.rn.f32 	%f1298, %f692, %f710, %f1298;
	fma.rn.f32 	%f1303, %f693, %f706, %f1303;
	fma.rn.f32 	%f1302, %f693, %f708, %f1302;
	fma.rn.f32 	%f1301, %f693, %f710, %f1301;
	add.f32 	%f1294, %f1294, %f706;
	add.f32 	%f1293, %f1293, %f708;
	add.f32 	%f1292, %f1292, %f710;
	mul.f32 	%f711, %f1178, %f692;
	fma.rn.f32 	%f712, %f1177, %f691, %f711;
	fma.rn.f32 	%f713, %f1179, %f693, %f712;
	cvt.sat.f32.f32	%f714, %f713;
	fma.rn.f32 	%f1291, %f706, %f714, %f1291;
	fma.rn.f32 	%f1290, %f708, %f714, %f1290;
	fma.rn.f32 	%f1289, %f710, %f714, %f1289;
	ld.global.u32 	%r397, [samples];
	add.s32 	%r400, %r400, 1;
	setp.lt.s32	%p68, %r400, %r397;
	@%p68 bra 	BB0_30;

BB0_77:
	add.s32 	%r398, %r398, 1;
	setp.lt.s32	%p69, %r398, %r397;
	@%p69 bra 	BB0_28;
	bra.uni 	BB0_78;

BB0_150:
	mov.u64 	%rd227, image_HDR;
	cvta.global.u64 	%rd222, %rd227;
	mov.u32 	%r359, 8;
	mov.u64 	%rd226, 0;
	// inline asm
	call (%rd221), _rt_buffer_get_64, (%rd222, %r106, %r359, %rd19, %rd20, %rd226, %rd226);
	// inline asm
	mov.f32 	%f1139, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f1139;}

	// inline asm
	mov.u16 	%rs105, 0;
	st.v4.u16 	[%rd221], {%rs104, %rs104, %rs104, %rs105};

BB0_151:
	ld.global.u32 	%r360, [additive];
	setp.eq.s32	%p146, %r360, 0;
	@%p146 bra 	BB0_153;

	mov.u64 	%rd240, image_RNM0;
	cvta.global.u64 	%rd229, %rd240;
	mov.u32 	%r364, 8;
	mov.u64 	%rd239, 0;
	// inline asm
	call (%rd228), _rt_buffer_get_64, (%rd229, %r106, %r364, %rd19, %rd20, %rd239, %rd239);
	// inline asm
	ld.v4.u16 	{%rs112, %rs113, %rs114, %rs115}, [%rd228];
	// inline asm
	{  cvt.f32.f16 %f1140, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1141, %rs113;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1142, %rs114;}

	// inline asm
	// inline asm
	call (%rd234), _rt_buffer_get_64, (%rd229, %r106, %r364, %rd19, %rd20, %rd239, %rd239);
	// inline asm
	add.f32 	%f1143, %f1140, 0f00000000;
	add.f32 	%f1144, %f1141, 0f00000000;
	add.f32 	%f1145, %f1142, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs111, %f1145;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1144;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1143;}

	// inline asm
	mov.u16 	%rs116, 0;
	st.v4.u16 	[%rd234], {%rs109, %rs110, %rs111, %rs116};
	bra.uni 	BB0_154;

BB0_153:
	mov.u64 	%rd247, image_RNM0;
	cvta.global.u64 	%rd242, %rd247;
	mov.u32 	%r366, 8;
	mov.u64 	%rd246, 0;
	// inline asm
	call (%rd241), _rt_buffer_get_64, (%rd242, %r106, %r366, %rd19, %rd20, %rd246, %rd246);
	// inline asm
	mov.f32 	%f1146, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f1146;}

	// inline asm
	mov.u16 	%rs118, 0;
	st.v4.u16 	[%rd241], {%rs117, %rs117, %rs117, %rs118};

BB0_154:
	ld.global.u32 	%r367, [additive];
	setp.eq.s32	%p147, %r367, 0;
	@%p147 bra 	BB0_156;

	mov.u64 	%rd260, image_RNM1;
	cvta.global.u64 	%rd249, %rd260;
	mov.u32 	%r371, 8;
	mov.u64 	%rd259, 0;
	// inline asm
	call (%rd248), _rt_buffer_get_64, (%rd249, %r106, %r371, %rd19, %rd20, %rd259, %rd259);
	// inline asm
	ld.v4.u16 	{%rs125, %rs126, %rs127, %rs128}, [%rd248];
	// inline asm
	{  cvt.f32.f16 %f1147, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1148, %rs126;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1149, %rs127;}

	// inline asm
	// inline asm
	call (%rd254), _rt_buffer_get_64, (%rd249, %r106, %r371, %rd19, %rd20, %rd259, %rd259);
	// inline asm
	add.f32 	%f1150, %f1147, 0f00000000;
	add.f32 	%f1151, %f1148, 0f00000000;
	add.f32 	%f1152, %f1149, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs124, %f1152;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f1151;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f1150;}

	// inline asm
	mov.u16 	%rs129, 0;
	st.v4.u16 	[%rd254], {%rs122, %rs123, %rs124, %rs129};
	bra.uni 	BB0_157;

BB0_156:
	mov.u64 	%rd267, image_RNM1;
	cvta.global.u64 	%rd262, %rd267;
	mov.u32 	%r373, 8;
	mov.u64 	%rd266, 0;
	// inline asm
	call (%rd261), _rt_buffer_get_64, (%rd262, %r106, %r373, %rd19, %rd20, %rd266, %rd266);
	// inline asm
	mov.f32 	%f1153, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs130, %f1153;}

	// inline asm
	mov.u16 	%rs131, 0;
	st.v4.u16 	[%rd261], {%rs130, %rs130, %rs130, %rs131};

BB0_157:
	ld.global.u32 	%r374, [additive];
	setp.eq.s32	%p148, %r374, 0;
	@%p148 bra 	BB0_159;

	mov.u64 	%rd280, image_RNM2;
	cvta.global.u64 	%rd269, %rd280;
	mov.u32 	%r378, 8;
	mov.u64 	%rd279, 0;
	// inline asm
	call (%rd268), _rt_buffer_get_64, (%rd269, %r106, %r378, %rd19, %rd20, %rd279, %rd279);
	// inline asm
	ld.v4.u16 	{%rs138, %rs139, %rs140, %rs141}, [%rd268];
	// inline asm
	{  cvt.f32.f16 %f1154, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1155, %rs139;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1156, %rs140;}

	// inline asm
	// inline asm
	call (%rd274), _rt_buffer_get_64, (%rd269, %r106, %r378, %rd19, %rd20, %rd279, %rd279);
	// inline asm
	add.f32 	%f1157, %f1154, 0f00000000;
	add.f32 	%f1158, %f1155, 0f00000000;
	add.f32 	%f1159, %f1156, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs137, %f1159;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f1158;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f1157;}

	// inline asm
	mov.u16 	%rs142, 0;
	st.v4.u16 	[%rd274], {%rs135, %rs136, %rs137, %rs142};
	bra.uni 	BB0_160;

BB0_159:
	mov.u64 	%rd287, image_RNM2;
	cvta.global.u64 	%rd282, %rd287;
	mov.u32 	%r380, 8;
	mov.u64 	%rd286, 0;
	// inline asm
	call (%rd281), _rt_buffer_get_64, (%rd282, %r106, %r380, %rd19, %rd20, %rd286, %rd286);
	// inline asm
	mov.f32 	%f1160, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs143, %f1160;}

	// inline asm
	mov.u16 	%rs144, 0;
	st.v4.u16 	[%rd281], {%rs143, %rs143, %rs143, %rs144};

BB0_160:
	ld.global.u32 	%r381, [additive];
	setp.eq.s32	%p149, %r381, 0;
	@%p149 bra 	BB0_162;

	mov.u64 	%rd300, image_RNM3;
	cvta.global.u64 	%rd289, %rd300;
	mov.u32 	%r385, 8;
	mov.u64 	%rd299, 0;
	// inline asm
	call (%rd288), _rt_buffer_get_64, (%rd289, %r106, %r385, %rd19, %rd20, %rd299, %rd299);
	// inline asm
	ld.v4.u16 	{%rs151, %rs152, %rs153, %rs154}, [%rd288];
	// inline asm
	{  cvt.f32.f16 %f1161, %rs151;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1162, %rs152;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1163, %rs153;}

	// inline asm
	// inline asm
	call (%rd294), _rt_buffer_get_64, (%rd289, %r106, %r385, %rd19, %rd20, %rd299, %rd299);
	// inline asm
	add.f32 	%f1164, %f1161, 0f00000000;
	add.f32 	%f1165, %f1162, 0f00000000;
	add.f32 	%f1166, %f1163, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs150, %f1166;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs149, %f1165;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f1164;}

	// inline asm
	mov.u16 	%rs155, 0;
	st.v4.u16 	[%rd294], {%rs148, %rs149, %rs150, %rs155};
	bra.uni 	BB0_163;

BB0_162:
	mov.u64 	%rd307, image_RNM3;
	cvta.global.u64 	%rd302, %rd307;
	mov.u32 	%r387, 8;
	mov.u64 	%rd306, 0;
	// inline asm
	call (%rd301), _rt_buffer_get_64, (%rd302, %r106, %r387, %rd19, %rd20, %rd306, %rd306);
	// inline asm
	mov.f32 	%f1167, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs156, %f1167;}

	// inline asm
	mov.u16 	%rs157, 0;
	st.v4.u16 	[%rd301], {%rs156, %rs156, %rs156, %rs157};
	bra.uni 	BB0_163;

BB0_26:
	mov.f32 	%f1289, %f591;
	mov.f32 	%f1290, %f591;
	mov.f32 	%f1291, %f591;
	mov.f32 	%f1292, %f591;
	mov.f32 	%f1293, %f591;
	mov.f32 	%f1294, %f591;
	mov.f32 	%f1295, %f591;
	mov.f32 	%f1296, %f591;
	mov.f32 	%f1297, %f591;
	mov.f32 	%f1298, %f591;
	mov.f32 	%f1299, %f591;
	mov.f32 	%f1300, %f591;
	mov.f32 	%f1301, %f591;
	mov.f32 	%f1302, %f591;
	mov.f32 	%f1303, %f591;

BB0_78:
	mul.lo.s32 	%r262, %r397, %r397;
	cvt.rn.f32.s32	%f715, %r262;
	rcp.rn.f32 	%f716, %f715;
	mul.f32 	%f717, %f1291, %f716;
	mul.f32 	%f718, %f1290, %f716;
	mul.f32 	%f719, %f1289, %f716;
	div.rn.f32 	%f1334, %f591, %f715;
	mul.f32 	%f1328, %f1294, %f716;
	mul.f32 	%f1329, %f1293, %f716;
	mul.f32 	%f1330, %f1292, %f716;
	mul.f32 	%f1325, %f1297, %f716;
	mul.f32 	%f1326, %f1296, %f716;
	mul.f32 	%f1327, %f1295, %f716;
	mul.f32 	%f1322, %f1300, %f716;
	mul.f32 	%f1323, %f1299, %f716;
	mul.f32 	%f1324, %f1298, %f716;
	mul.f32 	%f1319, %f1303, %f716;
	mul.f32 	%f1320, %f1302, %f716;
	mul.f32 	%f1321, %f1301, %f716;
	fma.rn.f32 	%f1331, %f1291, %f716, %f717;
	fma.rn.f32 	%f1332, %f1290, %f716, %f718;
	fma.rn.f32 	%f1333, %f1289, %f716, %f719;

BB0_79:
	ld.global.u32 	%r426, [imageEnabled];
	and.b32  	%r263, %r426, 8;
	setp.eq.s32	%p70, %r263, 0;
	@%p70 bra 	BB0_92;

	cvt.u64.u32	%rd82, %r2;
	cvt.u64.u32	%rd83, %r3;
	mov.u64 	%rd86, image_Mask;
	cvta.global.u64 	%rd81, %rd86;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r106, %r106, %rd82, %rd83, %rd26, %rd26);
	// inline asm
	mov.f32 	%f723, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f724, %f723;
	fma.rn.f32 	%f725, %f724, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f294, %f725;
	abs.f32 	%f295, %f1334;
	setp.lt.f32	%p71, %f295, 0f00800000;
	mul.f32 	%f726, %f295, 0f4B800000;
	selp.f32	%f727, 0fC3170000, 0fC2FE0000, %p71;
	selp.f32	%f728, %f726, %f295, %p71;
	mov.b32 	 %r266, %f728;
	and.b32  	%r267, %r266, 8388607;
	or.b32  	%r268, %r267, 1065353216;
	mov.b32 	 %f729, %r268;
	shr.u32 	%r269, %r266, 23;
	cvt.rn.f32.u32	%f730, %r269;
	add.f32 	%f731, %f727, %f730;
	setp.gt.f32	%p72, %f729, 0f3FB504F3;
	mul.f32 	%f732, %f729, 0f3F000000;
	add.f32 	%f733, %f731, 0f3F800000;
	selp.f32	%f734, %f732, %f729, %p72;
	selp.f32	%f735, %f733, %f731, %p72;
	add.f32 	%f736, %f734, 0fBF800000;
	add.f32 	%f722, %f734, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f721,%f722;
	// inline asm
	add.f32 	%f737, %f736, %f736;
	mul.f32 	%f738, %f721, %f737;
	mul.f32 	%f739, %f738, %f738;
	mov.f32 	%f740, 0f3C4CAF63;
	mov.f32 	%f741, 0f3B18F0FE;
	fma.rn.f32 	%f742, %f741, %f739, %f740;
	mov.f32 	%f743, 0f3DAAAABD;
	fma.rn.f32 	%f744, %f742, %f739, %f743;
	mul.rn.f32 	%f745, %f744, %f739;
	mul.rn.f32 	%f746, %f745, %f738;
	sub.f32 	%f747, %f736, %f738;
	neg.f32 	%f748, %f738;
	add.f32 	%f749, %f747, %f747;
	fma.rn.f32 	%f750, %f748, %f736, %f749;
	mul.rn.f32 	%f751, %f721, %f750;
	add.f32 	%f752, %f746, %f738;
	sub.f32 	%f753, %f738, %f752;
	add.f32 	%f754, %f746, %f753;
	add.f32 	%f755, %f751, %f754;
	add.f32 	%f756, %f752, %f755;
	sub.f32 	%f757, %f752, %f756;
	add.f32 	%f758, %f755, %f757;
	mov.f32 	%f759, 0f3F317200;
	mul.rn.f32 	%f760, %f735, %f759;
	mov.f32 	%f761, 0f35BFBE8E;
	mul.rn.f32 	%f762, %f735, %f761;
	add.f32 	%f763, %f760, %f756;
	sub.f32 	%f764, %f760, %f763;
	add.f32 	%f765, %f756, %f764;
	add.f32 	%f766, %f758, %f765;
	add.f32 	%f767, %f762, %f766;
	add.f32 	%f768, %f763, %f767;
	sub.f32 	%f769, %f763, %f768;
	add.f32 	%f770, %f767, %f769;
	mov.f32 	%f771, 0f3EE8BA2E;
	mul.rn.f32 	%f772, %f771, %f768;
	neg.f32 	%f773, %f772;
	fma.rn.f32 	%f774, %f771, %f768, %f773;
	fma.rn.f32 	%f775, %f771, %f770, %f774;
	mov.f32 	%f776, 0f00000000;
	fma.rn.f32 	%f777, %f776, %f768, %f775;
	add.rn.f32 	%f778, %f772, %f777;
	neg.f32 	%f779, %f778;
	add.rn.f32 	%f780, %f772, %f779;
	add.rn.f32 	%f781, %f780, %f777;
	mov.b32 	 %r270, %f778;
	setp.eq.s32	%p73, %r270, 1118925336;
	add.s32 	%r271, %r270, -1;
	mov.b32 	 %f782, %r271;
	add.f32 	%f783, %f781, 0f37000000;
	selp.f32	%f784, %f782, %f778, %p73;
	selp.f32	%f296, %f783, %f781, %p73;
	mul.f32 	%f785, %f784, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f786, %f785;
	mov.f32 	%f787, 0fBF317200;
	fma.rn.f32 	%f788, %f786, %f787, %f784;
	mov.f32 	%f789, 0fB5BFBE8E;
	fma.rn.f32 	%f790, %f786, %f789, %f788;
	mul.f32 	%f791, %f790, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f792, %f791;
	add.f32 	%f793, %f786, 0f00000000;
	ex2.approx.f32 	%f794, %f793;
	mul.f32 	%f795, %f792, %f794;
	setp.lt.f32	%p74, %f784, 0fC2D20000;
	selp.f32	%f796, 0f00000000, %f795, %p74;
	setp.gt.f32	%p75, %f784, 0f42D20000;
	selp.f32	%f1335, 0f7F800000, %f796, %p75;
	setp.eq.f32	%p76, %f1335, 0f7F800000;
	@%p76 bra 	BB0_82;

	fma.rn.f32 	%f1335, %f1335, %f296, %f1335;

BB0_82:
	setp.lt.f32	%p77, %f1334, 0f00000000;
	setp.eq.f32	%p78, %f294, 0f3F800000;
	and.pred  	%p3, %p77, %p78;
	mov.b32 	 %r272, %f1335;
	xor.b32  	%r273, %r272, -2147483648;
	mov.b32 	 %f797, %r273;
	selp.f32	%f1337, %f797, %f1335, %p3;
	setp.eq.f32	%p79, %f1334, 0f00000000;
	@%p79 bra 	BB0_85;
	bra.uni 	BB0_83;

BB0_85:
	add.f32 	%f800, %f1334, %f1334;
	selp.f32	%f1337, %f800, 0f00000000, %p78;
	bra.uni 	BB0_86;

BB0_83:
	setp.geu.f32	%p80, %f1334, 0f00000000;
	@%p80 bra 	BB0_86;

	cvt.rzi.f32.f32	%f799, %f771;
	setp.neu.f32	%p81, %f799, 0f3EE8BA2E;
	selp.f32	%f1337, 0f7FFFFFFF, %f1337, %p81;

BB0_86:
	add.f32 	%f801, %f295, 0f3EE8BA2E;
	mov.b32 	 %r274, %f801;
	setp.lt.s32	%p83, %r274, 2139095040;
	@%p83 bra 	BB0_91;

	setp.gtu.f32	%p84, %f295, 0f7F800000;
	@%p84 bra 	BB0_90;
	bra.uni 	BB0_88;

BB0_90:
	add.f32 	%f1337, %f1334, 0f3EE8BA2E;
	bra.uni 	BB0_91;

BB0_88:
	setp.neu.f32	%p85, %f295, 0f7F800000;
	@%p85 bra 	BB0_91;

	selp.f32	%f1337, 0fFF800000, 0f7F800000, %p3;

BB0_91:
	mul.f32 	%f802, %f1337, 0f437F0000;
	setp.eq.f32	%p86, %f1334, 0f3F800000;
	selp.f32	%f803, 0f437F0000, %f802, %p86;
	cvt.rzi.u32.f32	%r275, %f803;
	cvt.u16.u32	%rs14, %r275;
	mov.u16 	%rs15, 255;
	st.v2.u8 	[%rd80], {%rs14, %rs15};
	ld.global.u32 	%r426, [imageEnabled];

BB0_92:
	ld.global.f32 	%f804, [lightColor];
	mul.f32 	%f307, %f1331, %f804;
	ld.global.f32 	%f805, [lightColor+4];
	mul.f32 	%f308, %f1332, %f805;
	ld.global.f32 	%f806, [lightColor+8];
	mul.f32 	%f309, %f1333, %f806;
	and.b32  	%r276, %r426, 1;
	setp.eq.b32	%p87, %r276, 1;
	@!%p87 bra 	BB0_127;
	bra.uni 	BB0_93;

BB0_93:
	mov.f32 	%f809, 0f3E666666;
	cvt.rzi.f32.f32	%f810, %f809;
	fma.rn.f32 	%f811, %f810, 0fC0000000, 0f3EE66666;
	abs.f32 	%f310, %f811;
	abs.f32 	%f311, %f307;
	setp.lt.f32	%p88, %f311, 0f00800000;
	mul.f32 	%f812, %f311, 0f4B800000;
	selp.f32	%f813, 0fC3170000, 0fC2FE0000, %p88;
	selp.f32	%f814, %f812, %f311, %p88;
	mov.b32 	 %r277, %f814;
	and.b32  	%r278, %r277, 8388607;
	or.b32  	%r279, %r278, 1065353216;
	mov.b32 	 %f815, %r279;
	shr.u32 	%r280, %r277, 23;
	cvt.rn.f32.u32	%f816, %r280;
	add.f32 	%f817, %f813, %f816;
	setp.gt.f32	%p89, %f815, 0f3FB504F3;
	mul.f32 	%f818, %f815, 0f3F000000;
	add.f32 	%f819, %f817, 0f3F800000;
	selp.f32	%f820, %f818, %f815, %p89;
	selp.f32	%f821, %f819, %f817, %p89;
	add.f32 	%f822, %f820, 0fBF800000;
	add.f32 	%f808, %f820, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f807,%f808;
	// inline asm
	add.f32 	%f823, %f822, %f822;
	mul.f32 	%f824, %f807, %f823;
	mul.f32 	%f825, %f824, %f824;
	mov.f32 	%f826, 0f3C4CAF63;
	mov.f32 	%f827, 0f3B18F0FE;
	fma.rn.f32 	%f828, %f827, %f825, %f826;
	mov.f32 	%f829, 0f3DAAAABD;
	fma.rn.f32 	%f830, %f828, %f825, %f829;
	mul.rn.f32 	%f831, %f830, %f825;
	mul.rn.f32 	%f832, %f831, %f824;
	sub.f32 	%f833, %f822, %f824;
	neg.f32 	%f834, %f824;
	add.f32 	%f835, %f833, %f833;
	fma.rn.f32 	%f836, %f834, %f822, %f835;
	mul.rn.f32 	%f837, %f807, %f836;
	add.f32 	%f838, %f832, %f824;
	sub.f32 	%f839, %f824, %f838;
	add.f32 	%f840, %f832, %f839;
	add.f32 	%f841, %f837, %f840;
	add.f32 	%f842, %f838, %f841;
	sub.f32 	%f843, %f838, %f842;
	add.f32 	%f844, %f841, %f843;
	mov.f32 	%f845, 0f3F317200;
	mul.rn.f32 	%f846, %f821, %f845;
	mov.f32 	%f847, 0f35BFBE8E;
	mul.rn.f32 	%f848, %f821, %f847;
	add.f32 	%f849, %f846, %f842;
	sub.f32 	%f850, %f846, %f849;
	add.f32 	%f851, %f842, %f850;
	add.f32 	%f852, %f844, %f851;
	add.f32 	%f853, %f848, %f852;
	add.f32 	%f854, %f849, %f853;
	sub.f32 	%f855, %f849, %f854;
	add.f32 	%f856, %f853, %f855;
	mov.f32 	%f857, 0f3EE66666;
	mul.rn.f32 	%f858, %f857, %f854;
	neg.f32 	%f859, %f858;
	fma.rn.f32 	%f860, %f857, %f854, %f859;
	fma.rn.f32 	%f861, %f857, %f856, %f860;
	mov.f32 	%f862, 0f00000000;
	fma.rn.f32 	%f863, %f862, %f854, %f861;
	add.rn.f32 	%f864, %f858, %f863;
	neg.f32 	%f865, %f864;
	add.rn.f32 	%f866, %f858, %f865;
	add.rn.f32 	%f867, %f866, %f863;
	mov.b32 	 %r281, %f864;
	setp.eq.s32	%p90, %r281, 1118925336;
	add.s32 	%r282, %r281, -1;
	mov.b32 	 %f868, %r282;
	add.f32 	%f869, %f867, 0f37000000;
	selp.f32	%f870, %f868, %f864, %p90;
	selp.f32	%f312, %f869, %f867, %p90;
	mul.f32 	%f871, %f870, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f872, %f871;
	mov.f32 	%f873, 0fBF317200;
	fma.rn.f32 	%f874, %f872, %f873, %f870;
	mov.f32 	%f875, 0fB5BFBE8E;
	fma.rn.f32 	%f876, %f872, %f875, %f874;
	mul.f32 	%f877, %f876, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f878, %f877;
	add.f32 	%f879, %f872, 0f00000000;
	ex2.approx.f32 	%f880, %f879;
	mul.f32 	%f881, %f878, %f880;
	setp.lt.f32	%p91, %f870, 0fC2D20000;
	selp.f32	%f882, 0f00000000, %f881, %p91;
	setp.gt.f32	%p92, %f870, 0f42D20000;
	selp.f32	%f1338, 0f7F800000, %f882, %p92;
	setp.eq.f32	%p93, %f1338, 0f7F800000;
	@%p93 bra 	BB0_95;

	fma.rn.f32 	%f1338, %f1338, %f312, %f1338;

BB0_95:
	setp.lt.f32	%p94, %f307, 0f00000000;
	setp.eq.f32	%p95, %f310, 0f3F800000;
	and.pred  	%p4, %p94, %p95;
	mov.b32 	 %r283, %f1338;
	xor.b32  	%r284, %r283, -2147483648;
	mov.b32 	 %f883, %r284;
	selp.f32	%f1340, %f883, %f1338, %p4;
	setp.eq.f32	%p96, %f307, 0f00000000;
	@%p96 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f886, %f307, %f307;
	selp.f32	%f1340, %f886, 0f00000000, %p95;
	bra.uni 	BB0_99;

BB0_96:
	setp.geu.f32	%p97, %f307, 0f00000000;
	@%p97 bra 	BB0_99;

	cvt.rzi.f32.f32	%f885, %f857;
	setp.neu.f32	%p98, %f885, 0f3EE66666;
	selp.f32	%f1340, 0f7FFFFFFF, %f1340, %p98;

BB0_99:
	add.f32 	%f887, %f311, 0f3EE66666;
	mov.b32 	 %r285, %f887;
	setp.lt.s32	%p100, %r285, 2139095040;
	@%p100 bra 	BB0_104;

	setp.gtu.f32	%p101, %f311, 0f7F800000;
	@%p101 bra 	BB0_103;
	bra.uni 	BB0_101;

BB0_103:
	add.f32 	%f1340, %f307, 0f3EE66666;
	bra.uni 	BB0_104;

BB0_101:
	setp.neu.f32	%p102, %f311, 0f7F800000;
	@%p102 bra 	BB0_104;

	selp.f32	%f1340, 0fFF800000, 0f7F800000, %p4;

BB0_104:
	setp.eq.f32	%p103, %f307, 0f3F800000;
	selp.f32	%f323, 0f3F800000, %f1340, %p103;
	abs.f32 	%f324, %f308;
	setp.lt.f32	%p104, %f324, 0f00800000;
	mul.f32 	%f890, %f324, 0f4B800000;
	selp.f32	%f891, 0fC3170000, 0fC2FE0000, %p104;
	selp.f32	%f892, %f890, %f324, %p104;
	mov.b32 	 %r286, %f892;
	and.b32  	%r287, %r286, 8388607;
	or.b32  	%r288, %r287, 1065353216;
	mov.b32 	 %f893, %r288;
	shr.u32 	%r289, %r286, 23;
	cvt.rn.f32.u32	%f894, %r289;
	add.f32 	%f895, %f891, %f894;
	setp.gt.f32	%p105, %f893, 0f3FB504F3;
	mul.f32 	%f896, %f893, 0f3F000000;
	add.f32 	%f897, %f895, 0f3F800000;
	selp.f32	%f898, %f896, %f893, %p105;
	selp.f32	%f899, %f897, %f895, %p105;
	add.f32 	%f900, %f898, 0fBF800000;
	add.f32 	%f889, %f898, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f888,%f889;
	// inline asm
	add.f32 	%f901, %f900, %f900;
	mul.f32 	%f902, %f888, %f901;
	mul.f32 	%f903, %f902, %f902;
	fma.rn.f32 	%f906, %f827, %f903, %f826;
	fma.rn.f32 	%f908, %f906, %f903, %f829;
	mul.rn.f32 	%f909, %f908, %f903;
	mul.rn.f32 	%f910, %f909, %f902;
	sub.f32 	%f911, %f900, %f902;
	neg.f32 	%f912, %f902;
	add.f32 	%f913, %f911, %f911;
	fma.rn.f32 	%f914, %f912, %f900, %f913;
	mul.rn.f32 	%f915, %f888, %f914;
	add.f32 	%f916, %f910, %f902;
	sub.f32 	%f917, %f902, %f916;
	add.f32 	%f918, %f910, %f917;
	add.f32 	%f919, %f915, %f918;
	add.f32 	%f920, %f916, %f919;
	sub.f32 	%f921, %f916, %f920;
	add.f32 	%f922, %f919, %f921;
	mul.rn.f32 	%f924, %f899, %f845;
	mul.rn.f32 	%f926, %f899, %f847;
	add.f32 	%f927, %f924, %f920;
	sub.f32 	%f928, %f924, %f927;
	add.f32 	%f929, %f920, %f928;
	add.f32 	%f930, %f922, %f929;
	add.f32 	%f931, %f926, %f930;
	add.f32 	%f932, %f927, %f931;
	sub.f32 	%f933, %f927, %f932;
	add.f32 	%f934, %f931, %f933;
	mul.rn.f32 	%f936, %f857, %f932;
	neg.f32 	%f937, %f936;
	fma.rn.f32 	%f938, %f857, %f932, %f937;
	fma.rn.f32 	%f939, %f857, %f934, %f938;
	fma.rn.f32 	%f941, %f862, %f932, %f939;
	add.rn.f32 	%f942, %f936, %f941;
	neg.f32 	%f943, %f942;
	add.rn.f32 	%f944, %f936, %f943;
	add.rn.f32 	%f945, %f944, %f941;
	mov.b32 	 %r290, %f942;
	setp.eq.s32	%p106, %r290, 1118925336;
	add.s32 	%r291, %r290, -1;
	mov.b32 	 %f946, %r291;
	add.f32 	%f947, %f945, 0f37000000;
	selp.f32	%f948, %f946, %f942, %p106;
	selp.f32	%f325, %f947, %f945, %p106;
	mul.f32 	%f949, %f948, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f950, %f949;
	fma.rn.f32 	%f952, %f950, %f873, %f948;
	fma.rn.f32 	%f954, %f950, %f875, %f952;
	mul.f32 	%f955, %f954, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f956, %f955;
	add.f32 	%f957, %f950, 0f00000000;
	ex2.approx.f32 	%f958, %f957;
	mul.f32 	%f959, %f956, %f958;
	setp.lt.f32	%p107, %f948, 0fC2D20000;
	selp.f32	%f960, 0f00000000, %f959, %p107;
	setp.gt.f32	%p108, %f948, 0f42D20000;
	selp.f32	%f1341, 0f7F800000, %f960, %p108;
	setp.eq.f32	%p109, %f1341, 0f7F800000;
	@%p109 bra 	BB0_106;

	fma.rn.f32 	%f1341, %f1341, %f325, %f1341;

BB0_106:
	setp.lt.f32	%p110, %f308, 0f00000000;
	and.pred  	%p5, %p110, %p95;
	mov.b32 	 %r292, %f1341;
	xor.b32  	%r293, %r292, -2147483648;
	mov.b32 	 %f961, %r293;
	selp.f32	%f1343, %f961, %f1341, %p5;
	setp.eq.f32	%p112, %f308, 0f00000000;
	@%p112 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f964, %f308, %f308;
	selp.f32	%f1343, %f964, 0f00000000, %p95;
	bra.uni 	BB0_110;

BB0_107:
	setp.geu.f32	%p113, %f308, 0f00000000;
	@%p113 bra 	BB0_110;

	cvt.rzi.f32.f32	%f963, %f857;
	setp.neu.f32	%p114, %f963, 0f3EE66666;
	selp.f32	%f1343, 0f7FFFFFFF, %f1343, %p114;

BB0_110:
	add.f32 	%f965, %f324, 0f3EE66666;
	mov.b32 	 %r294, %f965;
	setp.lt.s32	%p116, %r294, 2139095040;
	@%p116 bra 	BB0_115;

	setp.gtu.f32	%p117, %f324, 0f7F800000;
	@%p117 bra 	BB0_114;
	bra.uni 	BB0_112;

BB0_114:
	add.f32 	%f1343, %f308, 0f3EE66666;
	bra.uni 	BB0_115;

BB0_112:
	setp.neu.f32	%p118, %f324, 0f7F800000;
	@%p118 bra 	BB0_115;

	selp.f32	%f1343, 0fFF800000, 0f7F800000, %p5;

BB0_115:
	setp.eq.f32	%p119, %f308, 0f3F800000;
	selp.f32	%f336, 0f3F800000, %f1343, %p119;
	abs.f32 	%f337, %f309;
	setp.lt.f32	%p120, %f337, 0f00800000;
	mul.f32 	%f968, %f337, 0f4B800000;
	selp.f32	%f969, 0fC3170000, 0fC2FE0000, %p120;
	selp.f32	%f970, %f968, %f337, %p120;
	mov.b32 	 %r295, %f970;
	and.b32  	%r296, %r295, 8388607;
	or.b32  	%r297, %r296, 1065353216;
	mov.b32 	 %f971, %r297;
	shr.u32 	%r298, %r295, 23;
	cvt.rn.f32.u32	%f972, %r298;
	add.f32 	%f973, %f969, %f972;
	setp.gt.f32	%p121, %f971, 0f3FB504F3;
	mul.f32 	%f974, %f971, 0f3F000000;
	add.f32 	%f975, %f973, 0f3F800000;
	selp.f32	%f976, %f974, %f971, %p121;
	selp.f32	%f977, %f975, %f973, %p121;
	add.f32 	%f978, %f976, 0fBF800000;
	add.f32 	%f967, %f976, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f966,%f967;
	// inline asm
	add.f32 	%f979, %f978, %f978;
	mul.f32 	%f980, %f966, %f979;
	mul.f32 	%f981, %f980, %f980;
	fma.rn.f32 	%f984, %f827, %f981, %f826;
	fma.rn.f32 	%f986, %f984, %f981, %f829;
	mul.rn.f32 	%f987, %f986, %f981;
	mul.rn.f32 	%f988, %f987, %f980;
	sub.f32 	%f989, %f978, %f980;
	neg.f32 	%f990, %f980;
	add.f32 	%f991, %f989, %f989;
	fma.rn.f32 	%f992, %f990, %f978, %f991;
	mul.rn.f32 	%f993, %f966, %f992;
	add.f32 	%f994, %f988, %f980;
	sub.f32 	%f995, %f980, %f994;
	add.f32 	%f996, %f988, %f995;
	add.f32 	%f997, %f993, %f996;
	add.f32 	%f998, %f994, %f997;
	sub.f32 	%f999, %f994, %f998;
	add.f32 	%f1000, %f997, %f999;
	mul.rn.f32 	%f1002, %f977, %f845;
	mul.rn.f32 	%f1004, %f977, %f847;
	add.f32 	%f1005, %f1002, %f998;
	sub.f32 	%f1006, %f1002, %f1005;
	add.f32 	%f1007, %f998, %f1006;
	add.f32 	%f1008, %f1000, %f1007;
	add.f32 	%f1009, %f1004, %f1008;
	add.f32 	%f1010, %f1005, %f1009;
	sub.f32 	%f1011, %f1005, %f1010;
	add.f32 	%f1012, %f1009, %f1011;
	mul.rn.f32 	%f1014, %f857, %f1010;
	neg.f32 	%f1015, %f1014;
	fma.rn.f32 	%f1016, %f857, %f1010, %f1015;
	fma.rn.f32 	%f1017, %f857, %f1012, %f1016;
	fma.rn.f32 	%f1019, %f862, %f1010, %f1017;
	add.rn.f32 	%f1020, %f1014, %f1019;
	neg.f32 	%f1021, %f1020;
	add.rn.f32 	%f1022, %f1014, %f1021;
	add.rn.f32 	%f1023, %f1022, %f1019;
	mov.b32 	 %r299, %f1020;
	setp.eq.s32	%p122, %r299, 1118925336;
	add.s32 	%r300, %r299, -1;
	mov.b32 	 %f1024, %r300;
	add.f32 	%f1025, %f1023, 0f37000000;
	selp.f32	%f1026, %f1024, %f1020, %p122;
	selp.f32	%f338, %f1025, %f1023, %p122;
	mul.f32 	%f1027, %f1026, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1028, %f1027;
	fma.rn.f32 	%f1030, %f1028, %f873, %f1026;
	fma.rn.f32 	%f1032, %f1028, %f875, %f1030;
	mul.f32 	%f1033, %f1032, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1034, %f1033;
	add.f32 	%f1035, %f1028, 0f00000000;
	ex2.approx.f32 	%f1036, %f1035;
	mul.f32 	%f1037, %f1034, %f1036;
	setp.lt.f32	%p123, %f1026, 0fC2D20000;
	selp.f32	%f1038, 0f00000000, %f1037, %p123;
	setp.gt.f32	%p124, %f1026, 0f42D20000;
	selp.f32	%f1344, 0f7F800000, %f1038, %p124;
	setp.eq.f32	%p125, %f1344, 0f7F800000;
	@%p125 bra 	BB0_117;

	fma.rn.f32 	%f1344, %f1344, %f338, %f1344;

BB0_117:
	setp.lt.f32	%p126, %f309, 0f00000000;
	and.pred  	%p6, %p126, %p95;
	mov.b32 	 %r301, %f1344;
	xor.b32  	%r302, %r301, -2147483648;
	mov.b32 	 %f1039, %r302;
	selp.f32	%f1346, %f1039, %f1344, %p6;
	setp.eq.f32	%p128, %f309, 0f00000000;
	@%p128 bra 	BB0_120;
	bra.uni 	BB0_118;

BB0_120:
	add.f32 	%f1042, %f309, %f309;
	selp.f32	%f1346, %f1042, 0f00000000, %p95;
	bra.uni 	BB0_121;

BB0_118:
	setp.geu.f32	%p129, %f309, 0f00000000;
	@%p129 bra 	BB0_121;

	cvt.rzi.f32.f32	%f1041, %f857;
	setp.neu.f32	%p130, %f1041, 0f3EE66666;
	selp.f32	%f1346, 0f7FFFFFFF, %f1346, %p130;

BB0_121:
	add.f32 	%f1043, %f337, 0f3EE66666;
	mov.b32 	 %r303, %f1043;
	setp.lt.s32	%p132, %r303, 2139095040;
	@%p132 bra 	BB0_126;

	setp.gtu.f32	%p133, %f337, 0f7F800000;
	@%p133 bra 	BB0_125;
	bra.uni 	BB0_123;

BB0_125:
	add.f32 	%f1346, %f309, 0f3EE66666;
	bra.uni 	BB0_126;

BB0_123:
	setp.neu.f32	%p134, %f337, 0f7F800000;
	@%p134 bra 	BB0_126;

	selp.f32	%f1346, 0fFF800000, 0f7F800000, %p6;

BB0_126:
	setp.eq.f32	%p135, %f309, 0f3F800000;
	selp.f32	%f1044, 0f3F800000, %f1346, %p135;
	cvt.u64.u32	%rd90, %r3;
	cvt.u64.u32	%rd89, %r2;
	mov.u64 	%rd93, image;
	cvta.global.u64 	%rd88, %rd93;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r106, %r107, %rd89, %rd90, %rd26, %rd26);
	// inline asm
	cvt.sat.f32.f32	%f1045, %f1044;
	mul.f32 	%f1046, %f1045, 0f437FFD71;
	cvt.rzi.u32.f32	%r306, %f1046;
	cvt.sat.f32.f32	%f1047, %f336;
	mul.f32 	%f1048, %f1047, 0f437FFD71;
	cvt.rzi.u32.f32	%r307, %f1048;
	cvt.sat.f32.f32	%f1049, %f323;
	mul.f32 	%f1050, %f1049, 0f437FFD71;
	cvt.rzi.u32.f32	%r308, %f1050;
	cvt.u16.u32	%rs16, %r306;
	cvt.u16.u32	%rs17, %r308;
	cvt.u16.u32	%rs18, %r307;
	mov.u16 	%rs19, 255;
	st.v4.u8 	[%rd87], {%rs16, %rs18, %rs17, %rs19};
	ld.global.u32 	%r426, [imageEnabled];

BB0_127:
	cvt.u64.u32	%rd17, %r2;
	cvt.u64.u32	%rd18, %r3;
	and.b32  	%r309, %r426, 4;
	setp.eq.s32	%p136, %r309, 0;
	@%p136 bra 	BB0_131;

	ld.global.u32 	%r310, [additive];
	setp.eq.s32	%p137, %r310, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f574;}

	// inline asm
	@%p137 bra 	BB0_130;

	mov.u64 	%rd106, image_HDR;
	cvta.global.u64 	%rd95, %rd106;
	mov.u32 	%r314, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r106, %r314, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs27, %rs28, %rs29, %rs30}, [%rd94];
	// inline asm
	{  cvt.f32.f16 %f1052, %rs27;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1053, %rs28;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1054, %rs29;}

	// inline asm
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd95, %r106, %r314, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1055, %f307, %f1052;
	add.f32 	%f1056, %f308, %f1053;
	add.f32 	%f1057, %f309, %f1054;
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f1057;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f1056;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f1055;}

	// inline asm
	st.v4.u16 	[%rd100], {%rs24, %rs25, %rs26, %rs20};
	bra.uni 	BB0_131;

BB0_130:
	mov.u64 	%rd113, image_HDR;
	cvta.global.u64 	%rd108, %rd113;
	mov.u32 	%r316, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r106, %r316, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f309;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f308;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f307;}

	// inline asm
	st.v4.u16 	[%rd107], {%rs31, %rs32, %rs33, %rs20};

BB0_131:
	selp.f32	%f1062, 0f3F000000, 0f3E800000, %p150;
	mul.f32 	%f1063, %f1062, %f1328;
	mul.f32 	%f1064, %f1062, %f1329;
	mul.f32 	%f1065, %f1062, %f1330;
	mul.f32 	%f1066, %f1062, %f1325;
	mul.f32 	%f1067, %f1062, %f1326;
	mul.f32 	%f1068, %f1062, %f1327;
	mul.f32 	%f1069, %f1062, %f1322;
	mul.f32 	%f1070, %f1062, %f1323;
	mul.f32 	%f1071, %f1062, %f1324;
	mul.f32 	%f1072, %f1062, %f1319;
	mul.f32 	%f1073, %f1062, %f1320;
	mul.f32 	%f1074, %f1062, %f1321;
	ld.global.f32 	%f1075, [lightColor];
	mul.f32 	%f349, %f1063, %f1075;
	ld.global.f32 	%f1076, [lightColor+4];
	mul.f32 	%f350, %f1064, %f1076;
	ld.global.f32 	%f1077, [lightColor+8];
	mul.f32 	%f351, %f1065, %f1077;
	mul.f32 	%f352, %f1066, %f1075;
	mul.f32 	%f353, %f1067, %f1076;
	mul.f32 	%f354, %f1068, %f1077;
	mul.f32 	%f355, %f1069, %f1075;
	mul.f32 	%f356, %f1070, %f1076;
	mul.f32 	%f357, %f1071, %f1077;
	mul.f32 	%f358, %f1072, %f1075;
	mul.f32 	%f359, %f1073, %f1076;
	mul.f32 	%f360, %f1074, %f1077;
	ld.global.u32 	%r317, [additive];
	setp.eq.s32	%p138, %r317, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f574;}

	// inline asm
	@%p138 bra 	BB0_133;

	mov.u64 	%rd126, image_RNM0;
	cvta.global.u64 	%rd115, %rd126;
	mov.u32 	%r321, 8;
	// inline asm
	call (%rd114), _rt_buffer_get_64, (%rd115, %r106, %r321, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs41, %rs42, %rs43, %rs44}, [%rd114];
	// inline asm
	{  cvt.f32.f16 %f1078, %rs41;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1079, %rs42;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1080, %rs43;}

	// inline asm
	// inline asm
	call (%rd120), _rt_buffer_get_64, (%rd115, %r106, %r321, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1081, %f349, %f1078;
	add.f32 	%f1082, %f350, %f1079;
	add.f32 	%f1083, %f351, %f1080;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f1083;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f1082;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f1081;}

	// inline asm
	st.v4.u16 	[%rd120], {%rs38, %rs39, %rs40, %rs34};
	bra.uni 	BB0_134;

BB0_133:
	mov.u64 	%rd133, image_RNM0;
	cvta.global.u64 	%rd128, %rd133;
	mov.u32 	%r323, 8;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd128, %r106, %r323, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f351;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f350;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f349;}

	// inline asm
	st.v4.u16 	[%rd127], {%rs45, %rs46, %rs47, %rs34};

BB0_134:
	mov.f32 	%f1088, 0f34000000;
	max.f32 	%f1089, %f349, %f1088;
	div.rn.f32 	%f1090, %f352, %f1089;
	max.f32 	%f1091, %f350, %f1088;
	div.rn.f32 	%f1092, %f353, %f1091;
	max.f32 	%f1093, %f351, %f1088;
	div.rn.f32 	%f1094, %f354, %f1093;
	fma.rn.f32 	%f361, %f1090, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f362, %f1092, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f363, %f1094, 0f3F000000, 0f3F000000;
	div.rn.f32 	%f1095, %f355, %f1089;
	div.rn.f32 	%f1096, %f356, %f1091;
	div.rn.f32 	%f1097, %f357, %f1093;
	fma.rn.f32 	%f364, %f1095, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f365, %f1096, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f366, %f1097, 0f3F000000, 0f3F000000;
	div.rn.f32 	%f1098, %f358, %f1089;
	div.rn.f32 	%f1099, %f359, %f1091;
	div.rn.f32 	%f1100, %f360, %f1093;
	fma.rn.f32 	%f367, %f1098, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f368, %f1099, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f369, %f1100, 0f3F000000, 0f3F000000;
	ld.global.u32 	%r324, [additive];
	setp.eq.s32	%p139, %r324, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f574;}

	// inline asm
	@%p139 bra 	BB0_136;

	mov.u64 	%rd146, image_RNM1;
	cvta.global.u64 	%rd135, %rd146;
	mov.u32 	%r328, 8;
	// inline asm
	call (%rd134), _rt_buffer_get_64, (%rd135, %r106, %r328, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs55, %rs56, %rs57, %rs58}, [%rd134];
	// inline asm
	{  cvt.f32.f16 %f1101, %rs55;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1102, %rs56;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1103, %rs57;}

	// inline asm
	// inline asm
	call (%rd140), _rt_buffer_get_64, (%rd135, %r106, %r328, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1104, %f361, %f1101;
	add.f32 	%f1105, %f362, %f1102;
	add.f32 	%f1106, %f363, %f1103;
	// inline asm
	{  cvt.rn.f16.f32 %rs54, %f1106;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs53, %f1105;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f1104;}

	// inline asm
	st.v4.u16 	[%rd140], {%rs52, %rs53, %rs54, %rs48};
	bra.uni 	BB0_137;

BB0_136:
	mov.u64 	%rd153, image_RNM1;
	cvta.global.u64 	%rd148, %rd153;
	mov.u32 	%r330, 8;
	// inline asm
	call (%rd147), _rt_buffer_get_64, (%rd148, %r106, %r330, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs61, %f363;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f362;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f361;}

	// inline asm
	st.v4.u16 	[%rd147], {%rs59, %rs60, %rs61, %rs48};

BB0_137:
	ld.global.u32 	%r331, [additive];
	setp.eq.s32	%p140, %r331, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f574;}

	// inline asm
	@%p140 bra 	BB0_139;

	mov.u64 	%rd166, image_RNM2;
	cvta.global.u64 	%rd155, %rd166;
	mov.u32 	%r335, 8;
	// inline asm
	call (%rd154), _rt_buffer_get_64, (%rd155, %r106, %r335, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs69, %rs70, %rs71, %rs72}, [%rd154];
	// inline asm
	{  cvt.f32.f16 %f1111, %rs69;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1112, %rs70;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1113, %rs71;}

	// inline asm
	// inline asm
	call (%rd160), _rt_buffer_get_64, (%rd155, %r106, %r335, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1114, %f364, %f1111;
	add.f32 	%f1115, %f365, %f1112;
	add.f32 	%f1116, %f366, %f1113;
	// inline asm
	{  cvt.rn.f16.f32 %rs68, %f1116;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs67, %f1115;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f1114;}

	// inline asm
	st.v4.u16 	[%rd160], {%rs66, %rs67, %rs68, %rs62};
	bra.uni 	BB0_140;

BB0_139:
	mov.u64 	%rd173, image_RNM2;
	cvta.global.u64 	%rd168, %rd173;
	mov.u32 	%r337, 8;
	// inline asm
	call (%rd167), _rt_buffer_get_64, (%rd168, %r106, %r337, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs75, %f366;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f365;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f364;}

	// inline asm
	st.v4.u16 	[%rd167], {%rs73, %rs74, %rs75, %rs62};

BB0_140:
	ld.global.u32 	%r338, [additive];
	setp.eq.s32	%p141, %r338, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f574;}

	// inline asm
	@%p141 bra 	BB0_142;

	mov.u64 	%rd186, image_RNM3;
	cvta.global.u64 	%rd175, %rd186;
	mov.u32 	%r342, 8;
	// inline asm
	call (%rd174), _rt_buffer_get_64, (%rd175, %r106, %r342, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs83, %rs84, %rs85, %rs86}, [%rd174];
	// inline asm
	{  cvt.f32.f16 %f1121, %rs83;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1122, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1123, %rs85;}

	// inline asm
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd175, %r106, %r342, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1124, %f367, %f1121;
	add.f32 	%f1125, %f368, %f1122;
	add.f32 	%f1126, %f369, %f1123;
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1126;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1125;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f1124;}

	// inline asm
	st.v4.u16 	[%rd180], {%rs80, %rs81, %rs82, %rs76};
	bra.uni 	BB0_163;

BB0_142:
	mov.u64 	%rd193, image_RNM3;
	cvta.global.u64 	%rd188, %rd193;
	mov.u32 	%r344, 8;
	// inline asm
	call (%rd187), _rt_buffer_get_64, (%rd188, %r106, %r344, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f369;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f368;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f367;}

	// inline asm
	st.v4.u16 	[%rd187], {%rs87, %rs88, %rs89, %rs76};

BB0_163:
	ret;
}


