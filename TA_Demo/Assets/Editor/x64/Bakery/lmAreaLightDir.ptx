//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<146>;
	.reg .b16 	%rs<55>;
	.reg .f32 	%f<945>;
	.reg .b32 	%r<381>;
	.reg .b64 	%rd<162>;


	mov.u64 	%rd161, __local_depot0;
	cvta.local.u64 	%SP, %rd161;
	ld.global.v2.u32 	{%r108, %r109}, [pixelID];
	cvt.u64.u32	%rd23, %r108;
	cvt.u64.u32	%rd24, %r109;
	mov.u64 	%rd27, uvnormal;
	cvta.global.u64 	%rd22, %rd27;
	mov.u32 	%r106, 2;
	mov.u32 	%r107, 4;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r106, %r107, %rd23, %rd24, %rd26, %rd26);
	// inline asm
	ld.u32 	%r1, [%rd21];
	shr.u32 	%r112, %r1, 16;
	cvt.u16.u32	%rs1, %r112;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r1;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p7, %rs5, 0;
	mov.f32 	%f870, 0f00000000;
	mov.f32 	%f871, %f870;
	mov.f32 	%f872, %f870;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs6, [%rd21+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f209, %rs8;
	div.rn.f32 	%f210, %f209, 0f437F0000;
	fma.rn.f32 	%f211, %f210, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f212, %rs6;
	div.rn.f32 	%f213, %f212, 0f437F0000;
	fma.rn.f32 	%f214, %f213, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f215, %rs3;
	div.rn.f32 	%f216, %f215, 0f437F0000;
	fma.rn.f32 	%f217, %f216, 0f40000000, 0fBF800000;
	mul.f32 	%f218, %f214, %f214;
	fma.rn.f32 	%f219, %f211, %f211, %f218;
	fma.rn.f32 	%f220, %f217, %f217, %f219;
	sqrt.rn.f32 	%f221, %f220;
	rcp.rn.f32 	%f222, %f221;
	mul.f32 	%f870, %f211, %f222;
	mul.f32 	%f871, %f214, %f222;
	mul.f32 	%f872, %f217, %f222;

BB0_2:
	ld.global.v2.u32 	{%r113, %r114}, [pixelID];
	ld.global.v2.u32 	{%r116, %r117}, [tileInfo];
	add.s32 	%r2, %r113, %r116;
	add.s32 	%r3, %r114, %r117;
	setp.eq.f32	%p8, %f871, 0f00000000;
	setp.eq.f32	%p9, %f870, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f872, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_133;
	bra.uni 	BB0_3;

BB0_133:
	ld.global.u32 	%r380, [imageEnabled];
	and.b32  	%r319, %r380, 1;
	setp.eq.b32	%p140, %r319, 1;
	@!%p140 bra 	BB0_135;
	bra.uni 	BB0_134;

BB0_134:
	cvt.u64.u32	%rd116, %r2;
	cvt.u64.u32	%rd117, %r3;
	mov.u64 	%rd120, image;
	cvta.global.u64 	%rd115, %rd120;
	mov.u64 	%rd119, 0;
	// inline asm
	call (%rd114), _rt_buffer_get_64, (%rd115, %r106, %r107, %rd116, %rd117, %rd119, %rd119);
	// inline asm
	mov.u16 	%rs36, 0;
	st.v4.u8 	[%rd114], {%rs36, %rs36, %rs36, %rs36};
	ld.global.u32 	%r380, [imageEnabled];

BB0_135:
	and.b32  	%r322, %r380, 8;
	setp.eq.s32	%p141, %r322, 0;
	@%p141 bra 	BB0_137;

	cvt.u64.u32	%rd123, %r2;
	cvt.u64.u32	%rd124, %r3;
	mov.u64 	%rd127, image_Mask;
	cvta.global.u64 	%rd122, %rd127;
	mov.u64 	%rd126, 0;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r106, %r106, %rd123, %rd124, %rd126, %rd126);
	// inline asm
	mov.f32 	%f853, 0f00000000;
	cvt.rzi.u32.f32	%r325, %f853;
	cvt.u16.u32	%rs37, %r325;
	mov.u16 	%rs38, 0;
	st.v2.u8 	[%rd121], {%rs37, %rs38};
	ld.global.u32 	%r380, [imageEnabled];

BB0_137:
	and.b32  	%r326, %r380, 4;
	setp.eq.s32	%p142, %r326, 0;
	@%p142 bra 	BB0_141;

	ld.global.u32 	%r327, [additive];
	setp.eq.s32	%p143, %r327, 0;
	cvt.u64.u32	%rd19, %r2;
	cvt.u64.u32	%rd20, %r3;
	@%p143 bra 	BB0_140;

	mov.u64 	%rd140, image_HDR;
	cvta.global.u64 	%rd129, %rd140;
	mov.u32 	%r331, 8;
	mov.u64 	%rd139, 0;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r106, %r331, %rd19, %rd20, %rd139, %rd139);
	// inline asm
	ld.v4.u16 	{%rs45, %rs46, %rs47, %rs48}, [%rd128];
	// inline asm
	{  cvt.f32.f16 %f854, %rs45;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f855, %rs46;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f856, %rs47;}

	// inline asm
	// inline asm
	call (%rd134), _rt_buffer_get_64, (%rd129, %r106, %r331, %rd19, %rd20, %rd139, %rd139);
	// inline asm
	add.f32 	%f857, %f854, 0f00000000;
	add.f32 	%f858, %f855, 0f00000000;
	add.f32 	%f859, %f856, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f859;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f858;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f857;}

	// inline asm
	mov.u16 	%rs49, 0;
	st.v4.u16 	[%rd134], {%rs42, %rs43, %rs44, %rs49};
	bra.uni 	BB0_141;

BB0_3:
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd30, %r126;
	cvt.u64.u32	%rd31, %r127;
	mov.u64 	%rd40, uvpos;
	cvta.global.u64 	%rd29, %rd40;
	mov.u32 	%r122, 12;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r106, %r122, %rd30, %rd31, %rd26, %rd26);
	// inline asm
	ld.f32 	%f9, [%rd28+8];
	ld.f32 	%f8, [%rd28+4];
	ld.f32 	%f7, [%rd28];
	mul.f32 	%f228, %f7, 0f3456BF95;
	mul.f32 	%f229, %f8, 0f3456BF95;
	mul.f32 	%f230, %f9, 0f3456BF95;
	abs.f32 	%f10, %f870;
	div.rn.f32 	%f231, %f228, %f10;
	abs.f32 	%f232, %f871;
	div.rn.f32 	%f233, %f229, %f232;
	abs.f32 	%f11, %f872;
	div.rn.f32 	%f234, %f230, %f11;
	abs.f32 	%f235, %f231;
	abs.f32 	%f236, %f233;
	abs.f32 	%f237, %f234;
	mov.f32 	%f238, 0f38D1B717;
	max.f32 	%f239, %f235, %f238;
	max.f32 	%f240, %f236, %f238;
	max.f32 	%f241, %f237, %f238;
	fma.rn.f32 	%f12, %f870, %f239, %f7;
	fma.rn.f32 	%f13, %f871, %f240, %f8;
	fma.rn.f32 	%f14, %f872, %f241, %f9;
	ld.global.v2.u32 	{%r130, %r131}, [pixelID];
	cvt.u64.u32	%rd36, %r130;
	cvt.u64.u32	%rd37, %r131;
	mov.u64 	%rd41, rnd_seeds;
	cvta.global.u64 	%rd35, %rd41;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r106, %r107, %rd36, %rd37, %rd26, %rd26);
	// inline asm
	ld.u32 	%r134, [%rd34];
	mad.lo.s32 	%r4, %r134, 1664525, 1013904223;
	ld.global.u32 	%r135, [lightMeshBufferSize];
	setp.eq.s32	%p14, %r135, 0;
	mov.pred 	%p13, 0;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r6, 0;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	and.b32  	%r138, %r4, 16777215;
	cvt.rn.f32.u32	%f247, %r138;
	mul.f32 	%f248, %f247, 0fB3800000;
	fma.rn.f32 	%f19, %f248, 0f3F333333, 0f3F800000;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r345, 0;
	abs.f32 	%f371, %f17;
	abs.f32 	%f372, %f16;
	max.f32 	%f373, %f372, %f371;
	abs.f32 	%f374, %f18;
	max.f32 	%f375, %f373, %f374;
	mov.u32 	%r6, %r345;
	mov.f32 	%f21, %f20;
	mov.f32 	%f920, %f20;
	mov.f32 	%f921, %f20;
	mov.f32 	%f922, %f20;

BB0_6:
	shl.b32 	%r7, %r345, 1;
	cvt.s64.s32	%rd44, %r7;
	mov.u64 	%rd48, lightMeshBuffer;
	cvta.global.u64 	%rd43, %rd48;
	mov.u32 	%r139, 1;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r139, %r122, %rd44, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f249, [%rd42];
	sub.f32 	%f250, %f249, %f7;
	ld.f32 	%f251, [%rd42+4];
	sub.f32 	%f252, %f251, %f8;
	ld.f32 	%f253, [%rd42+8];
	sub.f32 	%f254, %f253, %f9;
	mul.f32 	%f255, %f252, %f252;
	fma.rn.f32 	%f256, %f250, %f250, %f255;
	fma.rn.f32 	%f257, %f254, %f254, %f256;
	sqrt.rn.f32 	%f25, %f257;
	rcp.rn.f32 	%f258, %f25;
	mul.f32 	%f26, %f250, %f258;
	mul.f32 	%f27, %f252, %f258;
	mul.f32 	%f28, %f254, %f258;
	mul.f32 	%f259, %f871, %f27;
	fma.rn.f32 	%f260, %f870, %f26, %f259;
	fma.rn.f32 	%f29, %f872, %f28, %f260;
	setp.leu.f32	%p15, %f29, 0f00000000;
	@%p15 bra 	BB0_22;

	mul.f32 	%f261, %f25, %f25;
	mul.f32 	%f262, %f261, 0f40C90FDB;
	div.rn.f32 	%f263, %f15, %f262;
	add.f32 	%f30, %f263, %f263;
	setp.gt.f32	%p17, %f30, %f19;
	ld.global.u32 	%r141, [samples];
	setp.ne.s32	%p18, %r141, 0;
	and.pred  	%p19, %p18, %p17;
	mov.pred 	%p145, -1;
	@%p19 bra 	BB0_24;

	ld.global.f32 	%f266, [lightInvCutoff];
	mul.f32 	%f31, %f25, %f266;
	mov.f32 	%f270, 0f40800000;
	abs.f32 	%f33, %f31;
	setp.lt.f32	%p20, %f33, 0f00800000;
	mul.f32 	%f272, %f33, 0f4B800000;
	selp.f32	%f273, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f274, %f272, %f33, %p20;
	mov.b32 	 %r142, %f274;
	and.b32  	%r143, %r142, 8388607;
	or.b32  	%r144, %r143, 1065353216;
	mov.b32 	 %f275, %r144;
	shr.u32 	%r145, %r142, 23;
	cvt.rn.f32.u32	%f276, %r145;
	add.f32 	%f277, %f273, %f276;
	setp.gt.f32	%p21, %f275, 0f3FB504F3;
	mul.f32 	%f278, %f275, 0f3F000000;
	add.f32 	%f279, %f277, 0f3F800000;
	selp.f32	%f280, %f278, %f275, %p21;
	selp.f32	%f281, %f279, %f277, %p21;
	add.f32 	%f282, %f280, 0fBF800000;
	add.f32 	%f265, %f280, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f264,%f265;
	// inline asm
	add.f32 	%f283, %f282, %f282;
	mul.f32 	%f284, %f264, %f283;
	mul.f32 	%f285, %f284, %f284;
	mov.f32 	%f286, 0f3C4CAF63;
	mov.f32 	%f287, 0f3B18F0FE;
	fma.rn.f32 	%f288, %f287, %f285, %f286;
	mov.f32 	%f289, 0f3DAAAABD;
	fma.rn.f32 	%f290, %f288, %f285, %f289;
	mul.rn.f32 	%f291, %f290, %f285;
	mul.rn.f32 	%f292, %f291, %f284;
	sub.f32 	%f293, %f282, %f284;
	neg.f32 	%f294, %f284;
	add.f32 	%f295, %f293, %f293;
	fma.rn.f32 	%f296, %f294, %f282, %f295;
	mul.rn.f32 	%f297, %f264, %f296;
	add.f32 	%f298, %f292, %f284;
	sub.f32 	%f299, %f284, %f298;
	add.f32 	%f300, %f292, %f299;
	add.f32 	%f301, %f297, %f300;
	add.f32 	%f302, %f298, %f301;
	sub.f32 	%f303, %f298, %f302;
	add.f32 	%f304, %f301, %f303;
	mov.f32 	%f305, 0f3F317200;
	mul.rn.f32 	%f306, %f281, %f305;
	mov.f32 	%f307, 0f35BFBE8E;
	mul.rn.f32 	%f308, %f281, %f307;
	add.f32 	%f309, %f306, %f302;
	sub.f32 	%f310, %f306, %f309;
	add.f32 	%f311, %f302, %f310;
	add.f32 	%f312, %f304, %f311;
	add.f32 	%f313, %f308, %f312;
	add.f32 	%f314, %f309, %f313;
	sub.f32 	%f315, %f309, %f314;
	add.f32 	%f316, %f313, %f315;
	mul.rn.f32 	%f317, %f270, %f314;
	neg.f32 	%f318, %f317;
	fma.rn.f32 	%f319, %f270, %f314, %f318;
	fma.rn.f32 	%f320, %f270, %f316, %f319;
	mov.f32 	%f321, 0f00000000;
	fma.rn.f32 	%f322, %f321, %f314, %f320;
	add.rn.f32 	%f323, %f317, %f322;
	neg.f32 	%f324, %f323;
	add.rn.f32 	%f325, %f317, %f324;
	add.rn.f32 	%f326, %f325, %f322;
	mov.b32 	 %r146, %f323;
	setp.eq.s32	%p22, %r146, 1118925336;
	add.s32 	%r147, %r146, -1;
	mov.b32 	 %f327, %r147;
	add.f32 	%f328, %f326, 0f37000000;
	selp.f32	%f329, %f327, %f323, %p22;
	selp.f32	%f34, %f328, %f326, %p22;
	mul.f32 	%f330, %f329, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f331, %f330;
	mov.f32 	%f332, 0fBF317200;
	fma.rn.f32 	%f333, %f331, %f332, %f329;
	mov.f32 	%f334, 0fB5BFBE8E;
	fma.rn.f32 	%f335, %f331, %f334, %f333;
	mul.f32 	%f336, %f335, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f337, %f336;
	add.f32 	%f338, %f331, 0f00000000;
	ex2.approx.f32 	%f339, %f338;
	mul.f32 	%f340, %f337, %f339;
	setp.lt.f32	%p23, %f329, 0fC2D20000;
	selp.f32	%f341, 0f00000000, %f340, %p23;
	setp.gt.f32	%p24, %f329, 0f42D20000;
	selp.f32	%f878, 0f7F800000, %f341, %p24;
	setp.eq.f32	%p25, %f878, 0f7F800000;
	@%p25 bra 	BB0_10;

	fma.rn.f32 	%f878, %f878, %f34, %f878;

BB0_10:
	mov.f32 	%f866, 0f40000000;
	cvt.rzi.f32.f32	%f865, %f866;
	add.f32 	%f864, %f865, %f865;
	mov.f32 	%f863, 0f40800000;
	sub.f32 	%f862, %f863, %f864;
	abs.f32 	%f861, %f862;
	setp.lt.f32	%p26, %f31, 0f00000000;
	setp.eq.f32	%p27, %f861, 0f3F800000;
	and.pred  	%p1, %p26, %p27;
	mov.b32 	 %r148, %f878;
	xor.b32  	%r149, %r148, -2147483648;
	mov.b32 	 %f342, %r149;
	selp.f32	%f880, %f342, %f878, %p1;
	setp.eq.f32	%p28, %f31, 0f00000000;
	@%p28 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f345, %f31, %f31;
	selp.f32	%f880, %f345, 0f00000000, %p27;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p29, %f31, 0f00000000;
	@%p29 bra 	BB0_14;

	mov.f32 	%f869, 0f40800000;
	cvt.rzi.f32.f32	%f344, %f869;
	setp.neu.f32	%p30, %f344, 0f40800000;
	selp.f32	%f880, 0f7FFFFFFF, %f880, %p30;

BB0_14:
	add.f32 	%f346, %f33, 0f40800000;
	mov.b32 	 %r150, %f346;
	setp.lt.s32	%p32, %r150, 2139095040;
	@%p32 bra 	BB0_19;

	setp.gtu.f32	%p33, %f33, 0f7F800000;
	@%p33 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f880, %f31, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p34, %f33, 0f7F800000;
	@%p34 bra 	BB0_19;

	selp.f32	%f880, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u32 	%r337, 1;
	mov.u64 	%rd156, lightMeshBuffer;
	cvta.global.u64 	%rd155, %rd156;
	shl.b32 	%r336, %r345, 1;
	mov.f32 	%f347, 0f3F800000;
	sub.f32 	%f348, %f347, %f880;
	setp.eq.f32	%p35, %f31, 0f3F800000;
	selp.f32	%f349, 0f00000000, %f348, %p35;
	cvt.sat.f32.f32	%f350, %f349;
	mul.f32 	%f351, %f30, %f350;
	add.s32 	%r153, %r336, 1;
	cvt.s64.s32	%rd51, %r153;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd155, %r337, %r122, %rd51, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f352, [%rd49];
	mul.f32 	%f353, %f26, %f352;
	ld.f32 	%f354, [%rd49+4];
	mul.f32 	%f355, %f27, %f354;
	neg.f32 	%f356, %f355;
	sub.f32 	%f357, %f356, %f353;
	ld.f32 	%f358, [%rd49+8];
	mul.f32 	%f359, %f28, %f358;
	sub.f32 	%f360, %f357, %f359;
	cvt.sat.f32.f32	%f361, %f360;
	mul.f32 	%f45, %f351, %f361;
	cvt.sat.f32.f32	%f46, %f29;
	mul.f32 	%f362, %f45, %f46;
	setp.leu.f32	%p36, %f362, 0f3727C5AC;
	@%p36 bra 	BB0_21;

	mov.u32 	%r344, 1;
	add.u64 	%rd56, %SP, 28;
	cvta.to.local.u64 	%rd57, %rd56;
	max.f32 	%f369, %f375, %f238;
	sub.f32 	%f370, %f25, %f369;
	mov.u32 	%r157, 1065353216;
	st.local.u32 	[%rd57], %r157;
	ld.global.u32 	%r154, [root];
	// inline asm
	call _rt_trace_64, (%r154, %f12, %f13, %f14, %f26, %f27, %f28, %r344, %f369, %f370, %rd56, %r107);
	// inline asm
	ld.local.f32 	%f377, [%rd57];
	mul.f32 	%f378, %f45, %f377;
	fma.rn.f32 	%f21, %f46, %f378, %f21;
	add.f32 	%f20, %f20, %f377;
	fma.rn.f32 	%f922, %f26, %f377, %f922;
	fma.rn.f32 	%f921, %f27, %f377, %f921;
	fma.rn.f32 	%f920, %f28, %f377, %f920;

BB0_21:
	add.s32 	%r6, %r6, 1;

BB0_22:
	ld.global.u32 	%r158, [lightMeshBufferSize];
	add.s32 	%r345, %r345, 1;
	setp.lt.u32	%p38, %r345, %r158;
	@%p38 bra 	BB0_6;
	bra.uni 	BB0_23;

BB0_4:
	mov.f32 	%f21, %f20;
	mov.f32 	%f920, %f20;
	mov.f32 	%f921, %f20;
	mov.f32 	%f922, %f20;

BB0_23:
	mov.pred 	%p145, %p13;

BB0_24:
	cvt.rn.f32.s32	%f379, %r6;
	mov.f32 	%f380, 0f3F800000;
	max.f32 	%f381, %f379, %f380;
	div.rn.f32 	%f931, %f21, %f381;
	div.rn.f32 	%f932, %f20, %f381;
	@!%p145 bra 	BB0_79;
	bra.uni 	BB0_25;

BB0_25:
	abs.f32 	%f868, %f872;
	abs.f32 	%f867, %f870;
	setp.gt.f32	%p39, %f867, %f868;
	neg.f32 	%f387, %f871;
	selp.f32	%f388, %f387, 0f00000000, %p39;
	neg.f32 	%f389, %f872;
	selp.f32	%f390, %f870, %f389, %p39;
	selp.f32	%f391, 0f00000000, %f871, %p39;
	mul.f32 	%f392, %f390, %f390;
	fma.rn.f32 	%f393, %f388, %f388, %f392;
	fma.rn.f32 	%f394, %f391, %f391, %f393;
	sqrt.rn.f32 	%f395, %f394;
	rcp.rn.f32 	%f396, %f395;
	mul.f32 	%f69, %f388, %f396;
	mul.f32 	%f70, %f390, %f396;
	mul.f32 	%f71, %f391, %f396;
	ld.global.u32 	%r349, [samples];
	mov.f32 	%f918, 0f00000000;
	setp.lt.s32	%p40, %r349, 1;
	@%p40 bra 	BB0_26;

	mad.lo.s32 	%r375, %r134, 1664525, 1013904223;
	cvt.rn.f32.s32	%f402, %r349;
	rcp.rn.f32 	%f72, %f402;
	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd58;
	mul.f32 	%f73, %f12, 0f3456BF95;
	mul.f32 	%f74, %f13, 0f3456BF95;
	mul.f32 	%f75, %f14, 0f3456BF95;
	mul.f32 	%f403, %f870, %f70;
	mul.f32 	%f404, %f871, %f69;
	sub.f32 	%f76, %f404, %f403;
	mul.f32 	%f405, %f872, %f69;
	mul.f32 	%f406, %f870, %f71;
	sub.f32 	%f77, %f406, %f405;
	mul.f32 	%f407, %f871, %f71;
	mul.f32 	%f408, %f872, %f70;
	sub.f32 	%f78, %f408, %f407;
	mov.f32 	%f918, 0f00000000;
	mov.u32 	%r350, 0;
	abs.f32 	%f409, %f74;
	abs.f32 	%f410, %f73;
	max.f32 	%f411, %f410, %f409;
	abs.f32 	%f412, %f75;
	max.f32 	%f413, %f411, %f412;
	mov.f32 	%f919, %f918;
	mov.f32 	%f920, %f918;
	mov.f32 	%f921, %f918;
	mov.f32 	%f922, %f918;

BB0_28:
	setp.lt.s32	%p41, %r349, 1;
	@%p41 bra 	BB0_77;

	cvt.rn.f32.s32	%f84, %r350;
	max.f32 	%f85, %f413, %f238;
	add.u64 	%rd59, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd59;
	mov.u32 	%r352, 0;

BB0_30:
	mad.lo.s32 	%r161, %r375, 1664525, 1013904223;
	and.b32  	%r162, %r161, 16777215;
	cvt.rn.f32.u32	%f415, %r162;
	fma.rn.f32 	%f416, %f415, 0f33800000, %f84;
	mul.f32 	%f91, %f72, %f416;
	mad.lo.s32 	%r375, %r161, 1664525, 1013904223;
	and.b32  	%r163, %r375, 16777215;
	cvt.rn.f32.u32	%f417, %r163;
	cvt.rn.f32.s32	%f418, %r352;
	fma.rn.f32 	%f419, %f417, 0f33800000, %f418;
	mul.f32 	%f420, %f72, %f419;
	mul.f32 	%f421, %f91, %f91;
	sub.f32 	%f423, %f380, %f421;
	mov.f32 	%f424, 0f00000000;
	max.f32 	%f425, %f424, %f423;
	sqrt.rn.f32 	%f92, %f425;
	mul.f32 	%f912, %f420, 0f40C90FDB;
	abs.f32 	%f94, %f912;
	setp.neu.f32	%p42, %f94, 0f7F800000;
	mov.f32 	%f906, %f912;
	@%p42 bra 	BB0_32;

	mul.rn.f32 	%f906, %f912, %f424;

BB0_32:
	mul.f32 	%f427, %f906, 0f3F22F983;
	cvt.rni.s32.f32	%r363, %f427;
	cvt.rn.f32.s32	%f428, %r363;
	neg.f32 	%f429, %f428;
	mov.f32 	%f430, 0f3FC90FDA;
	fma.rn.f32 	%f431, %f429, %f430, %f906;
	mov.f32 	%f432, 0f33A22168;
	fma.rn.f32 	%f433, %f429, %f432, %f431;
	mov.f32 	%f434, 0f27C234C5;
	fma.rn.f32 	%f907, %f429, %f434, %f433;
	abs.f32 	%f435, %f906;
	setp.leu.f32	%p43, %f435, 0f47CE4780;
	@%p43 bra 	BB0_43;

	mov.b32 	 %r20, %f906;
	shr.u32 	%r21, %r20, 23;
	shl.b32 	%r166, %r20, 8;
	or.b32  	%r22, %r166, -2147483648;
	mov.u32 	%r354, 0;
	mov.u64 	%rd158, 0;
	mov.u64 	%rd157, %rd2;
	mov.u32 	%r355, %r354;

BB0_34:
	.pragma "nounroll";
	shl.b64 	%rd61, %rd158, 2;
	mov.u64 	%rd62, __cudart_i2opi_f;
	add.s64 	%rd63, %rd62, %rd61;
	ld.const.u32 	%r169, [%rd63];
	// inline asm
	{
	mad.lo.cc.u32   %r167, %r169, %r22, %r355;
	madc.hi.u32     %r355, %r169, %r22,  0;
	}
	// inline asm
	st.local.u32 	[%rd157], %r167;
	add.s32 	%r354, %r354, 1;
	cvt.s64.s32	%rd158, %r354;
	mul.wide.s32 	%rd64, %r354, 4;
	add.s64 	%rd157, %rd2, %rd64;
	setp.ne.s32	%p44, %r354, 6;
	@%p44 bra 	BB0_34;

	and.b32  	%r172, %r21, 255;
	add.s32 	%r173, %r172, -128;
	shr.u32 	%r174, %r173, 5;
	and.b32  	%r27, %r20, -2147483648;
	st.local.u32 	[%rd2+24], %r355;
	mov.u32 	%r175, 6;
	sub.s32 	%r176, %r175, %r174;
	mul.wide.s32 	%rd65, %r176, 4;
	add.s64 	%rd9, %rd2, %rd65;
	ld.local.u32 	%r356, [%rd9];
	ld.local.u32 	%r357, [%rd9+-4];
	and.b32  	%r30, %r21, 31;
	setp.eq.s32	%p45, %r30, 0;
	@%p45 bra 	BB0_37;

	mov.u32 	%r177, 32;
	sub.s32 	%r178, %r177, %r30;
	shr.u32 	%r179, %r357, %r178;
	shl.b32 	%r180, %r356, %r30;
	add.s32 	%r356, %r179, %r180;
	ld.local.u32 	%r181, [%rd9+-8];
	shr.u32 	%r182, %r181, %r178;
	shl.b32 	%r183, %r357, %r30;
	add.s32 	%r357, %r182, %r183;

BB0_37:
	shr.u32 	%r184, %r357, 30;
	shl.b32 	%r185, %r356, 2;
	add.s32 	%r358, %r184, %r185;
	shl.b32 	%r36, %r357, 2;
	shr.u32 	%r186, %r358, 31;
	shr.u32 	%r187, %r356, 30;
	add.s32 	%r37, %r186, %r187;
	setp.eq.s32	%p46, %r186, 0;
	@%p46 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.u32 	%r359, %r27;
	mov.u32 	%r360, %r36;
	bra.uni 	BB0_40;

BB0_39:
	not.b32 	%r188, %r358;
	neg.s32 	%r360, %r36;
	setp.eq.s32	%p47, %r36, 0;
	selp.u32	%r189, 1, 0, %p47;
	add.s32 	%r358, %r189, %r188;
	xor.b32  	%r359, %r27, -2147483648;

BB0_40:
	clz.b32 	%r362, %r358;
	setp.eq.s32	%p48, %r362, 0;
	shl.b32 	%r190, %r358, %r362;
	mov.u32 	%r191, 32;
	sub.s32 	%r192, %r191, %r362;
	shr.u32 	%r193, %r360, %r192;
	add.s32 	%r194, %r193, %r190;
	selp.b32	%r45, %r358, %r194, %p48;
	mov.u32 	%r195, -921707870;
	mul.hi.u32 	%r361, %r45, %r195;
	setp.eq.s32	%p49, %r27, 0;
	neg.s32 	%r196, %r37;
	selp.b32	%r363, %r37, %r196, %p49;
	setp.lt.s32	%p50, %r361, 1;
	@%p50 bra 	BB0_42;

	mul.lo.s32 	%r197, %r45, -921707870;
	shr.u32 	%r198, %r197, 31;
	shl.b32 	%r199, %r361, 1;
	add.s32 	%r361, %r198, %r199;
	add.s32 	%r362, %r362, 1;

BB0_42:
	mov.u32 	%r200, 126;
	sub.s32 	%r201, %r200, %r362;
	shl.b32 	%r202, %r201, 23;
	add.s32 	%r203, %r361, 1;
	shr.u32 	%r204, %r203, 7;
	add.s32 	%r205, %r204, 1;
	shr.u32 	%r206, %r205, 1;
	add.s32 	%r207, %r206, %r202;
	or.b32  	%r208, %r207, %r359;
	mov.b32 	 %f907, %r208;

BB0_43:
	mul.rn.f32 	%f100, %f907, %f907;
	add.s32 	%r53, %r363, 1;
	and.b32  	%r54, %r53, 1;
	setp.eq.s32	%p51, %r54, 0;
	@%p51 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f438, 0f3C08839E;
	mov.f32 	%f439, 0fB94CA1F9;
	fma.rn.f32 	%f908, %f439, %f100, %f438;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f436, 0fBAB6061A;
	mov.f32 	%f437, 0f37CCF5CE;
	fma.rn.f32 	%f908, %f437, %f100, %f436;

BB0_46:
	@%p51 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	mov.f32 	%f443, 0fBE2AAAA3;
	fma.rn.f32 	%f444, %f908, %f100, %f443;
	fma.rn.f32 	%f909, %f444, %f100, %f424;
	bra.uni 	BB0_49;

BB0_47:
	mov.f32 	%f440, 0f3D2AAAA5;
	fma.rn.f32 	%f441, %f908, %f100, %f440;
	mov.f32 	%f442, 0fBF000000;
	fma.rn.f32 	%f909, %f441, %f100, %f442;

BB0_49:
	fma.rn.f32 	%f910, %f909, %f907, %f907;
	@%p51 bra 	BB0_51;

	fma.rn.f32 	%f910, %f909, %f100, %f380;

BB0_51:
	and.b32  	%r209, %r53, 2;
	setp.eq.s32	%p54, %r209, 0;
	@%p54 bra 	BB0_53;

	mov.f32 	%f448, 0fBF800000;
	fma.rn.f32 	%f910, %f910, %f448, %f424;

BB0_53:
	@%p42 bra 	BB0_55;

	mul.rn.f32 	%f912, %f912, %f424;

BB0_55:
	mul.f32 	%f450, %f912, 0f3F22F983;
	cvt.rni.s32.f32	%r373, %f450;
	cvt.rn.f32.s32	%f451, %r373;
	neg.f32 	%f452, %f451;
	fma.rn.f32 	%f454, %f452, %f430, %f912;
	fma.rn.f32 	%f456, %f452, %f432, %f454;
	fma.rn.f32 	%f913, %f452, %f434, %f456;
	abs.f32 	%f458, %f912;
	setp.leu.f32	%p56, %f458, 0f47CE4780;
	@%p56 bra 	BB0_66;

	mov.b32 	 %r56, %f912;
	shr.u32 	%r57, %r56, 23;
	shl.b32 	%r212, %r56, 8;
	or.b32  	%r58, %r212, -2147483648;
	mov.u32 	%r364, 0;
	mov.u64 	%rd159, %rd2;
	mov.u64 	%rd160, %rd26;
	mov.u32 	%r365, %r364;

BB0_57:
	.pragma "nounroll";
	shl.b64 	%rd67, %rd160, 2;
	mov.u64 	%rd68, __cudart_i2opi_f;
	add.s64 	%rd69, %rd68, %rd67;
	ld.const.u32 	%r215, [%rd69];
	// inline asm
	{
	mad.lo.cc.u32   %r213, %r215, %r58, %r365;
	madc.hi.u32     %r365, %r215, %r58,  0;
	}
	// inline asm
	st.local.u32 	[%rd159], %r213;
	add.s32 	%r364, %r364, 1;
	cvt.s64.s32	%rd160, %r364;
	mul.wide.s32 	%rd70, %r364, 4;
	add.s64 	%rd159, %rd2, %rd70;
	setp.ne.s32	%p57, %r364, 6;
	@%p57 bra 	BB0_57;

	and.b32  	%r218, %r57, 255;
	add.s32 	%r219, %r218, -128;
	shr.u32 	%r220, %r219, 5;
	and.b32  	%r63, %r56, -2147483648;
	st.local.u32 	[%rd2+24], %r365;
	mov.u32 	%r221, 6;
	sub.s32 	%r222, %r221, %r220;
	mul.wide.s32 	%rd71, %r222, 4;
	add.s64 	%rd15, %rd2, %rd71;
	ld.local.u32 	%r366, [%rd15];
	ld.local.u32 	%r367, [%rd15+-4];
	and.b32  	%r66, %r57, 31;
	setp.eq.s32	%p58, %r66, 0;
	@%p58 bra 	BB0_60;

	mov.u32 	%r223, 32;
	sub.s32 	%r224, %r223, %r66;
	shr.u32 	%r225, %r367, %r224;
	shl.b32 	%r226, %r366, %r66;
	add.s32 	%r366, %r225, %r226;
	ld.local.u32 	%r227, [%rd15+-8];
	shr.u32 	%r228, %r227, %r224;
	shl.b32 	%r229, %r367, %r66;
	add.s32 	%r367, %r228, %r229;

BB0_60:
	shr.u32 	%r230, %r367, 30;
	shl.b32 	%r231, %r366, 2;
	add.s32 	%r368, %r230, %r231;
	shl.b32 	%r72, %r367, 2;
	shr.u32 	%r232, %r368, 31;
	shr.u32 	%r233, %r366, 30;
	add.s32 	%r73, %r232, %r233;
	setp.eq.s32	%p59, %r232, 0;
	@%p59 bra 	BB0_61;
	bra.uni 	BB0_62;

BB0_61:
	mov.u32 	%r369, %r63;
	mov.u32 	%r370, %r72;
	bra.uni 	BB0_63;

BB0_62:
	not.b32 	%r234, %r368;
	neg.s32 	%r370, %r72;
	setp.eq.s32	%p60, %r72, 0;
	selp.u32	%r235, 1, 0, %p60;
	add.s32 	%r368, %r235, %r234;
	xor.b32  	%r369, %r63, -2147483648;

BB0_63:
	clz.b32 	%r372, %r368;
	setp.eq.s32	%p61, %r372, 0;
	shl.b32 	%r236, %r368, %r372;
	mov.u32 	%r237, 32;
	sub.s32 	%r238, %r237, %r372;
	shr.u32 	%r239, %r370, %r238;
	add.s32 	%r240, %r239, %r236;
	selp.b32	%r81, %r368, %r240, %p61;
	mov.u32 	%r241, -921707870;
	mul.hi.u32 	%r371, %r81, %r241;
	setp.eq.s32	%p62, %r63, 0;
	neg.s32 	%r242, %r73;
	selp.b32	%r373, %r73, %r242, %p62;
	setp.lt.s32	%p63, %r371, 1;
	@%p63 bra 	BB0_65;

	mul.lo.s32 	%r243, %r81, -921707870;
	shr.u32 	%r244, %r243, 31;
	shl.b32 	%r245, %r371, 1;
	add.s32 	%r371, %r244, %r245;
	add.s32 	%r372, %r372, 1;

BB0_65:
	mov.u32 	%r246, 126;
	sub.s32 	%r247, %r246, %r372;
	shl.b32 	%r248, %r247, 23;
	add.s32 	%r249, %r371, 1;
	shr.u32 	%r250, %r249, 7;
	add.s32 	%r251, %r250, 1;
	shr.u32 	%r252, %r251, 1;
	add.s32 	%r253, %r252, %r248;
	or.b32  	%r254, %r253, %r369;
	mov.b32 	 %f913, %r254;

BB0_66:
	mul.rn.f32 	%f117, %f913, %f913;
	and.b32  	%r89, %r373, 1;
	setp.eq.s32	%p64, %r89, 0;
	@%p64 bra 	BB0_68;
	bra.uni 	BB0_67;

BB0_68:
	mov.f32 	%f461, 0f3C08839E;
	mov.f32 	%f462, 0fB94CA1F9;
	fma.rn.f32 	%f914, %f462, %f117, %f461;
	bra.uni 	BB0_69;

BB0_67:
	mov.f32 	%f459, 0fBAB6061A;
	mov.f32 	%f460, 0f37CCF5CE;
	fma.rn.f32 	%f914, %f460, %f117, %f459;

BB0_69:
	@%p64 bra 	BB0_71;
	bra.uni 	BB0_70;

BB0_71:
	mov.f32 	%f466, 0fBE2AAAA3;
	fma.rn.f32 	%f467, %f914, %f117, %f466;
	fma.rn.f32 	%f915, %f467, %f117, %f424;
	bra.uni 	BB0_72;

BB0_70:
	mov.f32 	%f463, 0f3D2AAAA5;
	fma.rn.f32 	%f464, %f914, %f117, %f463;
	mov.f32 	%f465, 0fBF000000;
	fma.rn.f32 	%f915, %f464, %f117, %f465;

BB0_72:
	fma.rn.f32 	%f916, %f915, %f913, %f913;
	@%p64 bra 	BB0_74;

	fma.rn.f32 	%f916, %f915, %f117, %f380;

BB0_74:
	and.b32  	%r255, %r373, 2;
	setp.eq.s32	%p67, %r255, 0;
	@%p67 bra 	BB0_76;

	mov.f32 	%f471, 0fBF800000;
	fma.rn.f32 	%f916, %f916, %f471, %f424;

BB0_76:
	mul.f32 	%f480, %f92, %f910;
	mul.f32 	%f481, %f92, %f916;
	mul.f32 	%f482, %f69, %f481;
	mul.f32 	%f483, %f70, %f481;
	mul.f32 	%f484, %f71, %f481;
	fma.rn.f32 	%f485, %f78, %f480, %f482;
	fma.rn.f32 	%f486, %f77, %f480, %f483;
	fma.rn.f32 	%f487, %f76, %f480, %f484;
	fma.rn.f32 	%f475, %f870, %f91, %f485;
	fma.rn.f32 	%f476, %f871, %f91, %f486;
	fma.rn.f32 	%f477, %f872, %f91, %f487;
	mov.u32 	%r257, 0;
	st.local.u32 	[%rd3], %r257;
	ld.global.u32 	%r256, [root];
	mov.f32 	%f479, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r256, %f12, %f13, %f14, %f475, %f476, %f477, %r257, %f85, %f479, %rd59, %r107);
	// inline asm
	ld.local.f32 	%f488, [%rd3];
	setp.lt.f32	%p68, %f488, 0f00000000;
	selp.f32	%f489, 0f00000000, %f488, %p68;
	selp.f32	%f490, 0f00000000, 0f3F800000, %p68;
	fma.rn.f32 	%f922, %f475, %f490, %f922;
	fma.rn.f32 	%f921, %f476, %f490, %f921;
	fma.rn.f32 	%f920, %f477, %f490, %f920;
	add.f32 	%f918, %f918, %f490;
	mul.f32 	%f491, %f871, %f476;
	fma.rn.f32 	%f492, %f870, %f475, %f491;
	fma.rn.f32 	%f493, %f872, %f477, %f492;
	cvt.sat.f32.f32	%f494, %f493;
	fma.rn.f32 	%f919, %f489, %f494, %f919;
	ld.global.u32 	%r349, [samples];
	add.s32 	%r352, %r352, 1;
	setp.lt.s32	%p69, %r352, %r349;
	@%p69 bra 	BB0_30;

BB0_77:
	add.s32 	%r350, %r350, 1;
	setp.lt.s32	%p70, %r350, %r349;
	@%p70 bra 	BB0_28;
	bra.uni 	BB0_78;

BB0_140:
	mov.u64 	%rd147, image_HDR;
	cvta.global.u64 	%rd142, %rd147;
	mov.u32 	%r333, 8;
	mov.u64 	%rd146, 0;
	// inline asm
	call (%rd141), _rt_buffer_get_64, (%rd142, %r106, %r333, %rd19, %rd20, %rd146, %rd146);
	// inline asm
	mov.f32 	%f860, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f860;}

	// inline asm
	mov.u16 	%rs51, 0;
	st.v4.u16 	[%rd141], {%rs50, %rs50, %rs50, %rs51};

BB0_141:
	ld.global.u8 	%rs52, [imageEnabled];
	and.b16  	%rs53, %rs52, 64;
	setp.eq.s16	%p144, %rs53, 0;
	@%p144 bra 	BB0_143;

	cvt.u64.u32	%rd150, %r2;
	cvt.u64.u32	%rd151, %r3;
	mov.u64 	%rd154, image_Dir;
	cvta.global.u64 	%rd149, %rd154;
	mov.u64 	%rd153, 0;
	// inline asm
	call (%rd148), _rt_buffer_get_64, (%rd149, %r106, %r107, %rd150, %rd151, %rd153, %rd153);
	// inline asm
	mov.u16 	%rs54, 0;
	st.v4.u8 	[%rd148], {%rs54, %rs54, %rs54, %rs54};
	bra.uni 	BB0_143;

BB0_26:
	mov.f32 	%f919, %f918;
	mov.f32 	%f920, %f918;
	mov.f32 	%f921, %f918;
	mov.f32 	%f922, %f918;

BB0_78:
	mul.lo.s32 	%r259, %r349, %r349;
	cvt.rn.f32.s32	%f495, %r259;
	div.rn.f32 	%f496, %f919, %f495;
	div.rn.f32 	%f932, %f918, %f495;
	add.f32 	%f931, %f496, %f496;

BB0_79:
	ld.global.u32 	%r378, [imageEnabled];
	and.b32  	%r260, %r378, 8;
	setp.eq.s32	%p71, %r260, 0;
	@%p71 bra 	BB0_92;

	mov.u32 	%r338, 2;
	cvt.u64.u32	%rd75, %r2;
	cvt.u64.u32	%rd76, %r3;
	mov.u64 	%rd79, image_Mask;
	cvta.global.u64 	%rd74, %rd79;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r338, %r338, %rd75, %rd76, %rd26, %rd26);
	// inline asm
	mov.f32 	%f499, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f500, %f499;
	fma.rn.f32 	%f501, %f500, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f151, %f501;
	abs.f32 	%f152, %f932;
	setp.lt.f32	%p72, %f152, 0f00800000;
	mul.f32 	%f502, %f152, 0f4B800000;
	selp.f32	%f503, 0fC3170000, 0fC2FE0000, %p72;
	selp.f32	%f504, %f502, %f152, %p72;
	mov.b32 	 %r263, %f504;
	and.b32  	%r264, %r263, 8388607;
	or.b32  	%r265, %r264, 1065353216;
	mov.b32 	 %f505, %r265;
	shr.u32 	%r266, %r263, 23;
	cvt.rn.f32.u32	%f506, %r266;
	add.f32 	%f507, %f503, %f506;
	setp.gt.f32	%p73, %f505, 0f3FB504F3;
	mul.f32 	%f508, %f505, 0f3F000000;
	add.f32 	%f509, %f507, 0f3F800000;
	selp.f32	%f510, %f508, %f505, %p73;
	selp.f32	%f511, %f509, %f507, %p73;
	add.f32 	%f512, %f510, 0fBF800000;
	add.f32 	%f498, %f510, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f497,%f498;
	// inline asm
	add.f32 	%f513, %f512, %f512;
	mul.f32 	%f514, %f497, %f513;
	mul.f32 	%f515, %f514, %f514;
	mov.f32 	%f516, 0f3C4CAF63;
	mov.f32 	%f517, 0f3B18F0FE;
	fma.rn.f32 	%f518, %f517, %f515, %f516;
	mov.f32 	%f519, 0f3DAAAABD;
	fma.rn.f32 	%f520, %f518, %f515, %f519;
	mul.rn.f32 	%f521, %f520, %f515;
	mul.rn.f32 	%f522, %f521, %f514;
	sub.f32 	%f523, %f512, %f514;
	neg.f32 	%f524, %f514;
	add.f32 	%f525, %f523, %f523;
	fma.rn.f32 	%f526, %f524, %f512, %f525;
	mul.rn.f32 	%f527, %f497, %f526;
	add.f32 	%f528, %f522, %f514;
	sub.f32 	%f529, %f514, %f528;
	add.f32 	%f530, %f522, %f529;
	add.f32 	%f531, %f527, %f530;
	add.f32 	%f532, %f528, %f531;
	sub.f32 	%f533, %f528, %f532;
	add.f32 	%f534, %f531, %f533;
	mov.f32 	%f535, 0f3F317200;
	mul.rn.f32 	%f536, %f511, %f535;
	mov.f32 	%f537, 0f35BFBE8E;
	mul.rn.f32 	%f538, %f511, %f537;
	add.f32 	%f539, %f536, %f532;
	sub.f32 	%f540, %f536, %f539;
	add.f32 	%f541, %f532, %f540;
	add.f32 	%f542, %f534, %f541;
	add.f32 	%f543, %f538, %f542;
	add.f32 	%f544, %f539, %f543;
	sub.f32 	%f545, %f539, %f544;
	add.f32 	%f546, %f543, %f545;
	mov.f32 	%f547, 0f3EE8BA2E;
	mul.rn.f32 	%f548, %f547, %f544;
	neg.f32 	%f549, %f548;
	fma.rn.f32 	%f550, %f547, %f544, %f549;
	fma.rn.f32 	%f551, %f547, %f546, %f550;
	mov.f32 	%f552, 0f00000000;
	fma.rn.f32 	%f553, %f552, %f544, %f551;
	add.rn.f32 	%f554, %f548, %f553;
	neg.f32 	%f555, %f554;
	add.rn.f32 	%f556, %f548, %f555;
	add.rn.f32 	%f557, %f556, %f553;
	mov.b32 	 %r267, %f554;
	setp.eq.s32	%p74, %r267, 1118925336;
	add.s32 	%r268, %r267, -1;
	mov.b32 	 %f558, %r268;
	add.f32 	%f559, %f557, 0f37000000;
	selp.f32	%f560, %f558, %f554, %p74;
	selp.f32	%f153, %f559, %f557, %p74;
	mul.f32 	%f561, %f560, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f562, %f561;
	mov.f32 	%f563, 0fBF317200;
	fma.rn.f32 	%f564, %f562, %f563, %f560;
	mov.f32 	%f565, 0fB5BFBE8E;
	fma.rn.f32 	%f566, %f562, %f565, %f564;
	mul.f32 	%f567, %f566, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f568, %f567;
	add.f32 	%f569, %f562, 0f00000000;
	ex2.approx.f32 	%f570, %f569;
	mul.f32 	%f571, %f568, %f570;
	setp.lt.f32	%p75, %f560, 0fC2D20000;
	selp.f32	%f572, 0f00000000, %f571, %p75;
	setp.gt.f32	%p76, %f560, 0f42D20000;
	selp.f32	%f933, 0f7F800000, %f572, %p76;
	setp.eq.f32	%p77, %f933, 0f7F800000;
	@%p77 bra 	BB0_82;

	fma.rn.f32 	%f933, %f933, %f153, %f933;

BB0_82:
	setp.lt.f32	%p78, %f932, 0f00000000;
	setp.eq.f32	%p79, %f151, 0f3F800000;
	and.pred  	%p3, %p78, %p79;
	mov.b32 	 %r269, %f933;
	xor.b32  	%r270, %r269, -2147483648;
	mov.b32 	 %f573, %r270;
	selp.f32	%f935, %f573, %f933, %p3;
	setp.eq.f32	%p80, %f932, 0f00000000;
	@%p80 bra 	BB0_85;
	bra.uni 	BB0_83;

BB0_85:
	add.f32 	%f576, %f932, %f932;
	selp.f32	%f935, %f576, 0f00000000, %p79;
	bra.uni 	BB0_86;

BB0_83:
	setp.geu.f32	%p81, %f932, 0f00000000;
	@%p81 bra 	BB0_86;

	cvt.rzi.f32.f32	%f575, %f547;
	setp.neu.f32	%p82, %f575, 0f3EE8BA2E;
	selp.f32	%f935, 0f7FFFFFFF, %f935, %p82;

BB0_86:
	add.f32 	%f577, %f152, 0f3EE8BA2E;
	mov.b32 	 %r271, %f577;
	setp.lt.s32	%p84, %r271, 2139095040;
	@%p84 bra 	BB0_91;

	setp.gtu.f32	%p85, %f152, 0f7F800000;
	@%p85 bra 	BB0_90;
	bra.uni 	BB0_88;

BB0_90:
	add.f32 	%f935, %f932, 0f3EE8BA2E;
	bra.uni 	BB0_91;

BB0_88:
	setp.neu.f32	%p86, %f152, 0f7F800000;
	@%p86 bra 	BB0_91;

	selp.f32	%f935, 0fFF800000, 0f7F800000, %p3;

BB0_91:
	mul.f32 	%f578, %f935, 0f437F0000;
	setp.eq.f32	%p87, %f932, 0f3F800000;
	selp.f32	%f579, 0f437F0000, %f578, %p87;
	cvt.rzi.u32.f32	%r272, %f579;
	cvt.u16.u32	%rs10, %r272;
	mov.u16 	%rs11, 255;
	st.v2.u8 	[%rd73], {%rs10, %rs11};
	ld.global.u32 	%r378, [imageEnabled];

BB0_92:
	ld.global.f32 	%f580, [lightColor];
	mul.f32 	%f164, %f931, %f580;
	ld.global.f32 	%f581, [lightColor+4];
	mul.f32 	%f165, %f931, %f581;
	ld.global.f32 	%f582, [lightColor+8];
	mul.f32 	%f166, %f931, %f582;
	and.b32  	%r273, %r378, 1;
	setp.eq.b32	%p88, %r273, 1;
	@!%p88 bra 	BB0_127;
	bra.uni 	BB0_93;

BB0_93:
	mov.f32 	%f585, 0f3E666666;
	cvt.rzi.f32.f32	%f586, %f585;
	fma.rn.f32 	%f587, %f586, 0fC0000000, 0f3EE66666;
	abs.f32 	%f167, %f587;
	abs.f32 	%f168, %f164;
	setp.lt.f32	%p89, %f168, 0f00800000;
	mul.f32 	%f588, %f168, 0f4B800000;
	selp.f32	%f589, 0fC3170000, 0fC2FE0000, %p89;
	selp.f32	%f590, %f588, %f168, %p89;
	mov.b32 	 %r274, %f590;
	and.b32  	%r275, %r274, 8388607;
	or.b32  	%r276, %r275, 1065353216;
	mov.b32 	 %f591, %r276;
	shr.u32 	%r277, %r274, 23;
	cvt.rn.f32.u32	%f592, %r277;
	add.f32 	%f593, %f589, %f592;
	setp.gt.f32	%p90, %f591, 0f3FB504F3;
	mul.f32 	%f594, %f591, 0f3F000000;
	add.f32 	%f595, %f593, 0f3F800000;
	selp.f32	%f596, %f594, %f591, %p90;
	selp.f32	%f597, %f595, %f593, %p90;
	add.f32 	%f598, %f596, 0fBF800000;
	add.f32 	%f584, %f596, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f583,%f584;
	// inline asm
	add.f32 	%f599, %f598, %f598;
	mul.f32 	%f600, %f583, %f599;
	mul.f32 	%f601, %f600, %f600;
	mov.f32 	%f602, 0f3C4CAF63;
	mov.f32 	%f603, 0f3B18F0FE;
	fma.rn.f32 	%f604, %f603, %f601, %f602;
	mov.f32 	%f605, 0f3DAAAABD;
	fma.rn.f32 	%f606, %f604, %f601, %f605;
	mul.rn.f32 	%f607, %f606, %f601;
	mul.rn.f32 	%f608, %f607, %f600;
	sub.f32 	%f609, %f598, %f600;
	neg.f32 	%f610, %f600;
	add.f32 	%f611, %f609, %f609;
	fma.rn.f32 	%f612, %f610, %f598, %f611;
	mul.rn.f32 	%f613, %f583, %f612;
	add.f32 	%f614, %f608, %f600;
	sub.f32 	%f615, %f600, %f614;
	add.f32 	%f616, %f608, %f615;
	add.f32 	%f617, %f613, %f616;
	add.f32 	%f618, %f614, %f617;
	sub.f32 	%f619, %f614, %f618;
	add.f32 	%f620, %f617, %f619;
	mov.f32 	%f621, 0f3F317200;
	mul.rn.f32 	%f622, %f597, %f621;
	mov.f32 	%f623, 0f35BFBE8E;
	mul.rn.f32 	%f624, %f597, %f623;
	add.f32 	%f625, %f622, %f618;
	sub.f32 	%f626, %f622, %f625;
	add.f32 	%f627, %f618, %f626;
	add.f32 	%f628, %f620, %f627;
	add.f32 	%f629, %f624, %f628;
	add.f32 	%f630, %f625, %f629;
	sub.f32 	%f631, %f625, %f630;
	add.f32 	%f632, %f629, %f631;
	mov.f32 	%f633, 0f3EE66666;
	mul.rn.f32 	%f634, %f633, %f630;
	neg.f32 	%f635, %f634;
	fma.rn.f32 	%f636, %f633, %f630, %f635;
	fma.rn.f32 	%f637, %f633, %f632, %f636;
	mov.f32 	%f638, 0f00000000;
	fma.rn.f32 	%f639, %f638, %f630, %f637;
	add.rn.f32 	%f640, %f634, %f639;
	neg.f32 	%f641, %f640;
	add.rn.f32 	%f642, %f634, %f641;
	add.rn.f32 	%f643, %f642, %f639;
	mov.b32 	 %r278, %f640;
	setp.eq.s32	%p91, %r278, 1118925336;
	add.s32 	%r279, %r278, -1;
	mov.b32 	 %f644, %r279;
	add.f32 	%f645, %f643, 0f37000000;
	selp.f32	%f646, %f644, %f640, %p91;
	selp.f32	%f169, %f645, %f643, %p91;
	mul.f32 	%f647, %f646, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f648, %f647;
	mov.f32 	%f649, 0fBF317200;
	fma.rn.f32 	%f650, %f648, %f649, %f646;
	mov.f32 	%f651, 0fB5BFBE8E;
	fma.rn.f32 	%f652, %f648, %f651, %f650;
	mul.f32 	%f653, %f652, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f654, %f653;
	add.f32 	%f655, %f648, 0f00000000;
	ex2.approx.f32 	%f656, %f655;
	mul.f32 	%f657, %f654, %f656;
	setp.lt.f32	%p92, %f646, 0fC2D20000;
	selp.f32	%f658, 0f00000000, %f657, %p92;
	setp.gt.f32	%p93, %f646, 0f42D20000;
	selp.f32	%f936, 0f7F800000, %f658, %p93;
	setp.eq.f32	%p94, %f936, 0f7F800000;
	@%p94 bra 	BB0_95;

	fma.rn.f32 	%f936, %f936, %f169, %f936;

BB0_95:
	setp.lt.f32	%p95, %f164, 0f00000000;
	setp.eq.f32	%p96, %f167, 0f3F800000;
	and.pred  	%p4, %p95, %p96;
	mov.b32 	 %r280, %f936;
	xor.b32  	%r281, %r280, -2147483648;
	mov.b32 	 %f659, %r281;
	selp.f32	%f938, %f659, %f936, %p4;
	setp.eq.f32	%p97, %f164, 0f00000000;
	@%p97 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f662, %f164, %f164;
	selp.f32	%f938, %f662, 0f00000000, %p96;
	bra.uni 	BB0_99;

BB0_96:
	setp.geu.f32	%p98, %f164, 0f00000000;
	@%p98 bra 	BB0_99;

	cvt.rzi.f32.f32	%f661, %f633;
	setp.neu.f32	%p99, %f661, 0f3EE66666;
	selp.f32	%f938, 0f7FFFFFFF, %f938, %p99;

BB0_99:
	add.f32 	%f663, %f168, 0f3EE66666;
	mov.b32 	 %r282, %f663;
	setp.lt.s32	%p101, %r282, 2139095040;
	@%p101 bra 	BB0_104;

	setp.gtu.f32	%p102, %f168, 0f7F800000;
	@%p102 bra 	BB0_103;
	bra.uni 	BB0_101;

BB0_103:
	add.f32 	%f938, %f164, 0f3EE66666;
	bra.uni 	BB0_104;

BB0_101:
	setp.neu.f32	%p103, %f168, 0f7F800000;
	@%p103 bra 	BB0_104;

	selp.f32	%f938, 0fFF800000, 0f7F800000, %p4;

BB0_104:
	setp.eq.f32	%p104, %f164, 0f3F800000;
	selp.f32	%f180, 0f3F800000, %f938, %p104;
	abs.f32 	%f181, %f165;
	setp.lt.f32	%p105, %f181, 0f00800000;
	mul.f32 	%f666, %f181, 0f4B800000;
	selp.f32	%f667, 0fC3170000, 0fC2FE0000, %p105;
	selp.f32	%f668, %f666, %f181, %p105;
	mov.b32 	 %r283, %f668;
	and.b32  	%r284, %r283, 8388607;
	or.b32  	%r285, %r284, 1065353216;
	mov.b32 	 %f669, %r285;
	shr.u32 	%r286, %r283, 23;
	cvt.rn.f32.u32	%f670, %r286;
	add.f32 	%f671, %f667, %f670;
	setp.gt.f32	%p106, %f669, 0f3FB504F3;
	mul.f32 	%f672, %f669, 0f3F000000;
	add.f32 	%f673, %f671, 0f3F800000;
	selp.f32	%f674, %f672, %f669, %p106;
	selp.f32	%f675, %f673, %f671, %p106;
	add.f32 	%f676, %f674, 0fBF800000;
	add.f32 	%f665, %f674, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f664,%f665;
	// inline asm
	add.f32 	%f677, %f676, %f676;
	mul.f32 	%f678, %f664, %f677;
	mul.f32 	%f679, %f678, %f678;
	fma.rn.f32 	%f682, %f603, %f679, %f602;
	fma.rn.f32 	%f684, %f682, %f679, %f605;
	mul.rn.f32 	%f685, %f684, %f679;
	mul.rn.f32 	%f686, %f685, %f678;
	sub.f32 	%f687, %f676, %f678;
	neg.f32 	%f688, %f678;
	add.f32 	%f689, %f687, %f687;
	fma.rn.f32 	%f690, %f688, %f676, %f689;
	mul.rn.f32 	%f691, %f664, %f690;
	add.f32 	%f692, %f686, %f678;
	sub.f32 	%f693, %f678, %f692;
	add.f32 	%f694, %f686, %f693;
	add.f32 	%f695, %f691, %f694;
	add.f32 	%f696, %f692, %f695;
	sub.f32 	%f697, %f692, %f696;
	add.f32 	%f698, %f695, %f697;
	mul.rn.f32 	%f700, %f675, %f621;
	mul.rn.f32 	%f702, %f675, %f623;
	add.f32 	%f703, %f700, %f696;
	sub.f32 	%f704, %f700, %f703;
	add.f32 	%f705, %f696, %f704;
	add.f32 	%f706, %f698, %f705;
	add.f32 	%f707, %f702, %f706;
	add.f32 	%f708, %f703, %f707;
	sub.f32 	%f709, %f703, %f708;
	add.f32 	%f710, %f707, %f709;
	mul.rn.f32 	%f712, %f633, %f708;
	neg.f32 	%f713, %f712;
	fma.rn.f32 	%f714, %f633, %f708, %f713;
	fma.rn.f32 	%f715, %f633, %f710, %f714;
	fma.rn.f32 	%f717, %f638, %f708, %f715;
	add.rn.f32 	%f718, %f712, %f717;
	neg.f32 	%f719, %f718;
	add.rn.f32 	%f720, %f712, %f719;
	add.rn.f32 	%f721, %f720, %f717;
	mov.b32 	 %r287, %f718;
	setp.eq.s32	%p107, %r287, 1118925336;
	add.s32 	%r288, %r287, -1;
	mov.b32 	 %f722, %r288;
	add.f32 	%f723, %f721, 0f37000000;
	selp.f32	%f724, %f722, %f718, %p107;
	selp.f32	%f182, %f723, %f721, %p107;
	mul.f32 	%f725, %f724, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f726, %f725;
	fma.rn.f32 	%f728, %f726, %f649, %f724;
	fma.rn.f32 	%f730, %f726, %f651, %f728;
	mul.f32 	%f731, %f730, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f732, %f731;
	add.f32 	%f733, %f726, 0f00000000;
	ex2.approx.f32 	%f734, %f733;
	mul.f32 	%f735, %f732, %f734;
	setp.lt.f32	%p108, %f724, 0fC2D20000;
	selp.f32	%f736, 0f00000000, %f735, %p108;
	setp.gt.f32	%p109, %f724, 0f42D20000;
	selp.f32	%f939, 0f7F800000, %f736, %p109;
	setp.eq.f32	%p110, %f939, 0f7F800000;
	@%p110 bra 	BB0_106;

	fma.rn.f32 	%f939, %f939, %f182, %f939;

BB0_106:
	setp.lt.f32	%p111, %f165, 0f00000000;
	and.pred  	%p5, %p111, %p96;
	mov.b32 	 %r289, %f939;
	xor.b32  	%r290, %r289, -2147483648;
	mov.b32 	 %f737, %r290;
	selp.f32	%f941, %f737, %f939, %p5;
	setp.eq.f32	%p113, %f165, 0f00000000;
	@%p113 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f740, %f165, %f165;
	selp.f32	%f941, %f740, 0f00000000, %p96;
	bra.uni 	BB0_110;

BB0_107:
	setp.geu.f32	%p114, %f165, 0f00000000;
	@%p114 bra 	BB0_110;

	cvt.rzi.f32.f32	%f739, %f633;
	setp.neu.f32	%p115, %f739, 0f3EE66666;
	selp.f32	%f941, 0f7FFFFFFF, %f941, %p115;

BB0_110:
	add.f32 	%f741, %f181, 0f3EE66666;
	mov.b32 	 %r291, %f741;
	setp.lt.s32	%p117, %r291, 2139095040;
	@%p117 bra 	BB0_115;

	setp.gtu.f32	%p118, %f181, 0f7F800000;
	@%p118 bra 	BB0_114;
	bra.uni 	BB0_112;

BB0_114:
	add.f32 	%f941, %f165, 0f3EE66666;
	bra.uni 	BB0_115;

BB0_112:
	setp.neu.f32	%p119, %f181, 0f7F800000;
	@%p119 bra 	BB0_115;

	selp.f32	%f941, 0fFF800000, 0f7F800000, %p5;

BB0_115:
	setp.eq.f32	%p120, %f165, 0f3F800000;
	selp.f32	%f193, 0f3F800000, %f941, %p120;
	abs.f32 	%f194, %f166;
	setp.lt.f32	%p121, %f194, 0f00800000;
	mul.f32 	%f744, %f194, 0f4B800000;
	selp.f32	%f745, 0fC3170000, 0fC2FE0000, %p121;
	selp.f32	%f746, %f744, %f194, %p121;
	mov.b32 	 %r292, %f746;
	and.b32  	%r293, %r292, 8388607;
	or.b32  	%r294, %r293, 1065353216;
	mov.b32 	 %f747, %r294;
	shr.u32 	%r295, %r292, 23;
	cvt.rn.f32.u32	%f748, %r295;
	add.f32 	%f749, %f745, %f748;
	setp.gt.f32	%p122, %f747, 0f3FB504F3;
	mul.f32 	%f750, %f747, 0f3F000000;
	add.f32 	%f751, %f749, 0f3F800000;
	selp.f32	%f752, %f750, %f747, %p122;
	selp.f32	%f753, %f751, %f749, %p122;
	add.f32 	%f754, %f752, 0fBF800000;
	add.f32 	%f743, %f752, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f742,%f743;
	// inline asm
	add.f32 	%f755, %f754, %f754;
	mul.f32 	%f756, %f742, %f755;
	mul.f32 	%f757, %f756, %f756;
	fma.rn.f32 	%f760, %f603, %f757, %f602;
	fma.rn.f32 	%f762, %f760, %f757, %f605;
	mul.rn.f32 	%f763, %f762, %f757;
	mul.rn.f32 	%f764, %f763, %f756;
	sub.f32 	%f765, %f754, %f756;
	neg.f32 	%f766, %f756;
	add.f32 	%f767, %f765, %f765;
	fma.rn.f32 	%f768, %f766, %f754, %f767;
	mul.rn.f32 	%f769, %f742, %f768;
	add.f32 	%f770, %f764, %f756;
	sub.f32 	%f771, %f756, %f770;
	add.f32 	%f772, %f764, %f771;
	add.f32 	%f773, %f769, %f772;
	add.f32 	%f774, %f770, %f773;
	sub.f32 	%f775, %f770, %f774;
	add.f32 	%f776, %f773, %f775;
	mul.rn.f32 	%f778, %f753, %f621;
	mul.rn.f32 	%f780, %f753, %f623;
	add.f32 	%f781, %f778, %f774;
	sub.f32 	%f782, %f778, %f781;
	add.f32 	%f783, %f774, %f782;
	add.f32 	%f784, %f776, %f783;
	add.f32 	%f785, %f780, %f784;
	add.f32 	%f786, %f781, %f785;
	sub.f32 	%f787, %f781, %f786;
	add.f32 	%f788, %f785, %f787;
	mul.rn.f32 	%f790, %f633, %f786;
	neg.f32 	%f791, %f790;
	fma.rn.f32 	%f792, %f633, %f786, %f791;
	fma.rn.f32 	%f793, %f633, %f788, %f792;
	fma.rn.f32 	%f795, %f638, %f786, %f793;
	add.rn.f32 	%f796, %f790, %f795;
	neg.f32 	%f797, %f796;
	add.rn.f32 	%f798, %f790, %f797;
	add.rn.f32 	%f799, %f798, %f795;
	mov.b32 	 %r296, %f796;
	setp.eq.s32	%p123, %r296, 1118925336;
	add.s32 	%r297, %r296, -1;
	mov.b32 	 %f800, %r297;
	add.f32 	%f801, %f799, 0f37000000;
	selp.f32	%f802, %f800, %f796, %p123;
	selp.f32	%f195, %f801, %f799, %p123;
	mul.f32 	%f803, %f802, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f804, %f803;
	fma.rn.f32 	%f806, %f804, %f649, %f802;
	fma.rn.f32 	%f808, %f804, %f651, %f806;
	mul.f32 	%f809, %f808, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f810, %f809;
	add.f32 	%f811, %f804, 0f00000000;
	ex2.approx.f32 	%f812, %f811;
	mul.f32 	%f813, %f810, %f812;
	setp.lt.f32	%p124, %f802, 0fC2D20000;
	selp.f32	%f814, 0f00000000, %f813, %p124;
	setp.gt.f32	%p125, %f802, 0f42D20000;
	selp.f32	%f942, 0f7F800000, %f814, %p125;
	setp.eq.f32	%p126, %f942, 0f7F800000;
	@%p126 bra 	BB0_117;

	fma.rn.f32 	%f942, %f942, %f195, %f942;

BB0_117:
	setp.lt.f32	%p127, %f166, 0f00000000;
	and.pred  	%p6, %p127, %p96;
	mov.b32 	 %r298, %f942;
	xor.b32  	%r299, %r298, -2147483648;
	mov.b32 	 %f815, %r299;
	selp.f32	%f944, %f815, %f942, %p6;
	setp.eq.f32	%p129, %f166, 0f00000000;
	@%p129 bra 	BB0_120;
	bra.uni 	BB0_118;

BB0_120:
	add.f32 	%f818, %f166, %f166;
	selp.f32	%f944, %f818, 0f00000000, %p96;
	bra.uni 	BB0_121;

BB0_118:
	setp.geu.f32	%p130, %f166, 0f00000000;
	@%p130 bra 	BB0_121;

	cvt.rzi.f32.f32	%f817, %f633;
	setp.neu.f32	%p131, %f817, 0f3EE66666;
	selp.f32	%f944, 0f7FFFFFFF, %f944, %p131;

BB0_121:
	add.f32 	%f819, %f194, 0f3EE66666;
	mov.b32 	 %r300, %f819;
	setp.lt.s32	%p133, %r300, 2139095040;
	@%p133 bra 	BB0_126;

	setp.gtu.f32	%p134, %f194, 0f7F800000;
	@%p134 bra 	BB0_125;
	bra.uni 	BB0_123;

BB0_125:
	add.f32 	%f944, %f166, 0f3EE66666;
	bra.uni 	BB0_126;

BB0_123:
	setp.neu.f32	%p135, %f194, 0f7F800000;
	@%p135 bra 	BB0_126;

	selp.f32	%f944, 0fFF800000, 0f7F800000, %p6;

BB0_126:
	mov.u32 	%r339, 2;
	setp.eq.f32	%p136, %f166, 0f3F800000;
	selp.f32	%f820, 0f3F800000, %f944, %p136;
	cvt.u64.u32	%rd83, %r3;
	cvt.u64.u32	%rd82, %r2;
	mov.u64 	%rd86, image;
	cvta.global.u64 	%rd81, %rd86;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r339, %r107, %rd82, %rd83, %rd26, %rd26);
	// inline asm
	cvt.sat.f32.f32	%f821, %f820;
	mul.f32 	%f822, %f821, 0f437FFD71;
	cvt.rzi.u32.f32	%r303, %f822;
	cvt.sat.f32.f32	%f823, %f193;
	mul.f32 	%f824, %f823, 0f437FFD71;
	cvt.rzi.u32.f32	%r304, %f824;
	cvt.sat.f32.f32	%f825, %f180;
	mul.f32 	%f826, %f825, 0f437FFD71;
	cvt.rzi.u32.f32	%r305, %f826;
	cvt.u16.u32	%rs12, %r303;
	cvt.u16.u32	%rs13, %r305;
	cvt.u16.u32	%rs14, %r304;
	mov.u16 	%rs15, 255;
	st.v4.u8 	[%rd80], {%rs12, %rs14, %rs13, %rs15};
	ld.global.u32 	%r378, [imageEnabled];

BB0_127:
	and.b32  	%r306, %r378, 4;
	setp.eq.s32	%p137, %r306, 0;
	@%p137 bra 	BB0_131;

	ld.global.u32 	%r307, [additive];
	setp.eq.s32	%p138, %r307, 0;
	cvt.u64.u32	%rd17, %r2;
	cvt.u64.u32	%rd18, %r3;
	// inline asm
	{  cvt.rn.f16.f32 %rs16, %f380;}

	// inline asm
	@%p138 bra 	BB0_130;

	mov.u32 	%r340, 2;
	mov.u64 	%rd99, image_HDR;
	cvta.global.u64 	%rd88, %rd99;
	mov.u32 	%r311, 8;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r340, %r311, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs23, %rs24, %rs25, %rs26}, [%rd87];
	// inline asm
	{  cvt.f32.f16 %f828, %rs23;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f829, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f830, %rs25;}

	// inline asm
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd88, %r340, %r311, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f831, %f164, %f828;
	add.f32 	%f832, %f165, %f829;
	add.f32 	%f833, %f166, %f830;
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f833;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f832;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f831;}

	// inline asm
	st.v4.u16 	[%rd93], {%rs20, %rs21, %rs22, %rs16};
	bra.uni 	BB0_131;

BB0_130:
	mov.u32 	%r341, 2;
	mov.u64 	%rd106, image_HDR;
	cvta.global.u64 	%rd101, %rd106;
	mov.u32 	%r313, 8;
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd101, %r341, %r313, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f166;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f165;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f164;}

	// inline asm
	st.v4.u16 	[%rd100], {%rs27, %rs28, %rs29, %rs16};

BB0_131:
	ld.global.u8 	%rs30, [imageEnabled];
	and.b16  	%rs31, %rs30, 64;
	setp.eq.s16	%p139, %rs31, 0;
	@%p139 bra 	BB0_143;

	mov.u32 	%r342, 2;
	mul.f32 	%f837, %f921, %f921;
	fma.rn.f32 	%f838, %f922, %f922, %f837;
	fma.rn.f32 	%f839, %f920, %f920, %f838;
	sqrt.rn.f32 	%f840, %f839;
	rcp.rn.f32 	%f841, %f840;
	mul.f32 	%f842, %f922, %f841;
	mul.f32 	%f843, %f921, %f841;
	mul.f32 	%f844, %f920, %f841;
	cvt.u64.u32	%rd110, %r3;
	cvt.u64.u32	%rd109, %r2;
	mov.u64 	%rd113, image_Dir;
	cvta.global.u64 	%rd108, %rd113;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r342, %r107, %rd109, %rd110, %rd26, %rd26);
	// inline asm
	fma.rn.f32 	%f845, %f842, 0f3F000000, 0f3F000000;
	mul.f32 	%f846, %f845, 0f437F0000;
	cvt.rzi.u32.f32	%r316, %f846;
	fma.rn.f32 	%f847, %f843, 0f3F000000, 0f3F000000;
	mul.f32 	%f848, %f847, 0f437F0000;
	cvt.rzi.u32.f32	%r317, %f848;
	fma.rn.f32 	%f849, %f844, 0f3F000000, 0f3F000000;
	mul.f32 	%f850, %f849, 0f437F0000;
	cvt.rzi.u32.f32	%r318, %f850;
	cvt.u16.u32	%rs32, %r318;
	cvt.u16.u32	%rs33, %r317;
	cvt.u16.u32	%rs34, %r316;
	mov.u16 	%rs35, 255;
	st.v4.u8 	[%rd107], {%rs34, %rs33, %rs32, %rs35};

BB0_143:
	ret;
}


