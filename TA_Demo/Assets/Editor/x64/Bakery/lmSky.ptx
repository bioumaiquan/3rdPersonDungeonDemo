//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .texref sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<98>;
	.reg .b16 	%rs<42>;
	.reg .f32 	%f<571>;
	.reg .b32 	%r<315>;
	.reg .b64 	%rd<114>;


	mov.u64 	%rd113, __local_depot0;
	cvta.local.u64 	%SP, %rd113;
	ld.global.v2.u32 	{%r100, %r101}, [pixelID];
	cvt.u64.u32	%rd21, %r100;
	cvt.u64.u32	%rd22, %r101;
	mov.u64 	%rd25, uvnormal;
	cvta.global.u64 	%rd20, %rd25;
	mov.u32 	%r98, 2;
	mov.u32 	%r99, 4;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r98, %r99, %rd21, %rd22, %rd24, %rd24);
	// inline asm
	ld.u32 	%r1, [%rd19];
	shr.u32 	%r104, %r1, 16;
	cvt.u16.u32	%rs1, %r104;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r1;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p4, %rs5, 0;
	mov.f32 	%f542, 0f00000000;
	mov.f32 	%f543, %f542;
	mov.f32 	%f544, %f542;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs6, [%rd19+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f112, %rs8;
	div.rn.f32 	%f113, %f112, 0f437F0000;
	fma.rn.f32 	%f114, %f113, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f115, %rs6;
	div.rn.f32 	%f116, %f115, 0f437F0000;
	fma.rn.f32 	%f117, %f116, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f118, %rs3;
	div.rn.f32 	%f119, %f118, 0f437F0000;
	fma.rn.f32 	%f120, %f119, 0f40000000, 0fBF800000;
	mul.f32 	%f121, %f117, %f117;
	fma.rn.f32 	%f122, %f114, %f114, %f121;
	fma.rn.f32 	%f123, %f120, %f120, %f122;
	sqrt.rn.f32 	%f124, %f123;
	rcp.rn.f32 	%f125, %f124;
	mul.f32 	%f542, %f114, %f125;
	mul.f32 	%f543, %f117, %f125;
	mul.f32 	%f544, %f120, %f125;

BB0_2:
	ld.global.v2.u32 	{%r105, %r106}, [pixelID];
	ld.global.v2.u32 	{%r108, %r109}, [tileInfo];
	add.s32 	%r2, %r105, %r108;
	add.s32 	%r3, %r106, %r109;
	setp.eq.f32	%p5, %f543, 0f00000000;
	setp.eq.f32	%p6, %f542, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f544, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_96;
	bra.uni 	BB0_3;

BB0_96:
	ld.global.u32 	%r314, [imageEnabled];
	and.b32  	%r268, %r314, 1;
	setp.eq.b32	%p95, %r268, 1;
	@!%p95 bra 	BB0_98;
	bra.uni 	BB0_97;

BB0_97:
	cvt.u64.u32	%rd81, %r2;
	cvt.u64.u32	%rd82, %r3;
	mov.u64 	%rd85, image;
	cvta.global.u64 	%rd80, %rd85;
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd80, %r98, %r99, %rd81, %rd82, %rd24, %rd24);
	// inline asm
	mov.u16 	%rs28, 0;
	st.v4.u8 	[%rd79], {%rs28, %rs28, %rs28, %rs28};
	ld.global.u32 	%r314, [imageEnabled];

BB0_98:
	and.b32  	%r271, %r314, 4;
	setp.eq.s32	%p96, %r271, 0;
	@%p96 bra 	BB0_102;

	ld.global.u32 	%r272, [additive];
	setp.eq.s32	%p97, %r272, 0;
	cvt.u64.u32	%rd17, %r2;
	cvt.u64.u32	%rd18, %r3;
	@%p97 bra 	BB0_101;

	mov.u64 	%rd98, image_HDR;
	cvta.global.u64 	%rd87, %rd98;
	mov.u32 	%r276, 8;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd87, %r98, %r276, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	ld.v4.u16 	{%rs35, %rs36, %rs37, %rs38}, [%rd86];
	// inline asm
	{  cvt.f32.f16 %f507, %rs35;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f508, %rs36;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f509, %rs37;}

	// inline asm
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd87, %r98, %r276, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	add.f32 	%f510, %f507, 0f00000000;
	add.f32 	%f511, %f508, 0f00000000;
	add.f32 	%f512, %f509, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f512;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f511;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f510;}

	// inline asm
	mov.u16 	%rs39, 0;
	st.v4.u16 	[%rd92], {%rs32, %rs33, %rs34, %rs39};
	bra.uni 	BB0_102;

BB0_3:
	ld.global.v2.u32 	{%r117, %r118}, [pixelID];
	cvt.u64.u32	%rd28, %r117;
	cvt.u64.u32	%rd29, %r118;
	mov.u64 	%rd38, uvpos;
	cvta.global.u64 	%rd27, %rd38;
	mov.u32 	%r114, 12;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r98, %r114, %rd28, %rd29, %rd24, %rd24);
	// inline asm
	ld.f32 	%f127, [%rd26+8];
	ld.f32 	%f128, [%rd26+4];
	ld.f32 	%f129, [%rd26];
	mul.f32 	%f130, %f129, 0f3456BF95;
	mul.f32 	%f131, %f128, 0f3456BF95;
	mul.f32 	%f132, %f127, 0f3456BF95;
	abs.f32 	%f133, %f542;
	div.rn.f32 	%f134, %f130, %f133;
	abs.f32 	%f135, %f543;
	div.rn.f32 	%f136, %f131, %f135;
	abs.f32 	%f137, %f544;
	div.rn.f32 	%f138, %f132, %f137;
	abs.f32 	%f139, %f134;
	abs.f32 	%f140, %f136;
	abs.f32 	%f141, %f138;
	mov.f32 	%f142, 0f38D1B717;
	max.f32 	%f143, %f139, %f142;
	max.f32 	%f144, %f140, %f142;
	max.f32 	%f145, %f141, %f142;
	fma.rn.f32 	%f7, %f542, %f143, %f129;
	fma.rn.f32 	%f8, %f543, %f144, %f128;
	fma.rn.f32 	%f9, %f544, %f145, %f127;
	ld.global.u32 	%r4, [hemispherical];
	setp.gt.f32	%p10, %f133, %f137;
	neg.f32 	%f146, %f543;
	selp.f32	%f147, %f146, 0f00000000, %p10;
	neg.f32 	%f148, %f544;
	selp.f32	%f149, %f542, %f148, %p10;
	selp.f32	%f150, 0f00000000, %f543, %p10;
	mul.f32 	%f151, %f149, %f149;
	fma.rn.f32 	%f152, %f147, %f147, %f151;
	fma.rn.f32 	%f153, %f150, %f150, %f152;
	sqrt.rn.f32 	%f154, %f153;
	rcp.rn.f32 	%f155, %f154;
	mul.f32 	%f10, %f147, %f155;
	mul.f32 	%f11, %f149, %f155;
	mul.f32 	%f12, %f150, %f155;
	ld.global.v2.u32 	{%r121, %r122}, [pixelID];
	cvt.u64.u32	%rd34, %r121;
	cvt.u64.u32	%rd35, %r122;
	mov.u64 	%rd39, rnd_seeds;
	cvta.global.u64 	%rd33, %rd39;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r98, %r99, %rd34, %rd35, %rd24, %rd24);
	// inline asm
	ld.global.u32 	%r309, [samples];
	mov.f32 	%f559, 0f00000000;
	setp.lt.s32	%p11, %r309, 1;
	@%p11 bra 	BB0_57;

	cvt.rn.f32.s32	%f157, %r309;
	rcp.rn.f32 	%f13, %f157;
	ld.u32 	%r311, [%rd32];
	mul.f32 	%f14, %f7, 0f3456BF95;
	mul.f32 	%f15, %f8, 0f3456BF95;
	mul.f32 	%f16, %f9, 0f3456BF95;
	mul.f32 	%f158, %f542, %f11;
	mul.f32 	%f159, %f543, %f10;
	sub.f32 	%f17, %f159, %f158;
	mul.f32 	%f160, %f544, %f10;
	mul.f32 	%f161, %f542, %f12;
	sub.f32 	%f18, %f161, %f160;
	mul.f32 	%f162, %f543, %f12;
	mul.f32 	%f163, %f544, %f11;
	sub.f32 	%f19, %f163, %f162;
	mov.f32 	%f559, 0f00000000;
	mov.u32 	%r284, 0;
	abs.f32 	%f241, %f15;
	abs.f32 	%f242, %f14;
	max.f32 	%f243, %f242, %f241;
	abs.f32 	%f244, %f16;
	max.f32 	%f245, %f243, %f244;

BB0_5:
	setp.lt.s32	%p12, %r309, 1;
	@%p12 bra 	BB0_56;

	cvt.rn.f32.s32	%f21, %r284;
	mov.u32 	%r287, 0;

BB0_7:
	mad.lo.s32 	%r127, %r311, 1664525, 1013904223;
	and.b32  	%r128, %r127, 16777215;
	cvt.rn.f32.u32	%f164, %r128;
	fma.rn.f32 	%f165, %f164, 0f33800000, %f21;
	mul.f32 	%f166, %f13, %f165;
	mad.lo.s32 	%r311, %r127, 1664525, 1013904223;
	and.b32  	%r129, %r311, 16777215;
	cvt.rn.f32.u32	%f167, %r129;
	cvt.rn.f32.s32	%f168, %r287;
	fma.rn.f32 	%f169, %f167, 0f33800000, %f168;
	mul.f32 	%f170, %f13, %f169;
	sqrt.rn.f32 	%f23, %f166;
	mul.f32 	%f553, %f170, 0f40C90FDB;
	abs.f32 	%f25, %f553;
	setp.neu.f32	%p13, %f25, 0f7F800000;
	mov.f32 	%f547, %f553;
	@%p13 bra 	BB0_9;

	mov.f32 	%f171, 0f00000000;
	mul.rn.f32 	%f547, %f553, %f171;

BB0_9:
	mul.f32 	%f172, %f547, 0f3F22F983;
	cvt.rni.s32.f32	%r298, %f172;
	cvt.rn.f32.s32	%f173, %r298;
	neg.f32 	%f174, %f173;
	mov.f32 	%f175, 0f3FC90FDA;
	fma.rn.f32 	%f176, %f174, %f175, %f547;
	mov.f32 	%f177, 0f33A22168;
	fma.rn.f32 	%f178, %f174, %f177, %f176;
	mov.f32 	%f179, 0f27C234C5;
	fma.rn.f32 	%f548, %f174, %f179, %f178;
	abs.f32 	%f180, %f547;
	setp.leu.f32	%p14, %f180, 0f47CE4780;
	@%p14 bra 	BB0_20;

	mov.b32 	 %r15, %f547;
	shr.u32 	%r16, %r15, 23;
	shl.b32 	%r132, %r15, 8;
	or.b32  	%r17, %r132, -2147483648;
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd110, %rd41;
	mov.u32 	%r290, 0;
	mov.u64 	%rd109, __cudart_i2opi_f;
	mov.u32 	%r289, -6;

BB0_11:
	.pragma "nounroll";
	ld.const.u32 	%r135, [%rd109];
	// inline asm
	{
	mad.lo.cc.u32   %r133, %r135, %r17, %r290;
	madc.hi.u32     %r290, %r135, %r17,  0;
	}
	// inline asm
	st.local.u32 	[%rd110], %r133;
	add.s64 	%rd110, %rd110, 4;
	add.s64 	%rd109, %rd109, 4;
	add.s32 	%r289, %r289, 1;
	setp.ne.s32	%p15, %r289, 0;
	@%p15 bra 	BB0_11;

	and.b32  	%r138, %r16, 255;
	add.s32 	%r139, %r138, -128;
	shr.u32 	%r140, %r139, 5;
	and.b32  	%r22, %r15, -2147483648;
	cvta.to.local.u64 	%rd43, %rd41;
	st.local.u32 	[%rd43+24], %r290;
	mov.u32 	%r141, 6;
	sub.s32 	%r142, %r141, %r140;
	mul.wide.s32 	%rd44, %r142, 4;
	add.s64 	%rd8, %rd43, %rd44;
	ld.local.u32 	%r291, [%rd8];
	ld.local.u32 	%r292, [%rd8+-4];
	and.b32  	%r25, %r16, 31;
	setp.eq.s32	%p16, %r25, 0;
	@%p16 bra 	BB0_14;

	mov.u32 	%r143, 32;
	sub.s32 	%r144, %r143, %r25;
	shr.u32 	%r145, %r292, %r144;
	shl.b32 	%r146, %r291, %r25;
	add.s32 	%r291, %r145, %r146;
	ld.local.u32 	%r147, [%rd8+-8];
	shr.u32 	%r148, %r147, %r144;
	shl.b32 	%r149, %r292, %r25;
	add.s32 	%r292, %r148, %r149;

BB0_14:
	shr.u32 	%r150, %r292, 30;
	shl.b32 	%r151, %r291, 2;
	add.s32 	%r293, %r150, %r151;
	shl.b32 	%r31, %r292, 2;
	shr.u32 	%r152, %r293, 31;
	shr.u32 	%r153, %r291, 30;
	add.s32 	%r32, %r152, %r153;
	setp.eq.s32	%p17, %r152, 0;
	@%p17 bra 	BB0_15;
	bra.uni 	BB0_16;

BB0_15:
	mov.u32 	%r294, %r22;
	mov.u32 	%r295, %r31;
	bra.uni 	BB0_17;

BB0_16:
	not.b32 	%r154, %r293;
	neg.s32 	%r295, %r31;
	setp.eq.s32	%p18, %r31, 0;
	selp.u32	%r155, 1, 0, %p18;
	add.s32 	%r293, %r155, %r154;
	xor.b32  	%r294, %r22, -2147483648;

BB0_17:
	clz.b32 	%r297, %r293;
	setp.eq.s32	%p19, %r297, 0;
	shl.b32 	%r156, %r293, %r297;
	mov.u32 	%r157, 32;
	sub.s32 	%r158, %r157, %r297;
	shr.u32 	%r159, %r295, %r158;
	add.s32 	%r160, %r159, %r156;
	selp.b32	%r40, %r293, %r160, %p19;
	mov.u32 	%r161, -921707870;
	mul.hi.u32 	%r296, %r40, %r161;
	setp.eq.s32	%p20, %r22, 0;
	neg.s32 	%r162, %r32;
	selp.b32	%r298, %r32, %r162, %p20;
	setp.lt.s32	%p21, %r296, 1;
	@%p21 bra 	BB0_19;

	mul.lo.s32 	%r163, %r40, -921707870;
	shr.u32 	%r164, %r163, 31;
	shl.b32 	%r165, %r296, 1;
	add.s32 	%r296, %r164, %r165;
	add.s32 	%r297, %r297, 1;

BB0_19:
	mov.u32 	%r166, 126;
	sub.s32 	%r167, %r166, %r297;
	shl.b32 	%r168, %r167, 23;
	add.s32 	%r169, %r296, 1;
	shr.u32 	%r170, %r169, 7;
	add.s32 	%r171, %r170, 1;
	shr.u32 	%r172, %r171, 1;
	add.s32 	%r173, %r172, %r168;
	or.b32  	%r174, %r173, %r294;
	mov.b32 	 %f548, %r174;

BB0_20:
	mul.rn.f32 	%f31, %f548, %f548;
	add.s32 	%r48, %r298, 1;
	and.b32  	%r49, %r48, 1;
	setp.eq.s32	%p22, %r49, 0;
	@%p22 bra 	BB0_22;
	bra.uni 	BB0_21;

BB0_22:
	mov.f32 	%f183, 0f3C08839E;
	mov.f32 	%f184, 0fB94CA1F9;
	fma.rn.f32 	%f549, %f184, %f31, %f183;
	bra.uni 	BB0_23;

BB0_21:
	mov.f32 	%f181, 0fBAB6061A;
	mov.f32 	%f182, 0f37CCF5CE;
	fma.rn.f32 	%f549, %f182, %f31, %f181;

BB0_23:
	@%p22 bra 	BB0_25;
	bra.uni 	BB0_24;

BB0_25:
	mov.f32 	%f188, 0fBE2AAAA3;
	fma.rn.f32 	%f189, %f549, %f31, %f188;
	mov.f32 	%f190, 0f00000000;
	fma.rn.f32 	%f550, %f189, %f31, %f190;
	bra.uni 	BB0_26;

BB0_24:
	mov.f32 	%f185, 0f3D2AAAA5;
	fma.rn.f32 	%f186, %f549, %f31, %f185;
	mov.f32 	%f187, 0fBF000000;
	fma.rn.f32 	%f550, %f186, %f31, %f187;

BB0_26:
	fma.rn.f32 	%f551, %f550, %f548, %f548;
	@%p22 bra 	BB0_28;

	mov.f32 	%f191, 0f3F800000;
	fma.rn.f32 	%f551, %f550, %f31, %f191;

BB0_28:
	and.b32  	%r175, %r48, 2;
	setp.eq.s32	%p25, %r175, 0;
	@%p25 bra 	BB0_30;

	mov.f32 	%f192, 0f00000000;
	mov.f32 	%f193, 0fBF800000;
	fma.rn.f32 	%f551, %f551, %f193, %f192;

BB0_30:
	@%p13 bra 	BB0_32;

	mov.f32 	%f194, 0f00000000;
	mul.rn.f32 	%f553, %f553, %f194;

BB0_32:
	mul.f32 	%f195, %f553, 0f3F22F983;
	cvt.rni.s32.f32	%r308, %f195;
	cvt.rn.f32.s32	%f196, %r308;
	neg.f32 	%f197, %f196;
	fma.rn.f32 	%f199, %f197, %f175, %f553;
	fma.rn.f32 	%f201, %f197, %f177, %f199;
	fma.rn.f32 	%f554, %f197, %f179, %f201;
	abs.f32 	%f203, %f553;
	setp.leu.f32	%p27, %f203, 0f47CE4780;
	@%p27 bra 	BB0_43;

	mov.b32 	 %r51, %f553;
	shr.u32 	%r52, %r51, 23;
	shl.b32 	%r178, %r51, 8;
	or.b32  	%r53, %r178, -2147483648;
	add.u64 	%rd46, %SP, 0;
	cvta.to.local.u64 	%rd112, %rd46;
	mov.u32 	%r300, 0;
	mov.u64 	%rd111, __cudart_i2opi_f;
	mov.u32 	%r299, -6;

BB0_34:
	.pragma "nounroll";
	ld.const.u32 	%r181, [%rd111];
	// inline asm
	{
	mad.lo.cc.u32   %r179, %r181, %r53, %r300;
	madc.hi.u32     %r300, %r181, %r53,  0;
	}
	// inline asm
	st.local.u32 	[%rd112], %r179;
	add.s64 	%rd112, %rd112, 4;
	add.s64 	%rd111, %rd111, 4;
	add.s32 	%r299, %r299, 1;
	setp.ne.s32	%p28, %r299, 0;
	@%p28 bra 	BB0_34;

	and.b32  	%r184, %r52, 255;
	add.s32 	%r185, %r184, -128;
	shr.u32 	%r186, %r185, 5;
	and.b32  	%r58, %r51, -2147483648;
	cvta.to.local.u64 	%rd48, %rd46;
	st.local.u32 	[%rd48+24], %r300;
	mov.u32 	%r187, 6;
	sub.s32 	%r188, %r187, %r186;
	mul.wide.s32 	%rd49, %r188, 4;
	add.s64 	%rd14, %rd48, %rd49;
	ld.local.u32 	%r301, [%rd14];
	ld.local.u32 	%r302, [%rd14+-4];
	and.b32  	%r61, %r52, 31;
	setp.eq.s32	%p29, %r61, 0;
	@%p29 bra 	BB0_37;

	mov.u32 	%r189, 32;
	sub.s32 	%r190, %r189, %r61;
	shr.u32 	%r191, %r302, %r190;
	shl.b32 	%r192, %r301, %r61;
	add.s32 	%r301, %r191, %r192;
	ld.local.u32 	%r193, [%rd14+-8];
	shr.u32 	%r194, %r193, %r190;
	shl.b32 	%r195, %r302, %r61;
	add.s32 	%r302, %r194, %r195;

BB0_37:
	shr.u32 	%r196, %r302, 30;
	shl.b32 	%r197, %r301, 2;
	add.s32 	%r303, %r196, %r197;
	shl.b32 	%r67, %r302, 2;
	shr.u32 	%r198, %r303, 31;
	shr.u32 	%r199, %r301, 30;
	add.s32 	%r68, %r198, %r199;
	setp.eq.s32	%p30, %r198, 0;
	@%p30 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.u32 	%r304, %r58;
	mov.u32 	%r305, %r67;
	bra.uni 	BB0_40;

BB0_39:
	not.b32 	%r200, %r303;
	neg.s32 	%r305, %r67;
	setp.eq.s32	%p31, %r67, 0;
	selp.u32	%r201, 1, 0, %p31;
	add.s32 	%r303, %r201, %r200;
	xor.b32  	%r304, %r58, -2147483648;

BB0_40:
	clz.b32 	%r307, %r303;
	setp.eq.s32	%p32, %r307, 0;
	shl.b32 	%r202, %r303, %r307;
	mov.u32 	%r203, 32;
	sub.s32 	%r204, %r203, %r307;
	shr.u32 	%r205, %r305, %r204;
	add.s32 	%r206, %r205, %r202;
	selp.b32	%r76, %r303, %r206, %p32;
	mov.u32 	%r207, -921707870;
	mul.hi.u32 	%r306, %r76, %r207;
	setp.eq.s32	%p33, %r58, 0;
	neg.s32 	%r208, %r68;
	selp.b32	%r308, %r68, %r208, %p33;
	setp.lt.s32	%p34, %r306, 1;
	@%p34 bra 	BB0_42;

	mul.lo.s32 	%r209, %r76, -921707870;
	shr.u32 	%r210, %r209, 31;
	shl.b32 	%r211, %r306, 1;
	add.s32 	%r306, %r210, %r211;
	add.s32 	%r307, %r307, 1;

BB0_42:
	mov.u32 	%r212, 126;
	sub.s32 	%r213, %r212, %r307;
	shl.b32 	%r214, %r213, 23;
	add.s32 	%r215, %r306, 1;
	shr.u32 	%r216, %r215, 7;
	add.s32 	%r217, %r216, 1;
	shr.u32 	%r218, %r217, 1;
	add.s32 	%r219, %r218, %r214;
	or.b32  	%r220, %r219, %r304;
	mov.b32 	 %f554, %r220;

BB0_43:
	mul.rn.f32 	%f48, %f554, %f554;
	and.b32  	%r84, %r308, 1;
	setp.eq.s32	%p35, %r84, 0;
	@%p35 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f206, 0f3C08839E;
	mov.f32 	%f207, 0fB94CA1F9;
	fma.rn.f32 	%f555, %f207, %f48, %f206;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f204, 0fBAB6061A;
	mov.f32 	%f205, 0f37CCF5CE;
	fma.rn.f32 	%f555, %f205, %f48, %f204;

BB0_46:
	@%p35 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	mov.f32 	%f211, 0fBE2AAAA3;
	fma.rn.f32 	%f212, %f555, %f48, %f211;
	mov.f32 	%f213, 0f00000000;
	fma.rn.f32 	%f556, %f212, %f48, %f213;
	bra.uni 	BB0_49;

BB0_47:
	mov.f32 	%f208, 0f3D2AAAA5;
	fma.rn.f32 	%f209, %f555, %f48, %f208;
	mov.f32 	%f210, 0fBF000000;
	fma.rn.f32 	%f556, %f209, %f48, %f210;

BB0_49:
	fma.rn.f32 	%f557, %f556, %f554, %f554;
	@%p35 bra 	BB0_51;

	mov.f32 	%f214, 0f3F800000;
	fma.rn.f32 	%f557, %f556, %f48, %f214;

BB0_51:
	and.b32  	%r221, %r308, 2;
	setp.eq.s32	%p38, %r221, 0;
	@%p38 bra 	BB0_53;

	mov.f32 	%f215, 0f00000000;
	mov.f32 	%f216, 0fBF800000;
	fma.rn.f32 	%f557, %f557, %f216, %f215;

BB0_53:
	mul.f32 	%f217, %f23, %f551;
	mul.f32 	%f218, %f217, %f217;
	mov.f32 	%f219, 0f3F800000;
	sub.f32 	%f220, %f219, %f218;
	mul.f32 	%f221, %f23, %f557;
	mul.f32 	%f222, %f221, %f221;
	sub.f32 	%f223, %f220, %f222;
	mov.f32 	%f224, 0f00000000;
	max.f32 	%f225, %f224, %f223;
	sqrt.rn.f32 	%f226, %f225;
	mul.f32 	%f227, %f10, %f221;
	mul.f32 	%f228, %f11, %f221;
	mul.f32 	%f229, %f12, %f221;
	fma.rn.f32 	%f230, %f19, %f217, %f227;
	fma.rn.f32 	%f231, %f18, %f217, %f228;
	fma.rn.f32 	%f232, %f17, %f217, %f229;
	fma.rn.f32 	%f60, %f542, %f226, %f230;
	fma.rn.f32 	%f61, %f543, %f226, %f231;
	fma.rn.f32 	%f62, %f544, %f226, %f232;
	setp.gt.f32	%p39, %f61, 0f00000000;
	setp.eq.s32	%p40, %r4, 0;
	or.pred  	%p41, %p40, %p39;
	@!%p41 bra 	BB0_55;
	bra.uni 	BB0_54;

BB0_54:
	add.u64 	%rd50, %SP, 28;
	cvta.to.local.u64 	%rd51, %rd50;
	max.f32 	%f239, %f245, %f142;
	mov.u32 	%r225, 1065353216;
	st.local.u32 	[%rd51], %r225;
	ld.global.u32 	%r222, [root];
	mov.u32 	%r223, 1;
	mov.f32 	%f240, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r222, %f7, %f8, %f9, %f60, %f61, %f62, %r223, %f239, %f240, %rd50, %r99);
	// inline asm
	ld.local.f32 	%f247, [%rd51];
	add.f32 	%f559, %f559, %f247;
	ld.global.u32 	%r309, [samples];

BB0_55:
	add.s32 	%r287, %r287, 1;
	setp.lt.s32	%p42, %r287, %r309;
	@%p42 bra 	BB0_7;

BB0_56:
	add.s32 	%r284, %r284, 1;
	setp.lt.s32	%p43, %r284, %r309;
	@%p43 bra 	BB0_5;

BB0_57:
	mul.lo.s32 	%r226, %r309, %r309;
	cvt.rn.f32.s32	%f248, %r226;
	div.rn.f32 	%f249, %f559, %f248;
	ld.global.f32 	%f250, [skyColor];
	mul.f32 	%f67, %f249, %f250;
	ld.global.f32 	%f251, [skyColor+4];
	mul.f32 	%f68, %f249, %f251;
	ld.global.f32 	%f252, [skyColor+8];
	mul.f32 	%f69, %f249, %f252;
	ld.global.u32 	%r313, [imageEnabled];
	and.b32  	%r227, %r313, 1;
	setp.eq.b32	%p44, %r227, 1;
	@!%p44 bra 	BB0_92;
	bra.uni 	BB0_58;

BB0_58:
	mov.f32 	%f255, 0f3E666666;
	cvt.rzi.f32.f32	%f256, %f255;
	fma.rn.f32 	%f257, %f256, 0fC0000000, 0f3EE66666;
	abs.f32 	%f70, %f257;
	abs.f32 	%f71, %f67;
	setp.lt.f32	%p45, %f71, 0f00800000;
	mul.f32 	%f258, %f71, 0f4B800000;
	selp.f32	%f259, 0fC3170000, 0fC2FE0000, %p45;
	selp.f32	%f260, %f258, %f71, %p45;
	mov.b32 	 %r228, %f260;
	and.b32  	%r229, %r228, 8388607;
	or.b32  	%r230, %r229, 1065353216;
	mov.b32 	 %f261, %r230;
	shr.u32 	%r231, %r228, 23;
	cvt.rn.f32.u32	%f262, %r231;
	add.f32 	%f263, %f259, %f262;
	setp.gt.f32	%p46, %f261, 0f3FB504F3;
	mul.f32 	%f264, %f261, 0f3F000000;
	add.f32 	%f265, %f263, 0f3F800000;
	selp.f32	%f266, %f264, %f261, %p46;
	selp.f32	%f267, %f265, %f263, %p46;
	add.f32 	%f268, %f266, 0fBF800000;
	add.f32 	%f254, %f266, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f253,%f254;
	// inline asm
	add.f32 	%f269, %f268, %f268;
	mul.f32 	%f270, %f253, %f269;
	mul.f32 	%f271, %f270, %f270;
	mov.f32 	%f272, 0f3C4CAF63;
	mov.f32 	%f273, 0f3B18F0FE;
	fma.rn.f32 	%f274, %f273, %f271, %f272;
	mov.f32 	%f275, 0f3DAAAABD;
	fma.rn.f32 	%f276, %f274, %f271, %f275;
	mul.rn.f32 	%f277, %f276, %f271;
	mul.rn.f32 	%f278, %f277, %f270;
	sub.f32 	%f279, %f268, %f270;
	neg.f32 	%f280, %f270;
	add.f32 	%f281, %f279, %f279;
	fma.rn.f32 	%f282, %f280, %f268, %f281;
	mul.rn.f32 	%f283, %f253, %f282;
	add.f32 	%f284, %f278, %f270;
	sub.f32 	%f285, %f270, %f284;
	add.f32 	%f286, %f278, %f285;
	add.f32 	%f287, %f283, %f286;
	add.f32 	%f288, %f284, %f287;
	sub.f32 	%f289, %f284, %f288;
	add.f32 	%f290, %f287, %f289;
	mov.f32 	%f291, 0f3F317200;
	mul.rn.f32 	%f292, %f267, %f291;
	mov.f32 	%f293, 0f35BFBE8E;
	mul.rn.f32 	%f294, %f267, %f293;
	add.f32 	%f295, %f292, %f288;
	sub.f32 	%f296, %f292, %f295;
	add.f32 	%f297, %f288, %f296;
	add.f32 	%f298, %f290, %f297;
	add.f32 	%f299, %f294, %f298;
	add.f32 	%f300, %f295, %f299;
	sub.f32 	%f301, %f295, %f300;
	add.f32 	%f302, %f299, %f301;
	mov.f32 	%f303, 0f3EE66666;
	mul.rn.f32 	%f304, %f303, %f300;
	neg.f32 	%f305, %f304;
	fma.rn.f32 	%f306, %f303, %f300, %f305;
	fma.rn.f32 	%f307, %f303, %f302, %f306;
	mov.f32 	%f308, 0f00000000;
	fma.rn.f32 	%f309, %f308, %f300, %f307;
	add.rn.f32 	%f310, %f304, %f309;
	neg.f32 	%f311, %f310;
	add.rn.f32 	%f312, %f304, %f311;
	add.rn.f32 	%f313, %f312, %f309;
	mov.b32 	 %r232, %f310;
	setp.eq.s32	%p47, %r232, 1118925336;
	add.s32 	%r233, %r232, -1;
	mov.b32 	 %f314, %r233;
	add.f32 	%f315, %f313, 0f37000000;
	selp.f32	%f316, %f314, %f310, %p47;
	selp.f32	%f72, %f315, %f313, %p47;
	mul.f32 	%f317, %f316, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f318, %f317;
	mov.f32 	%f319, 0fBF317200;
	fma.rn.f32 	%f320, %f318, %f319, %f316;
	mov.f32 	%f321, 0fB5BFBE8E;
	fma.rn.f32 	%f322, %f318, %f321, %f320;
	mul.f32 	%f323, %f322, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f324, %f323;
	add.f32 	%f325, %f318, 0f00000000;
	ex2.approx.f32 	%f326, %f325;
	mul.f32 	%f327, %f324, %f326;
	setp.lt.f32	%p48, %f316, 0fC2D20000;
	selp.f32	%f328, 0f00000000, %f327, %p48;
	setp.gt.f32	%p49, %f316, 0f42D20000;
	selp.f32	%f562, 0f7F800000, %f328, %p49;
	setp.eq.f32	%p50, %f562, 0f7F800000;
	@%p50 bra 	BB0_60;

	fma.rn.f32 	%f562, %f562, %f72, %f562;

BB0_60:
	setp.lt.f32	%p51, %f67, 0f00000000;
	setp.eq.f32	%p52, %f70, 0f3F800000;
	and.pred  	%p1, %p51, %p52;
	mov.b32 	 %r234, %f562;
	xor.b32  	%r235, %r234, -2147483648;
	mov.b32 	 %f329, %r235;
	selp.f32	%f564, %f329, %f562, %p1;
	setp.eq.f32	%p53, %f67, 0f00000000;
	@%p53 bra 	BB0_63;
	bra.uni 	BB0_61;

BB0_63:
	add.f32 	%f332, %f67, %f67;
	selp.f32	%f564, %f332, 0f00000000, %p52;
	bra.uni 	BB0_64;

BB0_101:
	mov.u64 	%rd105, image_HDR;
	cvta.global.u64 	%rd100, %rd105;
	mov.u32 	%r278, 8;
	// inline asm
	call (%rd99), _rt_buffer_get_64, (%rd100, %r98, %r278, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	mov.f32 	%f513, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f513;}

	// inline asm
	mov.u16 	%rs41, 0;
	st.v4.u16 	[%rd99], {%rs40, %rs40, %rs40, %rs41};
	bra.uni 	BB0_102;

BB0_61:
	setp.geu.f32	%p54, %f67, 0f00000000;
	@%p54 bra 	BB0_64;

	cvt.rzi.f32.f32	%f331, %f303;
	setp.neu.f32	%p55, %f331, 0f3EE66666;
	selp.f32	%f564, 0f7FFFFFFF, %f564, %p55;

BB0_64:
	abs.f32 	%f514, %f67;
	add.f32 	%f333, %f514, 0f3EE66666;
	mov.b32 	 %r236, %f333;
	setp.lt.s32	%p57, %r236, 2139095040;
	@%p57 bra 	BB0_69;

	abs.f32 	%f531, %f67;
	setp.gtu.f32	%p58, %f531, 0f7F800000;
	@%p58 bra 	BB0_68;
	bra.uni 	BB0_66;

BB0_68:
	add.f32 	%f564, %f67, 0f3EE66666;
	bra.uni 	BB0_69;

BB0_66:
	abs.f32 	%f532, %f67;
	setp.neu.f32	%p59, %f532, 0f7F800000;
	@%p59 bra 	BB0_69;

	selp.f32	%f564, 0fFF800000, 0f7F800000, %p1;

BB0_69:
	mov.f32 	%f522, 0fB5BFBE8E;
	mov.f32 	%f521, 0fBF317200;
	mov.f32 	%f520, 0f00000000;
	mov.f32 	%f519, 0f35BFBE8E;
	mov.f32 	%f518, 0f3F317200;
	mov.f32 	%f517, 0f3DAAAABD;
	mov.f32 	%f516, 0f3C4CAF63;
	mov.f32 	%f515, 0f3B18F0FE;
	setp.eq.f32	%p60, %f67, 0f3F800000;
	selp.f32	%f83, 0f3F800000, %f564, %p60;
	abs.f32 	%f84, %f68;
	setp.lt.f32	%p61, %f84, 0f00800000;
	mul.f32 	%f336, %f84, 0f4B800000;
	selp.f32	%f337, 0fC3170000, 0fC2FE0000, %p61;
	selp.f32	%f338, %f336, %f84, %p61;
	mov.b32 	 %r237, %f338;
	and.b32  	%r238, %r237, 8388607;
	or.b32  	%r239, %r238, 1065353216;
	mov.b32 	 %f339, %r239;
	shr.u32 	%r240, %r237, 23;
	cvt.rn.f32.u32	%f340, %r240;
	add.f32 	%f341, %f337, %f340;
	setp.gt.f32	%p62, %f339, 0f3FB504F3;
	mul.f32 	%f342, %f339, 0f3F000000;
	add.f32 	%f343, %f341, 0f3F800000;
	selp.f32	%f344, %f342, %f339, %p62;
	selp.f32	%f345, %f343, %f341, %p62;
	add.f32 	%f346, %f344, 0fBF800000;
	add.f32 	%f335, %f344, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f334,%f335;
	// inline asm
	add.f32 	%f347, %f346, %f346;
	mul.f32 	%f348, %f334, %f347;
	mul.f32 	%f349, %f348, %f348;
	fma.rn.f32 	%f352, %f515, %f349, %f516;
	fma.rn.f32 	%f354, %f352, %f349, %f517;
	mul.rn.f32 	%f355, %f354, %f349;
	mul.rn.f32 	%f356, %f355, %f348;
	sub.f32 	%f357, %f346, %f348;
	neg.f32 	%f358, %f348;
	add.f32 	%f359, %f357, %f357;
	fma.rn.f32 	%f360, %f358, %f346, %f359;
	mul.rn.f32 	%f361, %f334, %f360;
	add.f32 	%f362, %f356, %f348;
	sub.f32 	%f363, %f348, %f362;
	add.f32 	%f364, %f356, %f363;
	add.f32 	%f365, %f361, %f364;
	add.f32 	%f366, %f362, %f365;
	sub.f32 	%f367, %f362, %f366;
	add.f32 	%f368, %f365, %f367;
	mul.rn.f32 	%f370, %f345, %f518;
	mul.rn.f32 	%f372, %f345, %f519;
	add.f32 	%f373, %f370, %f366;
	sub.f32 	%f374, %f370, %f373;
	add.f32 	%f375, %f366, %f374;
	add.f32 	%f376, %f368, %f375;
	add.f32 	%f377, %f372, %f376;
	add.f32 	%f378, %f373, %f377;
	sub.f32 	%f379, %f373, %f378;
	add.f32 	%f380, %f377, %f379;
	mul.rn.f32 	%f382, %f303, %f378;
	neg.f32 	%f383, %f382;
	fma.rn.f32 	%f384, %f303, %f378, %f383;
	fma.rn.f32 	%f385, %f303, %f380, %f384;
	fma.rn.f32 	%f387, %f520, %f378, %f385;
	add.rn.f32 	%f388, %f382, %f387;
	neg.f32 	%f389, %f388;
	add.rn.f32 	%f390, %f382, %f389;
	add.rn.f32 	%f391, %f390, %f387;
	mov.b32 	 %r241, %f388;
	setp.eq.s32	%p63, %r241, 1118925336;
	add.s32 	%r242, %r241, -1;
	mov.b32 	 %f392, %r242;
	add.f32 	%f393, %f391, 0f37000000;
	selp.f32	%f394, %f392, %f388, %p63;
	selp.f32	%f85, %f393, %f391, %p63;
	mul.f32 	%f395, %f394, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f396, %f395;
	fma.rn.f32 	%f398, %f396, %f521, %f394;
	fma.rn.f32 	%f400, %f396, %f522, %f398;
	mul.f32 	%f401, %f400, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f402, %f401;
	add.f32 	%f403, %f396, 0f00000000;
	ex2.approx.f32 	%f404, %f403;
	mul.f32 	%f405, %f402, %f404;
	setp.lt.f32	%p64, %f394, 0fC2D20000;
	selp.f32	%f406, 0f00000000, %f405, %p64;
	setp.gt.f32	%p65, %f394, 0f42D20000;
	selp.f32	%f565, 0f7F800000, %f406, %p65;
	setp.eq.f32	%p66, %f565, 0f7F800000;
	@%p66 bra 	BB0_71;

	fma.rn.f32 	%f565, %f565, %f85, %f565;

BB0_71:
	setp.lt.f32	%p67, %f68, 0f00000000;
	and.pred  	%p2, %p67, %p52;
	mov.b32 	 %r243, %f565;
	xor.b32  	%r244, %r243, -2147483648;
	mov.b32 	 %f407, %r244;
	selp.f32	%f567, %f407, %f565, %p2;
	setp.eq.f32	%p69, %f68, 0f00000000;
	@%p69 bra 	BB0_74;
	bra.uni 	BB0_72;

BB0_74:
	add.f32 	%f410, %f68, %f68;
	selp.f32	%f567, %f410, 0f00000000, %p52;
	bra.uni 	BB0_75;

BB0_72:
	setp.geu.f32	%p70, %f68, 0f00000000;
	@%p70 bra 	BB0_75;

	mov.f32 	%f538, 0f3EE66666;
	cvt.rzi.f32.f32	%f409, %f538;
	setp.neu.f32	%p71, %f409, 0f3EE66666;
	selp.f32	%f567, 0f7FFFFFFF, %f567, %p71;

BB0_75:
	abs.f32 	%f533, %f68;
	add.f32 	%f411, %f533, 0f3EE66666;
	mov.b32 	 %r245, %f411;
	setp.lt.s32	%p73, %r245, 2139095040;
	@%p73 bra 	BB0_80;

	abs.f32 	%f536, %f68;
	setp.gtu.f32	%p74, %f536, 0f7F800000;
	@%p74 bra 	BB0_79;
	bra.uni 	BB0_77;

BB0_79:
	add.f32 	%f567, %f68, 0f3EE66666;
	bra.uni 	BB0_80;

BB0_77:
	abs.f32 	%f537, %f68;
	setp.neu.f32	%p75, %f537, 0f7F800000;
	@%p75 bra 	BB0_80;

	selp.f32	%f567, 0fFF800000, 0f7F800000, %p2;

BB0_80:
	mov.f32 	%f534, 0f3EE66666;
	mov.f32 	%f530, 0fB5BFBE8E;
	mov.f32 	%f529, 0fBF317200;
	mov.f32 	%f528, 0f00000000;
	mov.f32 	%f527, 0f35BFBE8E;
	mov.f32 	%f526, 0f3F317200;
	mov.f32 	%f525, 0f3DAAAABD;
	mov.f32 	%f524, 0f3C4CAF63;
	mov.f32 	%f523, 0f3B18F0FE;
	setp.eq.f32	%p76, %f68, 0f3F800000;
	selp.f32	%f96, 0f3F800000, %f567, %p76;
	abs.f32 	%f97, %f69;
	setp.lt.f32	%p77, %f97, 0f00800000;
	mul.f32 	%f414, %f97, 0f4B800000;
	selp.f32	%f415, 0fC3170000, 0fC2FE0000, %p77;
	selp.f32	%f416, %f414, %f97, %p77;
	mov.b32 	 %r246, %f416;
	and.b32  	%r247, %r246, 8388607;
	or.b32  	%r248, %r247, 1065353216;
	mov.b32 	 %f417, %r248;
	shr.u32 	%r249, %r246, 23;
	cvt.rn.f32.u32	%f418, %r249;
	add.f32 	%f419, %f415, %f418;
	setp.gt.f32	%p78, %f417, 0f3FB504F3;
	mul.f32 	%f420, %f417, 0f3F000000;
	add.f32 	%f421, %f419, 0f3F800000;
	selp.f32	%f422, %f420, %f417, %p78;
	selp.f32	%f423, %f421, %f419, %p78;
	add.f32 	%f424, %f422, 0fBF800000;
	add.f32 	%f413, %f422, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f412,%f413;
	// inline asm
	add.f32 	%f425, %f424, %f424;
	mul.f32 	%f426, %f412, %f425;
	mul.f32 	%f427, %f426, %f426;
	fma.rn.f32 	%f430, %f523, %f427, %f524;
	fma.rn.f32 	%f432, %f430, %f427, %f525;
	mul.rn.f32 	%f433, %f432, %f427;
	mul.rn.f32 	%f434, %f433, %f426;
	sub.f32 	%f435, %f424, %f426;
	neg.f32 	%f436, %f426;
	add.f32 	%f437, %f435, %f435;
	fma.rn.f32 	%f438, %f436, %f424, %f437;
	mul.rn.f32 	%f439, %f412, %f438;
	add.f32 	%f440, %f434, %f426;
	sub.f32 	%f441, %f426, %f440;
	add.f32 	%f442, %f434, %f441;
	add.f32 	%f443, %f439, %f442;
	add.f32 	%f444, %f440, %f443;
	sub.f32 	%f445, %f440, %f444;
	add.f32 	%f446, %f443, %f445;
	mul.rn.f32 	%f448, %f423, %f526;
	mul.rn.f32 	%f450, %f423, %f527;
	add.f32 	%f451, %f448, %f444;
	sub.f32 	%f452, %f448, %f451;
	add.f32 	%f453, %f444, %f452;
	add.f32 	%f454, %f446, %f453;
	add.f32 	%f455, %f450, %f454;
	add.f32 	%f456, %f451, %f455;
	sub.f32 	%f457, %f451, %f456;
	add.f32 	%f458, %f455, %f457;
	mul.rn.f32 	%f460, %f534, %f456;
	neg.f32 	%f461, %f460;
	fma.rn.f32 	%f462, %f534, %f456, %f461;
	fma.rn.f32 	%f463, %f534, %f458, %f462;
	fma.rn.f32 	%f465, %f528, %f456, %f463;
	add.rn.f32 	%f466, %f460, %f465;
	neg.f32 	%f467, %f466;
	add.rn.f32 	%f468, %f460, %f467;
	add.rn.f32 	%f469, %f468, %f465;
	mov.b32 	 %r250, %f466;
	setp.eq.s32	%p79, %r250, 1118925336;
	add.s32 	%r251, %r250, -1;
	mov.b32 	 %f470, %r251;
	add.f32 	%f471, %f469, 0f37000000;
	selp.f32	%f472, %f470, %f466, %p79;
	selp.f32	%f98, %f471, %f469, %p79;
	mul.f32 	%f473, %f472, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f474, %f473;
	fma.rn.f32 	%f476, %f474, %f529, %f472;
	fma.rn.f32 	%f478, %f474, %f530, %f476;
	mul.f32 	%f479, %f478, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f480, %f479;
	add.f32 	%f481, %f474, 0f00000000;
	ex2.approx.f32 	%f482, %f481;
	mul.f32 	%f483, %f480, %f482;
	setp.lt.f32	%p80, %f472, 0fC2D20000;
	selp.f32	%f484, 0f00000000, %f483, %p80;
	setp.gt.f32	%p81, %f472, 0f42D20000;
	selp.f32	%f568, 0f7F800000, %f484, %p81;
	setp.eq.f32	%p82, %f568, 0f7F800000;
	@%p82 bra 	BB0_82;

	fma.rn.f32 	%f568, %f568, %f98, %f568;

BB0_82:
	setp.lt.f32	%p83, %f69, 0f00000000;
	and.pred  	%p3, %p83, %p52;
	mov.b32 	 %r252, %f568;
	xor.b32  	%r253, %r252, -2147483648;
	mov.b32 	 %f485, %r253;
	selp.f32	%f570, %f485, %f568, %p3;
	setp.eq.f32	%p85, %f69, 0f00000000;
	@%p85 bra 	BB0_85;
	bra.uni 	BB0_83;

BB0_85:
	add.f32 	%f488, %f69, %f69;
	selp.f32	%f570, %f488, 0f00000000, %p52;
	bra.uni 	BB0_86;

BB0_83:
	setp.geu.f32	%p86, %f69, 0f00000000;
	@%p86 bra 	BB0_86;

	mov.f32 	%f535, 0f3EE66666;
	cvt.rzi.f32.f32	%f487, %f535;
	setp.neu.f32	%p87, %f487, 0f3EE66666;
	selp.f32	%f570, 0f7FFFFFFF, %f570, %p87;

BB0_86:
	abs.f32 	%f539, %f69;
	add.f32 	%f489, %f539, 0f3EE66666;
	mov.b32 	 %r254, %f489;
	setp.lt.s32	%p89, %r254, 2139095040;
	@%p89 bra 	BB0_91;

	abs.f32 	%f540, %f69;
	setp.gtu.f32	%p90, %f540, 0f7F800000;
	@%p90 bra 	BB0_90;
	bra.uni 	BB0_88;

BB0_90:
	add.f32 	%f570, %f69, 0f3EE66666;
	bra.uni 	BB0_91;

BB0_88:
	abs.f32 	%f541, %f69;
	setp.neu.f32	%p91, %f541, 0f7F800000;
	@%p91 bra 	BB0_91;

	selp.f32	%f570, 0fFF800000, 0f7F800000, %p3;

BB0_91:
	mov.u32 	%r280, 4;
	mov.u64 	%rd106, 0;
	mov.u32 	%r279, 2;
	setp.eq.f32	%p92, %f69, 0f3F800000;
	selp.f32	%f490, 0f3F800000, %f570, %p92;
	cvt.u64.u32	%rd55, %r3;
	cvt.u64.u32	%rd54, %r2;
	mov.u64 	%rd58, image;
	cvta.global.u64 	%rd53, %rd58;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd53, %r279, %r280, %rd54, %rd55, %rd106, %rd106);
	// inline asm
	cvt.sat.f32.f32	%f491, %f490;
	mul.f32 	%f492, %f491, 0f437FFD71;
	cvt.rzi.u32.f32	%r257, %f492;
	cvt.sat.f32.f32	%f493, %f96;
	mul.f32 	%f494, %f493, 0f437FFD71;
	cvt.rzi.u32.f32	%r258, %f494;
	cvt.sat.f32.f32	%f495, %f83;
	mul.f32 	%f496, %f495, 0f437FFD71;
	cvt.rzi.u32.f32	%r259, %f496;
	cvt.u16.u32	%rs10, %r257;
	cvt.u16.u32	%rs11, %r259;
	cvt.u16.u32	%rs12, %r258;
	mov.u16 	%rs13, 255;
	st.v4.u8 	[%rd52], {%rs10, %rs12, %rs11, %rs13};
	ld.global.u32 	%r313, [imageEnabled];

BB0_92:
	and.b32  	%r260, %r313, 4;
	setp.eq.s32	%p93, %r260, 0;
	@%p93 bra 	BB0_102;

	ld.global.u32 	%r261, [additive];
	setp.eq.s32	%p94, %r261, 0;
	cvt.u64.u32	%rd15, %r2;
	cvt.u64.u32	%rd16, %r3;
	mov.f32 	%f497, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs14, %f497;}

	// inline asm
	@%p94 bra 	BB0_95;

	mov.u64 	%rd107, 0;
	mov.u32 	%r281, 2;
	mov.u64 	%rd71, image_HDR;
	cvta.global.u64 	%rd60, %rd71;
	mov.u32 	%r265, 8;
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd60, %r281, %r265, %rd15, %rd16, %rd107, %rd107);
	// inline asm
	ld.v4.u16 	{%rs21, %rs22, %rs23, %rs24}, [%rd59];
	// inline asm
	{  cvt.f32.f16 %f498, %rs21;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f499, %rs22;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f500, %rs23;}

	// inline asm
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd60, %r281, %r265, %rd15, %rd16, %rd107, %rd107);
	// inline asm
	add.f32 	%f501, %f67, %f498;
	add.f32 	%f502, %f68, %f499;
	add.f32 	%f503, %f69, %f500;
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f503;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f502;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs18, %f501;}

	// inline asm
	st.v4.u16 	[%rd65], {%rs18, %rs19, %rs20, %rs14};
	bra.uni 	BB0_102;

BB0_95:
	mov.u64 	%rd108, 0;
	mov.u32 	%r282, 2;
	mov.u64 	%rd78, image_HDR;
	cvta.global.u64 	%rd73, %rd78;
	mov.u32 	%r267, 8;
	// inline asm
	call (%rd72), _rt_buffer_get_64, (%rd73, %r282, %r267, %rd15, %rd16, %rd108, %rd108);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f69;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f68;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f67;}

	// inline asm
	st.v4.u16 	[%rd72], {%rs25, %rs26, %rs27, %rs14};

BB0_102:
	ret;
}


