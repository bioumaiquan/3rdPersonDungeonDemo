//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[44];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<143>;
	.reg .b16 	%rs<46>;
	.reg .f32 	%f<912>;
	.reg .b32 	%r<377>;
	.reg .b64 	%rd<157>;


	mov.u64 	%rd156, __local_depot0;
	cvta.local.u64 	%SP, %rd156;
	ld.global.v2.u32 	{%r108, %r109}, [pixelID];
	cvt.u64.u32	%rd23, %r108;
	cvt.u64.u32	%rd24, %r109;
	mov.u64 	%rd27, uvnormal;
	cvta.global.u64 	%rd22, %rd27;
	mov.u32 	%r106, 2;
	mov.u32 	%r107, 4;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r106, %r107, %rd23, %rd24, %rd26, %rd26);
	// inline asm
	ld.u32 	%r1, [%rd21];
	shr.u32 	%r112, %r1, 16;
	cvt.u16.u32	%rs1, %r112;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r1;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p7, %rs5, 0;
	mov.f32 	%f850, 0f00000000;
	mov.f32 	%f851, %f850;
	mov.f32 	%f852, %f850;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs6, [%rd21+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f196, %rs8;
	div.rn.f32 	%f197, %f196, 0f437F0000;
	fma.rn.f32 	%f198, %f197, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f199, %rs6;
	div.rn.f32 	%f200, %f199, 0f437F0000;
	fma.rn.f32 	%f201, %f200, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f202, %rs3;
	div.rn.f32 	%f203, %f202, 0f437F0000;
	fma.rn.f32 	%f204, %f203, 0f40000000, 0fBF800000;
	mul.f32 	%f205, %f201, %f201;
	fma.rn.f32 	%f206, %f198, %f198, %f205;
	fma.rn.f32 	%f207, %f204, %f204, %f206;
	sqrt.rn.f32 	%f208, %f207;
	rcp.rn.f32 	%f209, %f208;
	mul.f32 	%f850, %f198, %f209;
	mul.f32 	%f851, %f201, %f209;
	mul.f32 	%f852, %f204, %f209;

BB0_2:
	ld.global.v2.u32 	{%r113, %r114}, [pixelID];
	ld.global.v2.u32 	{%r116, %r117}, [tileInfo];
	add.s32 	%r2, %r113, %r116;
	add.s32 	%r3, %r114, %r117;
	setp.eq.f32	%p8, %f851, 0f00000000;
	setp.eq.f32	%p9, %f850, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f852, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_131;
	bra.uni 	BB0_3;

BB0_131:
	ld.global.u32 	%r376, [imageEnabled];
	and.b32  	%r317, %r376, 1;
	setp.eq.b32	%p138, %r317, 1;
	@!%p138 bra 	BB0_133;
	bra.uni 	BB0_132;

BB0_132:
	cvt.u64.u32	%rd116, %r2;
	cvt.u64.u32	%rd117, %r3;
	mov.u64 	%rd120, image;
	cvta.global.u64 	%rd115, %rd120;
	mov.u64 	%rd119, 0;
	// inline asm
	call (%rd114), _rt_buffer_get_64, (%rd115, %r106, %r107, %rd116, %rd117, %rd119, %rd119);
	// inline asm
	mov.u16 	%rs30, 0;
	st.v4.u8 	[%rd114], {%rs30, %rs30, %rs30, %rs30};
	ld.global.u32 	%r376, [imageEnabled];

BB0_133:
	and.b32  	%r320, %r376, 8;
	setp.eq.s32	%p139, %r320, 0;
	@%p139 bra 	BB0_135;

	cvt.u64.u32	%rd123, %r2;
	cvt.u64.u32	%rd124, %r3;
	mov.u64 	%rd127, image_Mask;
	cvta.global.u64 	%rd122, %rd127;
	mov.u64 	%rd126, 0;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r106, %r106, %rd123, %rd124, %rd126, %rd126);
	// inline asm
	mov.f32 	%f833, 0f00000000;
	cvt.rzi.u32.f32	%r323, %f833;
	cvt.u16.u32	%rs31, %r323;
	mov.u16 	%rs32, 0;
	st.v2.u8 	[%rd121], {%rs31, %rs32};
	ld.global.u32 	%r376, [imageEnabled];

BB0_135:
	and.b32  	%r324, %r376, 4;
	setp.eq.s32	%p140, %r324, 0;
	@%p140 bra 	BB0_139;

	ld.global.u32 	%r325, [additive];
	setp.eq.s32	%p141, %r325, 0;
	cvt.u64.u32	%rd19, %r2;
	cvt.u64.u32	%rd20, %r3;
	@%p141 bra 	BB0_138;

	mov.u64 	%rd140, image_HDR;
	cvta.global.u64 	%rd129, %rd140;
	mov.u32 	%r329, 8;
	mov.u64 	%rd139, 0;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r106, %r329, %rd19, %rd20, %rd139, %rd139);
	// inline asm
	ld.v4.u16 	{%rs39, %rs40, %rs41, %rs42}, [%rd128];
	// inline asm
	{  cvt.f32.f16 %f834, %rs39;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f835, %rs40;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f836, %rs41;}

	// inline asm
	// inline asm
	call (%rd134), _rt_buffer_get_64, (%rd129, %r106, %r329, %rd19, %rd20, %rd139, %rd139);
	// inline asm
	add.f32 	%f837, %f834, 0f00000000;
	add.f32 	%f838, %f835, 0f00000000;
	add.f32 	%f839, %f836, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f839;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f838;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f837;}

	// inline asm
	mov.u16 	%rs43, 0;
	st.v4.u16 	[%rd134], {%rs36, %rs37, %rs38, %rs43};
	bra.uni 	BB0_139;

BB0_3:
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd30, %r126;
	cvt.u64.u32	%rd31, %r127;
	mov.u64 	%rd40, uvpos;
	cvta.global.u64 	%rd29, %rd40;
	mov.u32 	%r122, 12;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r106, %r122, %rd30, %rd31, %rd26, %rd26);
	// inline asm
	ld.f32 	%f9, [%rd28+8];
	ld.f32 	%f8, [%rd28+4];
	ld.f32 	%f7, [%rd28];
	mul.f32 	%f214, %f7, 0f3456BF95;
	mul.f32 	%f215, %f8, 0f3456BF95;
	mul.f32 	%f216, %f9, 0f3456BF95;
	abs.f32 	%f10, %f850;
	div.rn.f32 	%f217, %f214, %f10;
	abs.f32 	%f218, %f851;
	div.rn.f32 	%f219, %f215, %f218;
	abs.f32 	%f11, %f852;
	div.rn.f32 	%f220, %f216, %f11;
	abs.f32 	%f221, %f217;
	abs.f32 	%f222, %f219;
	abs.f32 	%f223, %f220;
	mov.f32 	%f224, 0f38D1B717;
	max.f32 	%f225, %f221, %f224;
	max.f32 	%f226, %f222, %f224;
	max.f32 	%f227, %f223, %f224;
	fma.rn.f32 	%f12, %f850, %f225, %f7;
	fma.rn.f32 	%f13, %f851, %f226, %f8;
	fma.rn.f32 	%f14, %f852, %f227, %f9;
	ld.global.v2.u32 	{%r130, %r131}, [pixelID];
	cvt.u64.u32	%rd36, %r130;
	cvt.u64.u32	%rd37, %r131;
	mov.u64 	%rd41, rnd_seeds;
	cvta.global.u64 	%rd35, %rd41;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r106, %r107, %rd36, %rd37, %rd26, %rd26);
	// inline asm
	ld.u32 	%r134, [%rd34];
	mad.lo.s32 	%r4, %r134, 1664525, 1013904223;
	ld.global.u32 	%r135, [lightMeshBufferSize];
	setp.eq.s32	%p14, %r135, 0;
	mov.pred 	%p13, 0;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r6, 0;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	and.b32  	%r138, %r4, 16777215;
	cvt.rn.f32.u32	%f232, %r138;
	mul.f32 	%f233, %f232, 0fB3800000;
	fma.rn.f32 	%f19, %f233, 0f3F333333, 0f3F800000;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r341, 0;
	abs.f32 	%f356, %f17;
	abs.f32 	%f357, %f16;
	max.f32 	%f358, %f357, %f356;
	abs.f32 	%f359, %f18;
	max.f32 	%f360, %f358, %f359;
	mov.u32 	%r6, %r341;
	mov.f32 	%f21, %f20;
	mov.f32 	%f22, %f20;
	mov.f32 	%f23, %f20;

BB0_6:
	mul.lo.s32 	%r7, %r341, 3;
	cvt.s64.s32	%rd44, %r7;
	mov.u64 	%rd48, lightMeshBuffer;
	cvta.global.u64 	%rd43, %rd48;
	mov.u32 	%r139, 1;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r139, %r122, %rd44, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f234, [%rd42];
	sub.f32 	%f235, %f234, %f7;
	ld.f32 	%f236, [%rd42+4];
	sub.f32 	%f237, %f236, %f8;
	ld.f32 	%f238, [%rd42+8];
	sub.f32 	%f239, %f238, %f9;
	mul.f32 	%f240, %f237, %f237;
	fma.rn.f32 	%f241, %f235, %f235, %f240;
	fma.rn.f32 	%f242, %f239, %f239, %f241;
	sqrt.rn.f32 	%f24, %f242;
	rcp.rn.f32 	%f243, %f24;
	mul.f32 	%f25, %f235, %f243;
	mul.f32 	%f26, %f237, %f243;
	mul.f32 	%f27, %f239, %f243;
	mul.f32 	%f244, %f851, %f26;
	fma.rn.f32 	%f245, %f850, %f25, %f244;
	fma.rn.f32 	%f28, %f852, %f27, %f245;
	setp.leu.f32	%p15, %f28, 0f00000000;
	@%p15 bra 	BB0_22;

	mul.f32 	%f246, %f24, %f24;
	mul.f32 	%f247, %f246, 0f40C90FDB;
	div.rn.f32 	%f248, %f15, %f247;
	add.f32 	%f29, %f248, %f248;
	setp.gt.f32	%p17, %f29, %f19;
	ld.global.u32 	%r141, [samples];
	setp.ne.s32	%p18, %r141, 0;
	and.pred  	%p19, %p18, %p17;
	mov.pred 	%p142, -1;
	@%p19 bra 	BB0_24;

	ld.global.f32 	%f251, [lightInvCutoff];
	mul.f32 	%f30, %f24, %f251;
	mov.f32 	%f255, 0f40800000;
	abs.f32 	%f32, %f30;
	setp.lt.f32	%p20, %f32, 0f00800000;
	mul.f32 	%f257, %f32, 0f4B800000;
	selp.f32	%f258, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f259, %f257, %f32, %p20;
	mov.b32 	 %r142, %f259;
	and.b32  	%r143, %r142, 8388607;
	or.b32  	%r144, %r143, 1065353216;
	mov.b32 	 %f260, %r144;
	shr.u32 	%r145, %r142, 23;
	cvt.rn.f32.u32	%f261, %r145;
	add.f32 	%f262, %f258, %f261;
	setp.gt.f32	%p21, %f260, 0f3FB504F3;
	mul.f32 	%f263, %f260, 0f3F000000;
	add.f32 	%f264, %f262, 0f3F800000;
	selp.f32	%f265, %f263, %f260, %p21;
	selp.f32	%f266, %f264, %f262, %p21;
	add.f32 	%f267, %f265, 0fBF800000;
	add.f32 	%f250, %f265, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f249,%f250;
	// inline asm
	add.f32 	%f268, %f267, %f267;
	mul.f32 	%f269, %f249, %f268;
	mul.f32 	%f270, %f269, %f269;
	mov.f32 	%f271, 0f3C4CAF63;
	mov.f32 	%f272, 0f3B18F0FE;
	fma.rn.f32 	%f273, %f272, %f270, %f271;
	mov.f32 	%f274, 0f3DAAAABD;
	fma.rn.f32 	%f275, %f273, %f270, %f274;
	mul.rn.f32 	%f276, %f275, %f270;
	mul.rn.f32 	%f277, %f276, %f269;
	sub.f32 	%f278, %f267, %f269;
	neg.f32 	%f279, %f269;
	add.f32 	%f280, %f278, %f278;
	fma.rn.f32 	%f281, %f279, %f267, %f280;
	mul.rn.f32 	%f282, %f249, %f281;
	add.f32 	%f283, %f277, %f269;
	sub.f32 	%f284, %f269, %f283;
	add.f32 	%f285, %f277, %f284;
	add.f32 	%f286, %f282, %f285;
	add.f32 	%f287, %f283, %f286;
	sub.f32 	%f288, %f283, %f287;
	add.f32 	%f289, %f286, %f288;
	mov.f32 	%f290, 0f3F317200;
	mul.rn.f32 	%f291, %f266, %f290;
	mov.f32 	%f292, 0f35BFBE8E;
	mul.rn.f32 	%f293, %f266, %f292;
	add.f32 	%f294, %f291, %f287;
	sub.f32 	%f295, %f291, %f294;
	add.f32 	%f296, %f287, %f295;
	add.f32 	%f297, %f289, %f296;
	add.f32 	%f298, %f293, %f297;
	add.f32 	%f299, %f294, %f298;
	sub.f32 	%f300, %f294, %f299;
	add.f32 	%f301, %f298, %f300;
	mul.rn.f32 	%f302, %f255, %f299;
	neg.f32 	%f303, %f302;
	fma.rn.f32 	%f304, %f255, %f299, %f303;
	fma.rn.f32 	%f305, %f255, %f301, %f304;
	mov.f32 	%f306, 0f00000000;
	fma.rn.f32 	%f307, %f306, %f299, %f305;
	add.rn.f32 	%f308, %f302, %f307;
	neg.f32 	%f309, %f308;
	add.rn.f32 	%f310, %f302, %f309;
	add.rn.f32 	%f311, %f310, %f307;
	mov.b32 	 %r146, %f308;
	setp.eq.s32	%p22, %r146, 1118925336;
	add.s32 	%r147, %r146, -1;
	mov.b32 	 %f312, %r147;
	add.f32 	%f313, %f311, 0f37000000;
	selp.f32	%f314, %f312, %f308, %p22;
	selp.f32	%f33, %f313, %f311, %p22;
	mul.f32 	%f315, %f314, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f316, %f315;
	mov.f32 	%f317, 0fBF317200;
	fma.rn.f32 	%f318, %f316, %f317, %f314;
	mov.f32 	%f319, 0fB5BFBE8E;
	fma.rn.f32 	%f320, %f316, %f319, %f318;
	mul.f32 	%f321, %f320, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f322, %f321;
	add.f32 	%f323, %f316, 0f00000000;
	ex2.approx.f32 	%f324, %f323;
	mul.f32 	%f325, %f322, %f324;
	setp.lt.f32	%p23, %f314, 0fC2D20000;
	selp.f32	%f326, 0f00000000, %f325, %p23;
	setp.gt.f32	%p24, %f314, 0f42D20000;
	selp.f32	%f857, 0f7F800000, %f326, %p24;
	setp.eq.f32	%p25, %f857, 0f7F800000;
	@%p25 bra 	BB0_10;

	fma.rn.f32 	%f857, %f857, %f33, %f857;

BB0_10:
	mov.f32 	%f846, 0f40000000;
	cvt.rzi.f32.f32	%f845, %f846;
	add.f32 	%f844, %f845, %f845;
	mov.f32 	%f843, 0f40800000;
	sub.f32 	%f842, %f843, %f844;
	abs.f32 	%f841, %f842;
	setp.lt.f32	%p26, %f30, 0f00000000;
	setp.eq.f32	%p27, %f841, 0f3F800000;
	and.pred  	%p1, %p26, %p27;
	mov.b32 	 %r148, %f857;
	xor.b32  	%r149, %r148, -2147483648;
	mov.b32 	 %f327, %r149;
	selp.f32	%f859, %f327, %f857, %p1;
	setp.eq.f32	%p28, %f30, 0f00000000;
	@%p28 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f330, %f30, %f30;
	selp.f32	%f859, %f330, 0f00000000, %p27;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p29, %f30, 0f00000000;
	@%p29 bra 	BB0_14;

	mov.f32 	%f849, 0f40800000;
	cvt.rzi.f32.f32	%f329, %f849;
	setp.neu.f32	%p30, %f329, 0f40800000;
	selp.f32	%f859, 0f7FFFFFFF, %f859, %p30;

BB0_14:
	add.f32 	%f331, %f32, 0f40800000;
	mov.b32 	 %r150, %f331;
	setp.lt.s32	%p32, %r150, 2139095040;
	@%p32 bra 	BB0_19;

	setp.gtu.f32	%p33, %f32, 0f7F800000;
	@%p33 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f859, %f30, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p34, %f32, 0f7F800000;
	@%p34 bra 	BB0_19;

	selp.f32	%f859, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u32 	%r333, 1;
	mov.u64 	%rd149, lightMeshBuffer;
	cvta.global.u64 	%rd148, %rd149;
	mul.lo.s32 	%r332, %r341, 3;
	mov.f32 	%f332, 0f3F800000;
	sub.f32 	%f333, %f332, %f859;
	setp.eq.f32	%p35, %f30, 0f3F800000;
	selp.f32	%f334, 0f00000000, %f333, %p35;
	cvt.sat.f32.f32	%f335, %f334;
	mul.f32 	%f336, %f29, %f335;
	add.s32 	%r153, %r332, 1;
	cvt.s64.s32	%rd51, %r153;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd148, %r333, %r122, %rd51, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f337, [%rd49];
	mul.f32 	%f338, %f25, %f337;
	ld.f32 	%f339, [%rd49+4];
	mul.f32 	%f340, %f26, %f339;
	neg.f32 	%f341, %f340;
	sub.f32 	%f342, %f341, %f338;
	ld.f32 	%f343, [%rd49+8];
	mul.f32 	%f344, %f27, %f343;
	sub.f32 	%f345, %f342, %f344;
	cvt.sat.f32.f32	%f346, %f345;
	mul.f32 	%f44, %f336, %f346;
	cvt.sat.f32.f32	%f45, %f28;
	mul.f32 	%f347, %f44, %f45;
	setp.leu.f32	%p36, %f347, 0f3727C5AC;
	@%p36 bra 	BB0_21;

	mov.u32 	%r340, 1;
	mov.u64 	%rd151, lightMeshBuffer;
	cvta.global.u64 	%rd150, %rd151;
	mul.lo.s32 	%r339, %r341, 3;
	add.u64 	%rd56, %SP, 28;
	cvta.to.local.u64 	%rd63, %rd56;
	max.f32 	%f354, %f360, %f224;
	sub.f32 	%f355, %f24, %f354;
	mov.u32 	%r159, 1065353216;
	st.local.u32 	[%rd63], %r159;
	ld.global.u32 	%r154, [root];
	// inline asm
	call _rt_trace_64, (%r154, %f12, %f13, %f14, %f25, %f26, %f27, %r340, %f354, %f355, %rd56, %r107);
	// inline asm
	add.s32 	%r160, %r339, 2;
	cvt.s64.s32	%rd59, %r160;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd150, %r340, %r122, %rd59, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f362, [%rd57];
	ld.local.f32 	%f363, [%rd63];
	mul.f32 	%f364, %f363, %f362;
	ld.f32 	%f365, [%rd57+4];
	mul.f32 	%f366, %f363, %f365;
	ld.f32 	%f367, [%rd57+8];
	mul.f32 	%f368, %f363, %f367;
	mul.f32 	%f369, %f44, %f364;
	mul.f32 	%f370, %f44, %f366;
	mul.f32 	%f371, %f44, %f368;
	fma.rn.f32 	%f23, %f45, %f369, %f23;
	fma.rn.f32 	%f22, %f45, %f370, %f22;
	fma.rn.f32 	%f21, %f45, %f371, %f21;
	add.f32 	%f20, %f20, %f363;

BB0_21:
	add.s32 	%r6, %r6, 1;

BB0_22:
	ld.global.u32 	%r161, [lightMeshBufferSize];
	add.s32 	%r341, %r341, 1;
	setp.lt.u32	%p38, %r341, %r161;
	@%p38 bra 	BB0_6;
	bra.uni 	BB0_23;

BB0_4:
	mov.f32 	%f21, %f20;
	mov.f32 	%f22, %f20;
	mov.f32 	%f23, %f20;

BB0_23:
	mov.pred 	%p142, %p13;

BB0_24:
	cvt.rn.f32.s32	%f372, %r6;
	mov.f32 	%f373, 0f3F800000;
	max.f32 	%f374, %f372, %f373;
	rcp.rn.f32 	%f375, %f374;
	mul.f32 	%f896, %f23, %f375;
	mul.f32 	%f897, %f22, %f375;
	mul.f32 	%f898, %f21, %f375;
	div.rn.f32 	%f899, %f20, %f374;
	@!%p142 bra 	BB0_79;
	bra.uni 	BB0_25;

BB0_25:
	abs.f32 	%f848, %f852;
	abs.f32 	%f847, %f850;
	setp.gt.f32	%p39, %f847, %f848;
	neg.f32 	%f379, %f851;
	selp.f32	%f380, %f379, 0f00000000, %p39;
	neg.f32 	%f381, %f852;
	selp.f32	%f382, %f850, %f381, %p39;
	selp.f32	%f383, 0f00000000, %f851, %p39;
	mul.f32 	%f384, %f382, %f382;
	fma.rn.f32 	%f385, %f380, %f380, %f384;
	fma.rn.f32 	%f386, %f383, %f383, %f385;
	sqrt.rn.f32 	%f387, %f386;
	rcp.rn.f32 	%f388, %f387;
	mul.f32 	%f66, %f380, %f388;
	mul.f32 	%f67, %f382, %f388;
	mul.f32 	%f68, %f383, %f388;
	ld.global.u32 	%r345, [samples];
	mov.f32 	%f378, 0f00000000;
	setp.lt.s32	%p40, %r345, 1;
	@%p40 bra 	BB0_26;

	mad.lo.s32 	%r371, %r134, 1664525, 1013904223;
	cvt.rn.f32.s32	%f392, %r345;
	rcp.rn.f32 	%f69, %f392;
	add.u64 	%rd65, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd65;
	mul.f32 	%f70, %f12, 0f3456BF95;
	mul.f32 	%f71, %f13, 0f3456BF95;
	mul.f32 	%f72, %f14, 0f3456BF95;
	mul.f32 	%f393, %f850, %f67;
	mul.f32 	%f394, %f851, %f66;
	sub.f32 	%f73, %f394, %f393;
	mul.f32 	%f395, %f852, %f66;
	mul.f32 	%f396, %f850, %f68;
	sub.f32 	%f74, %f396, %f395;
	mul.f32 	%f397, %f851, %f68;
	mul.f32 	%f398, %f852, %f67;
	sub.f32 	%f75, %f398, %f397;
	mov.f32 	%f890, 0f00000000;
	mov.u32 	%r346, 0;
	abs.f32 	%f399, %f71;
	abs.f32 	%f400, %f70;
	max.f32 	%f401, %f400, %f399;
	abs.f32 	%f402, %f72;
	max.f32 	%f403, %f401, %f402;
	mov.f32 	%f891, %f890;
	mov.f32 	%f892, %f890;

BB0_28:
	setp.lt.s32	%p41, %r345, 1;
	@%p41 bra 	BB0_77;

	cvt.rn.f32.s32	%f79, %r346;
	max.f32 	%f80, %f403, %f224;
	add.u64 	%rd66, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd66;
	mov.u32 	%r348, 0;

BB0_30:
	mad.lo.s32 	%r164, %r371, 1664525, 1013904223;
	and.b32  	%r165, %r164, 16777215;
	cvt.rn.f32.u32	%f405, %r165;
	fma.rn.f32 	%f406, %f405, 0f33800000, %f79;
	mul.f32 	%f407, %f69, %f406;
	mad.lo.s32 	%r371, %r164, 1664525, 1013904223;
	and.b32  	%r166, %r371, 16777215;
	cvt.rn.f32.u32	%f408, %r166;
	cvt.rn.f32.s32	%f409, %r348;
	fma.rn.f32 	%f410, %f408, 0f33800000, %f409;
	mul.f32 	%f411, %f69, %f410;
	sqrt.rn.f32 	%f84, %f407;
	mul.f32 	%f884, %f411, 0f40C90FDB;
	abs.f32 	%f86, %f884;
	setp.neu.f32	%p42, %f86, 0f7F800000;
	mov.f32 	%f878, %f884;
	@%p42 bra 	BB0_32;

	mov.f32 	%f412, 0f00000000;
	mul.rn.f32 	%f878, %f884, %f412;

BB0_32:
	mul.f32 	%f413, %f878, 0f3F22F983;
	cvt.rni.s32.f32	%r359, %f413;
	cvt.rn.f32.s32	%f414, %r359;
	neg.f32 	%f415, %f414;
	mov.f32 	%f416, 0f3FC90FDA;
	fma.rn.f32 	%f417, %f415, %f416, %f878;
	mov.f32 	%f418, 0f33A22168;
	fma.rn.f32 	%f419, %f415, %f418, %f417;
	mov.f32 	%f420, 0f27C234C5;
	fma.rn.f32 	%f879, %f415, %f420, %f419;
	abs.f32 	%f421, %f878;
	setp.leu.f32	%p43, %f421, 0f47CE4780;
	@%p43 bra 	BB0_43;

	mov.b32 	 %r20, %f878;
	shr.u32 	%r21, %r20, 23;
	shl.b32 	%r169, %r20, 8;
	or.b32  	%r22, %r169, -2147483648;
	mov.u32 	%r350, 0;
	mov.u64 	%rd153, 0;
	mov.u64 	%rd152, %rd2;
	mov.u32 	%r351, %r350;

BB0_34:
	.pragma "nounroll";
	shl.b64 	%rd68, %rd153, 2;
	mov.u64 	%rd69, __cudart_i2opi_f;
	add.s64 	%rd70, %rd69, %rd68;
	ld.const.u32 	%r172, [%rd70];
	// inline asm
	{
	mad.lo.cc.u32   %r170, %r172, %r22, %r351;
	madc.hi.u32     %r351, %r172, %r22,  0;
	}
	// inline asm
	st.local.u32 	[%rd152], %r170;
	add.s32 	%r350, %r350, 1;
	cvt.s64.s32	%rd153, %r350;
	mul.wide.s32 	%rd71, %r350, 4;
	add.s64 	%rd152, %rd2, %rd71;
	setp.ne.s32	%p44, %r350, 6;
	@%p44 bra 	BB0_34;

	and.b32  	%r175, %r21, 255;
	add.s32 	%r176, %r175, -128;
	shr.u32 	%r177, %r176, 5;
	and.b32  	%r27, %r20, -2147483648;
	st.local.u32 	[%rd2+24], %r351;
	mov.u32 	%r178, 6;
	sub.s32 	%r179, %r178, %r177;
	mul.wide.s32 	%rd72, %r179, 4;
	add.s64 	%rd9, %rd2, %rd72;
	ld.local.u32 	%r352, [%rd9];
	ld.local.u32 	%r353, [%rd9+-4];
	and.b32  	%r30, %r21, 31;
	setp.eq.s32	%p45, %r30, 0;
	@%p45 bra 	BB0_37;

	mov.u32 	%r180, 32;
	sub.s32 	%r181, %r180, %r30;
	shr.u32 	%r182, %r353, %r181;
	shl.b32 	%r183, %r352, %r30;
	add.s32 	%r352, %r182, %r183;
	ld.local.u32 	%r184, [%rd9+-8];
	shr.u32 	%r185, %r184, %r181;
	shl.b32 	%r186, %r353, %r30;
	add.s32 	%r353, %r185, %r186;

BB0_37:
	shr.u32 	%r187, %r353, 30;
	shl.b32 	%r188, %r352, 2;
	add.s32 	%r354, %r187, %r188;
	shl.b32 	%r36, %r353, 2;
	shr.u32 	%r189, %r354, 31;
	shr.u32 	%r190, %r352, 30;
	add.s32 	%r37, %r189, %r190;
	setp.eq.s32	%p46, %r189, 0;
	@%p46 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.u32 	%r355, %r27;
	mov.u32 	%r356, %r36;
	bra.uni 	BB0_40;

BB0_39:
	not.b32 	%r191, %r354;
	neg.s32 	%r356, %r36;
	setp.eq.s32	%p47, %r36, 0;
	selp.u32	%r192, 1, 0, %p47;
	add.s32 	%r354, %r192, %r191;
	xor.b32  	%r355, %r27, -2147483648;

BB0_40:
	clz.b32 	%r358, %r354;
	setp.eq.s32	%p48, %r358, 0;
	shl.b32 	%r193, %r354, %r358;
	mov.u32 	%r194, 32;
	sub.s32 	%r195, %r194, %r358;
	shr.u32 	%r196, %r356, %r195;
	add.s32 	%r197, %r196, %r193;
	selp.b32	%r45, %r354, %r197, %p48;
	mov.u32 	%r198, -921707870;
	mul.hi.u32 	%r357, %r45, %r198;
	setp.eq.s32	%p49, %r27, 0;
	neg.s32 	%r199, %r37;
	selp.b32	%r359, %r37, %r199, %p49;
	setp.lt.s32	%p50, %r357, 1;
	@%p50 bra 	BB0_42;

	mul.lo.s32 	%r200, %r45, -921707870;
	shr.u32 	%r201, %r200, 31;
	shl.b32 	%r202, %r357, 1;
	add.s32 	%r357, %r201, %r202;
	add.s32 	%r358, %r358, 1;

BB0_42:
	mov.u32 	%r203, 126;
	sub.s32 	%r204, %r203, %r358;
	shl.b32 	%r205, %r204, 23;
	add.s32 	%r206, %r357, 1;
	shr.u32 	%r207, %r206, 7;
	add.s32 	%r208, %r207, 1;
	shr.u32 	%r209, %r208, 1;
	add.s32 	%r210, %r209, %r205;
	or.b32  	%r211, %r210, %r355;
	mov.b32 	 %f879, %r211;

BB0_43:
	mul.rn.f32 	%f92, %f879, %f879;
	add.s32 	%r53, %r359, 1;
	and.b32  	%r54, %r53, 1;
	setp.eq.s32	%p51, %r54, 0;
	@%p51 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f424, 0f3C08839E;
	mov.f32 	%f425, 0fB94CA1F9;
	fma.rn.f32 	%f880, %f425, %f92, %f424;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f422, 0fBAB6061A;
	mov.f32 	%f423, 0f37CCF5CE;
	fma.rn.f32 	%f880, %f423, %f92, %f422;

BB0_46:
	@%p51 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	mov.f32 	%f429, 0fBE2AAAA3;
	fma.rn.f32 	%f430, %f880, %f92, %f429;
	mov.f32 	%f431, 0f00000000;
	fma.rn.f32 	%f881, %f430, %f92, %f431;
	bra.uni 	BB0_49;

BB0_47:
	mov.f32 	%f426, 0f3D2AAAA5;
	fma.rn.f32 	%f427, %f880, %f92, %f426;
	mov.f32 	%f428, 0fBF000000;
	fma.rn.f32 	%f881, %f427, %f92, %f428;

BB0_49:
	fma.rn.f32 	%f882, %f881, %f879, %f879;
	@%p51 bra 	BB0_51;

	fma.rn.f32 	%f882, %f881, %f92, %f373;

BB0_51:
	and.b32  	%r212, %r53, 2;
	setp.eq.s32	%p54, %r212, 0;
	@%p54 bra 	BB0_53;

	mov.f32 	%f433, 0f00000000;
	mov.f32 	%f434, 0fBF800000;
	fma.rn.f32 	%f882, %f882, %f434, %f433;

BB0_53:
	@%p42 bra 	BB0_55;

	mov.f32 	%f435, 0f00000000;
	mul.rn.f32 	%f884, %f884, %f435;

BB0_55:
	mul.f32 	%f436, %f884, 0f3F22F983;
	cvt.rni.s32.f32	%r369, %f436;
	cvt.rn.f32.s32	%f437, %r369;
	neg.f32 	%f438, %f437;
	fma.rn.f32 	%f440, %f438, %f416, %f884;
	fma.rn.f32 	%f442, %f438, %f418, %f440;
	fma.rn.f32 	%f885, %f438, %f420, %f442;
	abs.f32 	%f444, %f884;
	setp.leu.f32	%p56, %f444, 0f47CE4780;
	@%p56 bra 	BB0_66;

	mov.b32 	 %r56, %f884;
	shr.u32 	%r57, %r56, 23;
	shl.b32 	%r215, %r56, 8;
	or.b32  	%r58, %r215, -2147483648;
	mov.u32 	%r360, 0;
	mov.u64 	%rd154, %rd2;
	mov.u64 	%rd155, %rd26;
	mov.u32 	%r361, %r360;

BB0_57:
	.pragma "nounroll";
	shl.b64 	%rd74, %rd155, 2;
	mov.u64 	%rd75, __cudart_i2opi_f;
	add.s64 	%rd76, %rd75, %rd74;
	ld.const.u32 	%r218, [%rd76];
	// inline asm
	{
	mad.lo.cc.u32   %r216, %r218, %r58, %r361;
	madc.hi.u32     %r361, %r218, %r58,  0;
	}
	// inline asm
	st.local.u32 	[%rd154], %r216;
	add.s32 	%r360, %r360, 1;
	cvt.s64.s32	%rd155, %r360;
	mul.wide.s32 	%rd77, %r360, 4;
	add.s64 	%rd154, %rd2, %rd77;
	setp.ne.s32	%p57, %r360, 6;
	@%p57 bra 	BB0_57;

	and.b32  	%r221, %r57, 255;
	add.s32 	%r222, %r221, -128;
	shr.u32 	%r223, %r222, 5;
	and.b32  	%r63, %r56, -2147483648;
	st.local.u32 	[%rd2+24], %r361;
	mov.u32 	%r224, 6;
	sub.s32 	%r225, %r224, %r223;
	mul.wide.s32 	%rd78, %r225, 4;
	add.s64 	%rd15, %rd2, %rd78;
	ld.local.u32 	%r362, [%rd15];
	ld.local.u32 	%r363, [%rd15+-4];
	and.b32  	%r66, %r57, 31;
	setp.eq.s32	%p58, %r66, 0;
	@%p58 bra 	BB0_60;

	mov.u32 	%r226, 32;
	sub.s32 	%r227, %r226, %r66;
	shr.u32 	%r228, %r363, %r227;
	shl.b32 	%r229, %r362, %r66;
	add.s32 	%r362, %r228, %r229;
	ld.local.u32 	%r230, [%rd15+-8];
	shr.u32 	%r231, %r230, %r227;
	shl.b32 	%r232, %r363, %r66;
	add.s32 	%r363, %r231, %r232;

BB0_60:
	shr.u32 	%r233, %r363, 30;
	shl.b32 	%r234, %r362, 2;
	add.s32 	%r364, %r233, %r234;
	shl.b32 	%r72, %r363, 2;
	shr.u32 	%r235, %r364, 31;
	shr.u32 	%r236, %r362, 30;
	add.s32 	%r73, %r235, %r236;
	setp.eq.s32	%p59, %r235, 0;
	@%p59 bra 	BB0_61;
	bra.uni 	BB0_62;

BB0_61:
	mov.u32 	%r365, %r63;
	mov.u32 	%r366, %r72;
	bra.uni 	BB0_63;

BB0_62:
	not.b32 	%r237, %r364;
	neg.s32 	%r366, %r72;
	setp.eq.s32	%p60, %r72, 0;
	selp.u32	%r238, 1, 0, %p60;
	add.s32 	%r364, %r238, %r237;
	xor.b32  	%r365, %r63, -2147483648;

BB0_63:
	clz.b32 	%r368, %r364;
	setp.eq.s32	%p61, %r368, 0;
	shl.b32 	%r239, %r364, %r368;
	mov.u32 	%r240, 32;
	sub.s32 	%r241, %r240, %r368;
	shr.u32 	%r242, %r366, %r241;
	add.s32 	%r243, %r242, %r239;
	selp.b32	%r81, %r364, %r243, %p61;
	mov.u32 	%r244, -921707870;
	mul.hi.u32 	%r367, %r81, %r244;
	setp.eq.s32	%p62, %r63, 0;
	neg.s32 	%r245, %r73;
	selp.b32	%r369, %r73, %r245, %p62;
	setp.lt.s32	%p63, %r367, 1;
	@%p63 bra 	BB0_65;

	mul.lo.s32 	%r246, %r81, -921707870;
	shr.u32 	%r247, %r246, 31;
	shl.b32 	%r248, %r367, 1;
	add.s32 	%r367, %r247, %r248;
	add.s32 	%r368, %r368, 1;

BB0_65:
	mov.u32 	%r249, 126;
	sub.s32 	%r250, %r249, %r368;
	shl.b32 	%r251, %r250, 23;
	add.s32 	%r252, %r367, 1;
	shr.u32 	%r253, %r252, 7;
	add.s32 	%r254, %r253, 1;
	shr.u32 	%r255, %r254, 1;
	add.s32 	%r256, %r255, %r251;
	or.b32  	%r257, %r256, %r365;
	mov.b32 	 %f885, %r257;

BB0_66:
	mul.rn.f32 	%f109, %f885, %f885;
	and.b32  	%r89, %r369, 1;
	setp.eq.s32	%p64, %r89, 0;
	@%p64 bra 	BB0_68;
	bra.uni 	BB0_67;

BB0_68:
	mov.f32 	%f447, 0f3C08839E;
	mov.f32 	%f448, 0fB94CA1F9;
	fma.rn.f32 	%f886, %f448, %f109, %f447;
	bra.uni 	BB0_69;

BB0_67:
	mov.f32 	%f445, 0fBAB6061A;
	mov.f32 	%f446, 0f37CCF5CE;
	fma.rn.f32 	%f886, %f446, %f109, %f445;

BB0_69:
	@%p64 bra 	BB0_71;
	bra.uni 	BB0_70;

BB0_71:
	mov.f32 	%f452, 0fBE2AAAA3;
	fma.rn.f32 	%f453, %f886, %f109, %f452;
	mov.f32 	%f454, 0f00000000;
	fma.rn.f32 	%f887, %f453, %f109, %f454;
	bra.uni 	BB0_72;

BB0_70:
	mov.f32 	%f449, 0f3D2AAAA5;
	fma.rn.f32 	%f450, %f886, %f109, %f449;
	mov.f32 	%f451, 0fBF000000;
	fma.rn.f32 	%f887, %f450, %f109, %f451;

BB0_72:
	fma.rn.f32 	%f888, %f887, %f885, %f885;
	@%p64 bra 	BB0_74;

	fma.rn.f32 	%f888, %f887, %f109, %f373;

BB0_74:
	and.b32  	%r258, %r369, 2;
	setp.eq.s32	%p67, %r258, 0;
	@%p67 bra 	BB0_76;

	mov.f32 	%f456, 0f00000000;
	mov.f32 	%f457, 0fBF800000;
	fma.rn.f32 	%f888, %f888, %f457, %f456;

BB0_76:
	mul.f32 	%f466, %f84, %f882;
	mul.f32 	%f467, %f466, %f466;
	sub.f32 	%f469, %f373, %f467;
	mul.f32 	%f470, %f84, %f888;
	mul.f32 	%f471, %f470, %f470;
	sub.f32 	%f472, %f469, %f471;
	mov.f32 	%f473, 0f00000000;
	max.f32 	%f474, %f473, %f472;
	sqrt.rn.f32 	%f475, %f474;
	mul.f32 	%f476, %f66, %f470;
	mul.f32 	%f477, %f67, %f470;
	mul.f32 	%f478, %f68, %f470;
	fma.rn.f32 	%f479, %f75, %f466, %f476;
	fma.rn.f32 	%f480, %f74, %f466, %f477;
	fma.rn.f32 	%f481, %f73, %f466, %f478;
	fma.rn.f32 	%f461, %f850, %f475, %f479;
	fma.rn.f32 	%f462, %f851, %f475, %f480;
	fma.rn.f32 	%f463, %f852, %f475, %f481;
	mov.u32 	%r260, 0;
	st.local.u32 	[%rd3+8], %r260;
	st.local.u32 	[%rd3+4], %r260;
	st.local.u32 	[%rd3], %r260;
	ld.global.u32 	%r259, [root];
	mov.f32 	%f465, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r259, %f12, %f13, %f14, %f461, %f462, %f463, %r260, %f80, %f465, %rd66, %r122);
	// inline asm
	ld.local.f32 	%f482, [%rd3];
	max.f32 	%f483, %f482, %f473;
	ld.local.f32 	%f484, [%rd3+4];
	max.f32 	%f485, %f484, %f473;
	ld.local.f32 	%f486, [%rd3+8];
	max.f32 	%f487, %f486, %f473;
	add.f32 	%f892, %f892, %f483;
	add.f32 	%f891, %f891, %f485;
	add.f32 	%f890, %f890, %f487;
	ld.global.u32 	%r345, [samples];
	add.s32 	%r348, %r348, 1;
	setp.lt.s32	%p68, %r348, %r345;
	@%p68 bra 	BB0_30;

BB0_77:
	add.s32 	%r346, %r346, 1;
	setp.lt.s32	%p69, %r346, %r345;
	@%p69 bra 	BB0_28;
	bra.uni 	BB0_78;

BB0_138:
	mov.u64 	%rd147, image_HDR;
	cvta.global.u64 	%rd142, %rd147;
	mov.u32 	%r331, 8;
	mov.u64 	%rd146, 0;
	// inline asm
	call (%rd141), _rt_buffer_get_64, (%rd142, %r106, %r331, %rd19, %rd20, %rd146, %rd146);
	// inline asm
	mov.f32 	%f840, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f840;}

	// inline asm
	mov.u16 	%rs45, 0;
	st.v4.u16 	[%rd141], {%rs44, %rs44, %rs44, %rs45};
	bra.uni 	BB0_139;

BB0_26:
	mov.f32 	%f890, %f378;
	mov.f32 	%f891, %f378;
	mov.f32 	%f892, %f378;

BB0_78:
	mul.lo.s32 	%r262, %r345, %r345;
	cvt.rn.f32.s32	%f488, %r262;
	rcp.rn.f32 	%f489, %f488;
	mul.f32 	%f896, %f892, %f489;
	mul.f32 	%f897, %f891, %f489;
	mul.f32 	%f898, %f890, %f489;
	div.rn.f32 	%f899, %f378, %f488;

BB0_79:
	ld.global.u32 	%r374, [imageEnabled];
	and.b32  	%r263, %r374, 8;
	setp.eq.s32	%p70, %r263, 0;
	@%p70 bra 	BB0_92;

	mov.u32 	%r334, 2;
	cvt.u64.u32	%rd82, %r2;
	cvt.u64.u32	%rd83, %r3;
	mov.u64 	%rd86, image_Mask;
	cvta.global.u64 	%rd81, %rd86;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r334, %r334, %rd82, %rd83, %rd26, %rd26);
	// inline asm
	mov.f32 	%f493, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f494, %f493;
	fma.rn.f32 	%f495, %f494, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f138, %f495;
	abs.f32 	%f139, %f899;
	setp.lt.f32	%p71, %f139, 0f00800000;
	mul.f32 	%f496, %f139, 0f4B800000;
	selp.f32	%f497, 0fC3170000, 0fC2FE0000, %p71;
	selp.f32	%f498, %f496, %f139, %p71;
	mov.b32 	 %r266, %f498;
	and.b32  	%r267, %r266, 8388607;
	or.b32  	%r268, %r267, 1065353216;
	mov.b32 	 %f499, %r268;
	shr.u32 	%r269, %r266, 23;
	cvt.rn.f32.u32	%f500, %r269;
	add.f32 	%f501, %f497, %f500;
	setp.gt.f32	%p72, %f499, 0f3FB504F3;
	mul.f32 	%f502, %f499, 0f3F000000;
	add.f32 	%f503, %f501, 0f3F800000;
	selp.f32	%f504, %f502, %f499, %p72;
	selp.f32	%f505, %f503, %f501, %p72;
	add.f32 	%f506, %f504, 0fBF800000;
	add.f32 	%f492, %f504, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f491,%f492;
	// inline asm
	add.f32 	%f507, %f506, %f506;
	mul.f32 	%f508, %f491, %f507;
	mul.f32 	%f509, %f508, %f508;
	mov.f32 	%f510, 0f3C4CAF63;
	mov.f32 	%f511, 0f3B18F0FE;
	fma.rn.f32 	%f512, %f511, %f509, %f510;
	mov.f32 	%f513, 0f3DAAAABD;
	fma.rn.f32 	%f514, %f512, %f509, %f513;
	mul.rn.f32 	%f515, %f514, %f509;
	mul.rn.f32 	%f516, %f515, %f508;
	sub.f32 	%f517, %f506, %f508;
	neg.f32 	%f518, %f508;
	add.f32 	%f519, %f517, %f517;
	fma.rn.f32 	%f520, %f518, %f506, %f519;
	mul.rn.f32 	%f521, %f491, %f520;
	add.f32 	%f522, %f516, %f508;
	sub.f32 	%f523, %f508, %f522;
	add.f32 	%f524, %f516, %f523;
	add.f32 	%f525, %f521, %f524;
	add.f32 	%f526, %f522, %f525;
	sub.f32 	%f527, %f522, %f526;
	add.f32 	%f528, %f525, %f527;
	mov.f32 	%f529, 0f3F317200;
	mul.rn.f32 	%f530, %f505, %f529;
	mov.f32 	%f531, 0f35BFBE8E;
	mul.rn.f32 	%f532, %f505, %f531;
	add.f32 	%f533, %f530, %f526;
	sub.f32 	%f534, %f530, %f533;
	add.f32 	%f535, %f526, %f534;
	add.f32 	%f536, %f528, %f535;
	add.f32 	%f537, %f532, %f536;
	add.f32 	%f538, %f533, %f537;
	sub.f32 	%f539, %f533, %f538;
	add.f32 	%f540, %f537, %f539;
	mov.f32 	%f541, 0f3EE8BA2E;
	mul.rn.f32 	%f542, %f541, %f538;
	neg.f32 	%f543, %f542;
	fma.rn.f32 	%f544, %f541, %f538, %f543;
	fma.rn.f32 	%f545, %f541, %f540, %f544;
	mov.f32 	%f546, 0f00000000;
	fma.rn.f32 	%f547, %f546, %f538, %f545;
	add.rn.f32 	%f548, %f542, %f547;
	neg.f32 	%f549, %f548;
	add.rn.f32 	%f550, %f542, %f549;
	add.rn.f32 	%f551, %f550, %f547;
	mov.b32 	 %r270, %f548;
	setp.eq.s32	%p73, %r270, 1118925336;
	add.s32 	%r271, %r270, -1;
	mov.b32 	 %f552, %r271;
	add.f32 	%f553, %f551, 0f37000000;
	selp.f32	%f554, %f552, %f548, %p73;
	selp.f32	%f140, %f553, %f551, %p73;
	mul.f32 	%f555, %f554, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f556, %f555;
	mov.f32 	%f557, 0fBF317200;
	fma.rn.f32 	%f558, %f556, %f557, %f554;
	mov.f32 	%f559, 0fB5BFBE8E;
	fma.rn.f32 	%f560, %f556, %f559, %f558;
	mul.f32 	%f561, %f560, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f562, %f561;
	add.f32 	%f563, %f556, 0f00000000;
	ex2.approx.f32 	%f564, %f563;
	mul.f32 	%f565, %f562, %f564;
	setp.lt.f32	%p74, %f554, 0fC2D20000;
	selp.f32	%f566, 0f00000000, %f565, %p74;
	setp.gt.f32	%p75, %f554, 0f42D20000;
	selp.f32	%f900, 0f7F800000, %f566, %p75;
	setp.eq.f32	%p76, %f900, 0f7F800000;
	@%p76 bra 	BB0_82;

	fma.rn.f32 	%f900, %f900, %f140, %f900;

BB0_82:
	setp.lt.f32	%p77, %f899, 0f00000000;
	setp.eq.f32	%p78, %f138, 0f3F800000;
	and.pred  	%p3, %p77, %p78;
	mov.b32 	 %r272, %f900;
	xor.b32  	%r273, %r272, -2147483648;
	mov.b32 	 %f567, %r273;
	selp.f32	%f902, %f567, %f900, %p3;
	setp.eq.f32	%p79, %f899, 0f00000000;
	@%p79 bra 	BB0_85;
	bra.uni 	BB0_83;

BB0_85:
	add.f32 	%f570, %f899, %f899;
	selp.f32	%f902, %f570, 0f00000000, %p78;
	bra.uni 	BB0_86;

BB0_83:
	setp.geu.f32	%p80, %f899, 0f00000000;
	@%p80 bra 	BB0_86;

	cvt.rzi.f32.f32	%f569, %f541;
	setp.neu.f32	%p81, %f569, 0f3EE8BA2E;
	selp.f32	%f902, 0f7FFFFFFF, %f902, %p81;

BB0_86:
	add.f32 	%f571, %f139, 0f3EE8BA2E;
	mov.b32 	 %r274, %f571;
	setp.lt.s32	%p83, %r274, 2139095040;
	@%p83 bra 	BB0_91;

	setp.gtu.f32	%p84, %f139, 0f7F800000;
	@%p84 bra 	BB0_90;
	bra.uni 	BB0_88;

BB0_90:
	add.f32 	%f902, %f899, 0f3EE8BA2E;
	bra.uni 	BB0_91;

BB0_88:
	setp.neu.f32	%p85, %f139, 0f7F800000;
	@%p85 bra 	BB0_91;

	selp.f32	%f902, 0fFF800000, 0f7F800000, %p3;

BB0_91:
	mul.f32 	%f572, %f902, 0f437F0000;
	setp.eq.f32	%p86, %f899, 0f3F800000;
	selp.f32	%f573, 0f437F0000, %f572, %p86;
	cvt.rzi.u32.f32	%r275, %f573;
	cvt.u16.u32	%rs10, %r275;
	mov.u16 	%rs11, 255;
	st.v2.u8 	[%rd80], {%rs10, %rs11};
	ld.global.u32 	%r374, [imageEnabled];

BB0_92:
	ld.global.f32 	%f574, [lightColor];
	mul.f32 	%f151, %f896, %f574;
	ld.global.f32 	%f575, [lightColor+4];
	mul.f32 	%f152, %f897, %f575;
	ld.global.f32 	%f576, [lightColor+8];
	mul.f32 	%f153, %f898, %f576;
	and.b32  	%r276, %r374, 1;
	setp.eq.b32	%p87, %r276, 1;
	@!%p87 bra 	BB0_127;
	bra.uni 	BB0_93;

BB0_93:
	mov.f32 	%f579, 0f3E666666;
	cvt.rzi.f32.f32	%f580, %f579;
	fma.rn.f32 	%f581, %f580, 0fC0000000, 0f3EE66666;
	abs.f32 	%f154, %f581;
	abs.f32 	%f155, %f151;
	setp.lt.f32	%p88, %f155, 0f00800000;
	mul.f32 	%f582, %f155, 0f4B800000;
	selp.f32	%f583, 0fC3170000, 0fC2FE0000, %p88;
	selp.f32	%f584, %f582, %f155, %p88;
	mov.b32 	 %r277, %f584;
	and.b32  	%r278, %r277, 8388607;
	or.b32  	%r279, %r278, 1065353216;
	mov.b32 	 %f585, %r279;
	shr.u32 	%r280, %r277, 23;
	cvt.rn.f32.u32	%f586, %r280;
	add.f32 	%f587, %f583, %f586;
	setp.gt.f32	%p89, %f585, 0f3FB504F3;
	mul.f32 	%f588, %f585, 0f3F000000;
	add.f32 	%f589, %f587, 0f3F800000;
	selp.f32	%f590, %f588, %f585, %p89;
	selp.f32	%f591, %f589, %f587, %p89;
	add.f32 	%f592, %f590, 0fBF800000;
	add.f32 	%f578, %f590, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// inline asm
	add.f32 	%f593, %f592, %f592;
	mul.f32 	%f594, %f577, %f593;
	mul.f32 	%f595, %f594, %f594;
	mov.f32 	%f596, 0f3C4CAF63;
	mov.f32 	%f597, 0f3B18F0FE;
	fma.rn.f32 	%f598, %f597, %f595, %f596;
	mov.f32 	%f599, 0f3DAAAABD;
	fma.rn.f32 	%f600, %f598, %f595, %f599;
	mul.rn.f32 	%f601, %f600, %f595;
	mul.rn.f32 	%f602, %f601, %f594;
	sub.f32 	%f603, %f592, %f594;
	neg.f32 	%f604, %f594;
	add.f32 	%f605, %f603, %f603;
	fma.rn.f32 	%f606, %f604, %f592, %f605;
	mul.rn.f32 	%f607, %f577, %f606;
	add.f32 	%f608, %f602, %f594;
	sub.f32 	%f609, %f594, %f608;
	add.f32 	%f610, %f602, %f609;
	add.f32 	%f611, %f607, %f610;
	add.f32 	%f612, %f608, %f611;
	sub.f32 	%f613, %f608, %f612;
	add.f32 	%f614, %f611, %f613;
	mov.f32 	%f615, 0f3F317200;
	mul.rn.f32 	%f616, %f591, %f615;
	mov.f32 	%f617, 0f35BFBE8E;
	mul.rn.f32 	%f618, %f591, %f617;
	add.f32 	%f619, %f616, %f612;
	sub.f32 	%f620, %f616, %f619;
	add.f32 	%f621, %f612, %f620;
	add.f32 	%f622, %f614, %f621;
	add.f32 	%f623, %f618, %f622;
	add.f32 	%f624, %f619, %f623;
	sub.f32 	%f625, %f619, %f624;
	add.f32 	%f626, %f623, %f625;
	mov.f32 	%f627, 0f3EE66666;
	mul.rn.f32 	%f628, %f627, %f624;
	neg.f32 	%f629, %f628;
	fma.rn.f32 	%f630, %f627, %f624, %f629;
	fma.rn.f32 	%f631, %f627, %f626, %f630;
	mov.f32 	%f632, 0f00000000;
	fma.rn.f32 	%f633, %f632, %f624, %f631;
	add.rn.f32 	%f634, %f628, %f633;
	neg.f32 	%f635, %f634;
	add.rn.f32 	%f636, %f628, %f635;
	add.rn.f32 	%f637, %f636, %f633;
	mov.b32 	 %r281, %f634;
	setp.eq.s32	%p90, %r281, 1118925336;
	add.s32 	%r282, %r281, -1;
	mov.b32 	 %f638, %r282;
	add.f32 	%f639, %f637, 0f37000000;
	selp.f32	%f640, %f638, %f634, %p90;
	selp.f32	%f156, %f639, %f637, %p90;
	mul.f32 	%f641, %f640, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f642, %f641;
	mov.f32 	%f643, 0fBF317200;
	fma.rn.f32 	%f644, %f642, %f643, %f640;
	mov.f32 	%f645, 0fB5BFBE8E;
	fma.rn.f32 	%f646, %f642, %f645, %f644;
	mul.f32 	%f647, %f646, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f648, %f647;
	add.f32 	%f649, %f642, 0f00000000;
	ex2.approx.f32 	%f650, %f649;
	mul.f32 	%f651, %f648, %f650;
	setp.lt.f32	%p91, %f640, 0fC2D20000;
	selp.f32	%f652, 0f00000000, %f651, %p91;
	setp.gt.f32	%p92, %f640, 0f42D20000;
	selp.f32	%f903, 0f7F800000, %f652, %p92;
	setp.eq.f32	%p93, %f903, 0f7F800000;
	@%p93 bra 	BB0_95;

	fma.rn.f32 	%f903, %f903, %f156, %f903;

BB0_95:
	setp.lt.f32	%p94, %f151, 0f00000000;
	setp.eq.f32	%p95, %f154, 0f3F800000;
	and.pred  	%p4, %p94, %p95;
	mov.b32 	 %r283, %f903;
	xor.b32  	%r284, %r283, -2147483648;
	mov.b32 	 %f653, %r284;
	selp.f32	%f905, %f653, %f903, %p4;
	setp.eq.f32	%p96, %f151, 0f00000000;
	@%p96 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f656, %f151, %f151;
	selp.f32	%f905, %f656, 0f00000000, %p95;
	bra.uni 	BB0_99;

BB0_96:
	setp.geu.f32	%p97, %f151, 0f00000000;
	@%p97 bra 	BB0_99;

	cvt.rzi.f32.f32	%f655, %f627;
	setp.neu.f32	%p98, %f655, 0f3EE66666;
	selp.f32	%f905, 0f7FFFFFFF, %f905, %p98;

BB0_99:
	add.f32 	%f657, %f155, 0f3EE66666;
	mov.b32 	 %r285, %f657;
	setp.lt.s32	%p100, %r285, 2139095040;
	@%p100 bra 	BB0_104;

	setp.gtu.f32	%p101, %f155, 0f7F800000;
	@%p101 bra 	BB0_103;
	bra.uni 	BB0_101;

BB0_103:
	add.f32 	%f905, %f151, 0f3EE66666;
	bra.uni 	BB0_104;

BB0_101:
	setp.neu.f32	%p102, %f155, 0f7F800000;
	@%p102 bra 	BB0_104;

	selp.f32	%f905, 0fFF800000, 0f7F800000, %p4;

BB0_104:
	setp.eq.f32	%p103, %f151, 0f3F800000;
	selp.f32	%f167, 0f3F800000, %f905, %p103;
	abs.f32 	%f168, %f152;
	setp.lt.f32	%p104, %f168, 0f00800000;
	mul.f32 	%f660, %f168, 0f4B800000;
	selp.f32	%f661, 0fC3170000, 0fC2FE0000, %p104;
	selp.f32	%f662, %f660, %f168, %p104;
	mov.b32 	 %r286, %f662;
	and.b32  	%r287, %r286, 8388607;
	or.b32  	%r288, %r287, 1065353216;
	mov.b32 	 %f663, %r288;
	shr.u32 	%r289, %r286, 23;
	cvt.rn.f32.u32	%f664, %r289;
	add.f32 	%f665, %f661, %f664;
	setp.gt.f32	%p105, %f663, 0f3FB504F3;
	mul.f32 	%f666, %f663, 0f3F000000;
	add.f32 	%f667, %f665, 0f3F800000;
	selp.f32	%f668, %f666, %f663, %p105;
	selp.f32	%f669, %f667, %f665, %p105;
	add.f32 	%f670, %f668, 0fBF800000;
	add.f32 	%f659, %f668, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f658,%f659;
	// inline asm
	add.f32 	%f671, %f670, %f670;
	mul.f32 	%f672, %f658, %f671;
	mul.f32 	%f673, %f672, %f672;
	fma.rn.f32 	%f676, %f597, %f673, %f596;
	fma.rn.f32 	%f678, %f676, %f673, %f599;
	mul.rn.f32 	%f679, %f678, %f673;
	mul.rn.f32 	%f680, %f679, %f672;
	sub.f32 	%f681, %f670, %f672;
	neg.f32 	%f682, %f672;
	add.f32 	%f683, %f681, %f681;
	fma.rn.f32 	%f684, %f682, %f670, %f683;
	mul.rn.f32 	%f685, %f658, %f684;
	add.f32 	%f686, %f680, %f672;
	sub.f32 	%f687, %f672, %f686;
	add.f32 	%f688, %f680, %f687;
	add.f32 	%f689, %f685, %f688;
	add.f32 	%f690, %f686, %f689;
	sub.f32 	%f691, %f686, %f690;
	add.f32 	%f692, %f689, %f691;
	mul.rn.f32 	%f694, %f669, %f615;
	mul.rn.f32 	%f696, %f669, %f617;
	add.f32 	%f697, %f694, %f690;
	sub.f32 	%f698, %f694, %f697;
	add.f32 	%f699, %f690, %f698;
	add.f32 	%f700, %f692, %f699;
	add.f32 	%f701, %f696, %f700;
	add.f32 	%f702, %f697, %f701;
	sub.f32 	%f703, %f697, %f702;
	add.f32 	%f704, %f701, %f703;
	mul.rn.f32 	%f706, %f627, %f702;
	neg.f32 	%f707, %f706;
	fma.rn.f32 	%f708, %f627, %f702, %f707;
	fma.rn.f32 	%f709, %f627, %f704, %f708;
	fma.rn.f32 	%f711, %f632, %f702, %f709;
	add.rn.f32 	%f712, %f706, %f711;
	neg.f32 	%f713, %f712;
	add.rn.f32 	%f714, %f706, %f713;
	add.rn.f32 	%f715, %f714, %f711;
	mov.b32 	 %r290, %f712;
	setp.eq.s32	%p106, %r290, 1118925336;
	add.s32 	%r291, %r290, -1;
	mov.b32 	 %f716, %r291;
	add.f32 	%f717, %f715, 0f37000000;
	selp.f32	%f718, %f716, %f712, %p106;
	selp.f32	%f169, %f717, %f715, %p106;
	mul.f32 	%f719, %f718, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f720, %f719;
	fma.rn.f32 	%f722, %f720, %f643, %f718;
	fma.rn.f32 	%f724, %f720, %f645, %f722;
	mul.f32 	%f725, %f724, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f726, %f725;
	add.f32 	%f727, %f720, 0f00000000;
	ex2.approx.f32 	%f728, %f727;
	mul.f32 	%f729, %f726, %f728;
	setp.lt.f32	%p107, %f718, 0fC2D20000;
	selp.f32	%f730, 0f00000000, %f729, %p107;
	setp.gt.f32	%p108, %f718, 0f42D20000;
	selp.f32	%f906, 0f7F800000, %f730, %p108;
	setp.eq.f32	%p109, %f906, 0f7F800000;
	@%p109 bra 	BB0_106;

	fma.rn.f32 	%f906, %f906, %f169, %f906;

BB0_106:
	setp.lt.f32	%p110, %f152, 0f00000000;
	and.pred  	%p5, %p110, %p95;
	mov.b32 	 %r292, %f906;
	xor.b32  	%r293, %r292, -2147483648;
	mov.b32 	 %f731, %r293;
	selp.f32	%f908, %f731, %f906, %p5;
	setp.eq.f32	%p112, %f152, 0f00000000;
	@%p112 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f734, %f152, %f152;
	selp.f32	%f908, %f734, 0f00000000, %p95;
	bra.uni 	BB0_110;

BB0_107:
	setp.geu.f32	%p113, %f152, 0f00000000;
	@%p113 bra 	BB0_110;

	cvt.rzi.f32.f32	%f733, %f627;
	setp.neu.f32	%p114, %f733, 0f3EE66666;
	selp.f32	%f908, 0f7FFFFFFF, %f908, %p114;

BB0_110:
	add.f32 	%f735, %f168, 0f3EE66666;
	mov.b32 	 %r294, %f735;
	setp.lt.s32	%p116, %r294, 2139095040;
	@%p116 bra 	BB0_115;

	setp.gtu.f32	%p117, %f168, 0f7F800000;
	@%p117 bra 	BB0_114;
	bra.uni 	BB0_112;

BB0_114:
	add.f32 	%f908, %f152, 0f3EE66666;
	bra.uni 	BB0_115;

BB0_112:
	setp.neu.f32	%p118, %f168, 0f7F800000;
	@%p118 bra 	BB0_115;

	selp.f32	%f908, 0fFF800000, 0f7F800000, %p5;

BB0_115:
	setp.eq.f32	%p119, %f152, 0f3F800000;
	selp.f32	%f180, 0f3F800000, %f908, %p119;
	abs.f32 	%f181, %f153;
	setp.lt.f32	%p120, %f181, 0f00800000;
	mul.f32 	%f738, %f181, 0f4B800000;
	selp.f32	%f739, 0fC3170000, 0fC2FE0000, %p120;
	selp.f32	%f740, %f738, %f181, %p120;
	mov.b32 	 %r295, %f740;
	and.b32  	%r296, %r295, 8388607;
	or.b32  	%r297, %r296, 1065353216;
	mov.b32 	 %f741, %r297;
	shr.u32 	%r298, %r295, 23;
	cvt.rn.f32.u32	%f742, %r298;
	add.f32 	%f743, %f739, %f742;
	setp.gt.f32	%p121, %f741, 0f3FB504F3;
	mul.f32 	%f744, %f741, 0f3F000000;
	add.f32 	%f745, %f743, 0f3F800000;
	selp.f32	%f746, %f744, %f741, %p121;
	selp.f32	%f747, %f745, %f743, %p121;
	add.f32 	%f748, %f746, 0fBF800000;
	add.f32 	%f737, %f746, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f736,%f737;
	// inline asm
	add.f32 	%f749, %f748, %f748;
	mul.f32 	%f750, %f736, %f749;
	mul.f32 	%f751, %f750, %f750;
	fma.rn.f32 	%f754, %f597, %f751, %f596;
	fma.rn.f32 	%f756, %f754, %f751, %f599;
	mul.rn.f32 	%f757, %f756, %f751;
	mul.rn.f32 	%f758, %f757, %f750;
	sub.f32 	%f759, %f748, %f750;
	neg.f32 	%f760, %f750;
	add.f32 	%f761, %f759, %f759;
	fma.rn.f32 	%f762, %f760, %f748, %f761;
	mul.rn.f32 	%f763, %f736, %f762;
	add.f32 	%f764, %f758, %f750;
	sub.f32 	%f765, %f750, %f764;
	add.f32 	%f766, %f758, %f765;
	add.f32 	%f767, %f763, %f766;
	add.f32 	%f768, %f764, %f767;
	sub.f32 	%f769, %f764, %f768;
	add.f32 	%f770, %f767, %f769;
	mul.rn.f32 	%f772, %f747, %f615;
	mul.rn.f32 	%f774, %f747, %f617;
	add.f32 	%f775, %f772, %f768;
	sub.f32 	%f776, %f772, %f775;
	add.f32 	%f777, %f768, %f776;
	add.f32 	%f778, %f770, %f777;
	add.f32 	%f779, %f774, %f778;
	add.f32 	%f780, %f775, %f779;
	sub.f32 	%f781, %f775, %f780;
	add.f32 	%f782, %f779, %f781;
	mul.rn.f32 	%f784, %f627, %f780;
	neg.f32 	%f785, %f784;
	fma.rn.f32 	%f786, %f627, %f780, %f785;
	fma.rn.f32 	%f787, %f627, %f782, %f786;
	fma.rn.f32 	%f789, %f632, %f780, %f787;
	add.rn.f32 	%f790, %f784, %f789;
	neg.f32 	%f791, %f790;
	add.rn.f32 	%f792, %f784, %f791;
	add.rn.f32 	%f793, %f792, %f789;
	mov.b32 	 %r299, %f790;
	setp.eq.s32	%p122, %r299, 1118925336;
	add.s32 	%r300, %r299, -1;
	mov.b32 	 %f794, %r300;
	add.f32 	%f795, %f793, 0f37000000;
	selp.f32	%f796, %f794, %f790, %p122;
	selp.f32	%f182, %f795, %f793, %p122;
	mul.f32 	%f797, %f796, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f798, %f797;
	fma.rn.f32 	%f800, %f798, %f643, %f796;
	fma.rn.f32 	%f802, %f798, %f645, %f800;
	mul.f32 	%f803, %f802, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f804, %f803;
	add.f32 	%f805, %f798, 0f00000000;
	ex2.approx.f32 	%f806, %f805;
	mul.f32 	%f807, %f804, %f806;
	setp.lt.f32	%p123, %f796, 0fC2D20000;
	selp.f32	%f808, 0f00000000, %f807, %p123;
	setp.gt.f32	%p124, %f796, 0f42D20000;
	selp.f32	%f909, 0f7F800000, %f808, %p124;
	setp.eq.f32	%p125, %f909, 0f7F800000;
	@%p125 bra 	BB0_117;

	fma.rn.f32 	%f909, %f909, %f182, %f909;

BB0_117:
	setp.lt.f32	%p126, %f153, 0f00000000;
	and.pred  	%p6, %p126, %p95;
	mov.b32 	 %r301, %f909;
	xor.b32  	%r302, %r301, -2147483648;
	mov.b32 	 %f809, %r302;
	selp.f32	%f911, %f809, %f909, %p6;
	setp.eq.f32	%p128, %f153, 0f00000000;
	@%p128 bra 	BB0_120;
	bra.uni 	BB0_118;

BB0_120:
	add.f32 	%f812, %f153, %f153;
	selp.f32	%f911, %f812, 0f00000000, %p95;
	bra.uni 	BB0_121;

BB0_118:
	setp.geu.f32	%p129, %f153, 0f00000000;
	@%p129 bra 	BB0_121;

	cvt.rzi.f32.f32	%f811, %f627;
	setp.neu.f32	%p130, %f811, 0f3EE66666;
	selp.f32	%f911, 0f7FFFFFFF, %f911, %p130;

BB0_121:
	add.f32 	%f813, %f181, 0f3EE66666;
	mov.b32 	 %r303, %f813;
	setp.lt.s32	%p132, %r303, 2139095040;
	@%p132 bra 	BB0_126;

	setp.gtu.f32	%p133, %f181, 0f7F800000;
	@%p133 bra 	BB0_125;
	bra.uni 	BB0_123;

BB0_125:
	add.f32 	%f911, %f153, 0f3EE66666;
	bra.uni 	BB0_126;

BB0_123:
	setp.neu.f32	%p134, %f181, 0f7F800000;
	@%p134 bra 	BB0_126;

	selp.f32	%f911, 0fFF800000, 0f7F800000, %p6;

BB0_126:
	mov.u32 	%r335, 2;
	setp.eq.f32	%p135, %f153, 0f3F800000;
	selp.f32	%f814, 0f3F800000, %f911, %p135;
	cvt.u64.u32	%rd90, %r3;
	cvt.u64.u32	%rd89, %r2;
	mov.u64 	%rd93, image;
	cvta.global.u64 	%rd88, %rd93;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r335, %r107, %rd89, %rd90, %rd26, %rd26);
	// inline asm
	cvt.sat.f32.f32	%f815, %f814;
	mul.f32 	%f816, %f815, 0f437FFD71;
	cvt.rzi.u32.f32	%r306, %f816;
	cvt.sat.f32.f32	%f817, %f180;
	mul.f32 	%f818, %f817, 0f437FFD71;
	cvt.rzi.u32.f32	%r307, %f818;
	cvt.sat.f32.f32	%f819, %f167;
	mul.f32 	%f820, %f819, 0f437FFD71;
	cvt.rzi.u32.f32	%r308, %f820;
	cvt.u16.u32	%rs12, %r306;
	cvt.u16.u32	%rs13, %r308;
	cvt.u16.u32	%rs14, %r307;
	mov.u16 	%rs15, 255;
	st.v4.u8 	[%rd87], {%rs12, %rs14, %rs13, %rs15};
	ld.global.u32 	%r374, [imageEnabled];

BB0_127:
	and.b32  	%r309, %r374, 4;
	setp.eq.s32	%p136, %r309, 0;
	@%p136 bra 	BB0_139;

	ld.global.u32 	%r310, [additive];
	setp.eq.s32	%p137, %r310, 0;
	cvt.u64.u32	%rd17, %r2;
	cvt.u64.u32	%rd18, %r3;
	// inline asm
	{  cvt.rn.f16.f32 %rs16, %f373;}

	// inline asm
	@%p137 bra 	BB0_130;

	mov.u32 	%r336, 2;
	mov.u64 	%rd106, image_HDR;
	cvta.global.u64 	%rd95, %rd106;
	mov.u32 	%r314, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r336, %r314, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs23, %rs24, %rs25, %rs26}, [%rd94];
	// inline asm
	{  cvt.f32.f16 %f822, %rs23;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f823, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f824, %rs25;}

	// inline asm
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd95, %r336, %r314, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f825, %f151, %f822;
	add.f32 	%f826, %f152, %f823;
	add.f32 	%f827, %f153, %f824;
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f827;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f826;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f825;}

	// inline asm
	st.v4.u16 	[%rd100], {%rs20, %rs21, %rs22, %rs16};
	bra.uni 	BB0_139;

BB0_130:
	mov.u32 	%r337, 2;
	mov.u64 	%rd113, image_HDR;
	cvta.global.u64 	%rd108, %rd113;
	mov.u32 	%r316, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r337, %r316, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f153;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f152;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f151;}

	// inline asm
	st.v4.u16 	[%rd107], {%rs27, %rs28, %rs29, %rs16};

BB0_139:
	ret;
}


