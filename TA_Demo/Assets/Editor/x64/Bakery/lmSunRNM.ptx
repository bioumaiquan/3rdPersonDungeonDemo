//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<147>;
	.reg .b16 	%rs<157>;
	.reg .f32 	%f<1106>;
	.reg .b32 	%r<408>;
	.reg .b64 	%rd<272>;


	mov.u64 	%rd271, __local_depot0;
	cvta.local.u64 	%SP, %rd271;
	ld.global.v2.u32 	{%r107, %r108}, [pixelID];
	cvt.u64.u32	%rd27, %r107;
	cvt.u64.u32	%rd28, %r108;
	mov.u64 	%rd31, uvnormal;
	cvta.global.u64 	%rd26, %rd31;
	mov.u32 	%r105, 2;
	mov.u32 	%r106, 4;
	mov.u64 	%rd30, 0;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r105, %r106, %rd27, %rd28, %rd30, %rd30);
	// inline asm
	ld.u32 	%r1, [%rd25];
	shr.u32 	%r111, %r1, 16;
	cvt.u16.u32	%rs1, %r111;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r1;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p6, %rs8, 0;
	mov.f32 	%f1062, 0f00000000;
	mov.f32 	%f1063, %f1062;
	mov.f32 	%f1064, %f1062;
	@%p6 bra 	BB0_2;

	ld.u8 	%rs9, [%rd25+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f184, %rs11;
	div.rn.f32 	%f185, %f184, 0f437F0000;
	fma.rn.f32 	%f186, %f185, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f187, %rs9;
	div.rn.f32 	%f188, %f187, 0f437F0000;
	fma.rn.f32 	%f189, %f188, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f190, %rs6;
	div.rn.f32 	%f191, %f190, 0f437F0000;
	fma.rn.f32 	%f192, %f191, 0f40000000, 0fBF800000;
	mul.f32 	%f193, %f189, %f189;
	fma.rn.f32 	%f194, %f186, %f186, %f193;
	fma.rn.f32 	%f195, %f192, %f192, %f194;
	sqrt.rn.f32 	%f196, %f195;
	rcp.rn.f32 	%f197, %f196;
	mul.f32 	%f1062, %f186, %f197;
	mul.f32 	%f1063, %f189, %f197;
	mul.f32 	%f1064, %f192, %f197;

BB0_2:
	ld.global.v2.u32 	{%r112, %r113}, [pixelID];
	ld.global.v2.u32 	{%r115, %r116}, [tileInfo];
	add.s32 	%r2, %r112, %r115;
	add.s32 	%r3, %r113, %r116;
	setp.eq.f32	%p7, %f1063, 0f00000000;
	setp.eq.f32	%p8, %f1062, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	setp.eq.f32	%p10, %f1064, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_135;
	bra.uni 	BB0_3;

BB0_135:
	ld.global.u32 	%r407, [imageEnabled];
	and.b32  	%r336, %r407, 1;
	setp.eq.b32	%p140, %r336, 1;
	@!%p140 bra 	BB0_137;
	bra.uni 	BB0_136;

BB0_136:
	cvt.u64.u32	%rd175, %r2;
	cvt.u64.u32	%rd176, %r3;
	mov.u64 	%rd179, image;
	cvta.global.u64 	%rd174, %rd179;
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd174, %r105, %r106, %rd175, %rd176, %rd30, %rd30);
	// inline asm
	mov.u16 	%rs102, 0;
	st.v4.u8 	[%rd173], {%rs102, %rs102, %rs102, %rs102};
	ld.global.u32 	%r407, [imageEnabled];

BB0_137:
	and.b32  	%r339, %r407, 8;
	setp.eq.s32	%p141, %r339, 0;
	@%p141 bra 	BB0_139;

	cvt.u64.u32	%rd183, %r3;
	cvt.u64.u32	%rd182, %r2;
	mov.u64 	%rd186, image_Mask;
	cvta.global.u64 	%rd181, %rd186;
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd181, %r105, %r105, %rd182, %rd183, %rd30, %rd30);
	// inline asm
	mov.f32 	%f965, 0f00000000;
	cvt.rzi.u32.f32	%r342, %f965;
	cvt.u16.u32	%rs103, %r342;
	mov.u16 	%rs104, 0;
	st.v2.u8 	[%rd180], {%rs103, %rs104};
	ld.global.u32 	%r407, [imageEnabled];

BB0_139:
	cvt.u64.u32	%rd23, %r2;
	cvt.u64.u32	%rd24, %r3;
	and.b32  	%r343, %r407, 4;
	setp.eq.s32	%p142, %r343, 0;
	@%p142 bra 	BB0_143;

	ld.global.u32 	%r344, [additive];
	setp.eq.s32	%p143, %r344, 0;
	@%p143 bra 	BB0_142;

	mov.u64 	%rd199, image_HDR;
	cvta.global.u64 	%rd188, %rd199;
	mov.u32 	%r348, 8;
	// inline asm
	call (%rd187), _rt_buffer_get_64, (%rd188, %r105, %r348, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	ld.v4.u16 	{%rs111, %rs112, %rs113, %rs114}, [%rd187];
	// inline asm
	{  cvt.f32.f16 %f966, %rs111;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f967, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f968, %rs113;}

	// inline asm
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd188, %r105, %r348, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	add.f32 	%f969, %f966, 0f00000000;
	add.f32 	%f970, %f967, 0f00000000;
	add.f32 	%f971, %f968, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f971;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f970;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f969;}

	// inline asm
	mov.u16 	%rs115, 0;
	st.v4.u16 	[%rd193], {%rs108, %rs109, %rs110, %rs115};
	bra.uni 	BB0_143;

BB0_3:
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f7, [directDir];
	ld.global.v2.u32 	{%r124, %r125}, [pixelID];
	cvt.u64.u32	%rd34, %r124;
	cvt.u64.u32	%rd35, %r125;
	mov.u64 	%rd44, uvpos;
	cvta.global.u64 	%rd33, %rd44;
	mov.u32 	%r121, 12;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r105, %r121, %rd34, %rd35, %rd30, %rd30);
	// inline asm
	ld.f32 	%f199, [%rd32+8];
	ld.f32 	%f200, [%rd32+4];
	ld.f32 	%f201, [%rd32];
	mul.f32 	%f202, %f201, 0f3456BF95;
	mul.f32 	%f203, %f200, 0f3456BF95;
	mul.f32 	%f204, %f199, 0f3456BF95;
	abs.f32 	%f205, %f1062;
	div.rn.f32 	%f206, %f202, %f205;
	abs.f32 	%f207, %f1063;
	div.rn.f32 	%f208, %f203, %f207;
	abs.f32 	%f209, %f1064;
	div.rn.f32 	%f210, %f204, %f209;
	abs.f32 	%f211, %f206;
	abs.f32 	%f212, %f208;
	abs.f32 	%f213, %f210;
	mov.f32 	%f214, 0f38D1B717;
	max.f32 	%f215, %f211, %f214;
	max.f32 	%f216, %f212, %f214;
	max.f32 	%f217, %f213, %f214;
	fma.rn.f32 	%f10, %f1062, %f215, %f201;
	fma.rn.f32 	%f11, %f1063, %f216, %f200;
	fma.rn.f32 	%f12, %f1064, %f217, %f199;
	abs.f32 	%f218, %f7;
	abs.f32 	%f219, %f9;
	setp.gt.f32	%p12, %f218, %f219;
	neg.f32 	%f220, %f8;
	neg.f32 	%f221, %f9;
	selp.f32	%f222, %f220, 0f00000000, %p12;
	selp.f32	%f223, %f7, %f221, %p12;
	selp.f32	%f224, 0f00000000, %f8, %p12;
	mul.f32 	%f225, %f223, %f223;
	fma.rn.f32 	%f226, %f222, %f222, %f225;
	fma.rn.f32 	%f227, %f224, %f224, %f226;
	sqrt.rn.f32 	%f228, %f227;
	rcp.rn.f32 	%f229, %f228;
	mul.f32 	%f13, %f222, %f229;
	mul.f32 	%f14, %f223, %f229;
	mul.f32 	%f15, %f224, %f229;
	ld.global.v2.u32 	{%r128, %r129}, [pixelID];
	cvt.u64.u32	%rd40, %r128;
	cvt.u64.u32	%rd41, %r129;
	mov.u64 	%rd45, rnd_seeds;
	cvta.global.u64 	%rd39, %rd45;
	// inline asm
	call (%rd38), _rt_buffer_get_64, (%rd39, %r105, %r106, %rd40, %rd41, %rd30, %rd30);
	// inline asm
	ld.global.u32 	%r376, [samples];
	mov.f32 	%f1079, 0f00000000;
	setp.lt.s32	%p13, %r376, 1;
	@%p13 bra 	BB0_55;

	cvt.rn.f32.s32	%f231, %r376;
	rcp.rn.f32 	%f16, %f231;
	ld.u32 	%r402, [%rd38];
	mul.f32 	%f17, %f10, 0f3456BF95;
	mul.f32 	%f18, %f11, 0f3456BF95;
	mul.f32 	%f19, %f12, 0f3456BF95;
	mul.f32 	%f232, %f7, %f14;
	mul.f32 	%f233, %f8, %f13;
	sub.f32 	%f20, %f233, %f232;
	mul.f32 	%f234, %f9, %f13;
	mul.f32 	%f235, %f7, %f15;
	sub.f32 	%f21, %f235, %f234;
	mul.f32 	%f236, %f8, %f15;
	mul.f32 	%f237, %f9, %f14;
	sub.f32 	%f22, %f237, %f236;
	mov.f32 	%f1079, 0f00000000;
	mov.u32 	%r377, 0;
	abs.f32 	%f238, %f18;
	abs.f32 	%f239, %f17;
	max.f32 	%f240, %f239, %f238;
	abs.f32 	%f241, %f19;
	max.f32 	%f242, %f240, %f241;

BB0_5:
	setp.lt.s32	%p14, %r376, 1;
	@%p14 bra 	BB0_54;

	cvt.rn.f32.s32	%f24, %r377;
	max.f32 	%f25, %f242, %f214;
	mov.u32 	%r379, 0;

BB0_7:
	mad.lo.s32 	%r134, %r402, 1664525, 1013904223;
	and.b32  	%r135, %r134, 16777215;
	cvt.rn.f32.u32	%f244, %r135;
	fma.rn.f32 	%f245, %f244, 0f33800000, %f24;
	mul.f32 	%f246, %f16, %f245;
	mad.lo.s32 	%r402, %r134, 1664525, 1013904223;
	and.b32  	%r136, %r402, 16777215;
	cvt.rn.f32.u32	%f247, %r136;
	cvt.rn.f32.s32	%f248, %r379;
	fma.rn.f32 	%f249, %f247, 0f33800000, %f248;
	mul.f32 	%f250, %f16, %f249;
	sqrt.rn.f32 	%f27, %f246;
	mul.f32 	%f1073, %f250, 0f40C90FDB;
	abs.f32 	%f29, %f1073;
	setp.neu.f32	%p15, %f29, 0f7F800000;
	mov.f32 	%f1067, %f1073;
	@%p15 bra 	BB0_9;

	mov.f32 	%f251, 0f00000000;
	mul.rn.f32 	%f1067, %f1073, %f251;

BB0_9:
	mul.f32 	%f252, %f1067, 0f3F22F983;
	cvt.rni.s32.f32	%r390, %f252;
	cvt.rn.f32.s32	%f253, %r390;
	neg.f32 	%f254, %f253;
	mov.f32 	%f255, 0f3FC90FDA;
	fma.rn.f32 	%f256, %f254, %f255, %f1067;
	mov.f32 	%f257, 0f33A22168;
	fma.rn.f32 	%f258, %f254, %f257, %f256;
	mov.f32 	%f259, 0f27C234C5;
	fma.rn.f32 	%f1068, %f254, %f259, %f258;
	abs.f32 	%f260, %f1067;
	setp.leu.f32	%p16, %f260, 0f47CE4780;
	@%p16 bra 	BB0_20;

	mov.b32 	 %r13, %f1067;
	shr.u32 	%r14, %r13, 23;
	shl.b32 	%r139, %r13, 8;
	or.b32  	%r15, %r139, -2147483648;
	add.u64 	%rd47, %SP, 4;
	cvta.to.local.u64 	%rd268, %rd47;
	mov.u32 	%r382, 0;
	mov.u64 	%rd267, __cudart_i2opi_f;
	mov.u32 	%r381, -6;

BB0_11:
	.pragma "nounroll";
	ld.const.u32 	%r142, [%rd267];
	// inline asm
	{
	mad.lo.cc.u32   %r140, %r142, %r15, %r382;
	madc.hi.u32     %r382, %r142, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd268], %r140;
	add.s64 	%rd268, %rd268, 4;
	add.s64 	%rd267, %rd267, 4;
	add.s32 	%r381, %r381, 1;
	setp.ne.s32	%p17, %r381, 0;
	@%p17 bra 	BB0_11;

	and.b32  	%r145, %r14, 255;
	add.s32 	%r146, %r145, -128;
	shr.u32 	%r147, %r146, 5;
	and.b32  	%r20, %r13, -2147483648;
	cvta.to.local.u64 	%rd49, %rd47;
	st.local.u32 	[%rd49+24], %r382;
	mov.u32 	%r148, 6;
	sub.s32 	%r149, %r148, %r147;
	mul.wide.s32 	%rd50, %r149, 4;
	add.s64 	%rd8, %rd49, %rd50;
	ld.local.u32 	%r383, [%rd8];
	ld.local.u32 	%r384, [%rd8+-4];
	and.b32  	%r23, %r14, 31;
	setp.eq.s32	%p18, %r23, 0;
	@%p18 bra 	BB0_14;

	mov.u32 	%r150, 32;
	sub.s32 	%r151, %r150, %r23;
	shr.u32 	%r152, %r384, %r151;
	shl.b32 	%r153, %r383, %r23;
	add.s32 	%r383, %r152, %r153;
	ld.local.u32 	%r154, [%rd8+-8];
	shr.u32 	%r155, %r154, %r151;
	shl.b32 	%r156, %r384, %r23;
	add.s32 	%r384, %r155, %r156;

BB0_14:
	shr.u32 	%r157, %r384, 30;
	shl.b32 	%r158, %r383, 2;
	add.s32 	%r385, %r157, %r158;
	shl.b32 	%r29, %r384, 2;
	shr.u32 	%r159, %r385, 31;
	shr.u32 	%r160, %r383, 30;
	add.s32 	%r30, %r159, %r160;
	setp.eq.s32	%p19, %r159, 0;
	@%p19 bra 	BB0_15;
	bra.uni 	BB0_16;

BB0_15:
	mov.u32 	%r386, %r20;
	mov.u32 	%r387, %r29;
	bra.uni 	BB0_17;

BB0_16:
	not.b32 	%r161, %r385;
	neg.s32 	%r387, %r29;
	setp.eq.s32	%p20, %r29, 0;
	selp.u32	%r162, 1, 0, %p20;
	add.s32 	%r385, %r162, %r161;
	xor.b32  	%r386, %r20, -2147483648;

BB0_17:
	clz.b32 	%r389, %r385;
	setp.eq.s32	%p21, %r389, 0;
	shl.b32 	%r163, %r385, %r389;
	mov.u32 	%r164, 32;
	sub.s32 	%r165, %r164, %r389;
	shr.u32 	%r166, %r387, %r165;
	add.s32 	%r167, %r166, %r163;
	selp.b32	%r38, %r385, %r167, %p21;
	mov.u32 	%r168, -921707870;
	mul.hi.u32 	%r388, %r38, %r168;
	setp.eq.s32	%p22, %r20, 0;
	neg.s32 	%r169, %r30;
	selp.b32	%r390, %r30, %r169, %p22;
	setp.lt.s32	%p23, %r388, 1;
	@%p23 bra 	BB0_19;

	mul.lo.s32 	%r170, %r38, -921707870;
	shr.u32 	%r171, %r170, 31;
	shl.b32 	%r172, %r388, 1;
	add.s32 	%r388, %r171, %r172;
	add.s32 	%r389, %r389, 1;

BB0_19:
	mov.u32 	%r173, 126;
	sub.s32 	%r174, %r173, %r389;
	shl.b32 	%r175, %r174, 23;
	add.s32 	%r176, %r388, 1;
	shr.u32 	%r177, %r176, 7;
	add.s32 	%r178, %r177, 1;
	shr.u32 	%r179, %r178, 1;
	add.s32 	%r180, %r179, %r175;
	or.b32  	%r181, %r180, %r386;
	mov.b32 	 %f1068, %r181;

BB0_20:
	mul.rn.f32 	%f35, %f1068, %f1068;
	add.s32 	%r46, %r390, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p24, %r47, 0;
	@%p24 bra 	BB0_22;
	bra.uni 	BB0_21;

BB0_22:
	mov.f32 	%f263, 0f3C08839E;
	mov.f32 	%f264, 0fB94CA1F9;
	fma.rn.f32 	%f1069, %f264, %f35, %f263;
	bra.uni 	BB0_23;

BB0_21:
	mov.f32 	%f261, 0fBAB6061A;
	mov.f32 	%f262, 0f37CCF5CE;
	fma.rn.f32 	%f1069, %f262, %f35, %f261;

BB0_23:
	@%p24 bra 	BB0_25;
	bra.uni 	BB0_24;

BB0_25:
	mov.f32 	%f268, 0fBE2AAAA3;
	fma.rn.f32 	%f269, %f1069, %f35, %f268;
	mov.f32 	%f270, 0f00000000;
	fma.rn.f32 	%f1070, %f269, %f35, %f270;
	bra.uni 	BB0_26;

BB0_24:
	mov.f32 	%f265, 0f3D2AAAA5;
	fma.rn.f32 	%f266, %f1069, %f35, %f265;
	mov.f32 	%f267, 0fBF000000;
	fma.rn.f32 	%f1070, %f266, %f35, %f267;

BB0_26:
	fma.rn.f32 	%f1071, %f1070, %f1068, %f1068;
	@%p24 bra 	BB0_28;

	mov.f32 	%f271, 0f3F800000;
	fma.rn.f32 	%f1071, %f1070, %f35, %f271;

BB0_28:
	and.b32  	%r182, %r46, 2;
	setp.eq.s32	%p27, %r182, 0;
	@%p27 bra 	BB0_30;

	mov.f32 	%f272, 0f00000000;
	mov.f32 	%f273, 0fBF800000;
	fma.rn.f32 	%f1071, %f1071, %f273, %f272;

BB0_30:
	@%p15 bra 	BB0_32;

	mov.f32 	%f274, 0f00000000;
	mul.rn.f32 	%f1073, %f1073, %f274;

BB0_32:
	mul.f32 	%f275, %f1073, 0f3F22F983;
	cvt.rni.s32.f32	%r400, %f275;
	cvt.rn.f32.s32	%f276, %r400;
	neg.f32 	%f277, %f276;
	fma.rn.f32 	%f279, %f277, %f255, %f1073;
	fma.rn.f32 	%f281, %f277, %f257, %f279;
	fma.rn.f32 	%f1074, %f277, %f259, %f281;
	abs.f32 	%f283, %f1073;
	setp.leu.f32	%p29, %f283, 0f47CE4780;
	@%p29 bra 	BB0_43;

	mov.b32 	 %r49, %f1073;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r185, %r49, 8;
	or.b32  	%r51, %r185, -2147483648;
	add.u64 	%rd52, %SP, 4;
	cvta.to.local.u64 	%rd270, %rd52;
	mov.u32 	%r392, 0;
	mov.u64 	%rd269, __cudart_i2opi_f;
	mov.u32 	%r391, -6;

BB0_34:
	.pragma "nounroll";
	ld.const.u32 	%r188, [%rd269];
	// inline asm
	{
	mad.lo.cc.u32   %r186, %r188, %r51, %r392;
	madc.hi.u32     %r392, %r188, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd270], %r186;
	add.s64 	%rd270, %rd270, 4;
	add.s64 	%rd269, %rd269, 4;
	add.s32 	%r391, %r391, 1;
	setp.ne.s32	%p30, %r391, 0;
	@%p30 bra 	BB0_34;

	and.b32  	%r191, %r50, 255;
	add.s32 	%r192, %r191, -128;
	shr.u32 	%r193, %r192, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd54, %rd52;
	st.local.u32 	[%rd54+24], %r392;
	mov.u32 	%r194, 6;
	sub.s32 	%r195, %r194, %r193;
	mul.wide.s32 	%rd55, %r195, 4;
	add.s64 	%rd14, %rd54, %rd55;
	ld.local.u32 	%r393, [%rd14];
	ld.local.u32 	%r394, [%rd14+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p31, %r59, 0;
	@%p31 bra 	BB0_37;

	mov.u32 	%r196, 32;
	sub.s32 	%r197, %r196, %r59;
	shr.u32 	%r198, %r394, %r197;
	shl.b32 	%r199, %r393, %r59;
	add.s32 	%r393, %r198, %r199;
	ld.local.u32 	%r200, [%rd14+-8];
	shr.u32 	%r201, %r200, %r197;
	shl.b32 	%r202, %r394, %r59;
	add.s32 	%r394, %r201, %r202;

BB0_37:
	shr.u32 	%r203, %r394, 30;
	shl.b32 	%r204, %r393, 2;
	add.s32 	%r395, %r203, %r204;
	shl.b32 	%r65, %r394, 2;
	shr.u32 	%r205, %r395, 31;
	shr.u32 	%r206, %r393, 30;
	add.s32 	%r66, %r205, %r206;
	setp.eq.s32	%p32, %r205, 0;
	@%p32 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.u32 	%r396, %r56;
	mov.u32 	%r397, %r65;
	bra.uni 	BB0_40;

BB0_39:
	not.b32 	%r207, %r395;
	neg.s32 	%r397, %r65;
	setp.eq.s32	%p33, %r65, 0;
	selp.u32	%r208, 1, 0, %p33;
	add.s32 	%r395, %r208, %r207;
	xor.b32  	%r396, %r56, -2147483648;

BB0_40:
	clz.b32 	%r399, %r395;
	setp.eq.s32	%p34, %r399, 0;
	shl.b32 	%r209, %r395, %r399;
	mov.u32 	%r210, 32;
	sub.s32 	%r211, %r210, %r399;
	shr.u32 	%r212, %r397, %r211;
	add.s32 	%r213, %r212, %r209;
	selp.b32	%r74, %r395, %r213, %p34;
	mov.u32 	%r214, -921707870;
	mul.hi.u32 	%r398, %r74, %r214;
	setp.eq.s32	%p35, %r56, 0;
	neg.s32 	%r215, %r66;
	selp.b32	%r400, %r66, %r215, %p35;
	setp.lt.s32	%p36, %r398, 1;
	@%p36 bra 	BB0_42;

	mul.lo.s32 	%r216, %r74, -921707870;
	shr.u32 	%r217, %r216, 31;
	shl.b32 	%r218, %r398, 1;
	add.s32 	%r398, %r217, %r218;
	add.s32 	%r399, %r399, 1;

BB0_42:
	mov.u32 	%r219, 126;
	sub.s32 	%r220, %r219, %r399;
	shl.b32 	%r221, %r220, 23;
	add.s32 	%r222, %r398, 1;
	shr.u32 	%r223, %r222, 7;
	add.s32 	%r224, %r223, 1;
	shr.u32 	%r225, %r224, 1;
	add.s32 	%r226, %r225, %r221;
	or.b32  	%r227, %r226, %r396;
	mov.b32 	 %f1074, %r227;

BB0_43:
	mul.rn.f32 	%f52, %f1074, %f1074;
	and.b32  	%r82, %r400, 1;
	setp.eq.s32	%p37, %r82, 0;
	@%p37 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f286, 0f3C08839E;
	mov.f32 	%f287, 0fB94CA1F9;
	fma.rn.f32 	%f1075, %f287, %f52, %f286;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f284, 0fBAB6061A;
	mov.f32 	%f285, 0f37CCF5CE;
	fma.rn.f32 	%f1075, %f285, %f52, %f284;

BB0_46:
	@%p37 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	mov.f32 	%f291, 0fBE2AAAA3;
	fma.rn.f32 	%f292, %f1075, %f52, %f291;
	mov.f32 	%f293, 0f00000000;
	fma.rn.f32 	%f1076, %f292, %f52, %f293;
	bra.uni 	BB0_49;

BB0_47:
	mov.f32 	%f288, 0f3D2AAAA5;
	fma.rn.f32 	%f289, %f1075, %f52, %f288;
	mov.f32 	%f290, 0fBF000000;
	fma.rn.f32 	%f1076, %f289, %f52, %f290;

BB0_49:
	fma.rn.f32 	%f1077, %f1076, %f1074, %f1074;
	@%p37 bra 	BB0_51;

	mov.f32 	%f294, 0f3F800000;
	fma.rn.f32 	%f1077, %f1076, %f52, %f294;

BB0_51:
	and.b32  	%r228, %r400, 2;
	setp.eq.s32	%p40, %r228, 0;
	@%p40 bra 	BB0_53;

	mov.f32 	%f295, 0f00000000;
	mov.f32 	%f296, 0fBF800000;
	fma.rn.f32 	%f1077, %f1077, %f296, %f295;

BB0_53:
	mul.f32 	%f305, %f27, %f1071;
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	mul.f32 	%f306, %f305, %f305;
	mov.f32 	%f307, 0f3F800000;
	sub.f32 	%f308, %f307, %f306;
	mul.f32 	%f309, %f27, %f1077;
	mul.f32 	%f310, %f309, %f309;
	sub.f32 	%f311, %f308, %f310;
	mov.f32 	%f312, 0f00000000;
	max.f32 	%f313, %f312, %f311;
	sqrt.rn.f32 	%f314, %f313;
	mul.f32 	%f315, %f13, %f309;
	mul.f32 	%f316, %f14, %f309;
	mul.f32 	%f317, %f15, %f309;
	fma.rn.f32 	%f318, %f22, %f305, %f315;
	fma.rn.f32 	%f319, %f21, %f305, %f316;
	fma.rn.f32 	%f320, %f20, %f305, %f317;
	fma.rn.f32 	%f321, %f7, %f314, %f318;
	fma.rn.f32 	%f322, %f8, %f314, %f319;
	fma.rn.f32 	%f323, %f9, %f314, %f320;
	add.f32 	%f324, %f7, %f321;
	add.f32 	%f325, %f8, %f322;
	add.f32 	%f326, %f9, %f323;
	ld.global.f32 	%f327, [shadowSpread];
	mul.f32 	%f328, %f327, %f324;
	mul.f32 	%f329, %f327, %f325;
	mul.f32 	%f330, %f327, %f326;
	sub.f32 	%f331, %f328, %f7;
	sub.f32 	%f332, %f329, %f8;
	sub.f32 	%f333, %f330, %f9;
	mul.f32 	%f334, %f332, %f332;
	fma.rn.f32 	%f335, %f331, %f331, %f334;
	fma.rn.f32 	%f336, %f333, %f333, %f335;
	sqrt.rn.f32 	%f337, %f336;
	rcp.rn.f32 	%f338, %f337;
	mul.f32 	%f300, %f338, %f331;
	mul.f32 	%f301, %f338, %f332;
	mul.f32 	%f302, %f338, %f333;
	mov.u32 	%r232, 1065353216;
	st.local.u32 	[%rd57], %r232;
	ld.global.u32 	%r229, [root];
	mov.u32 	%r230, 1;
	mov.f32 	%f304, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r229, %f10, %f11, %f12, %f300, %f301, %f302, %r230, %f25, %f304, %rd56, %r106);
	// inline asm
	ld.local.f32 	%f339, [%rd57];
	add.f32 	%f1079, %f1079, %f339;
	ld.global.u32 	%r376, [samples];
	add.s32 	%r379, %r379, 1;
	setp.lt.s32	%p41, %r379, %r376;
	@%p41 bra 	BB0_7;

BB0_54:
	add.s32 	%r377, %r377, 1;
	setp.lt.s32	%p42, %r377, %r376;
	@%p42 bra 	BB0_5;

BB0_55:
	mul.f32 	%f341, %f1064, %f9;
	mul.f32 	%f342, %f1063, %f8;
	neg.f32 	%f343, %f342;
	mul.f32 	%f344, %f1062, %f7;
	sub.f32 	%f345, %f343, %f344;
	sub.f32 	%f67, %f345, %f341;
	setp.eq.s32	%p43, %r376, 0;
	mov.f32 	%f1081, 0f3F800000;
	@%p43 bra 	BB0_57;

	mul.lo.s32 	%r233, %r376, %r376;
	cvt.rn.f32.s32	%f346, %r233;
	div.rn.f32 	%f1081, %f1079, %f346;

BB0_57:
	ld.global.f32 	%f349, [directColor];
	mul.f32 	%f70, %f1081, %f349;
	ld.global.f32 	%f350, [directColor+4];
	mul.f32 	%f71, %f1081, %f350;
	ld.global.f32 	%f351, [directColor+8];
	mul.f32 	%f72, %f1081, %f351;
	cvt.sat.f32.f32	%f352, %f67;
	mul.f32 	%f73, %f70, %f352;
	mul.f32 	%f74, %f71, %f352;
	mul.f32 	%f75, %f72, %f352;
	fma.rn.f32 	%f353, %f67, 0f3F000000, 0f3F000000;
	cvt.sat.f32.f32	%f354, %f353;
	add.f32 	%f76, %f354, %f354;
	mov.f32 	%f358, 0f41A00000;
	abs.f32 	%f78, %f76;
	setp.lt.f32	%p44, %f78, 0f00800000;
	mul.f32 	%f360, %f78, 0f4B800000;
	selp.f32	%f361, 0fC3170000, 0fC2FE0000, %p44;
	selp.f32	%f362, %f360, %f78, %p44;
	mov.b32 	 %r234, %f362;
	and.b32  	%r235, %r234, 8388607;
	or.b32  	%r236, %r235, 1065353216;
	mov.b32 	 %f363, %r236;
	shr.u32 	%r237, %r234, 23;
	cvt.rn.f32.u32	%f364, %r237;
	add.f32 	%f365, %f361, %f364;
	setp.gt.f32	%p45, %f363, 0f3FB504F3;
	mul.f32 	%f366, %f363, 0f3F000000;
	add.f32 	%f367, %f365, 0f3F800000;
	selp.f32	%f368, %f366, %f363, %p45;
	selp.f32	%f369, %f367, %f365, %p45;
	add.f32 	%f370, %f368, 0fBF800000;
	add.f32 	%f348, %f368, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f347,%f348;
	// inline asm
	add.f32 	%f371, %f370, %f370;
	mul.f32 	%f372, %f347, %f371;
	mul.f32 	%f373, %f372, %f372;
	mov.f32 	%f374, 0f3C4CAF63;
	mov.f32 	%f375, 0f3B18F0FE;
	fma.rn.f32 	%f376, %f375, %f373, %f374;
	mov.f32 	%f377, 0f3DAAAABD;
	fma.rn.f32 	%f378, %f376, %f373, %f377;
	mul.rn.f32 	%f379, %f378, %f373;
	mul.rn.f32 	%f380, %f379, %f372;
	sub.f32 	%f381, %f370, %f372;
	neg.f32 	%f382, %f372;
	add.f32 	%f383, %f381, %f381;
	fma.rn.f32 	%f384, %f382, %f370, %f383;
	mul.rn.f32 	%f385, %f347, %f384;
	add.f32 	%f386, %f380, %f372;
	sub.f32 	%f387, %f372, %f386;
	add.f32 	%f388, %f380, %f387;
	add.f32 	%f389, %f385, %f388;
	add.f32 	%f390, %f386, %f389;
	sub.f32 	%f391, %f386, %f390;
	add.f32 	%f392, %f389, %f391;
	mov.f32 	%f393, 0f3F317200;
	mul.rn.f32 	%f394, %f369, %f393;
	mov.f32 	%f395, 0f35BFBE8E;
	mul.rn.f32 	%f396, %f369, %f395;
	add.f32 	%f397, %f394, %f390;
	sub.f32 	%f398, %f394, %f397;
	add.f32 	%f399, %f390, %f398;
	add.f32 	%f400, %f392, %f399;
	add.f32 	%f401, %f396, %f400;
	add.f32 	%f402, %f397, %f401;
	sub.f32 	%f403, %f397, %f402;
	add.f32 	%f404, %f401, %f403;
	mul.rn.f32 	%f405, %f358, %f402;
	neg.f32 	%f406, %f405;
	fma.rn.f32 	%f407, %f358, %f402, %f406;
	fma.rn.f32 	%f408, %f358, %f404, %f407;
	mov.f32 	%f409, 0f00000000;
	fma.rn.f32 	%f410, %f409, %f402, %f408;
	add.rn.f32 	%f411, %f405, %f410;
	neg.f32 	%f412, %f411;
	add.rn.f32 	%f413, %f405, %f412;
	add.rn.f32 	%f414, %f413, %f410;
	mov.b32 	 %r238, %f411;
	setp.eq.s32	%p46, %r238, 1118925336;
	add.s32 	%r239, %r238, -1;
	mov.b32 	 %f415, %r239;
	add.f32 	%f416, %f414, 0f37000000;
	selp.f32	%f417, %f415, %f411, %p46;
	selp.f32	%f79, %f416, %f414, %p46;
	mul.f32 	%f418, %f417, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f419, %f418;
	mov.f32 	%f420, 0fBF317200;
	fma.rn.f32 	%f421, %f419, %f420, %f417;
	mov.f32 	%f422, 0fB5BFBE8E;
	fma.rn.f32 	%f423, %f419, %f422, %f421;
	mul.f32 	%f424, %f423, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f425, %f424;
	add.f32 	%f426, %f419, 0f00000000;
	ex2.approx.f32 	%f427, %f426;
	mul.f32 	%f428, %f425, %f427;
	setp.lt.f32	%p47, %f417, 0fC2D20000;
	selp.f32	%f429, 0f00000000, %f428, %p47;
	setp.gt.f32	%p48, %f417, 0f42D20000;
	selp.f32	%f1082, 0f7F800000, %f429, %p48;
	setp.eq.f32	%p49, %f1082, 0f7F800000;
	@%p49 bra 	BB0_59;

	fma.rn.f32 	%f1082, %f1082, %f79, %f1082;

BB0_59:
	mov.f32 	%f999, 0f41200000;
	cvt.rzi.f32.f32	%f998, %f999;
	add.f32 	%f997, %f998, %f998;
	mov.f32 	%f996, 0f41A00000;
	sub.f32 	%f995, %f996, %f997;
	abs.f32 	%f994, %f995;
	setp.lt.f32	%p50, %f76, 0f00000000;
	setp.eq.f32	%p51, %f994, 0f3F800000;
	and.pred  	%p1, %p50, %p51;
	mov.b32 	 %r240, %f1082;
	xor.b32  	%r241, %r240, -2147483648;
	mov.b32 	 %f430, %r241;
	selp.f32	%f1084, %f430, %f1082, %p1;
	setp.eq.f32	%p52, %f76, 0f00000000;
	@%p52 bra 	BB0_62;
	bra.uni 	BB0_60;

BB0_62:
	add.f32 	%f433, %f76, %f76;
	selp.f32	%f1084, %f433, 0f00000000, %p51;
	bra.uni 	BB0_63;

BB0_60:
	setp.geu.f32	%p53, %f76, 0f00000000;
	@%p53 bra 	BB0_63;

	mov.f32 	%f1035, 0f41A00000;
	cvt.rzi.f32.f32	%f432, %f1035;
	setp.neu.f32	%p54, %f432, 0f41A00000;
	selp.f32	%f1084, 0f7FFFFFFF, %f1084, %p54;

BB0_63:
	add.f32 	%f434, %f78, 0f41A00000;
	mov.b32 	 %r242, %f434;
	setp.lt.s32	%p56, %r242, 2139095040;
	@%p56 bra 	BB0_68;

	setp.gtu.f32	%p57, %f78, 0f7F800000;
	@%p57 bra 	BB0_67;
	bra.uni 	BB0_65;

BB0_67:
	add.f32 	%f1084, %f76, 0f41A00000;
	bra.uni 	BB0_68;

BB0_65:
	setp.neu.f32	%p58, %f78, 0f7F800000;
	@%p58 bra 	BB0_68;

	selp.f32	%f1084, 0fFF800000, 0f7F800000, %p1;

BB0_68:
	setp.eq.f32	%p59, %f76, 0f3F800000;
	selp.f32	%f435, 0f3F800000, %f1084, %p59;
	cvt.sat.f32.f32	%f436, %f435;
	mul.f32 	%f90, %f70, %f436;
	mul.f32 	%f91, %f71, %f436;
	mul.f32 	%f92, %f72, %f436;
	ld.global.u32 	%r405, [imageEnabled];
	and.b32  	%r243, %r405, 8;
	setp.eq.s32	%p60, %r243, 0;
	@%p60 bra 	BB0_81;

	mov.f32 	%f1007, 0fB5BFBE8E;
	mov.f32 	%f1006, 0fBF317200;
	mov.f32 	%f1005, 0f00000000;
	mov.f32 	%f1004, 0f35BFBE8E;
	mov.f32 	%f1003, 0f3F317200;
	mov.f32 	%f1002, 0f3DAAAABD;
	mov.f32 	%f1001, 0f3C4CAF63;
	mov.f32 	%f1000, 0f3B18F0FE;
	cvt.u64.u32	%rd60, %r2;
	cvt.u64.u32	%rd61, %r3;
	mov.u64 	%rd64, image_Mask;
	cvta.global.u64 	%rd59, %rd64;
	// inline asm
	call (%rd58), _rt_buffer_get_64, (%rd59, %r105, %r105, %rd60, %rd61, %rd30, %rd30);
	// inline asm
	abs.f32 	%f94, %f1081;
	setp.lt.f32	%p61, %f94, 0f00800000;
	mul.f32 	%f442, %f94, 0f4B800000;
	selp.f32	%f443, 0fC3170000, 0fC2FE0000, %p61;
	selp.f32	%f444, %f442, %f94, %p61;
	mov.b32 	 %r246, %f444;
	and.b32  	%r247, %r246, 8388607;
	or.b32  	%r248, %r247, 1065353216;
	mov.b32 	 %f445, %r248;
	shr.u32 	%r249, %r246, 23;
	cvt.rn.f32.u32	%f446, %r249;
	add.f32 	%f447, %f443, %f446;
	setp.gt.f32	%p62, %f445, 0f3FB504F3;
	mul.f32 	%f448, %f445, 0f3F000000;
	add.f32 	%f449, %f447, 0f3F800000;
	selp.f32	%f450, %f448, %f445, %p62;
	selp.f32	%f451, %f449, %f447, %p62;
	add.f32 	%f452, %f450, 0fBF800000;
	add.f32 	%f438, %f450, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f437,%f438;
	// inline asm
	add.f32 	%f453, %f452, %f452;
	mul.f32 	%f454, %f437, %f453;
	mul.f32 	%f455, %f454, %f454;
	fma.rn.f32 	%f458, %f1000, %f455, %f1001;
	fma.rn.f32 	%f460, %f458, %f455, %f1002;
	mul.rn.f32 	%f461, %f460, %f455;
	mul.rn.f32 	%f462, %f461, %f454;
	sub.f32 	%f463, %f452, %f454;
	neg.f32 	%f464, %f454;
	add.f32 	%f465, %f463, %f463;
	fma.rn.f32 	%f466, %f464, %f452, %f465;
	mul.rn.f32 	%f467, %f437, %f466;
	add.f32 	%f468, %f462, %f454;
	sub.f32 	%f469, %f454, %f468;
	add.f32 	%f470, %f462, %f469;
	add.f32 	%f471, %f467, %f470;
	add.f32 	%f472, %f468, %f471;
	sub.f32 	%f473, %f468, %f472;
	add.f32 	%f474, %f471, %f473;
	mul.rn.f32 	%f476, %f451, %f1003;
	mul.rn.f32 	%f478, %f451, %f1004;
	add.f32 	%f479, %f476, %f472;
	sub.f32 	%f480, %f476, %f479;
	add.f32 	%f481, %f472, %f480;
	add.f32 	%f482, %f474, %f481;
	add.f32 	%f483, %f478, %f482;
	add.f32 	%f484, %f479, %f483;
	sub.f32 	%f485, %f479, %f484;
	add.f32 	%f486, %f483, %f485;
	mov.f32 	%f487, 0f3EE8BA2E;
	mul.rn.f32 	%f488, %f487, %f484;
	neg.f32 	%f489, %f488;
	fma.rn.f32 	%f490, %f487, %f484, %f489;
	fma.rn.f32 	%f491, %f487, %f486, %f490;
	fma.rn.f32 	%f493, %f1005, %f484, %f491;
	add.rn.f32 	%f494, %f488, %f493;
	neg.f32 	%f495, %f494;
	add.rn.f32 	%f496, %f488, %f495;
	add.rn.f32 	%f497, %f496, %f493;
	mov.b32 	 %r250, %f494;
	setp.eq.s32	%p63, %r250, 1118925336;
	add.s32 	%r251, %r250, -1;
	mov.b32 	 %f498, %r251;
	add.f32 	%f499, %f497, 0f37000000;
	selp.f32	%f500, %f498, %f494, %p63;
	selp.f32	%f95, %f499, %f497, %p63;
	mul.f32 	%f501, %f500, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f502, %f501;
	fma.rn.f32 	%f504, %f502, %f1006, %f500;
	fma.rn.f32 	%f506, %f502, %f1007, %f504;
	mul.f32 	%f507, %f506, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f508, %f507;
	add.f32 	%f509, %f502, 0f00000000;
	ex2.approx.f32 	%f510, %f509;
	mul.f32 	%f511, %f508, %f510;
	setp.lt.f32	%p64, %f500, 0fC2D20000;
	selp.f32	%f512, 0f00000000, %f511, %p64;
	setp.gt.f32	%p65, %f500, 0f42D20000;
	selp.f32	%f1085, 0f7F800000, %f512, %p65;
	setp.eq.f32	%p66, %f1085, 0f7F800000;
	@%p66 bra 	BB0_71;

	fma.rn.f32 	%f1085, %f1085, %f95, %f1085;

BB0_71:
	mov.f32 	%f1039, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f1038, %f1039;
	fma.rn.f32 	%f1037, %f1038, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f1036, %f1037;
	setp.lt.f32	%p67, %f1081, 0f00000000;
	setp.eq.f32	%p68, %f1036, 0f3F800000;
	and.pred  	%p2, %p67, %p68;
	mov.b32 	 %r252, %f1085;
	xor.b32  	%r253, %r252, -2147483648;
	mov.b32 	 %f513, %r253;
	selp.f32	%f1087, %f513, %f1085, %p2;
	setp.eq.f32	%p69, %f1081, 0f00000000;
	@%p69 bra 	BB0_74;
	bra.uni 	BB0_72;

BB0_74:
	add.f32 	%f516, %f1081, %f1081;
	selp.f32	%f1087, %f516, 0f00000000, %p68;
	bra.uni 	BB0_75;

BB0_142:
	mov.u64 	%rd206, image_HDR;
	cvta.global.u64 	%rd201, %rd206;
	mov.u32 	%r350, 8;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r105, %r350, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	mov.f32 	%f972, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f972;}

	// inline asm
	mov.u16 	%rs117, 0;
	st.v4.u16 	[%rd200], {%rs116, %rs116, %rs116, %rs117};

BB0_143:
	ld.global.u32 	%r351, [additive];
	setp.eq.s32	%p144, %r351, 0;
	@%p144 bra 	BB0_145;

	mov.u64 	%rd219, image_RNM0;
	cvta.global.u64 	%rd208, %rd219;
	mov.u32 	%r355, 8;
	// inline asm
	call (%rd207), _rt_buffer_get_64, (%rd208, %r105, %r355, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	ld.v4.u16 	{%rs124, %rs125, %rs126, %rs127}, [%rd207];
	// inline asm
	{  cvt.f32.f16 %f973, %rs124;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f974, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f975, %rs126;}

	// inline asm
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd208, %r105, %r355, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	add.f32 	%f976, %f973, 0f00000000;
	add.f32 	%f977, %f974, 0f00000000;
	add.f32 	%f978, %f975, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f978;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f977;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f976;}

	// inline asm
	mov.u16 	%rs128, 0;
	st.v4.u16 	[%rd213], {%rs121, %rs122, %rs123, %rs128};
	bra.uni 	BB0_146;

BB0_145:
	mov.u64 	%rd226, image_RNM0;
	cvta.global.u64 	%rd221, %rd226;
	mov.u32 	%r357, 8;
	// inline asm
	call (%rd220), _rt_buffer_get_64, (%rd221, %r105, %r357, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	mov.f32 	%f979, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs129, %f979;}

	// inline asm
	mov.u16 	%rs130, 0;
	st.v4.u16 	[%rd220], {%rs129, %rs129, %rs129, %rs130};

BB0_146:
	ld.global.u32 	%r358, [additive];
	setp.eq.s32	%p145, %r358, 0;
	@%p145 bra 	BB0_148;

	mov.u64 	%rd239, image_RNM1;
	cvta.global.u64 	%rd228, %rd239;
	mov.u32 	%r362, 8;
	// inline asm
	call (%rd227), _rt_buffer_get_64, (%rd228, %r105, %r362, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	ld.v4.u16 	{%rs137, %rs138, %rs139, %rs140}, [%rd227];
	// inline asm
	{  cvt.f32.f16 %f980, %rs137;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f981, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f982, %rs139;}

	// inline asm
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd228, %r105, %r362, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	add.f32 	%f983, %f980, 0f00000000;
	add.f32 	%f984, %f981, 0f00000000;
	add.f32 	%f985, %f982, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f985;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f984;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f983;}

	// inline asm
	mov.u16 	%rs141, 0;
	st.v4.u16 	[%rd233], {%rs134, %rs135, %rs136, %rs141};
	bra.uni 	BB0_149;

BB0_148:
	mov.u64 	%rd246, image_RNM1;
	cvta.global.u64 	%rd241, %rd246;
	mov.u32 	%r364, 8;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r105, %r364, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	mov.f32 	%f986, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs142, %f986;}

	// inline asm
	mov.u16 	%rs143, 0;
	st.v4.u16 	[%rd240], {%rs142, %rs142, %rs142, %rs143};

BB0_149:
	ld.global.u32 	%r365, [additive];
	setp.eq.s32	%p146, %r365, 0;
	@%p146 bra 	BB0_151;

	mov.u64 	%rd259, image_RNM2;
	cvta.global.u64 	%rd248, %rd259;
	mov.u32 	%r369, 8;
	// inline asm
	call (%rd247), _rt_buffer_get_64, (%rd248, %r105, %r369, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	ld.v4.u16 	{%rs150, %rs151, %rs152, %rs153}, [%rd247];
	// inline asm
	{  cvt.f32.f16 %f987, %rs150;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f988, %rs151;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f989, %rs152;}

	// inline asm
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd248, %r105, %r369, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	add.f32 	%f990, %f987, 0f00000000;
	add.f32 	%f991, %f988, 0f00000000;
	add.f32 	%f992, %f989, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs149, %f992;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f991;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f990;}

	// inline asm
	mov.u16 	%rs154, 0;
	st.v4.u16 	[%rd253], {%rs147, %rs148, %rs149, %rs154};
	bra.uni 	BB0_152;

BB0_151:
	mov.u64 	%rd266, image_RNM2;
	cvta.global.u64 	%rd261, %rd266;
	mov.u32 	%r371, 8;
	// inline asm
	call (%rd260), _rt_buffer_get_64, (%rd261, %r105, %r371, %rd23, %rd24, %rd30, %rd30);
	// inline asm
	mov.f32 	%f993, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs155, %f993;}

	// inline asm
	mov.u16 	%rs156, 0;
	st.v4.u16 	[%rd260], {%rs155, %rs155, %rs155, %rs156};
	bra.uni 	BB0_152;

BB0_72:
	setp.geu.f32	%p70, %f1081, 0f00000000;
	@%p70 bra 	BB0_75;

	mov.f32 	%f1043, 0f3EE8BA2E;
	cvt.rzi.f32.f32	%f515, %f1043;
	setp.neu.f32	%p71, %f515, 0f3EE8BA2E;
	selp.f32	%f1087, 0f7FFFFFFF, %f1087, %p71;

BB0_75:
	abs.f32 	%f1040, %f1081;
	add.f32 	%f517, %f1040, 0f3EE8BA2E;
	mov.b32 	 %r254, %f517;
	setp.lt.s32	%p73, %r254, 2139095040;
	@%p73 bra 	BB0_80;

	abs.f32 	%f1041, %f1081;
	setp.gtu.f32	%p74, %f1041, 0f7F800000;
	@%p74 bra 	BB0_79;
	bra.uni 	BB0_77;

BB0_79:
	add.f32 	%f1087, %f1081, 0f3EE8BA2E;
	bra.uni 	BB0_80;

BB0_77:
	abs.f32 	%f1042, %f1081;
	setp.neu.f32	%p75, %f1042, 0f7F800000;
	@%p75 bra 	BB0_80;

	selp.f32	%f1087, 0fFF800000, 0f7F800000, %p2;

BB0_80:
	mul.f32 	%f518, %f1087, 0f437F0000;
	setp.eq.f32	%p76, %f1081, 0f3F800000;
	selp.f32	%f519, 0f437F0000, %f518, %p76;
	cvt.rzi.u32.f32	%r255, %f519;
	cvt.u16.u32	%rs13, %r255;
	mov.u16 	%rs14, 255;
	st.v2.u8 	[%rd58], {%rs13, %rs14};
	ld.global.u32 	%r405, [imageEnabled];

BB0_81:
	and.b32  	%r256, %r405, 1;
	setp.eq.b32	%p77, %r256, 1;
	@!%p77 bra 	BB0_116;
	bra.uni 	BB0_82;

BB0_82:
	mov.f32 	%f1015, 0fB5BFBE8E;
	mov.f32 	%f1014, 0fBF317200;
	mov.f32 	%f1013, 0f00000000;
	mov.f32 	%f1012, 0f35BFBE8E;
	mov.f32 	%f1011, 0f3F317200;
	mov.f32 	%f1010, 0f3DAAAABD;
	mov.f32 	%f1009, 0f3C4CAF63;
	mov.f32 	%f1008, 0f3B18F0FE;
	abs.f32 	%f107, %f73;
	setp.lt.f32	%p78, %f107, 0f00800000;
	mul.f32 	%f525, %f107, 0f4B800000;
	selp.f32	%f526, 0fC3170000, 0fC2FE0000, %p78;
	selp.f32	%f527, %f525, %f107, %p78;
	mov.b32 	 %r257, %f527;
	and.b32  	%r258, %r257, 8388607;
	or.b32  	%r259, %r258, 1065353216;
	mov.b32 	 %f528, %r259;
	shr.u32 	%r260, %r257, 23;
	cvt.rn.f32.u32	%f529, %r260;
	add.f32 	%f530, %f526, %f529;
	setp.gt.f32	%p79, %f528, 0f3FB504F3;
	mul.f32 	%f531, %f528, 0f3F000000;
	add.f32 	%f532, %f530, 0f3F800000;
	selp.f32	%f533, %f531, %f528, %p79;
	selp.f32	%f534, %f532, %f530, %p79;
	add.f32 	%f535, %f533, 0fBF800000;
	add.f32 	%f521, %f533, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f520,%f521;
	// inline asm
	add.f32 	%f536, %f535, %f535;
	mul.f32 	%f537, %f520, %f536;
	mul.f32 	%f538, %f537, %f537;
	fma.rn.f32 	%f541, %f1008, %f538, %f1009;
	fma.rn.f32 	%f543, %f541, %f538, %f1010;
	mul.rn.f32 	%f544, %f543, %f538;
	mul.rn.f32 	%f545, %f544, %f537;
	sub.f32 	%f546, %f535, %f537;
	neg.f32 	%f547, %f537;
	add.f32 	%f548, %f546, %f546;
	fma.rn.f32 	%f549, %f547, %f535, %f548;
	mul.rn.f32 	%f550, %f520, %f549;
	add.f32 	%f551, %f545, %f537;
	sub.f32 	%f552, %f537, %f551;
	add.f32 	%f553, %f545, %f552;
	add.f32 	%f554, %f550, %f553;
	add.f32 	%f555, %f551, %f554;
	sub.f32 	%f556, %f551, %f555;
	add.f32 	%f557, %f554, %f556;
	mul.rn.f32 	%f559, %f534, %f1011;
	mul.rn.f32 	%f561, %f534, %f1012;
	add.f32 	%f562, %f559, %f555;
	sub.f32 	%f563, %f559, %f562;
	add.f32 	%f564, %f555, %f563;
	add.f32 	%f565, %f557, %f564;
	add.f32 	%f566, %f561, %f565;
	add.f32 	%f567, %f562, %f566;
	sub.f32 	%f568, %f562, %f567;
	add.f32 	%f569, %f566, %f568;
	mov.f32 	%f570, 0f3EE66666;
	mul.rn.f32 	%f571, %f570, %f567;
	neg.f32 	%f572, %f571;
	fma.rn.f32 	%f573, %f570, %f567, %f572;
	fma.rn.f32 	%f574, %f570, %f569, %f573;
	fma.rn.f32 	%f576, %f1013, %f567, %f574;
	add.rn.f32 	%f577, %f571, %f576;
	neg.f32 	%f578, %f577;
	add.rn.f32 	%f579, %f571, %f578;
	add.rn.f32 	%f580, %f579, %f576;
	mov.b32 	 %r261, %f577;
	setp.eq.s32	%p80, %r261, 1118925336;
	add.s32 	%r262, %r261, -1;
	mov.b32 	 %f581, %r262;
	add.f32 	%f582, %f580, 0f37000000;
	selp.f32	%f583, %f581, %f577, %p80;
	selp.f32	%f108, %f582, %f580, %p80;
	mul.f32 	%f584, %f583, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f585, %f584;
	fma.rn.f32 	%f587, %f585, %f1014, %f583;
	fma.rn.f32 	%f589, %f585, %f1015, %f587;
	mul.f32 	%f590, %f589, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f591, %f590;
	add.f32 	%f592, %f585, 0f00000000;
	ex2.approx.f32 	%f593, %f592;
	mul.f32 	%f594, %f591, %f593;
	setp.lt.f32	%p81, %f583, 0fC2D20000;
	selp.f32	%f595, 0f00000000, %f594, %p81;
	setp.gt.f32	%p82, %f583, 0f42D20000;
	selp.f32	%f1088, 0f7F800000, %f595, %p82;
	setp.eq.f32	%p83, %f1088, 0f7F800000;
	@%p83 bra 	BB0_84;

	fma.rn.f32 	%f1088, %f1088, %f108, %f1088;

BB0_84:
	mov.f32 	%f1047, 0f3E666666;
	cvt.rzi.f32.f32	%f1046, %f1047;
	fma.rn.f32 	%f1045, %f1046, 0fC0000000, 0f3EE66666;
	abs.f32 	%f1044, %f1045;
	setp.lt.f32	%p84, %f73, 0f00000000;
	setp.eq.f32	%p85, %f1044, 0f3F800000;
	and.pred  	%p3, %p84, %p85;
	mov.b32 	 %r263, %f1088;
	xor.b32  	%r264, %r263, -2147483648;
	mov.b32 	 %f596, %r264;
	selp.f32	%f1090, %f596, %f1088, %p3;
	setp.eq.f32	%p86, %f73, 0f00000000;
	@%p86 bra 	BB0_87;
	bra.uni 	BB0_85;

BB0_87:
	add.f32 	%f599, %f73, %f73;
	selp.f32	%f1090, %f599, 0f00000000, %p85;
	bra.uni 	BB0_88;

BB0_85:
	setp.geu.f32	%p87, %f73, 0f00000000;
	@%p87 bra 	BB0_88;

	mov.f32 	%f1055, 0f3EE66666;
	cvt.rzi.f32.f32	%f598, %f1055;
	setp.neu.f32	%p88, %f598, 0f3EE66666;
	selp.f32	%f1090, 0f7FFFFFFF, %f1090, %p88;

BB0_88:
	abs.f32 	%f1048, %f73;
	add.f32 	%f600, %f1048, 0f3EE66666;
	mov.b32 	 %r265, %f600;
	setp.lt.s32	%p90, %r265, 2139095040;
	@%p90 bra 	BB0_93;

	abs.f32 	%f1053, %f73;
	setp.gtu.f32	%p91, %f1053, 0f7F800000;
	@%p91 bra 	BB0_92;
	bra.uni 	BB0_90;

BB0_92:
	add.f32 	%f1090, %f73, 0f3EE66666;
	bra.uni 	BB0_93;

BB0_90:
	abs.f32 	%f1054, %f73;
	setp.neu.f32	%p92, %f1054, 0f7F800000;
	@%p92 bra 	BB0_93;

	selp.f32	%f1090, 0fFF800000, 0f7F800000, %p3;

BB0_93:
	mov.f32 	%f1049, 0f3EE66666;
	mov.f32 	%f1023, 0fB5BFBE8E;
	mov.f32 	%f1022, 0fBF317200;
	mov.f32 	%f1021, 0f00000000;
	mov.f32 	%f1020, 0f35BFBE8E;
	mov.f32 	%f1019, 0f3F317200;
	mov.f32 	%f1018, 0f3DAAAABD;
	mov.f32 	%f1017, 0f3C4CAF63;
	mov.f32 	%f1016, 0f3B18F0FE;
	setp.eq.f32	%p93, %f73, 0f3F800000;
	selp.f32	%f119, 0f3F800000, %f1090, %p93;
	abs.f32 	%f120, %f74;
	setp.lt.f32	%p94, %f120, 0f00800000;
	mul.f32 	%f603, %f120, 0f4B800000;
	selp.f32	%f604, 0fC3170000, 0fC2FE0000, %p94;
	selp.f32	%f605, %f603, %f120, %p94;
	mov.b32 	 %r266, %f605;
	and.b32  	%r267, %r266, 8388607;
	or.b32  	%r268, %r267, 1065353216;
	mov.b32 	 %f606, %r268;
	shr.u32 	%r269, %r266, 23;
	cvt.rn.f32.u32	%f607, %r269;
	add.f32 	%f608, %f604, %f607;
	setp.gt.f32	%p95, %f606, 0f3FB504F3;
	mul.f32 	%f609, %f606, 0f3F000000;
	add.f32 	%f610, %f608, 0f3F800000;
	selp.f32	%f611, %f609, %f606, %p95;
	selp.f32	%f612, %f610, %f608, %p95;
	add.f32 	%f613, %f611, 0fBF800000;
	add.f32 	%f602, %f611, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f601,%f602;
	// inline asm
	add.f32 	%f614, %f613, %f613;
	mul.f32 	%f615, %f601, %f614;
	mul.f32 	%f616, %f615, %f615;
	fma.rn.f32 	%f619, %f1016, %f616, %f1017;
	fma.rn.f32 	%f621, %f619, %f616, %f1018;
	mul.rn.f32 	%f622, %f621, %f616;
	mul.rn.f32 	%f623, %f622, %f615;
	sub.f32 	%f624, %f613, %f615;
	neg.f32 	%f625, %f615;
	add.f32 	%f626, %f624, %f624;
	fma.rn.f32 	%f627, %f625, %f613, %f626;
	mul.rn.f32 	%f628, %f601, %f627;
	add.f32 	%f629, %f623, %f615;
	sub.f32 	%f630, %f615, %f629;
	add.f32 	%f631, %f623, %f630;
	add.f32 	%f632, %f628, %f631;
	add.f32 	%f633, %f629, %f632;
	sub.f32 	%f634, %f629, %f633;
	add.f32 	%f635, %f632, %f634;
	mul.rn.f32 	%f637, %f612, %f1019;
	mul.rn.f32 	%f639, %f612, %f1020;
	add.f32 	%f640, %f637, %f633;
	sub.f32 	%f641, %f637, %f640;
	add.f32 	%f642, %f633, %f641;
	add.f32 	%f643, %f635, %f642;
	add.f32 	%f644, %f639, %f643;
	add.f32 	%f645, %f640, %f644;
	sub.f32 	%f646, %f640, %f645;
	add.f32 	%f647, %f644, %f646;
	mul.rn.f32 	%f649, %f1049, %f645;
	neg.f32 	%f650, %f649;
	fma.rn.f32 	%f651, %f1049, %f645, %f650;
	fma.rn.f32 	%f652, %f1049, %f647, %f651;
	fma.rn.f32 	%f654, %f1021, %f645, %f652;
	add.rn.f32 	%f655, %f649, %f654;
	neg.f32 	%f656, %f655;
	add.rn.f32 	%f657, %f649, %f656;
	add.rn.f32 	%f658, %f657, %f654;
	mov.b32 	 %r270, %f655;
	setp.eq.s32	%p96, %r270, 1118925336;
	add.s32 	%r271, %r270, -1;
	mov.b32 	 %f659, %r271;
	add.f32 	%f660, %f658, 0f37000000;
	selp.f32	%f661, %f659, %f655, %p96;
	selp.f32	%f121, %f660, %f658, %p96;
	mul.f32 	%f662, %f661, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f663, %f662;
	fma.rn.f32 	%f665, %f663, %f1022, %f661;
	fma.rn.f32 	%f667, %f663, %f1023, %f665;
	mul.f32 	%f668, %f667, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f669, %f668;
	add.f32 	%f670, %f663, 0f00000000;
	ex2.approx.f32 	%f671, %f670;
	mul.f32 	%f672, %f669, %f671;
	setp.lt.f32	%p97, %f661, 0fC2D20000;
	selp.f32	%f673, 0f00000000, %f672, %p97;
	setp.gt.f32	%p98, %f661, 0f42D20000;
	selp.f32	%f1091, 0f7F800000, %f673, %p98;
	setp.eq.f32	%p99, %f1091, 0f7F800000;
	@%p99 bra 	BB0_95;

	fma.rn.f32 	%f1091, %f1091, %f121, %f1091;

BB0_95:
	setp.lt.f32	%p100, %f74, 0f00000000;
	and.pred  	%p4, %p100, %p85;
	mov.b32 	 %r272, %f1091;
	xor.b32  	%r273, %r272, -2147483648;
	mov.b32 	 %f674, %r273;
	selp.f32	%f1093, %f674, %f1091, %p4;
	setp.eq.f32	%p102, %f74, 0f00000000;
	@%p102 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f677, %f74, %f74;
	selp.f32	%f1093, %f677, 0f00000000, %p85;
	bra.uni 	BB0_99;

BB0_96:
	setp.geu.f32	%p103, %f74, 0f00000000;
	@%p103 bra 	BB0_99;

	mov.f32 	%f1052, 0f3EE66666;
	cvt.rzi.f32.f32	%f676, %f1052;
	setp.neu.f32	%p104, %f676, 0f3EE66666;
	selp.f32	%f1093, 0f7FFFFFFF, %f1093, %p104;

BB0_99:
	abs.f32 	%f1056, %f74;
	add.f32 	%f678, %f1056, 0f3EE66666;
	mov.b32 	 %r274, %f678;
	setp.lt.s32	%p106, %r274, 2139095040;
	@%p106 bra 	BB0_104;

	abs.f32 	%f1057, %f74;
	setp.gtu.f32	%p107, %f1057, 0f7F800000;
	@%p107 bra 	BB0_103;
	bra.uni 	BB0_101;

BB0_103:
	add.f32 	%f1093, %f74, 0f3EE66666;
	bra.uni 	BB0_104;

BB0_101:
	abs.f32 	%f1058, %f74;
	setp.neu.f32	%p108, %f1058, 0f7F800000;
	@%p108 bra 	BB0_104;

	selp.f32	%f1093, 0fFF800000, 0f7F800000, %p4;

BB0_104:
	mov.f32 	%f1050, 0f3EE66666;
	mov.f32 	%f1031, 0fB5BFBE8E;
	mov.f32 	%f1030, 0fBF317200;
	mov.f32 	%f1029, 0f00000000;
	mov.f32 	%f1028, 0f35BFBE8E;
	mov.f32 	%f1027, 0f3F317200;
	mov.f32 	%f1026, 0f3DAAAABD;
	mov.f32 	%f1025, 0f3C4CAF63;
	mov.f32 	%f1024, 0f3B18F0FE;
	setp.eq.f32	%p109, %f74, 0f3F800000;
	selp.f32	%f132, 0f3F800000, %f1093, %p109;
	abs.f32 	%f133, %f75;
	setp.lt.f32	%p110, %f133, 0f00800000;
	mul.f32 	%f681, %f133, 0f4B800000;
	selp.f32	%f682, 0fC3170000, 0fC2FE0000, %p110;
	selp.f32	%f683, %f681, %f133, %p110;
	mov.b32 	 %r275, %f683;
	and.b32  	%r276, %r275, 8388607;
	or.b32  	%r277, %r276, 1065353216;
	mov.b32 	 %f684, %r277;
	shr.u32 	%r278, %r275, 23;
	cvt.rn.f32.u32	%f685, %r278;
	add.f32 	%f686, %f682, %f685;
	setp.gt.f32	%p111, %f684, 0f3FB504F3;
	mul.f32 	%f687, %f684, 0f3F000000;
	add.f32 	%f688, %f686, 0f3F800000;
	selp.f32	%f689, %f687, %f684, %p111;
	selp.f32	%f690, %f688, %f686, %p111;
	add.f32 	%f691, %f689, 0fBF800000;
	add.f32 	%f680, %f689, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f679,%f680;
	// inline asm
	add.f32 	%f692, %f691, %f691;
	mul.f32 	%f693, %f679, %f692;
	mul.f32 	%f694, %f693, %f693;
	fma.rn.f32 	%f697, %f1024, %f694, %f1025;
	fma.rn.f32 	%f699, %f697, %f694, %f1026;
	mul.rn.f32 	%f700, %f699, %f694;
	mul.rn.f32 	%f701, %f700, %f693;
	sub.f32 	%f702, %f691, %f693;
	neg.f32 	%f703, %f693;
	add.f32 	%f704, %f702, %f702;
	fma.rn.f32 	%f705, %f703, %f691, %f704;
	mul.rn.f32 	%f706, %f679, %f705;
	add.f32 	%f707, %f701, %f693;
	sub.f32 	%f708, %f693, %f707;
	add.f32 	%f709, %f701, %f708;
	add.f32 	%f710, %f706, %f709;
	add.f32 	%f711, %f707, %f710;
	sub.f32 	%f712, %f707, %f711;
	add.f32 	%f713, %f710, %f712;
	mul.rn.f32 	%f715, %f690, %f1027;
	mul.rn.f32 	%f717, %f690, %f1028;
	add.f32 	%f718, %f715, %f711;
	sub.f32 	%f719, %f715, %f718;
	add.f32 	%f720, %f711, %f719;
	add.f32 	%f721, %f713, %f720;
	add.f32 	%f722, %f717, %f721;
	add.f32 	%f723, %f718, %f722;
	sub.f32 	%f724, %f718, %f723;
	add.f32 	%f725, %f722, %f724;
	mul.rn.f32 	%f727, %f1050, %f723;
	neg.f32 	%f728, %f727;
	fma.rn.f32 	%f729, %f1050, %f723, %f728;
	fma.rn.f32 	%f730, %f1050, %f725, %f729;
	fma.rn.f32 	%f732, %f1029, %f723, %f730;
	add.rn.f32 	%f733, %f727, %f732;
	neg.f32 	%f734, %f733;
	add.rn.f32 	%f735, %f727, %f734;
	add.rn.f32 	%f736, %f735, %f732;
	mov.b32 	 %r279, %f733;
	setp.eq.s32	%p112, %r279, 1118925336;
	add.s32 	%r280, %r279, -1;
	mov.b32 	 %f737, %r280;
	add.f32 	%f738, %f736, 0f37000000;
	selp.f32	%f739, %f737, %f733, %p112;
	selp.f32	%f134, %f738, %f736, %p112;
	mul.f32 	%f740, %f739, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f741, %f740;
	fma.rn.f32 	%f743, %f741, %f1030, %f739;
	fma.rn.f32 	%f745, %f741, %f1031, %f743;
	mul.f32 	%f746, %f745, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f747, %f746;
	add.f32 	%f748, %f741, 0f00000000;
	ex2.approx.f32 	%f749, %f748;
	mul.f32 	%f750, %f747, %f749;
	setp.lt.f32	%p113, %f739, 0fC2D20000;
	selp.f32	%f751, 0f00000000, %f750, %p113;
	setp.gt.f32	%p114, %f739, 0f42D20000;
	selp.f32	%f1094, 0f7F800000, %f751, %p114;
	setp.eq.f32	%p115, %f1094, 0f7F800000;
	@%p115 bra 	BB0_106;

	fma.rn.f32 	%f1094, %f1094, %f134, %f1094;

BB0_106:
	setp.lt.f32	%p116, %f75, 0f00000000;
	and.pred  	%p5, %p116, %p85;
	mov.b32 	 %r281, %f1094;
	xor.b32  	%r282, %r281, -2147483648;
	mov.b32 	 %f752, %r282;
	selp.f32	%f1096, %f752, %f1094, %p5;
	setp.eq.f32	%p118, %f75, 0f00000000;
	@%p118 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f755, %f75, %f75;
	selp.f32	%f1096, %f755, 0f00000000, %p85;
	bra.uni 	BB0_110;

BB0_107:
	setp.geu.f32	%p119, %f75, 0f00000000;
	@%p119 bra 	BB0_110;

	mov.f32 	%f1051, 0f3EE66666;
	cvt.rzi.f32.f32	%f754, %f1051;
	setp.neu.f32	%p120, %f754, 0f3EE66666;
	selp.f32	%f1096, 0f7FFFFFFF, %f1096, %p120;

BB0_110:
	abs.f32 	%f1059, %f75;
	add.f32 	%f756, %f1059, 0f3EE66666;
	mov.b32 	 %r283, %f756;
	setp.lt.s32	%p122, %r283, 2139095040;
	@%p122 bra 	BB0_115;

	abs.f32 	%f1060, %f75;
	setp.gtu.f32	%p123, %f1060, 0f7F800000;
	@%p123 bra 	BB0_114;
	bra.uni 	BB0_112;

BB0_114:
	add.f32 	%f1096, %f75, 0f3EE66666;
	bra.uni 	BB0_115;

BB0_112:
	abs.f32 	%f1061, %f75;
	setp.neu.f32	%p124, %f1061, 0f7F800000;
	@%p124 bra 	BB0_115;

	selp.f32	%f1096, 0fFF800000, 0f7F800000, %p5;

BB0_115:
	mov.u32 	%r372, 4;
	setp.eq.f32	%p125, %f75, 0f3F800000;
	selp.f32	%f757, 0f3F800000, %f1096, %p125;
	cvt.u64.u32	%rd68, %r3;
	cvt.u64.u32	%rd67, %r2;
	mov.u64 	%rd71, image;
	cvta.global.u64 	%rd66, %rd71;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd66, %r105, %r372, %rd67, %rd68, %rd30, %rd30);
	// inline asm
	cvt.sat.f32.f32	%f758, %f757;
	mul.f32 	%f759, %f758, 0f437FFD71;
	cvt.rzi.u32.f32	%r286, %f759;
	cvt.sat.f32.f32	%f760, %f132;
	mul.f32 	%f761, %f760, 0f437FFD71;
	cvt.rzi.u32.f32	%r287, %f761;
	cvt.sat.f32.f32	%f762, %f119;
	mul.f32 	%f763, %f762, 0f437FFD71;
	cvt.rzi.u32.f32	%r288, %f763;
	cvt.u16.u32	%rs15, %r286;
	cvt.u16.u32	%rs16, %r288;
	cvt.u16.u32	%rs17, %r287;
	mov.u16 	%rs18, 255;
	st.v4.u8 	[%rd65], {%rs15, %rs17, %rs16, %rs18};
	ld.global.u32 	%r405, [imageEnabled];

BB0_116:
	and.b32  	%r289, %r405, 4;
	setp.eq.s32	%p126, %r289, 0;
	@%p126 bra 	BB0_120;

	ld.global.u32 	%r290, [additive];
	setp.eq.s32	%p127, %r290, 0;
	cvt.u64.u32	%rd16, %r2;
	cvt.u64.u32	%rd17, %r3;
	mov.f32 	%f764, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f764;}

	// inline asm
	@%p127 bra 	BB0_119;

	mov.u64 	%rd84, image_HDR;
	cvta.global.u64 	%rd73, %rd84;
	mov.u32 	%r294, 8;
	// inline asm
	call (%rd72), _rt_buffer_get_64, (%rd73, %r105, %r294, %rd16, %rd17, %rd30, %rd30);
	// inline asm
	ld.v4.u16 	{%rs26, %rs27, %rs28, %rs29}, [%rd72];
	// inline asm
	{  cvt.f32.f16 %f765, %rs26;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f766, %rs27;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f767, %rs28;}

	// inline asm
	// inline asm
	call (%rd78), _rt_buffer_get_64, (%rd73, %r105, %r294, %rd16, %rd17, %rd30, %rd30);
	// inline asm
	add.f32 	%f768, %f73, %f765;
	add.f32 	%f769, %f74, %f766;
	add.f32 	%f770, %f75, %f767;
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f770;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f769;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f768;}

	// inline asm
	st.v4.u16 	[%rd78], {%rs23, %rs24, %rs25, %rs19};
	bra.uni 	BB0_120;

BB0_119:
	mov.u64 	%rd91, image_HDR;
	cvta.global.u64 	%rd86, %rd91;
	mov.u32 	%r296, 8;
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd86, %r105, %r296, %rd16, %rd17, %rd30, %rd30);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f75;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f74;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f73;}

	// inline asm
	st.v4.u16 	[%rd85], {%rs30, %rs31, %rs32, %rs19};

BB0_120:
	mov.f32 	%f1097, 0f00000000;
	mov.u32 	%r373, 4;
	ld.global.v2.u32 	{%r299, %r300}, [pixelID];
	cvt.u64.u32	%rd94, %r299;
	cvt.u64.u32	%rd95, %r300;
	mov.u64 	%rd98, uvtangent;
	cvta.global.u64 	%rd93, %rd98;
	// inline asm
	call (%rd92), _rt_buffer_get_64, (%rd93, %r105, %r373, %rd94, %rd95, %rd30, %rd30);
	// inline asm
	ld.u32 	%r94, [%rd92];
	shr.u32 	%r95, %r94, 16;
	cvt.u16.u32	%rs33, %r95;
	and.b16  	%rs34, %rs33, 255;
	cvt.u16.u32	%rs35, %r94;
	or.b16  	%rs36, %rs35, %rs34;
	setp.eq.s16	%p128, %rs36, 0;
	mov.f32 	%f1098, %f1097;
	mov.f32 	%f1099, %f1097;
	@%p128 bra 	BB0_122;

	ld.u8 	%rs37, [%rd92+1];
	and.b16  	%rs39, %rs35, 255;
	cvt.rn.f32.u16	%f777, %rs39;
	div.rn.f32 	%f778, %f777, 0f437F0000;
	fma.rn.f32 	%f779, %f778, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f780, %rs37;
	div.rn.f32 	%f781, %f780, 0f437F0000;
	fma.rn.f32 	%f782, %f781, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f783, %rs34;
	div.rn.f32 	%f784, %f783, 0f437F0000;
	fma.rn.f32 	%f785, %f784, 0f40000000, 0fBF800000;
	mul.f32 	%f786, %f782, %f782;
	fma.rn.f32 	%f787, %f779, %f779, %f786;
	fma.rn.f32 	%f788, %f785, %f785, %f787;
	sqrt.rn.f32 	%f789, %f788;
	rcp.rn.f32 	%f790, %f789;
	mul.f32 	%f1097, %f779, %f790;
	mul.f32 	%f1098, %f782, %f790;
	mul.f32 	%f1099, %f785, %f790;

BB0_122:
	mov.f32 	%f1100, 0f00000000;
	mov.u32 	%r374, 4;
	mul.f32 	%f794, %f1064, %f1098;
	mul.f32 	%f795, %f1063, %f1099;
	sub.f32 	%f796, %f795, %f794;
	mul.f32 	%f797, %f1062, %f1099;
	mul.f32 	%f798, %f1064, %f1097;
	sub.f32 	%f799, %f798, %f797;
	mul.f32 	%f800, %f1063, %f1097;
	mul.f32 	%f801, %f1062, %f1098;
	sub.f32 	%f802, %f801, %f800;
	setp.lt.u32	%p129, %r94, 16777216;
	selp.f32	%f803, 0fBF800000, 0f3F800000, %p129;
	mul.f32 	%f804, %f796, %f803;
	mul.f32 	%f805, %f799, %f803;
	mul.f32 	%f806, %f802, %f803;
	mul.f32 	%f807, %f804, 0f00000000;
	mul.f32 	%f808, %f805, 0f00000000;
	mul.f32 	%f809, %f806, 0f00000000;
	fma.rn.f32 	%f810, %f1097, 0f3F5105EC, %f807;
	fma.rn.f32 	%f811, %f1098, 0f3F5105EC, %f808;
	fma.rn.f32 	%f812, %f1099, 0f3F5105EC, %f809;
	mul.f32 	%f151, %f1062, 0f3F13CD3A;
	add.f32 	%f152, %f151, %f810;
	mul.f32 	%f153, %f1063, 0f3F13CD3A;
	add.f32 	%f154, %f153, %f811;
	mul.f32 	%f155, %f1064, 0f3F13CD3A;
	add.f32 	%f156, %f155, %f812;
	ld.global.v2.u32 	{%r305, %r306}, [pixelID];
	cvt.u64.u32	%rd101, %r305;
	cvt.u64.u32	%rd102, %r306;
	// inline asm
	call (%rd99), _rt_buffer_get_64, (%rd93, %r105, %r374, %rd101, %rd102, %rd30, %rd30);
	// inline asm
	ld.u32 	%r96, [%rd99];
	shr.u32 	%r97, %r96, 16;
	cvt.u16.u32	%rs42, %r97;
	and.b16  	%rs43, %rs42, 255;
	cvt.u16.u32	%rs44, %r96;
	or.b16  	%rs45, %rs44, %rs43;
	setp.eq.s16	%p130, %rs45, 0;
	mov.f32 	%f1101, %f1100;
	mov.f32 	%f1102, %f1100;
	@%p130 bra 	BB0_124;

	ld.u8 	%rs46, [%rd99+1];
	and.b16  	%rs48, %rs44, 255;
	cvt.rn.f32.u16	%f813, %rs48;
	div.rn.f32 	%f814, %f813, 0f437F0000;
	fma.rn.f32 	%f815, %f814, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f816, %rs46;
	div.rn.f32 	%f817, %f816, 0f437F0000;
	fma.rn.f32 	%f818, %f817, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f819, %rs43;
	div.rn.f32 	%f820, %f819, 0f437F0000;
	fma.rn.f32 	%f821, %f820, 0f40000000, 0fBF800000;
	mul.f32 	%f822, %f818, %f818;
	fma.rn.f32 	%f823, %f815, %f815, %f822;
	fma.rn.f32 	%f824, %f821, %f821, %f823;
	sqrt.rn.f32 	%f825, %f824;
	rcp.rn.f32 	%f826, %f825;
	mul.f32 	%f1100, %f815, %f826;
	mul.f32 	%f1101, %f818, %f826;
	mul.f32 	%f1102, %f821, %f826;

BB0_124:
	mov.f32 	%f1103, 0f00000000;
	mov.u32 	%r375, 4;
	mul.f32 	%f830, %f1064, %f1101;
	mul.f32 	%f831, %f1063, %f1102;
	sub.f32 	%f832, %f831, %f830;
	mul.f32 	%f833, %f1062, %f1102;
	mul.f32 	%f834, %f1064, %f1100;
	sub.f32 	%f835, %f834, %f833;
	mul.f32 	%f836, %f1063, %f1100;
	mul.f32 	%f837, %f1062, %f1101;
	sub.f32 	%f838, %f837, %f836;
	setp.lt.u32	%p131, %r96, 16777216;
	selp.f32	%f839, 0fBF800000, 0f3F800000, %p131;
	mul.f32 	%f840, %f832, %f839;
	mul.f32 	%f841, %f835, %f839;
	mul.f32 	%f842, %f838, %f839;
	mul.f32 	%f843, %f840, 0f3F3504F3;
	mul.f32 	%f844, %f841, 0f3F3504F3;
	mul.f32 	%f845, %f842, 0f3F3504F3;
	fma.rn.f32 	%f846, %f1100, 0fBED105EC, %f843;
	fma.rn.f32 	%f847, %f1101, 0fBED105EC, %f844;
	fma.rn.f32 	%f848, %f1102, 0fBED105EC, %f845;
	add.f32 	%f163, %f151, %f846;
	add.f32 	%f164, %f153, %f847;
	add.f32 	%f165, %f155, %f848;
	ld.global.v2.u32 	{%r311, %r312}, [pixelID];
	cvt.u64.u32	%rd108, %r311;
	cvt.u64.u32	%rd109, %r312;
	// inline asm
	call (%rd106), _rt_buffer_get_64, (%rd93, %r105, %r375, %rd108, %rd109, %rd30, %rd30);
	// inline asm
	ld.u32 	%r98, [%rd106];
	shr.u32 	%r99, %r98, 16;
	cvt.u16.u32	%rs51, %r99;
	and.b16  	%rs52, %rs51, 255;
	cvt.u16.u32	%rs53, %r98;
	or.b16  	%rs54, %rs53, %rs52;
	setp.eq.s16	%p132, %rs54, 0;
	mov.f32 	%f1104, %f1103;
	mov.f32 	%f1105, %f1103;
	@%p132 bra 	BB0_126;

	ld.u8 	%rs55, [%rd106+1];
	and.b16  	%rs57, %rs53, 255;
	cvt.rn.f32.u16	%f849, %rs57;
	div.rn.f32 	%f850, %f849, 0f437F0000;
	fma.rn.f32 	%f851, %f850, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f852, %rs55;
	div.rn.f32 	%f853, %f852, 0f437F0000;
	fma.rn.f32 	%f854, %f853, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f855, %rs52;
	div.rn.f32 	%f856, %f855, 0f437F0000;
	fma.rn.f32 	%f857, %f856, 0f40000000, 0fBF800000;
	mul.f32 	%f858, %f854, %f854;
	fma.rn.f32 	%f859, %f851, %f851, %f858;
	fma.rn.f32 	%f860, %f857, %f857, %f859;
	sqrt.rn.f32 	%f861, %f860;
	rcp.rn.f32 	%f862, %f861;
	mul.f32 	%f1103, %f851, %f862;
	mul.f32 	%f1104, %f854, %f862;
	mul.f32 	%f1105, %f857, %f862;

BB0_126:
	mul.f32 	%f864, %f1064, %f1104;
	mul.f32 	%f865, %f1063, %f1105;
	sub.f32 	%f866, %f865, %f864;
	mul.f32 	%f867, %f1062, %f1105;
	mul.f32 	%f868, %f1064, %f1103;
	sub.f32 	%f869, %f868, %f867;
	mul.f32 	%f870, %f1063, %f1103;
	mul.f32 	%f871, %f1062, %f1104;
	sub.f32 	%f872, %f871, %f870;
	setp.lt.u32	%p133, %r98, 16777216;
	selp.f32	%f873, 0fBF800000, 0f3F800000, %p133;
	mul.f32 	%f874, %f866, %f873;
	mul.f32 	%f875, %f869, %f873;
	mul.f32 	%f876, %f872, %f873;
	mul.f32 	%f877, %f874, 0fBF3504F3;
	mul.f32 	%f878, %f875, 0fBF3504F3;
	mul.f32 	%f879, %f876, 0fBF3504F3;
	fma.rn.f32 	%f880, %f1103, 0fBED105EC, %f877;
	fma.rn.f32 	%f881, %f1104, 0fBED105EC, %f878;
	fma.rn.f32 	%f882, %f1105, 0fBED105EC, %f879;
	add.f32 	%f883, %f151, %f880;
	add.f32 	%f884, %f153, %f881;
	add.f32 	%f885, %f155, %f882;
	ld.global.f32 	%f886, [directDir];
	mul.f32 	%f887, %f152, %f886;
	ld.global.f32 	%f888, [directDir+4];
	mul.f32 	%f889, %f154, %f888;
	neg.f32 	%f890, %f889;
	sub.f32 	%f891, %f890, %f887;
	ld.global.f32 	%f892, [directDir+8];
	mul.f32 	%f893, %f156, %f892;
	sub.f32 	%f894, %f891, %f893;
	cvt.sat.f32.f32	%f895, %f894;
	mul.f32 	%f896, %f90, %f895;
	mul.f32 	%f897, %f91, %f895;
	mul.f32 	%f898, %f92, %f895;
	mul.f32 	%f899, %f163, %f886;
	mul.f32 	%f900, %f164, %f888;
	neg.f32 	%f901, %f900;
	sub.f32 	%f902, %f901, %f899;
	mul.f32 	%f903, %f165, %f892;
	sub.f32 	%f904, %f902, %f903;
	cvt.sat.f32.f32	%f905, %f904;
	mul.f32 	%f906, %f90, %f905;
	mul.f32 	%f907, %f91, %f905;
	mul.f32 	%f908, %f92, %f905;
	mul.f32 	%f909, %f883, %f886;
	mul.f32 	%f910, %f884, %f888;
	neg.f32 	%f911, %f910;
	sub.f32 	%f912, %f911, %f909;
	mul.f32 	%f913, %f885, %f892;
	sub.f32 	%f914, %f912, %f913;
	cvt.sat.f32.f32	%f915, %f914;
	mul.f32 	%f916, %f90, %f915;
	mul.f32 	%f917, %f91, %f915;
	mul.f32 	%f918, %f92, %f915;
	add.f32 	%f919, %f896, %f906;
	add.f32 	%f920, %f897, %f907;
	add.f32 	%f921, %f898, %f908;
	add.f32 	%f922, %f919, %f916;
	add.f32 	%f923, %f920, %f917;
	add.f32 	%f924, %f921, %f918;
	mul.f32 	%f925, %f922, 0f3F13CD3A;
	mul.f32 	%f926, %f923, 0f3F13CD3A;
	mul.f32 	%f927, %f924, 0f3F13CD3A;
	div.rn.f32 	%f928, %f73, %f925;
	div.rn.f32 	%f929, %f74, %f926;
	div.rn.f32 	%f930, %f75, %f927;
	setp.eq.f32	%p134, %f73, 0f00000000;
	selp.f32	%f931, 0f00000000, %f928, %p134;
	setp.eq.f32	%p135, %f74, 0f00000000;
	selp.f32	%f932, 0f00000000, %f929, %p135;
	setp.eq.f32	%p136, %f75, 0f00000000;
	selp.f32	%f933, 0f00000000, %f930, %p136;
	mul.f32 	%f172, %f896, %f931;
	mul.f32 	%f173, %f897, %f932;
	mul.f32 	%f174, %f898, %f933;
	mul.f32 	%f175, %f906, %f931;
	mul.f32 	%f176, %f907, %f932;
	mul.f32 	%f177, %f908, %f933;
	mul.f32 	%f178, %f916, %f931;
	mul.f32 	%f179, %f917, %f932;
	mul.f32 	%f180, %f918, %f933;
	ld.global.u32 	%r315, [additive];
	setp.eq.s32	%p137, %r315, 0;
	cvt.u64.u32	%rd21, %r2;
	cvt.u64.u32	%rd22, %r3;
	mov.f32 	%f863, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f863;}

	// inline asm
	@%p137 bra 	BB0_128;

	mov.u64 	%rd125, image_RNM0;
	cvta.global.u64 	%rd114, %rd125;
	mov.u32 	%r319, 8;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd114, %r105, %r319, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	ld.v4.u16 	{%rs67, %rs68, %rs69, %rs70}, [%rd113];
	// inline asm
	{  cvt.f32.f16 %f934, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f935, %rs68;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f936, %rs69;}

	// inline asm
	// inline asm
	call (%rd119), _rt_buffer_get_64, (%rd114, %r105, %r319, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	add.f32 	%f937, %f172, %f934;
	add.f32 	%f938, %f173, %f935;
	add.f32 	%f939, %f174, %f936;
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f939;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f938;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f937;}

	// inline asm
	st.v4.u16 	[%rd119], {%rs64, %rs65, %rs66, %rs60};
	bra.uni 	BB0_129;

BB0_128:
	mov.u64 	%rd132, image_RNM0;
	cvta.global.u64 	%rd127, %rd132;
	mov.u32 	%r321, 8;
	// inline asm
	call (%rd126), _rt_buffer_get_64, (%rd127, %r105, %r321, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f174;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f173;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f172;}

	// inline asm
	st.v4.u16 	[%rd126], {%rs71, %rs72, %rs73, %rs60};

BB0_129:
	ld.global.u32 	%r322, [additive];
	setp.eq.s32	%p138, %r322, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f863;}

	// inline asm
	@%p138 bra 	BB0_131;

	mov.u64 	%rd145, image_RNM1;
	cvta.global.u64 	%rd134, %rd145;
	mov.u32 	%r326, 8;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r105, %r326, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	ld.v4.u16 	{%rs81, %rs82, %rs83, %rs84}, [%rd133];
	// inline asm
	{  cvt.f32.f16 %f944, %rs81;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f945, %rs82;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f946, %rs83;}

	// inline asm
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd134, %r105, %r326, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	add.f32 	%f947, %f175, %f944;
	add.f32 	%f948, %f176, %f945;
	add.f32 	%f949, %f177, %f946;
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f949;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f948;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f947;}

	// inline asm
	st.v4.u16 	[%rd139], {%rs78, %rs79, %rs80, %rs74};
	bra.uni 	BB0_132;

BB0_131:
	mov.u64 	%rd152, image_RNM1;
	cvta.global.u64 	%rd147, %rd152;
	mov.u32 	%r328, 8;
	// inline asm
	call (%rd146), _rt_buffer_get_64, (%rd147, %r105, %r328, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f177;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f176;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f175;}

	// inline asm
	st.v4.u16 	[%rd146], {%rs85, %rs86, %rs87, %rs74};

BB0_132:
	ld.global.u32 	%r329, [additive];
	setp.eq.s32	%p139, %r329, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f863;}

	// inline asm
	@%p139 bra 	BB0_134;

	mov.u64 	%rd165, image_RNM2;
	cvta.global.u64 	%rd154, %rd165;
	mov.u32 	%r333, 8;
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd154, %r105, %r333, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	ld.v4.u16 	{%rs95, %rs96, %rs97, %rs98}, [%rd153];
	// inline asm
	{  cvt.f32.f16 %f954, %rs95;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f955, %rs96;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f956, %rs97;}

	// inline asm
	// inline asm
	call (%rd159), _rt_buffer_get_64, (%rd154, %r105, %r333, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	add.f32 	%f957, %f178, %f954;
	add.f32 	%f958, %f179, %f955;
	add.f32 	%f959, %f180, %f956;
	// inline asm
	{  cvt.rn.f16.f32 %rs94, %f959;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs93, %f958;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f957;}

	// inline asm
	st.v4.u16 	[%rd159], {%rs92, %rs93, %rs94, %rs88};
	bra.uni 	BB0_152;

BB0_134:
	mov.u64 	%rd172, image_RNM2;
	cvta.global.u64 	%rd167, %rd172;
	mov.u32 	%r335, 8;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r105, %r335, %rd21, %rd22, %rd30, %rd30);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f180;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f179;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f178;}

	// inline asm
	st.v4.u16 	[%rd166], {%rs99, %rs100, %rs101, %rs88};

BB0_152:
	ret;
}


