//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3skyE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename3skyE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3skyE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3skyE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3skyE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<101>;
	.reg .b16 	%rs<51>;
	.reg .f32 	%f<680>;
	.reg .b32 	%r<343>;
	.reg .b64 	%rd<147>;


	mov.u64 	%rd146, __local_depot0;
	cvta.local.u64 	%SP, %rd146;
	ld.global.v2.u32 	{%r100, %r101}, [pixelID];
	cvt.u64.u32	%rd22, %r100;
	cvt.u64.u32	%rd23, %r101;
	mov.u64 	%rd26, uvnormal;
	cvta.global.u64 	%rd21, %rd26;
	mov.u32 	%r98, 2;
	mov.u32 	%r99, 4;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r98, %r99, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.u32 	%r1, [%rd20];
	shr.u32 	%r104, %r1, 16;
	cvt.u16.u32	%rs1, %r104;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r1;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p4, %rs5, 0;
	mov.f32 	%f626, 0f00000000;
	mov.f32 	%f627, %f626;
	mov.f32 	%f628, %f626;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs6, [%rd20+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f143, %rs8;
	div.rn.f32 	%f144, %f143, 0f437F0000;
	fma.rn.f32 	%f145, %f144, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f146, %rs6;
	div.rn.f32 	%f147, %f146, 0f437F0000;
	fma.rn.f32 	%f148, %f147, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f149, %rs3;
	div.rn.f32 	%f150, %f149, 0f437F0000;
	fma.rn.f32 	%f151, %f150, 0f40000000, 0fBF800000;
	mul.f32 	%f152, %f148, %f148;
	fma.rn.f32 	%f153, %f145, %f145, %f152;
	fma.rn.f32 	%f154, %f151, %f151, %f153;
	sqrt.rn.f32 	%f155, %f154;
	rcp.rn.f32 	%f156, %f155;
	mul.f32 	%f626, %f145, %f156;
	mul.f32 	%f627, %f148, %f156;
	mul.f32 	%f628, %f151, %f156;

BB0_2:
	ld.global.v2.u32 	{%r105, %r106}, [pixelID];
	ld.global.v2.u32 	{%r108, %r109}, [tileInfo];
	add.s32 	%r2, %r105, %r108;
	add.s32 	%r3, %r106, %r109;
	setp.eq.f32	%p5, %f627, 0f00000000;
	setp.eq.f32	%p6, %f626, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f628, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_99;
	bra.uni 	BB0_3;

BB0_99:
	ld.global.u32 	%r342, [imageEnabled];
	and.b32  	%r275, %r342, 1;
	setp.eq.b32	%p96, %r275, 1;
	@!%p96 bra 	BB0_101;
	bra.uni 	BB0_100;

BB0_100:
	cvt.u64.u32	%rd99, %r2;
	cvt.u64.u32	%rd100, %r3;
	mov.u64 	%rd103, image;
	cvta.global.u64 	%rd98, %rd103;
	mov.u64 	%rd102, 0;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r98, %r99, %rd99, %rd100, %rd102, %rd102);
	// inline asm
	mov.u16 	%rs34, 0;
	st.v4.u8 	[%rd97], {%rs34, %rs34, %rs34, %rs34};
	ld.global.u32 	%r342, [imageEnabled];

BB0_101:
	and.b32  	%r278, %r342, 4;
	setp.eq.s32	%p97, %r278, 0;
	@%p97 bra 	BB0_105;

	ld.global.u32 	%r279, [additive];
	setp.eq.s32	%p98, %r279, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	@%p98 bra 	BB0_104;

	mov.u64 	%rd116, image_HDR;
	cvta.global.u64 	%rd105, %rd116;
	mov.u32 	%r283, 8;
	mov.u64 	%rd115, 0;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd105, %r98, %r283, %rd18, %rd19, %rd115, %rd115);
	// inline asm
	ld.v4.u16 	{%rs41, %rs42, %rs43, %rs44}, [%rd104];
	// inline asm
	{  cvt.f32.f16 %f577, %rs41;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f578, %rs42;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f579, %rs43;}

	// inline asm
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd105, %r98, %r283, %rd18, %rd19, %rd115, %rd115);
	// inline asm
	add.f32 	%f580, %f577, 0f00000000;
	add.f32 	%f581, %f578, 0f00000000;
	add.f32 	%f582, %f579, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f582;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f581;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f580;}

	// inline asm
	mov.u16 	%rs45, 0;
	st.v4.u16 	[%rd110], {%rs38, %rs39, %rs40, %rs45};
	bra.uni 	BB0_105;

BB0_3:
	ld.global.v2.u32 	{%r117, %r118}, [pixelID];
	cvt.u64.u32	%rd29, %r117;
	cvt.u64.u32	%rd30, %r118;
	mov.u64 	%rd39, uvpos;
	cvta.global.u64 	%rd28, %rd39;
	mov.u32 	%r114, 12;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r98, %r114, %rd29, %rd30, %rd25, %rd25);
	// inline asm
	ld.f32 	%f163, [%rd27+8];
	ld.f32 	%f164, [%rd27+4];
	ld.f32 	%f165, [%rd27];
	mul.f32 	%f166, %f165, 0f3456BF95;
	mul.f32 	%f167, %f164, 0f3456BF95;
	mul.f32 	%f168, %f163, 0f3456BF95;
	abs.f32 	%f169, %f626;
	div.rn.f32 	%f170, %f166, %f169;
	abs.f32 	%f171, %f627;
	div.rn.f32 	%f172, %f167, %f171;
	abs.f32 	%f173, %f628;
	div.rn.f32 	%f174, %f168, %f173;
	abs.f32 	%f175, %f170;
	abs.f32 	%f176, %f172;
	abs.f32 	%f177, %f174;
	mov.f32 	%f178, 0f38D1B717;
	max.f32 	%f179, %f175, %f178;
	max.f32 	%f180, %f176, %f178;
	max.f32 	%f181, %f177, %f178;
	fma.rn.f32 	%f7, %f626, %f179, %f165;
	fma.rn.f32 	%f8, %f627, %f180, %f164;
	fma.rn.f32 	%f9, %f628, %f181, %f163;
	ld.global.u32 	%r4, [hemispherical];
	setp.gt.f32	%p10, %f169, %f173;
	neg.f32 	%f182, %f627;
	selp.f32	%f183, %f182, 0f00000000, %p10;
	neg.f32 	%f184, %f628;
	selp.f32	%f185, %f626, %f184, %p10;
	selp.f32	%f186, 0f00000000, %f627, %p10;
	mul.f32 	%f187, %f185, %f185;
	fma.rn.f32 	%f188, %f183, %f183, %f187;
	fma.rn.f32 	%f189, %f186, %f186, %f188;
	sqrt.rn.f32 	%f190, %f189;
	rcp.rn.f32 	%f191, %f190;
	mul.f32 	%f10, %f183, %f191;
	mul.f32 	%f11, %f185, %f191;
	mul.f32 	%f12, %f186, %f191;
	ld.global.v2.u32 	{%r121, %r122}, [pixelID];
	cvt.u64.u32	%rd35, %r121;
	cvt.u64.u32	%rd36, %r122;
	mov.u64 	%rd40, rnd_seeds;
	cvta.global.u64 	%rd34, %rd40;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r98, %r99, %rd35, %rd36, %rd25, %rd25);
	// inline asm
	ld.global.u32 	%r337, [samples];
	mov.f32 	%f658, 0f00000000;
	setp.lt.s32	%p11, %r337, 1;
	@%p11 bra 	BB0_4;

	cvt.rn.f32.s32	%f198, %r337;
	rcp.rn.f32 	%f13, %f198;
	ld.u32 	%r339, [%rd33];
	mul.f32 	%f14, %f7, 0f3456BF95;
	mul.f32 	%f15, %f8, 0f3456BF95;
	mul.f32 	%f16, %f9, 0f3456BF95;
	mul.f32 	%f199, %f626, %f11;
	mul.f32 	%f200, %f627, %f10;
	sub.f32 	%f17, %f200, %f199;
	mul.f32 	%f201, %f628, %f10;
	mul.f32 	%f202, %f626, %f12;
	sub.f32 	%f18, %f202, %f201;
	mul.f32 	%f203, %f627, %f12;
	mul.f32 	%f204, %f628, %f11;
	sub.f32 	%f19, %f204, %f203;
	mov.f32 	%f658, 0f00000000;
	mov.u32 	%r312, 0;
	abs.f32 	%f285, %f15;
	abs.f32 	%f286, %f14;
	max.f32 	%f287, %f286, %f285;
	abs.f32 	%f288, %f16;
	max.f32 	%f289, %f287, %f288;
	mov.f32 	%f657, %f658;
	mov.f32 	%f656, %f658;
	mov.f32 	%f655, %f658;
	mov.f32 	%f654, %f658;
	mov.f32 	%f653, %f658;

BB0_6:
	setp.lt.s32	%p12, %r337, 1;
	@%p12 bra 	BB0_57;

	mov.u32 	%r315, 0;

BB0_8:
	cvt.rn.f32.s32	%f611, %r312;
	mad.lo.s32 	%r127, %r339, 1664525, 1013904223;
	and.b32  	%r128, %r127, 16777215;
	cvt.rn.f32.u32	%f205, %r128;
	fma.rn.f32 	%f206, %f205, 0f33800000, %f611;
	mul.f32 	%f33, %f13, %f206;
	mad.lo.s32 	%r13, %r127, 1664525, 1013904223;
	and.b32  	%r129, %r13, 16777215;
	cvt.rn.f32.u32	%f207, %r129;
	cvt.rn.f32.s32	%f208, %r315;
	fma.rn.f32 	%f209, %f207, 0f33800000, %f208;
	mul.f32 	%f210, %f13, %f209;
	mul.f32 	%f211, %f33, %f33;
	mov.f32 	%f212, 0f3F800000;
	sub.f32 	%f213, %f212, %f211;
	mov.f32 	%f214, 0f00000000;
	max.f32 	%f215, %f214, %f213;
	sqrt.rn.f32 	%f34, %f215;
	mul.f32 	%f647, %f210, 0f40C90FDB;
	abs.f32 	%f36, %f647;
	setp.neu.f32	%p13, %f36, 0f7F800000;
	mov.f32 	%f641, %f647;
	@%p13 bra 	BB0_10;

	mul.rn.f32 	%f641, %f647, %f214;

BB0_10:
	mul.f32 	%f217, %f641, 0f3F22F983;
	cvt.rni.s32.f32	%r326, %f217;
	cvt.rn.f32.s32	%f218, %r326;
	neg.f32 	%f219, %f218;
	mov.f32 	%f220, 0f3FC90FDA;
	fma.rn.f32 	%f221, %f219, %f220, %f641;
	mov.f32 	%f222, 0f33A22168;
	fma.rn.f32 	%f223, %f219, %f222, %f221;
	mov.f32 	%f224, 0f27C234C5;
	fma.rn.f32 	%f642, %f219, %f224, %f223;
	abs.f32 	%f225, %f641;
	setp.leu.f32	%p14, %f225, 0f47CE4780;
	@%p14 bra 	BB0_21;

	add.u64 	%rd42, %SP, 0;
	cvta.to.local.u64 	%rd142, %rd42;
	mov.b32 	 %r15, %f641;
	shl.b32 	%r132, %r15, 8;
	or.b32  	%r17, %r132, -2147483648;
	mov.u32 	%r317, 0;
	mov.u64 	%rd143, 0;
	mov.u32 	%r318, %r317;

BB0_12:
	.pragma "nounroll";
	add.u64 	%rd138, %SP, 0;
	cvta.to.local.u64 	%rd137, %rd138;
	shl.b64 	%rd43, %rd143, 2;
	mov.u64 	%rd44, __cudart_i2opi_f;
	add.s64 	%rd45, %rd44, %rd43;
	ld.const.u32 	%r135, [%rd45];
	// inline asm
	{
	mad.lo.cc.u32   %r133, %r135, %r17, %r318;
	madc.hi.u32     %r318, %r135, %r17,  0;
	}
	// inline asm
	st.local.u32 	[%rd142], %r133;
	add.s32 	%r317, %r317, 1;
	cvt.s64.s32	%rd143, %r317;
	mul.wide.s32 	%rd48, %r317, 4;
	add.s64 	%rd142, %rd137, %rd48;
	setp.ne.s32	%p15, %r317, 6;
	@%p15 bra 	BB0_12;

	mov.b32 	 %r295, %f641;
	shr.u32 	%r294, %r295, 23;
	add.u64 	%rd136, %SP, 0;
	and.b32  	%r138, %r294, 255;
	add.s32 	%r139, %r138, -128;
	shr.u32 	%r140, %r139, 5;
	cvta.to.local.u64 	%rd50, %rd136;
	st.local.u32 	[%rd50+24], %r318;
	mov.u32 	%r141, 6;
	sub.s32 	%r142, %r141, %r140;
	mul.wide.s32 	%rd51, %r142, 4;
	add.s64 	%rd8, %rd50, %rd51;
	ld.local.u32 	%r319, [%rd8];
	ld.local.u32 	%r320, [%rd8+-4];
	and.b32  	%r25, %r294, 31;
	setp.eq.s32	%p16, %r25, 0;
	@%p16 bra 	BB0_15;

	mov.u32 	%r143, 32;
	sub.s32 	%r144, %r143, %r25;
	shr.u32 	%r145, %r320, %r144;
	shl.b32 	%r146, %r319, %r25;
	add.s32 	%r319, %r145, %r146;
	ld.local.u32 	%r147, [%rd8+-8];
	shr.u32 	%r148, %r147, %r144;
	shl.b32 	%r149, %r320, %r25;
	add.s32 	%r320, %r148, %r149;

BB0_15:
	mov.b32 	 %r300, %f641;
	and.b32  	%r322, %r300, -2147483648;
	shr.u32 	%r150, %r320, 30;
	shl.b32 	%r151, %r319, 2;
	add.s32 	%r321, %r150, %r151;
	shl.b32 	%r31, %r320, 2;
	shr.u32 	%r152, %r321, 31;
	shr.u32 	%r153, %r319, 30;
	add.s32 	%r32, %r152, %r153;
	setp.eq.s32	%p17, %r152, 0;
	@%p17 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r323, %r31;
	bra.uni 	BB0_18;

BB0_17:
	mov.b32 	 %r302, %f641;
	and.b32  	%r301, %r302, -2147483648;
	not.b32 	%r154, %r321;
	neg.s32 	%r323, %r31;
	setp.eq.s32	%p18, %r31, 0;
	selp.u32	%r155, 1, 0, %p18;
	add.s32 	%r321, %r155, %r154;
	xor.b32  	%r322, %r301, -2147483648;

BB0_18:
	mov.b32 	 %r304, %f641;
	and.b32  	%r303, %r304, -2147483648;
	clz.b32 	%r325, %r321;
	setp.eq.s32	%p19, %r325, 0;
	shl.b32 	%r156, %r321, %r325;
	mov.u32 	%r157, 32;
	sub.s32 	%r158, %r157, %r325;
	shr.u32 	%r159, %r323, %r158;
	add.s32 	%r160, %r159, %r156;
	selp.b32	%r40, %r321, %r160, %p19;
	mov.u32 	%r161, -921707870;
	mul.hi.u32 	%r324, %r40, %r161;
	setp.eq.s32	%p20, %r303, 0;
	neg.s32 	%r162, %r32;
	selp.b32	%r326, %r32, %r162, %p20;
	setp.lt.s32	%p21, %r324, 1;
	@%p21 bra 	BB0_20;

	mul.lo.s32 	%r163, %r40, -921707870;
	shr.u32 	%r164, %r163, 31;
	shl.b32 	%r165, %r324, 1;
	add.s32 	%r324, %r164, %r165;
	add.s32 	%r325, %r325, 1;

BB0_20:
	mov.u32 	%r166, 126;
	sub.s32 	%r167, %r166, %r325;
	shl.b32 	%r168, %r167, 23;
	add.s32 	%r169, %r324, 1;
	shr.u32 	%r170, %r169, 7;
	add.s32 	%r171, %r170, 1;
	shr.u32 	%r172, %r171, 1;
	add.s32 	%r173, %r172, %r168;
	or.b32  	%r174, %r173, %r322;
	mov.b32 	 %f642, %r174;

BB0_21:
	mul.rn.f32 	%f42, %f642, %f642;
	add.s32 	%r48, %r326, 1;
	and.b32  	%r49, %r48, 1;
	setp.eq.s32	%p22, %r49, 0;
	@%p22 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f228, 0f3C08839E;
	mov.f32 	%f229, 0fB94CA1F9;
	fma.rn.f32 	%f643, %f229, %f42, %f228;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f226, 0fBAB6061A;
	mov.f32 	%f227, 0f37CCF5CE;
	fma.rn.f32 	%f643, %f227, %f42, %f226;

BB0_24:
	@%p22 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f621, 0f00000000;
	mov.f32 	%f233, 0fBE2AAAA3;
	fma.rn.f32 	%f234, %f643, %f42, %f233;
	fma.rn.f32 	%f644, %f234, %f42, %f621;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f230, 0f3D2AAAA5;
	fma.rn.f32 	%f231, %f643, %f42, %f230;
	mov.f32 	%f232, 0fBF000000;
	fma.rn.f32 	%f644, %f231, %f42, %f232;

BB0_27:
	fma.rn.f32 	%f645, %f644, %f642, %f642;
	@%p22 bra 	BB0_29;

	mov.f32 	%f612, 0f3F800000;
	fma.rn.f32 	%f645, %f644, %f42, %f612;

BB0_29:
	and.b32  	%r175, %r48, 2;
	setp.eq.s32	%p25, %r175, 0;
	@%p25 bra 	BB0_31;

	mov.f32 	%f613, 0f00000000;
	mov.f32 	%f238, 0fBF800000;
	fma.rn.f32 	%f645, %f645, %f238, %f613;

BB0_31:
	abs.f32 	%f622, %f647;
	setp.neu.f32	%p100, %f622, 0f7F800000;
	@%p100 bra 	BB0_33;

	mov.f32 	%f620, 0f00000000;
	mul.rn.f32 	%f647, %f647, %f620;

BB0_33:
	mov.f32 	%f616, 0f27C234C5;
	mov.f32 	%f615, 0f33A22168;
	mov.f32 	%f614, 0f3FC90FDA;
	mul.f32 	%f240, %f647, 0f3F22F983;
	cvt.rni.s32.f32	%r336, %f240;
	cvt.rn.f32.s32	%f241, %r336;
	neg.f32 	%f242, %f241;
	fma.rn.f32 	%f244, %f242, %f614, %f647;
	fma.rn.f32 	%f246, %f242, %f615, %f244;
	fma.rn.f32 	%f648, %f242, %f616, %f246;
	abs.f32 	%f248, %f647;
	setp.leu.f32	%p27, %f248, 0f47CE4780;
	@%p27 bra 	BB0_44;

	mov.u64 	%rd145, 0;
	add.u64 	%rd53, %SP, 0;
	cvta.to.local.u64 	%rd144, %rd53;
	mov.b32 	 %r51, %f647;
	shr.u32 	%r52, %r51, 23;
	shl.b32 	%r178, %r51, 8;
	or.b32  	%r53, %r178, -2147483648;
	mov.u32 	%r327, 0;
	mov.u32 	%r328, %r327;

BB0_35:
	.pragma "nounroll";
	add.u64 	%rd141, %SP, 0;
	cvta.to.local.u64 	%rd140, %rd141;
	shl.b64 	%rd54, %rd145, 2;
	mov.u64 	%rd55, __cudart_i2opi_f;
	add.s64 	%rd56, %rd55, %rd54;
	ld.const.u32 	%r181, [%rd56];
	// inline asm
	{
	mad.lo.cc.u32   %r179, %r181, %r53, %r328;
	madc.hi.u32     %r328, %r181, %r53,  0;
	}
	// inline asm
	st.local.u32 	[%rd144], %r179;
	add.s32 	%r327, %r327, 1;
	cvt.s64.s32	%rd145, %r327;
	mul.wide.s32 	%rd57, %r327, 4;
	add.s64 	%rd144, %rd140, %rd57;
	setp.ne.s32	%p28, %r327, 6;
	@%p28 bra 	BB0_35;

	add.u64 	%rd139, %SP, 0;
	and.b32  	%r184, %r52, 255;
	add.s32 	%r185, %r184, -128;
	shr.u32 	%r186, %r185, 5;
	cvta.to.local.u64 	%rd59, %rd139;
	st.local.u32 	[%rd59+24], %r328;
	mov.u32 	%r187, 6;
	sub.s32 	%r188, %r187, %r186;
	mul.wide.s32 	%rd60, %r188, 4;
	add.s64 	%rd15, %rd59, %rd60;
	ld.local.u32 	%r329, [%rd15];
	ld.local.u32 	%r330, [%rd15+-4];
	and.b32  	%r61, %r52, 31;
	setp.eq.s32	%p29, %r61, 0;
	@%p29 bra 	BB0_38;

	mov.u32 	%r189, 32;
	sub.s32 	%r190, %r189, %r61;
	shr.u32 	%r191, %r330, %r190;
	shl.b32 	%r192, %r329, %r61;
	add.s32 	%r329, %r191, %r192;
	ld.local.u32 	%r193, [%rd15+-8];
	shr.u32 	%r194, %r193, %r190;
	shl.b32 	%r195, %r330, %r61;
	add.s32 	%r330, %r194, %r195;

BB0_38:
	mov.b32 	 %r306, %f647;
	and.b32  	%r332, %r306, -2147483648;
	shr.u32 	%r196, %r330, 30;
	shl.b32 	%r197, %r329, 2;
	add.s32 	%r331, %r196, %r197;
	shl.b32 	%r67, %r330, 2;
	shr.u32 	%r198, %r331, 31;
	shr.u32 	%r199, %r329, 30;
	add.s32 	%r68, %r198, %r199;
	setp.eq.s32	%p30, %r198, 0;
	@%p30 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r333, %r67;
	bra.uni 	BB0_41;

BB0_40:
	mov.b32 	 %r308, %f647;
	and.b32  	%r307, %r308, -2147483648;
	not.b32 	%r200, %r331;
	neg.s32 	%r333, %r67;
	setp.eq.s32	%p31, %r67, 0;
	selp.u32	%r201, 1, 0, %p31;
	add.s32 	%r331, %r201, %r200;
	xor.b32  	%r332, %r307, -2147483648;

BB0_41:
	mov.b32 	 %r310, %f647;
	and.b32  	%r309, %r310, -2147483648;
	clz.b32 	%r335, %r331;
	setp.eq.s32	%p32, %r335, 0;
	shl.b32 	%r202, %r331, %r335;
	mov.u32 	%r203, 32;
	sub.s32 	%r204, %r203, %r335;
	shr.u32 	%r205, %r333, %r204;
	add.s32 	%r206, %r205, %r202;
	selp.b32	%r76, %r331, %r206, %p32;
	mov.u32 	%r207, -921707870;
	mul.hi.u32 	%r334, %r76, %r207;
	setp.eq.s32	%p33, %r309, 0;
	neg.s32 	%r208, %r68;
	selp.b32	%r336, %r68, %r208, %p33;
	setp.lt.s32	%p34, %r334, 1;
	@%p34 bra 	BB0_43;

	mul.lo.s32 	%r209, %r76, -921707870;
	shr.u32 	%r210, %r209, 31;
	shl.b32 	%r211, %r334, 1;
	add.s32 	%r334, %r210, %r211;
	add.s32 	%r335, %r335, 1;

BB0_43:
	mov.u32 	%r212, 126;
	sub.s32 	%r213, %r212, %r335;
	shl.b32 	%r214, %r213, 23;
	add.s32 	%r215, %r334, 1;
	shr.u32 	%r216, %r215, 7;
	add.s32 	%r217, %r216, 1;
	shr.u32 	%r218, %r217, 1;
	add.s32 	%r219, %r218, %r214;
	or.b32  	%r220, %r219, %r332;
	mov.b32 	 %f648, %r220;

BB0_44:
	mul.rn.f32 	%f59, %f648, %f648;
	and.b32  	%r84, %r336, 1;
	setp.eq.s32	%p35, %r84, 0;
	@%p35 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f251, 0f3C08839E;
	mov.f32 	%f252, 0fB94CA1F9;
	fma.rn.f32 	%f649, %f252, %f59, %f251;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f249, 0fBAB6061A;
	mov.f32 	%f250, 0f37CCF5CE;
	fma.rn.f32 	%f649, %f250, %f59, %f249;

BB0_47:
	@%p35 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f619, 0f00000000;
	mov.f32 	%f256, 0fBE2AAAA3;
	fma.rn.f32 	%f257, %f649, %f59, %f256;
	fma.rn.f32 	%f650, %f257, %f59, %f619;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f253, 0f3D2AAAA5;
	fma.rn.f32 	%f254, %f649, %f59, %f253;
	mov.f32 	%f255, 0fBF000000;
	fma.rn.f32 	%f650, %f254, %f59, %f255;

BB0_50:
	fma.rn.f32 	%f651, %f650, %f648, %f648;
	@%p35 bra 	BB0_52;

	mov.f32 	%f617, 0f3F800000;
	fma.rn.f32 	%f651, %f650, %f59, %f617;

BB0_52:
	and.b32  	%r221, %r336, 2;
	setp.eq.s32	%p38, %r221, 0;
	@%p38 bra 	BB0_54;

	mov.f32 	%f618, 0f00000000;
	mov.f32 	%f261, 0fBF800000;
	fma.rn.f32 	%f651, %f651, %f261, %f618;

BB0_54:
	mul.f32 	%f262, %f34, %f645;
	mul.f32 	%f263, %f34, %f651;
	mul.f32 	%f264, %f10, %f263;
	mul.f32 	%f265, %f11, %f263;
	mul.f32 	%f266, %f12, %f263;
	fma.rn.f32 	%f267, %f19, %f262, %f264;
	fma.rn.f32 	%f268, %f18, %f262, %f265;
	fma.rn.f32 	%f269, %f17, %f262, %f266;
	fma.rn.f32 	%f71, %f626, %f33, %f267;
	fma.rn.f32 	%f72, %f627, %f33, %f268;
	fma.rn.f32 	%f73, %f628, %f33, %f269;
	setp.gt.f32	%p39, %f72, 0f00000000;
	setp.eq.s32	%p40, %r4, 0;
	or.pred  	%p41, %p40, %p39;
	@!%p41 bra 	BB0_56;
	bra.uni 	BB0_55;

BB0_55:
	add.u64 	%rd61, %SP, 28;
	cvta.to.local.u64 	%rd62, %rd61;
	max.f32 	%f283, %f289, %f178;
	ld.global.u32 	%r222, [sky];
	neg.f32 	%f276, %f71;
	neg.f32 	%f275, %f72;
	neg.f32 	%f274, %f73;
	mov.u32 	%r223, 6;
	mov.u32 	%r224, 0;
	// inline asm
	call (%f270, %f271, %f272, %f273), _rt_texture_get_base_id, (%r222, %r223, %f274, %f275, %f276, %r224);
	// inline asm
	st.local.f32 	[%rd62], %f270;
	st.local.f32 	[%rd62+4], %f271;
	st.local.f32 	[%rd62+8], %f272;
	ld.global.u32 	%r225, [root];
	mov.u32 	%r226, 1;
	mov.f32 	%f284, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r225, %f7, %f8, %f9, %f71, %f72, %f73, %r226, %f283, %f284, %rd61, %r114);
	// inline asm
	ld.local.f32 	%f291, [%rd62];
	ld.local.f32 	%f292, [%rd62+4];
	ld.local.f32 	%f293, [%rd62+8];
	fma.rn.f32 	%f653, %f71, %f291, %f653;
	fma.rn.f32 	%f654, %f72, %f292, %f654;
	fma.rn.f32 	%f655, %f73, %f293, %f655;
	mul.f32 	%f294, %f627, %f72;
	fma.rn.f32 	%f295, %f626, %f71, %f294;
	fma.rn.f32 	%f296, %f628, %f73, %f295;
	cvt.sat.f32.f32	%f297, %f296;
	fma.rn.f32 	%f656, %f297, %f291, %f656;
	fma.rn.f32 	%f657, %f297, %f292, %f657;
	fma.rn.f32 	%f658, %f297, %f293, %f658;
	ld.global.u32 	%r337, [samples];

BB0_56:
	mad.lo.s32 	%r298, %r339, 1664525, 1013904223;
	mad.lo.s32 	%r339, %r298, 1664525, 1013904223;
	add.s32 	%r315, %r315, 1;
	setp.lt.s32	%p42, %r315, %r337;
	@%p42 bra 	BB0_8;

BB0_57:
	add.s32 	%r312, %r312, 1;
	setp.lt.s32	%p43, %r312, %r337;
	@%p43 bra 	BB0_6;
	bra.uni 	BB0_58;

BB0_4:
	mov.f32 	%f657, %f658;
	mov.f32 	%f656, %f658;
	mov.f32 	%f655, %f658;
	mov.f32 	%f654, %f658;
	mov.f32 	%f653, %f658;

BB0_58:
	mul.lo.s32 	%r228, %r337, %r337;
	cvt.rn.f32.s32	%f298, %r228;
	rcp.rn.f32 	%f299, %f298;
	mul.f32 	%f300, %f656, %f299;
	mul.f32 	%f301, %f657, %f299;
	mul.f32 	%f302, %f658, %f299;
	fma.rn.f32 	%f303, %f656, %f299, %f300;
	fma.rn.f32 	%f304, %f657, %f299, %f301;
	fma.rn.f32 	%f305, %f658, %f299, %f302;
	ld.global.f32 	%f306, [skyColor];
	mul.f32 	%f98, %f306, %f303;
	ld.global.f32 	%f307, [skyColor+4];
	mul.f32 	%f99, %f304, %f307;
	ld.global.f32 	%f308, [skyColor+8];
	mul.f32 	%f100, %f305, %f308;
	ld.global.u32 	%r341, [imageEnabled];
	and.b32  	%r229, %r341, 1;
	setp.eq.b32	%p44, %r229, 1;
	@!%p44 bra 	BB0_93;
	bra.uni 	BB0_59;

BB0_59:
	mov.f32 	%f311, 0f3E666666;
	cvt.rzi.f32.f32	%f312, %f311;
	fma.rn.f32 	%f313, %f312, 0fC0000000, 0f3EE66666;
	abs.f32 	%f101, %f313;
	abs.f32 	%f102, %f98;
	setp.lt.f32	%p45, %f102, 0f00800000;
	mul.f32 	%f314, %f102, 0f4B800000;
	selp.f32	%f315, 0fC3170000, 0fC2FE0000, %p45;
	selp.f32	%f316, %f314, %f102, %p45;
	mov.b32 	 %r230, %f316;
	and.b32  	%r231, %r230, 8388607;
	or.b32  	%r232, %r231, 1065353216;
	mov.b32 	 %f317, %r232;
	shr.u32 	%r233, %r230, 23;
	cvt.rn.f32.u32	%f318, %r233;
	add.f32 	%f319, %f315, %f318;
	setp.gt.f32	%p46, %f317, 0f3FB504F3;
	mul.f32 	%f320, %f317, 0f3F000000;
	add.f32 	%f321, %f319, 0f3F800000;
	selp.f32	%f322, %f320, %f317, %p46;
	selp.f32	%f323, %f321, %f319, %p46;
	add.f32 	%f324, %f322, 0fBF800000;
	add.f32 	%f310, %f322, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f309,%f310;
	// inline asm
	add.f32 	%f325, %f324, %f324;
	mul.f32 	%f326, %f309, %f325;
	mul.f32 	%f327, %f326, %f326;
	mov.f32 	%f328, 0f3C4CAF63;
	mov.f32 	%f329, 0f3B18F0FE;
	fma.rn.f32 	%f330, %f329, %f327, %f328;
	mov.f32 	%f331, 0f3DAAAABD;
	fma.rn.f32 	%f332, %f330, %f327, %f331;
	mul.rn.f32 	%f333, %f332, %f327;
	mul.rn.f32 	%f334, %f333, %f326;
	sub.f32 	%f335, %f324, %f326;
	neg.f32 	%f336, %f326;
	add.f32 	%f337, %f335, %f335;
	fma.rn.f32 	%f338, %f336, %f324, %f337;
	mul.rn.f32 	%f339, %f309, %f338;
	add.f32 	%f340, %f334, %f326;
	sub.f32 	%f341, %f326, %f340;
	add.f32 	%f342, %f334, %f341;
	add.f32 	%f343, %f339, %f342;
	add.f32 	%f344, %f340, %f343;
	sub.f32 	%f345, %f340, %f344;
	add.f32 	%f346, %f343, %f345;
	mov.f32 	%f347, 0f3F317200;
	mul.rn.f32 	%f348, %f323, %f347;
	mov.f32 	%f349, 0f35BFBE8E;
	mul.rn.f32 	%f350, %f323, %f349;
	add.f32 	%f351, %f348, %f344;
	sub.f32 	%f352, %f348, %f351;
	add.f32 	%f353, %f344, %f352;
	add.f32 	%f354, %f346, %f353;
	add.f32 	%f355, %f350, %f354;
	add.f32 	%f356, %f351, %f355;
	sub.f32 	%f357, %f351, %f356;
	add.f32 	%f358, %f355, %f357;
	mov.f32 	%f359, 0f3EE66666;
	mul.rn.f32 	%f360, %f359, %f356;
	neg.f32 	%f361, %f360;
	fma.rn.f32 	%f362, %f359, %f356, %f361;
	fma.rn.f32 	%f363, %f359, %f358, %f362;
	mov.f32 	%f364, 0f00000000;
	fma.rn.f32 	%f365, %f364, %f356, %f363;
	add.rn.f32 	%f366, %f360, %f365;
	neg.f32 	%f367, %f366;
	add.rn.f32 	%f368, %f360, %f367;
	add.rn.f32 	%f369, %f368, %f365;
	mov.b32 	 %r234, %f366;
	setp.eq.s32	%p47, %r234, 1118925336;
	add.s32 	%r235, %r234, -1;
	mov.b32 	 %f370, %r235;
	add.f32 	%f371, %f369, 0f37000000;
	selp.f32	%f372, %f370, %f366, %p47;
	selp.f32	%f103, %f371, %f369, %p47;
	mul.f32 	%f373, %f372, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f374, %f373;
	mov.f32 	%f375, 0fBF317200;
	fma.rn.f32 	%f376, %f374, %f375, %f372;
	mov.f32 	%f377, 0fB5BFBE8E;
	fma.rn.f32 	%f378, %f374, %f377, %f376;
	mul.f32 	%f379, %f378, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f380, %f379;
	add.f32 	%f381, %f374, 0f00000000;
	ex2.approx.f32 	%f382, %f381;
	mul.f32 	%f383, %f380, %f382;
	setp.lt.f32	%p48, %f372, 0fC2D20000;
	selp.f32	%f384, 0f00000000, %f383, %p48;
	setp.gt.f32	%p49, %f372, 0f42D20000;
	selp.f32	%f671, 0f7F800000, %f384, %p49;
	setp.eq.f32	%p50, %f671, 0f7F800000;
	@%p50 bra 	BB0_61;

	fma.rn.f32 	%f671, %f671, %f103, %f671;

BB0_61:
	setp.lt.f32	%p51, %f98, 0f00000000;
	setp.eq.f32	%p52, %f101, 0f3F800000;
	and.pred  	%p1, %p51, %p52;
	mov.b32 	 %r236, %f671;
	xor.b32  	%r237, %r236, -2147483648;
	mov.b32 	 %f385, %r237;
	selp.f32	%f673, %f385, %f671, %p1;
	setp.eq.f32	%p53, %f98, 0f00000000;
	@%p53 bra 	BB0_64;
	bra.uni 	BB0_62;

BB0_64:
	add.f32 	%f388, %f98, %f98;
	selp.f32	%f673, %f388, 0f00000000, %p52;
	bra.uni 	BB0_65;

BB0_104:
	mov.u64 	%rd123, image_HDR;
	cvta.global.u64 	%rd118, %rd123;
	mov.u32 	%r285, 8;
	mov.u64 	%rd122, 0;
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd118, %r98, %r285, %rd18, %rd19, %rd122, %rd122);
	// inline asm
	mov.f32 	%f583, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f583;}

	// inline asm
	mov.u16 	%rs47, 0;
	st.v4.u16 	[%rd117], {%rs46, %rs46, %rs46, %rs47};

BB0_105:
	ld.global.u8 	%rs48, [imageEnabled];
	and.b16  	%rs49, %rs48, 64;
	setp.eq.s16	%p99, %rs49, 0;
	@%p99 bra 	BB0_107;

	cvt.u64.u32	%rd126, %r2;
	cvt.u64.u32	%rd127, %r3;
	mov.u64 	%rd130, image_Dir;
	cvta.global.u64 	%rd125, %rd130;
	mov.u64 	%rd129, 0;
	// inline asm
	call (%rd124), _rt_buffer_get_64, (%rd125, %r98, %r99, %rd126, %rd127, %rd129, %rd129);
	// inline asm
	mov.u16 	%rs50, 0;
	st.v4.u8 	[%rd124], {%rs50, %rs50, %rs50, %rs50};
	bra.uni 	BB0_107;

BB0_62:
	setp.geu.f32	%p54, %f98, 0f00000000;
	@%p54 bra 	BB0_65;

	mov.f32 	%f607, 0f3EE66666;
	cvt.rzi.f32.f32	%f387, %f607;
	setp.neu.f32	%p55, %f387, 0f3EE66666;
	selp.f32	%f673, 0f7FFFFFFF, %f673, %p55;

BB0_65:
	abs.f32 	%f584, %f98;
	add.f32 	%f389, %f584, 0f3EE66666;
	mov.b32 	 %r238, %f389;
	setp.lt.s32	%p57, %r238, 2139095040;
	@%p57 bra 	BB0_70;

	abs.f32 	%f605, %f98;
	setp.gtu.f32	%p58, %f605, 0f7F800000;
	@%p58 bra 	BB0_69;
	bra.uni 	BB0_67;

BB0_69:
	add.f32 	%f673, %f98, 0f3EE66666;
	bra.uni 	BB0_70;

BB0_67:
	abs.f32 	%f606, %f98;
	setp.neu.f32	%p59, %f606, 0f7F800000;
	@%p59 bra 	BB0_70;

	selp.f32	%f673, 0fFF800000, 0f7F800000, %p1;

BB0_70:
	mov.f32 	%f593, 0fB5BFBE8E;
	mov.f32 	%f592, 0fBF317200;
	mov.f32 	%f591, 0f00000000;
	mov.f32 	%f590, 0f35BFBE8E;
	mov.f32 	%f589, 0f3F317200;
	mov.f32 	%f588, 0f3DAAAABD;
	mov.f32 	%f587, 0f3C4CAF63;
	mov.f32 	%f586, 0f3B18F0FE;
	mov.f32 	%f585, 0f3EE66666;
	setp.eq.f32	%p60, %f98, 0f3F800000;
	selp.f32	%f114, 0f3F800000, %f673, %p60;
	abs.f32 	%f115, %f99;
	setp.lt.f32	%p61, %f115, 0f00800000;
	mul.f32 	%f392, %f115, 0f4B800000;
	selp.f32	%f393, 0fC3170000, 0fC2FE0000, %p61;
	selp.f32	%f394, %f392, %f115, %p61;
	mov.b32 	 %r239, %f394;
	and.b32  	%r240, %r239, 8388607;
	or.b32  	%r241, %r240, 1065353216;
	mov.b32 	 %f395, %r241;
	shr.u32 	%r242, %r239, 23;
	cvt.rn.f32.u32	%f396, %r242;
	add.f32 	%f397, %f393, %f396;
	setp.gt.f32	%p62, %f395, 0f3FB504F3;
	mul.f32 	%f398, %f395, 0f3F000000;
	add.f32 	%f399, %f397, 0f3F800000;
	selp.f32	%f400, %f398, %f395, %p62;
	selp.f32	%f401, %f399, %f397, %p62;
	add.f32 	%f402, %f400, 0fBF800000;
	add.f32 	%f391, %f400, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f390,%f391;
	// inline asm
	add.f32 	%f403, %f402, %f402;
	mul.f32 	%f404, %f390, %f403;
	mul.f32 	%f405, %f404, %f404;
	fma.rn.f32 	%f408, %f586, %f405, %f587;
	fma.rn.f32 	%f410, %f408, %f405, %f588;
	mul.rn.f32 	%f411, %f410, %f405;
	mul.rn.f32 	%f412, %f411, %f404;
	sub.f32 	%f413, %f402, %f404;
	neg.f32 	%f414, %f404;
	add.f32 	%f415, %f413, %f413;
	fma.rn.f32 	%f416, %f414, %f402, %f415;
	mul.rn.f32 	%f417, %f390, %f416;
	add.f32 	%f418, %f412, %f404;
	sub.f32 	%f419, %f404, %f418;
	add.f32 	%f420, %f412, %f419;
	add.f32 	%f421, %f417, %f420;
	add.f32 	%f422, %f418, %f421;
	sub.f32 	%f423, %f418, %f422;
	add.f32 	%f424, %f421, %f423;
	mul.rn.f32 	%f426, %f401, %f589;
	mul.rn.f32 	%f428, %f401, %f590;
	add.f32 	%f429, %f426, %f422;
	sub.f32 	%f430, %f426, %f429;
	add.f32 	%f431, %f422, %f430;
	add.f32 	%f432, %f424, %f431;
	add.f32 	%f433, %f428, %f432;
	add.f32 	%f434, %f429, %f433;
	sub.f32 	%f435, %f429, %f434;
	add.f32 	%f436, %f433, %f435;
	mul.rn.f32 	%f438, %f585, %f434;
	neg.f32 	%f439, %f438;
	fma.rn.f32 	%f440, %f585, %f434, %f439;
	fma.rn.f32 	%f441, %f585, %f436, %f440;
	fma.rn.f32 	%f443, %f591, %f434, %f441;
	add.rn.f32 	%f444, %f438, %f443;
	neg.f32 	%f445, %f444;
	add.rn.f32 	%f446, %f438, %f445;
	add.rn.f32 	%f447, %f446, %f443;
	mov.b32 	 %r243, %f444;
	setp.eq.s32	%p63, %r243, 1118925336;
	add.s32 	%r244, %r243, -1;
	mov.b32 	 %f448, %r244;
	add.f32 	%f449, %f447, 0f37000000;
	selp.f32	%f450, %f448, %f444, %p63;
	selp.f32	%f116, %f449, %f447, %p63;
	mul.f32 	%f451, %f450, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f452, %f451;
	fma.rn.f32 	%f454, %f452, %f592, %f450;
	fma.rn.f32 	%f456, %f452, %f593, %f454;
	mul.f32 	%f457, %f456, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f458, %f457;
	add.f32 	%f459, %f452, 0f00000000;
	ex2.approx.f32 	%f460, %f459;
	mul.f32 	%f461, %f458, %f460;
	setp.lt.f32	%p64, %f450, 0fC2D20000;
	selp.f32	%f462, 0f00000000, %f461, %p64;
	setp.gt.f32	%p65, %f450, 0f42D20000;
	selp.f32	%f674, 0f7F800000, %f462, %p65;
	setp.eq.f32	%p66, %f674, 0f7F800000;
	@%p66 bra 	BB0_72;

	fma.rn.f32 	%f674, %f674, %f116, %f674;

BB0_72:
	setp.lt.f32	%p67, %f99, 0f00000000;
	and.pred  	%p2, %p67, %p52;
	mov.b32 	 %r245, %f674;
	xor.b32  	%r246, %r245, -2147483648;
	mov.b32 	 %f463, %r246;
	selp.f32	%f676, %f463, %f674, %p2;
	setp.eq.f32	%p69, %f99, 0f00000000;
	@%p69 bra 	BB0_75;
	bra.uni 	BB0_73;

BB0_75:
	add.f32 	%f466, %f99, %f99;
	selp.f32	%f676, %f466, 0f00000000, %p52;
	bra.uni 	BB0_76;

BB0_73:
	setp.geu.f32	%p70, %f99, 0f00000000;
	@%p70 bra 	BB0_76;

	mov.f32 	%f604, 0f3EE66666;
	cvt.rzi.f32.f32	%f465, %f604;
	setp.neu.f32	%p71, %f465, 0f3EE66666;
	selp.f32	%f676, 0f7FFFFFFF, %f676, %p71;

BB0_76:
	abs.f32 	%f608, %f99;
	add.f32 	%f467, %f608, 0f3EE66666;
	mov.b32 	 %r247, %f467;
	setp.lt.s32	%p73, %r247, 2139095040;
	@%p73 bra 	BB0_81;

	abs.f32 	%f609, %f99;
	setp.gtu.f32	%p74, %f609, 0f7F800000;
	@%p74 bra 	BB0_80;
	bra.uni 	BB0_78;

BB0_80:
	add.f32 	%f676, %f99, 0f3EE66666;
	bra.uni 	BB0_81;

BB0_78:
	abs.f32 	%f610, %f99;
	setp.neu.f32	%p75, %f610, 0f7F800000;
	@%p75 bra 	BB0_81;

	selp.f32	%f676, 0fFF800000, 0f7F800000, %p2;

BB0_81:
	mov.f32 	%f602, 0fB5BFBE8E;
	mov.f32 	%f601, 0fBF317200;
	mov.f32 	%f600, 0f00000000;
	mov.f32 	%f599, 0f35BFBE8E;
	mov.f32 	%f598, 0f3F317200;
	mov.f32 	%f597, 0f3DAAAABD;
	mov.f32 	%f596, 0f3C4CAF63;
	mov.f32 	%f595, 0f3B18F0FE;
	mov.f32 	%f594, 0f3EE66666;
	setp.eq.f32	%p76, %f99, 0f3F800000;
	selp.f32	%f127, 0f3F800000, %f676, %p76;
	abs.f32 	%f128, %f100;
	setp.lt.f32	%p77, %f128, 0f00800000;
	mul.f32 	%f470, %f128, 0f4B800000;
	selp.f32	%f471, 0fC3170000, 0fC2FE0000, %p77;
	selp.f32	%f472, %f470, %f128, %p77;
	mov.b32 	 %r248, %f472;
	and.b32  	%r249, %r248, 8388607;
	or.b32  	%r250, %r249, 1065353216;
	mov.b32 	 %f473, %r250;
	shr.u32 	%r251, %r248, 23;
	cvt.rn.f32.u32	%f474, %r251;
	add.f32 	%f475, %f471, %f474;
	setp.gt.f32	%p78, %f473, 0f3FB504F3;
	mul.f32 	%f476, %f473, 0f3F000000;
	add.f32 	%f477, %f475, 0f3F800000;
	selp.f32	%f478, %f476, %f473, %p78;
	selp.f32	%f479, %f477, %f475, %p78;
	add.f32 	%f480, %f478, 0fBF800000;
	add.f32 	%f469, %f478, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f468,%f469;
	// inline asm
	add.f32 	%f481, %f480, %f480;
	mul.f32 	%f482, %f468, %f481;
	mul.f32 	%f483, %f482, %f482;
	fma.rn.f32 	%f486, %f595, %f483, %f596;
	fma.rn.f32 	%f488, %f486, %f483, %f597;
	mul.rn.f32 	%f489, %f488, %f483;
	mul.rn.f32 	%f490, %f489, %f482;
	sub.f32 	%f491, %f480, %f482;
	neg.f32 	%f492, %f482;
	add.f32 	%f493, %f491, %f491;
	fma.rn.f32 	%f494, %f492, %f480, %f493;
	mul.rn.f32 	%f495, %f468, %f494;
	add.f32 	%f496, %f490, %f482;
	sub.f32 	%f497, %f482, %f496;
	add.f32 	%f498, %f490, %f497;
	add.f32 	%f499, %f495, %f498;
	add.f32 	%f500, %f496, %f499;
	sub.f32 	%f501, %f496, %f500;
	add.f32 	%f502, %f499, %f501;
	mul.rn.f32 	%f504, %f479, %f598;
	mul.rn.f32 	%f506, %f479, %f599;
	add.f32 	%f507, %f504, %f500;
	sub.f32 	%f508, %f504, %f507;
	add.f32 	%f509, %f500, %f508;
	add.f32 	%f510, %f502, %f509;
	add.f32 	%f511, %f506, %f510;
	add.f32 	%f512, %f507, %f511;
	sub.f32 	%f513, %f507, %f512;
	add.f32 	%f514, %f511, %f513;
	mul.rn.f32 	%f516, %f594, %f512;
	neg.f32 	%f517, %f516;
	fma.rn.f32 	%f518, %f594, %f512, %f517;
	fma.rn.f32 	%f519, %f594, %f514, %f518;
	fma.rn.f32 	%f521, %f600, %f512, %f519;
	add.rn.f32 	%f522, %f516, %f521;
	neg.f32 	%f523, %f522;
	add.rn.f32 	%f524, %f516, %f523;
	add.rn.f32 	%f525, %f524, %f521;
	mov.b32 	 %r252, %f522;
	setp.eq.s32	%p79, %r252, 1118925336;
	add.s32 	%r253, %r252, -1;
	mov.b32 	 %f526, %r253;
	add.f32 	%f527, %f525, 0f37000000;
	selp.f32	%f528, %f526, %f522, %p79;
	selp.f32	%f129, %f527, %f525, %p79;
	mul.f32 	%f529, %f528, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f530, %f529;
	fma.rn.f32 	%f532, %f530, %f601, %f528;
	fma.rn.f32 	%f534, %f530, %f602, %f532;
	mul.f32 	%f535, %f534, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f536, %f535;
	add.f32 	%f537, %f530, 0f00000000;
	ex2.approx.f32 	%f538, %f537;
	mul.f32 	%f539, %f536, %f538;
	setp.lt.f32	%p80, %f528, 0fC2D20000;
	selp.f32	%f540, 0f00000000, %f539, %p80;
	setp.gt.f32	%p81, %f528, 0f42D20000;
	selp.f32	%f677, 0f7F800000, %f540, %p81;
	setp.eq.f32	%p82, %f677, 0f7F800000;
	@%p82 bra 	BB0_83;

	fma.rn.f32 	%f677, %f677, %f129, %f677;

BB0_83:
	setp.lt.f32	%p83, %f100, 0f00000000;
	and.pred  	%p3, %p83, %p52;
	mov.b32 	 %r254, %f677;
	xor.b32  	%r255, %r254, -2147483648;
	mov.b32 	 %f541, %r255;
	selp.f32	%f679, %f541, %f677, %p3;
	setp.eq.f32	%p85, %f100, 0f00000000;
	@%p85 bra 	BB0_86;
	bra.uni 	BB0_84;

BB0_86:
	add.f32 	%f544, %f100, %f100;
	selp.f32	%f679, %f544, 0f00000000, %p52;
	bra.uni 	BB0_87;

BB0_84:
	setp.geu.f32	%p86, %f100, 0f00000000;
	@%p86 bra 	BB0_87;

	mov.f32 	%f603, 0f3EE66666;
	cvt.rzi.f32.f32	%f543, %f603;
	setp.neu.f32	%p87, %f543, 0f3EE66666;
	selp.f32	%f679, 0f7FFFFFFF, %f679, %p87;

BB0_87:
	abs.f32 	%f623, %f100;
	add.f32 	%f545, %f623, 0f3EE66666;
	mov.b32 	 %r256, %f545;
	setp.lt.s32	%p89, %r256, 2139095040;
	@%p89 bra 	BB0_92;

	abs.f32 	%f624, %f100;
	setp.gtu.f32	%p90, %f624, 0f7F800000;
	@%p90 bra 	BB0_91;
	bra.uni 	BB0_89;

BB0_91:
	add.f32 	%f679, %f100, 0f3EE66666;
	bra.uni 	BB0_92;

BB0_89:
	abs.f32 	%f625, %f100;
	setp.neu.f32	%p91, %f625, 0f7F800000;
	@%p91 bra 	BB0_92;

	selp.f32	%f679, 0fFF800000, 0f7F800000, %p3;

BB0_92:
	mov.u32 	%r289, 4;
	mov.u64 	%rd131, 0;
	mov.u32 	%r288, 2;
	setp.eq.f32	%p92, %f100, 0f3F800000;
	selp.f32	%f546, 0f3F800000, %f679, %p92;
	cvt.u64.u32	%rd66, %r3;
	cvt.u64.u32	%rd65, %r2;
	mov.u64 	%rd69, image;
	cvta.global.u64 	%rd64, %rd69;
	// inline asm
	call (%rd63), _rt_buffer_get_64, (%rd64, %r288, %r289, %rd65, %rd66, %rd131, %rd131);
	// inline asm
	cvt.sat.f32.f32	%f547, %f546;
	mul.f32 	%f548, %f547, 0f437FFD71;
	cvt.rzi.u32.f32	%r259, %f548;
	cvt.sat.f32.f32	%f549, %f127;
	mul.f32 	%f550, %f549, 0f437FFD71;
	cvt.rzi.u32.f32	%r260, %f550;
	cvt.sat.f32.f32	%f551, %f114;
	mul.f32 	%f552, %f551, 0f437FFD71;
	cvt.rzi.u32.f32	%r261, %f552;
	cvt.u16.u32	%rs10, %r259;
	cvt.u16.u32	%rs11, %r261;
	cvt.u16.u32	%rs12, %r260;
	mov.u16 	%rs13, 255;
	st.v4.u8 	[%rd63], {%rs10, %rs12, %rs11, %rs13};
	ld.global.u32 	%r341, [imageEnabled];

BB0_93:
	and.b32  	%r262, %r341, 4;
	setp.eq.s32	%p93, %r262, 0;
	@%p93 bra 	BB0_97;

	ld.global.u32 	%r263, [additive];
	setp.eq.s32	%p94, %r263, 0;
	cvt.u64.u32	%rd16, %r2;
	cvt.u64.u32	%rd17, %r3;
	mov.f32 	%f553, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs14, %f553;}

	// inline asm
	@%p94 bra 	BB0_96;

	mov.u64 	%rd132, 0;
	mov.u32 	%r290, 2;
	mov.u64 	%rd82, image_HDR;
	cvta.global.u64 	%rd71, %rd82;
	mov.u32 	%r267, 8;
	// inline asm
	call (%rd70), _rt_buffer_get_64, (%rd71, %r290, %r267, %rd16, %rd17, %rd132, %rd132);
	// inline asm
	ld.v4.u16 	{%rs21, %rs22, %rs23, %rs24}, [%rd70];
	// inline asm
	{  cvt.f32.f16 %f554, %rs21;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f555, %rs22;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f556, %rs23;}

	// inline asm
	// inline asm
	call (%rd76), _rt_buffer_get_64, (%rd71, %r290, %r267, %rd16, %rd17, %rd132, %rd132);
	// inline asm
	add.f32 	%f557, %f98, %f554;
	add.f32 	%f558, %f99, %f555;
	add.f32 	%f559, %f100, %f556;
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f559;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f558;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs18, %f557;}

	// inline asm
	st.v4.u16 	[%rd76], {%rs18, %rs19, %rs20, %rs14};
	bra.uni 	BB0_97;

BB0_96:
	mov.u64 	%rd133, 0;
	mov.u32 	%r291, 2;
	mov.u64 	%rd89, image_HDR;
	cvta.global.u64 	%rd84, %rd89;
	mov.u32 	%r269, 8;
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd84, %r291, %r269, %rd16, %rd17, %rd133, %rd133);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f100;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f99;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f98;}

	// inline asm
	st.v4.u16 	[%rd83], {%rs25, %rs26, %rs27, %rs14};

BB0_97:
	ld.global.u8 	%rs28, [imageEnabled];
	and.b16  	%rs29, %rs28, 64;
	setp.eq.s16	%p95, %rs29, 0;
	@%p95 bra 	BB0_107;

	mov.u32 	%r293, 4;
	mov.u64 	%rd134, 0;
	mov.u32 	%r292, 2;
	mul.f32 	%f563, %f654, %f654;
	fma.rn.f32 	%f564, %f653, %f653, %f563;
	fma.rn.f32 	%f565, %f655, %f655, %f564;
	sqrt.rn.f32 	%f566, %f565;
	rcp.rn.f32 	%f567, %f566;
	mul.f32 	%f568, %f653, %f567;
	mul.f32 	%f569, %f654, %f567;
	mul.f32 	%f570, %f655, %f567;
	cvt.u64.u32	%rd93, %r3;
	cvt.u64.u32	%rd92, %r2;
	mov.u64 	%rd96, image_Dir;
	cvta.global.u64 	%rd91, %rd96;
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd91, %r292, %r293, %rd92, %rd93, %rd134, %rd134);
	// inline asm
	fma.rn.f32 	%f571, %f568, 0f3F000000, 0f3F000000;
	mul.f32 	%f572, %f571, 0f437F0000;
	cvt.rzi.u32.f32	%r272, %f572;
	fma.rn.f32 	%f573, %f569, 0f3F000000, 0f3F000000;
	mul.f32 	%f574, %f573, 0f437F0000;
	cvt.rzi.u32.f32	%r273, %f574;
	fma.rn.f32 	%f575, %f570, 0f3F000000, 0f3F000000;
	mul.f32 	%f576, %f575, 0f437F0000;
	cvt.rzi.u32.f32	%r274, %f576;
	cvt.u16.u32	%rs30, %r274;
	cvt.u16.u32	%rs31, %r273;
	cvt.u16.u32	%rs32, %r272;
	mov.u16 	%rs33, 255;
	st.v4.u8 	[%rd90], {%rs32, %rs31, %rs30, %rs33};

BB0_107:
	ret;
}


