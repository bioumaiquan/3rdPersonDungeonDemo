//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .texref sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<112>;
	.reg .b16 	%rs<153>;
	.reg .f32 	%f<869>;
	.reg .b32 	%r<404>;
	.reg .b64 	%rd<283>;


	mov.u64 	%rd282, __local_depot0;
	cvta.local.u64 	%SP, %rd282;
	ld.global.v2.u32 	{%r107, %r108}, [pixelID];
	cvt.u64.u32	%rd24, %r107;
	cvt.u64.u32	%rd25, %r108;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r105, 2;
	mov.u32 	%r106, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r105, %r106, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r1, [%rd22];
	shr.u32 	%r111, %r1, 16;
	cvt.u16.u32	%rs1, %r111;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r1;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p4, %rs8, 0;
	mov.f32 	%f816, 0f00000000;
	mov.f32 	%f817, %f816;
	mov.f32 	%f818, %f816;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs9, [%rd22+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f174, %rs11;
	div.rn.f32 	%f175, %f174, 0f437F0000;
	fma.rn.f32 	%f176, %f175, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f177, %rs9;
	div.rn.f32 	%f178, %f177, 0f437F0000;
	fma.rn.f32 	%f179, %f178, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f180, %rs6;
	div.rn.f32 	%f181, %f180, 0f437F0000;
	fma.rn.f32 	%f182, %f181, 0f40000000, 0fBF800000;
	mul.f32 	%f183, %f179, %f179;
	fma.rn.f32 	%f184, %f176, %f176, %f183;
	fma.rn.f32 	%f185, %f182, %f182, %f184;
	sqrt.rn.f32 	%f186, %f185;
	rcp.rn.f32 	%f187, %f186;
	mul.f32 	%f816, %f176, %f187;
	mul.f32 	%f817, %f179, %f187;
	mul.f32 	%f818, %f182, %f187;

BB0_2:
	ld.global.v2.u32 	{%r112, %r113}, [pixelID];
	ld.global.v2.u32 	{%r115, %r116}, [tileInfo];
	add.s32 	%r2, %r112, %r115;
	add.s32 	%r3, %r113, %r116;
	setp.eq.f32	%p5, %f817, 0f00000000;
	setp.eq.f32	%p6, %f816, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f818, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_112;
	bra.uni 	BB0_3;

BB0_112:
	ld.global.u32 	%r403, [imageEnabled];
	and.b32  	%r314, %r403, 1;
	setp.eq.b32	%p105, %r314, 1;
	@!%p105 bra 	BB0_114;
	bra.uni 	BB0_113;

BB0_113:
	cvt.u64.u32	%rd176, %r3;
	cvt.u64.u32	%rd175, %r2;
	mov.u64 	%rd179, image;
	cvta.global.u64 	%rd174, %rd179;
	mov.u64 	%rd178, 0;
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd174, %r105, %r106, %rd175, %rd176, %rd178, %rd178);
	// inline asm
	mov.u16 	%rs100, 0;
	st.v4.u8 	[%rd173], {%rs100, %rs100, %rs100, %rs100};
	ld.global.u32 	%r403, [imageEnabled];

BB0_114:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	and.b32  	%r317, %r403, 4;
	setp.eq.s32	%p106, %r317, 0;
	@%p106 bra 	BB0_118;

	ld.global.u32 	%r318, [additive];
	setp.eq.s32	%p107, %r318, 0;
	@%p107 bra 	BB0_117;

	mov.u64 	%rd192, image_HDR;
	cvta.global.u64 	%rd181, %rd192;
	mov.u32 	%r322, 8;
	mov.u64 	%rd191, 0;
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd181, %r105, %r322, %rd20, %rd21, %rd191, %rd191);
	// inline asm
	ld.v4.u16 	{%rs107, %rs108, %rs109, %rs110}, [%rd180];
	// inline asm
	{  cvt.f32.f16 %f736, %rs107;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f737, %rs108;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f738, %rs109;}

	// inline asm
	// inline asm
	call (%rd186), _rt_buffer_get_64, (%rd181, %r105, %r322, %rd20, %rd21, %rd191, %rd191);
	// inline asm
	add.f32 	%f739, %f736, 0f00000000;
	add.f32 	%f740, %f737, 0f00000000;
	add.f32 	%f741, %f738, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs106, %f741;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f740;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f739;}

	// inline asm
	mov.u16 	%rs111, 0;
	st.v4.u16 	[%rd186], {%rs104, %rs105, %rs106, %rs111};
	bra.uni 	BB0_118;

BB0_3:
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd31, %r126;
	cvt.u64.u32	%rd32, %r127;
	mov.u64 	%rd47, uvpos;
	cvta.global.u64 	%rd30, %rd47;
	mov.u32 	%r121, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r105, %r121, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f191, [%rd29+8];
	ld.f32 	%f192, [%rd29+4];
	ld.f32 	%f193, [%rd29];
	mul.f32 	%f194, %f193, 0f3456BF95;
	mul.f32 	%f195, %f192, 0f3456BF95;
	mul.f32 	%f196, %f191, 0f3456BF95;
	abs.f32 	%f197, %f816;
	div.rn.f32 	%f198, %f194, %f197;
	abs.f32 	%f199, %f817;
	div.rn.f32 	%f200, %f195, %f199;
	abs.f32 	%f201, %f818;
	div.rn.f32 	%f202, %f196, %f201;
	abs.f32 	%f203, %f198;
	abs.f32 	%f204, %f200;
	abs.f32 	%f205, %f202;
	mov.f32 	%f206, 0f38D1B717;
	max.f32 	%f207, %f203, %f206;
	max.f32 	%f208, %f204, %f206;
	max.f32 	%f209, %f205, %f206;
	fma.rn.f32 	%f7, %f816, %f207, %f193;
	fma.rn.f32 	%f8, %f817, %f208, %f192;
	fma.rn.f32 	%f9, %f818, %f209, %f191;
	ld.global.u32 	%r4, [hemispherical];
	setp.gt.f32	%p10, %f197, %f201;
	neg.f32 	%f210, %f817;
	selp.f32	%f211, %f210, 0f00000000, %p10;
	neg.f32 	%f212, %f818;
	selp.f32	%f213, %f816, %f212, %p10;
	selp.f32	%f214, 0f00000000, %f817, %p10;
	mul.f32 	%f215, %f213, %f213;
	fma.rn.f32 	%f216, %f211, %f211, %f215;
	fma.rn.f32 	%f217, %f214, %f214, %f216;
	sqrt.rn.f32 	%f218, %f217;
	rcp.rn.f32 	%f219, %f218;
	mul.f32 	%f10, %f211, %f219;
	mul.f32 	%f11, %f213, %f219;
	mul.f32 	%f12, %f214, %f219;
	ld.global.v2.u32 	{%r130, %r131}, [pixelID];
	cvt.u64.u32	%rd37, %r130;
	cvt.u64.u32	%rd38, %r131;
	mov.u64 	%rd48, rnd_seeds;
	cvta.global.u64 	%rd36, %rd48;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r105, %r106, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.u32 	%r400, [%rd35];
	ld.global.u32 	%r6, [samples];
	ld.global.v2.u32 	{%r134, %r135}, [pixelID];
	cvt.u64.u32	%rd43, %r134;
	cvt.u64.u32	%rd44, %r135;
	mov.u64 	%rd49, uvtangent;
	cvta.global.u64 	%rd42, %rd49;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r105, %r106, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.u32 	%r7, [%rd41];
	shr.u32 	%r8, %r7, 16;
	cvt.u16.u32	%rs13, %r8;
	and.b16  	%rs14, %rs13, 255;
	cvt.u16.u32	%rs15, %r7;
	or.b16  	%rs16, %rs15, %rs14;
	setp.eq.s16	%p11, %rs16, 0;
	mov.f32 	%f822, 0f00000000;
	mov.f32 	%f819, %f822;
	mov.f32 	%f820, %f822;
	mov.f32 	%f821, %f822;
	@%p11 bra 	BB0_5;

	ld.u8 	%rs17, [%rd41+1];
	and.b16  	%rs19, %rs15, 255;
	cvt.rn.f32.u16	%f220, %rs19;
	div.rn.f32 	%f221, %f220, 0f437F0000;
	fma.rn.f32 	%f222, %f221, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f223, %rs17;
	div.rn.f32 	%f224, %f223, 0f437F0000;
	fma.rn.f32 	%f225, %f224, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f226, %rs14;
	div.rn.f32 	%f227, %f226, 0f437F0000;
	fma.rn.f32 	%f228, %f227, 0f40000000, 0fBF800000;
	mul.f32 	%f229, %f225, %f225;
	fma.rn.f32 	%f230, %f222, %f222, %f229;
	fma.rn.f32 	%f231, %f228, %f228, %f230;
	sqrt.rn.f32 	%f232, %f231;
	rcp.rn.f32 	%f233, %f232;
	mul.f32 	%f819, %f222, %f233;
	mul.f32 	%f820, %f225, %f233;
	mul.f32 	%f821, %f228, %f233;

BB0_5:
	mul.f32 	%f237, %f818, %f820;
	mul.f32 	%f238, %f817, %f821;
	sub.f32 	%f239, %f238, %f237;
	mul.f32 	%f240, %f816, %f821;
	mul.f32 	%f241, %f818, %f819;
	sub.f32 	%f242, %f241, %f240;
	mul.f32 	%f243, %f817, %f819;
	mul.f32 	%f244, %f816, %f820;
	sub.f32 	%f245, %f244, %f243;
	setp.lt.u32	%p12, %r7, 16777216;
	selp.f32	%f246, 0fBF800000, 0f3F800000, %p12;
	mul.f32 	%f247, %f239, %f246;
	mul.f32 	%f248, %f242, %f246;
	mul.f32 	%f249, %f245, %f246;
	mul.f32 	%f250, %f247, 0f00000000;
	mul.f32 	%f251, %f248, 0f00000000;
	mul.f32 	%f252, %f249, 0f00000000;
	fma.rn.f32 	%f253, %f819, 0f3F5105EC, %f250;
	fma.rn.f32 	%f254, %f820, 0f3F5105EC, %f251;
	fma.rn.f32 	%f255, %f821, 0f3F5105EC, %f252;
	mul.f32 	%f19, %f816, 0f3F13CD3A;
	add.f32 	%f20, %f19, %f253;
	mul.f32 	%f21, %f817, 0f3F13CD3A;
	add.f32 	%f22, %f21, %f254;
	mul.f32 	%f23, %f818, 0f3F13CD3A;
	add.f32 	%f24, %f23, %f255;
	ld.global.v2.u32 	{%r140, %r141}, [pixelID];
	cvt.u64.u32	%rd52, %r140;
	cvt.u64.u32	%rd53, %r141;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd42, %r105, %r106, %rd52, %rd53, %rd27, %rd27);
	// inline asm
	ld.u32 	%r9, [%rd50];
	shr.u32 	%r10, %r9, 16;
	cvt.u16.u32	%rs22, %r10;
	and.b16  	%rs23, %rs22, 255;
	cvt.u16.u32	%rs24, %r9;
	or.b16  	%rs25, %rs24, %rs23;
	setp.eq.s16	%p13, %rs25, 0;
	mov.f32 	%f823, %f822;
	mov.f32 	%f824, %f822;
	@%p13 bra 	BB0_7;

	ld.u8 	%rs26, [%rd50+1];
	and.b16  	%rs28, %rs24, 255;
	cvt.rn.f32.u16	%f256, %rs28;
	div.rn.f32 	%f257, %f256, 0f437F0000;
	fma.rn.f32 	%f258, %f257, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f259, %rs26;
	div.rn.f32 	%f260, %f259, 0f437F0000;
	fma.rn.f32 	%f261, %f260, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f262, %rs23;
	div.rn.f32 	%f263, %f262, 0f437F0000;
	fma.rn.f32 	%f264, %f263, 0f40000000, 0fBF800000;
	mul.f32 	%f265, %f261, %f261;
	fma.rn.f32 	%f266, %f258, %f258, %f265;
	fma.rn.f32 	%f267, %f264, %f264, %f266;
	sqrt.rn.f32 	%f268, %f267;
	rcp.rn.f32 	%f269, %f268;
	mul.f32 	%f822, %f258, %f269;
	mul.f32 	%f823, %f261, %f269;
	mul.f32 	%f824, %f264, %f269;

BB0_7:
	mul.f32 	%f796, %f816, 0f3F13CD3A;
	mov.f32 	%f825, 0f00000000;
	mov.u64 	%rd270, uvtangent;
	cvta.global.u64 	%rd269, %rd270;
	mov.u32 	%r356, 2;
	mul.f32 	%f273, %f818, %f823;
	mul.f32 	%f274, %f817, %f824;
	sub.f32 	%f275, %f274, %f273;
	mul.f32 	%f276, %f816, %f824;
	mul.f32 	%f277, %f818, %f822;
	sub.f32 	%f278, %f277, %f276;
	mul.f32 	%f279, %f817, %f822;
	mul.f32 	%f280, %f816, %f823;
	sub.f32 	%f281, %f280, %f279;
	setp.lt.u32	%p14, %r9, 16777216;
	selp.f32	%f282, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f283, %f275, %f282;
	mul.f32 	%f284, %f278, %f282;
	mul.f32 	%f285, %f281, %f282;
	mul.f32 	%f286, %f283, 0f3F3504F3;
	mul.f32 	%f287, %f284, 0f3F3504F3;
	mul.f32 	%f288, %f285, 0f3F3504F3;
	fma.rn.f32 	%f289, %f822, 0fBED105EC, %f286;
	fma.rn.f32 	%f290, %f823, 0fBED105EC, %f287;
	fma.rn.f32 	%f291, %f824, 0fBED105EC, %f288;
	add.f32 	%f31, %f796, %f289;
	add.f32 	%f32, %f21, %f290;
	add.f32 	%f33, %f23, %f291;
	ld.global.v2.u32 	{%r146, %r147}, [pixelID];
	cvt.u64.u32	%rd59, %r146;
	cvt.u64.u32	%rd60, %r147;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd269, %r356, %r106, %rd59, %rd60, %rd27, %rd27);
	// inline asm
	ld.u32 	%r11, [%rd57];
	shr.u32 	%r12, %r11, 16;
	cvt.u16.u32	%rs31, %r12;
	and.b16  	%rs32, %rs31, 255;
	cvt.u16.u32	%rs33, %r11;
	or.b16  	%rs34, %rs33, %rs32;
	setp.eq.s16	%p15, %rs34, 0;
	mov.f32 	%f826, %f825;
	mov.f32 	%f827, %f825;
	@%p15 bra 	BB0_9;

	ld.u8 	%rs35, [%rd57+1];
	and.b16  	%rs37, %rs33, 255;
	cvt.rn.f32.u16	%f292, %rs37;
	div.rn.f32 	%f293, %f292, 0f437F0000;
	fma.rn.f32 	%f294, %f293, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f295, %rs35;
	div.rn.f32 	%f296, %f295, 0f437F0000;
	fma.rn.f32 	%f297, %f296, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f298, %rs32;
	div.rn.f32 	%f299, %f298, 0f437F0000;
	fma.rn.f32 	%f300, %f299, 0f40000000, 0fBF800000;
	mul.f32 	%f301, %f297, %f297;
	fma.rn.f32 	%f302, %f294, %f294, %f301;
	fma.rn.f32 	%f303, %f300, %f300, %f302;
	sqrt.rn.f32 	%f304, %f303;
	rcp.rn.f32 	%f305, %f304;
	mul.f32 	%f825, %f294, %f305;
	mul.f32 	%f826, %f297, %f305;
	mul.f32 	%f827, %f300, %f305;

BB0_9:
	mul.f32 	%f800, %f818, 0f3F13CD3A;
	mul.f32 	%f799, %f817, 0f3F13CD3A;
	mul.f32 	%f798, %f816, 0f3F13CD3A;
	mov.f32 	%f851, 0f00000000;
	mul.f32 	%f310, %f818, %f826;
	mul.f32 	%f311, %f817, %f827;
	sub.f32 	%f312, %f311, %f310;
	mul.f32 	%f313, %f816, %f827;
	mul.f32 	%f314, %f818, %f825;
	sub.f32 	%f315, %f314, %f313;
	mul.f32 	%f316, %f817, %f825;
	mul.f32 	%f317, %f816, %f826;
	sub.f32 	%f318, %f317, %f316;
	setp.lt.u32	%p16, %r11, 16777216;
	selp.f32	%f319, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f320, %f312, %f319;
	mul.f32 	%f321, %f315, %f319;
	mul.f32 	%f322, %f318, %f319;
	mul.f32 	%f323, %f320, 0fBF3504F3;
	mul.f32 	%f324, %f321, 0fBF3504F3;
	mul.f32 	%f325, %f322, 0fBF3504F3;
	fma.rn.f32 	%f326, %f825, 0fBED105EC, %f323;
	fma.rn.f32 	%f327, %f826, 0fBED105EC, %f324;
	fma.rn.f32 	%f328, %f827, 0fBED105EC, %f325;
	add.f32 	%f40, %f798, %f326;
	add.f32 	%f41, %f799, %f327;
	add.f32 	%f42, %f800, %f328;
	ld.global.u32 	%r398, [samples];
	setp.lt.s32	%p17, %r398, 1;
	@%p17 bra 	BB0_10;

	cvt.rn.f32.s32	%f333, %r6;
	rcp.rn.f32 	%f43, %f333;
	mul.f32 	%f44, %f7, 0f3456BF95;
	mul.f32 	%f45, %f8, 0f3456BF95;
	mul.f32 	%f46, %f9, 0f3456BF95;
	mul.f32 	%f334, %f818, %f11;
	mul.f32 	%f335, %f817, %f12;
	sub.f32 	%f47, %f334, %f335;
	mul.f32 	%f336, %f816, %f12;
	mul.f32 	%f337, %f818, %f10;
	sub.f32 	%f48, %f336, %f337;
	mul.f32 	%f338, %f817, %f10;
	mul.f32 	%f339, %f816, %f11;
	sub.f32 	%f49, %f338, %f339;
	mov.f32 	%f851, 0f00000000;
	mov.u32 	%r373, 0;
	abs.f32 	%f413, %f45;
	abs.f32 	%f414, %f44;
	max.f32 	%f415, %f414, %f413;
	abs.f32 	%f416, %f46;
	max.f32 	%f417, %f415, %f416;
	mov.f32 	%f850, %f851;
	mov.f32 	%f849, %f851;
	mov.f32 	%f848, %f851;

BB0_12:
	setp.lt.s32	%p18, %r398, 1;
	@%p18 bra 	BB0_63;

	mov.u32 	%r376, 0;

BB0_14:
	cvt.rn.f32.s32	%f801, %r373;
	mad.lo.s32 	%r152, %r400, 1664525, 1013904223;
	and.b32  	%r153, %r152, 16777215;
	cvt.rn.f32.u32	%f340, %r153;
	fma.rn.f32 	%f341, %f340, 0f33800000, %f801;
	mul.f32 	%f59, %f43, %f341;
	mad.lo.s32 	%r20, %r152, 1664525, 1013904223;
	and.b32  	%r154, %r20, 16777215;
	cvt.rn.f32.u32	%f342, %r154;
	cvt.rn.f32.s32	%f343, %r376;
	fma.rn.f32 	%f344, %f342, 0f33800000, %f343;
	mul.f32 	%f345, %f43, %f344;
	mul.f32 	%f346, %f59, %f59;
	mov.f32 	%f347, 0f3F800000;
	sub.f32 	%f348, %f347, %f346;
	mov.f32 	%f349, 0f00000000;
	max.f32 	%f350, %f349, %f348;
	sqrt.rn.f32 	%f60, %f350;
	mul.f32 	%f842, %f345, 0f40C90FDB;
	abs.f32 	%f62, %f842;
	setp.neu.f32	%p19, %f62, 0f7F800000;
	mov.f32 	%f836, %f842;
	@%p19 bra 	BB0_16;

	mul.rn.f32 	%f836, %f842, %f349;

BB0_16:
	mul.f32 	%f352, %f836, 0f3F22F983;
	cvt.rni.s32.f32	%r387, %f352;
	cvt.rn.f32.s32	%f353, %r387;
	neg.f32 	%f354, %f353;
	mov.f32 	%f355, 0f3FC90FDA;
	fma.rn.f32 	%f356, %f354, %f355, %f836;
	mov.f32 	%f357, 0f33A22168;
	fma.rn.f32 	%f358, %f354, %f357, %f356;
	mov.f32 	%f359, 0f27C234C5;
	fma.rn.f32 	%f837, %f354, %f359, %f358;
	abs.f32 	%f360, %f836;
	setp.leu.f32	%p20, %f360, 0f47CE4780;
	@%p20 bra 	BB0_27;

	add.u64 	%rd65, %SP, 4;
	cvta.to.local.u64 	%rd278, %rd65;
	mov.b32 	 %r22, %f836;
	shr.u32 	%r23, %r22, 23;
	shl.b32 	%r157, %r22, 8;
	or.b32  	%r24, %r157, -2147483648;
	mov.u32 	%r378, 0;
	mov.u64 	%rd279, 0;
	mov.u32 	%r379, %r378;

BB0_18:
	.pragma "nounroll";
	add.u64 	%rd275, %SP, 4;
	cvta.to.local.u64 	%rd274, %rd275;
	shl.b64 	%rd66, %rd279, 2;
	mov.u64 	%rd67, __cudart_i2opi_f;
	add.s64 	%rd68, %rd67, %rd66;
	ld.const.u32 	%r160, [%rd68];
	// inline asm
	{
	mad.lo.cc.u32   %r158, %r160, %r24, %r379;
	madc.hi.u32     %r379, %r160, %r24,  0;
	}
	// inline asm
	st.local.u32 	[%rd278], %r158;
	add.s32 	%r378, %r378, 1;
	cvt.s64.s32	%rd279, %r378;
	mul.wide.s32 	%rd71, %r378, 4;
	add.s64 	%rd278, %rd274, %rd71;
	setp.ne.s32	%p21, %r378, 6;
	@%p21 bra 	BB0_18;

	add.u64 	%rd272, %SP, 4;
	and.b32  	%r163, %r23, 255;
	add.s32 	%r164, %r163, -128;
	shr.u32 	%r165, %r164, 5;
	cvta.to.local.u64 	%rd73, %rd272;
	st.local.u32 	[%rd73+24], %r379;
	mov.u32 	%r166, 6;
	sub.s32 	%r167, %r166, %r165;
	mul.wide.s32 	%rd74, %r167, 4;
	add.s64 	%rd10, %rd73, %rd74;
	ld.local.u32 	%r380, [%rd10];
	ld.local.u32 	%r381, [%rd10+-4];
	and.b32  	%r32, %r23, 31;
	setp.eq.s32	%p22, %r32, 0;
	@%p22 bra 	BB0_21;

	mov.u32 	%r168, 32;
	sub.s32 	%r169, %r168, %r32;
	shr.u32 	%r170, %r381, %r169;
	shl.b32 	%r171, %r380, %r32;
	add.s32 	%r380, %r170, %r171;
	ld.local.u32 	%r172, [%rd10+-8];
	shr.u32 	%r173, %r172, %r169;
	shl.b32 	%r174, %r381, %r32;
	add.s32 	%r381, %r173, %r174;

BB0_21:
	mov.b32 	 %r361, %f836;
	and.b32  	%r383, %r361, -2147483648;
	shr.u32 	%r175, %r381, 30;
	shl.b32 	%r176, %r380, 2;
	add.s32 	%r382, %r175, %r176;
	shl.b32 	%r38, %r381, 2;
	shr.u32 	%r177, %r382, 31;
	shr.u32 	%r178, %r380, 30;
	add.s32 	%r39, %r177, %r178;
	setp.eq.s32	%p23, %r177, 0;
	@%p23 bra 	BB0_22;
	bra.uni 	BB0_23;

BB0_22:
	mov.u32 	%r384, %r38;
	bra.uni 	BB0_24;

BB0_23:
	mov.b32 	 %r363, %f836;
	and.b32  	%r362, %r363, -2147483648;
	not.b32 	%r179, %r382;
	neg.s32 	%r384, %r38;
	setp.eq.s32	%p24, %r38, 0;
	selp.u32	%r180, 1, 0, %p24;
	add.s32 	%r382, %r180, %r179;
	xor.b32  	%r383, %r362, -2147483648;

BB0_24:
	mov.b32 	 %r365, %f836;
	and.b32  	%r364, %r365, -2147483648;
	clz.b32 	%r386, %r382;
	setp.eq.s32	%p25, %r386, 0;
	shl.b32 	%r181, %r382, %r386;
	mov.u32 	%r182, 32;
	sub.s32 	%r183, %r182, %r386;
	shr.u32 	%r184, %r384, %r183;
	add.s32 	%r185, %r184, %r181;
	selp.b32	%r47, %r382, %r185, %p25;
	mov.u32 	%r186, -921707870;
	mul.hi.u32 	%r385, %r47, %r186;
	setp.eq.s32	%p26, %r364, 0;
	neg.s32 	%r187, %r39;
	selp.b32	%r387, %r39, %r187, %p26;
	setp.lt.s32	%p27, %r385, 1;
	@%p27 bra 	BB0_26;

	mul.lo.s32 	%r188, %r47, -921707870;
	shr.u32 	%r189, %r188, 31;
	shl.b32 	%r190, %r385, 1;
	add.s32 	%r385, %r189, %r190;
	add.s32 	%r386, %r386, 1;

BB0_26:
	mov.u32 	%r191, 126;
	sub.s32 	%r192, %r191, %r386;
	shl.b32 	%r193, %r192, 23;
	add.s32 	%r194, %r385, 1;
	shr.u32 	%r195, %r194, 7;
	add.s32 	%r196, %r195, 1;
	shr.u32 	%r197, %r196, 1;
	add.s32 	%r198, %r197, %r193;
	or.b32  	%r199, %r198, %r383;
	mov.b32 	 %f837, %r199;

BB0_27:
	mul.rn.f32 	%f68, %f837, %f837;
	add.s32 	%r55, %r387, 1;
	and.b32  	%r56, %r55, 1;
	setp.eq.s32	%p28, %r56, 0;
	@%p28 bra 	BB0_29;
	bra.uni 	BB0_28;

BB0_29:
	mov.f32 	%f363, 0f3C08839E;
	mov.f32 	%f364, 0fB94CA1F9;
	fma.rn.f32 	%f838, %f364, %f68, %f363;
	bra.uni 	BB0_30;

BB0_28:
	mov.f32 	%f361, 0fBAB6061A;
	mov.f32 	%f362, 0f37CCF5CE;
	fma.rn.f32 	%f838, %f362, %f68, %f361;

BB0_30:
	@%p28 bra 	BB0_32;
	bra.uni 	BB0_31;

BB0_32:
	mov.f32 	%f812, 0f00000000;
	mov.f32 	%f368, 0fBE2AAAA3;
	fma.rn.f32 	%f369, %f838, %f68, %f368;
	fma.rn.f32 	%f839, %f369, %f68, %f812;
	bra.uni 	BB0_33;

BB0_31:
	mov.f32 	%f365, 0f3D2AAAA5;
	fma.rn.f32 	%f366, %f838, %f68, %f365;
	mov.f32 	%f367, 0fBF000000;
	fma.rn.f32 	%f839, %f366, %f68, %f367;

BB0_33:
	fma.rn.f32 	%f840, %f839, %f837, %f837;
	@%p28 bra 	BB0_35;

	mov.f32 	%f802, 0f3F800000;
	fma.rn.f32 	%f840, %f839, %f68, %f802;

BB0_35:
	and.b32  	%r200, %r55, 2;
	setp.eq.s32	%p31, %r200, 0;
	@%p31 bra 	BB0_37;

	mov.f32 	%f803, 0f00000000;
	mov.f32 	%f373, 0fBF800000;
	fma.rn.f32 	%f840, %f840, %f373, %f803;

BB0_37:
	abs.f32 	%f804, %f842;
	setp.neu.f32	%p111, %f804, 0f7F800000;
	@%p111 bra 	BB0_39;

	mov.f32 	%f811, 0f00000000;
	mul.rn.f32 	%f842, %f842, %f811;

BB0_39:
	mov.f32 	%f807, 0f27C234C5;
	mov.f32 	%f806, 0f33A22168;
	mov.f32 	%f805, 0f3FC90FDA;
	mul.f32 	%f375, %f842, 0f3F22F983;
	cvt.rni.s32.f32	%r397, %f375;
	cvt.rn.f32.s32	%f376, %r397;
	neg.f32 	%f377, %f376;
	fma.rn.f32 	%f379, %f377, %f805, %f842;
	fma.rn.f32 	%f381, %f377, %f806, %f379;
	fma.rn.f32 	%f843, %f377, %f807, %f381;
	abs.f32 	%f383, %f842;
	setp.leu.f32	%p33, %f383, 0f47CE4780;
	@%p33 bra 	BB0_50;

	mov.u64 	%rd281, 0;
	add.u64 	%rd76, %SP, 4;
	cvta.to.local.u64 	%rd280, %rd76;
	mov.b32 	 %r58, %f842;
	shr.u32 	%r59, %r58, 23;
	shl.b32 	%r203, %r58, 8;
	or.b32  	%r60, %r203, -2147483648;
	mov.u32 	%r388, 0;
	mov.u32 	%r389, %r388;

BB0_41:
	.pragma "nounroll";
	add.u64 	%rd277, %SP, 4;
	cvta.to.local.u64 	%rd276, %rd277;
	shl.b64 	%rd77, %rd281, 2;
	mov.u64 	%rd78, __cudart_i2opi_f;
	add.s64 	%rd79, %rd78, %rd77;
	ld.const.u32 	%r206, [%rd79];
	// inline asm
	{
	mad.lo.cc.u32   %r204, %r206, %r60, %r389;
	madc.hi.u32     %r389, %r206, %r60,  0;
	}
	// inline asm
	st.local.u32 	[%rd280], %r204;
	add.s32 	%r388, %r388, 1;
	cvt.s64.s32	%rd281, %r388;
	mul.wide.s32 	%rd80, %r388, 4;
	add.s64 	%rd280, %rd276, %rd80;
	setp.ne.s32	%p34, %r388, 6;
	@%p34 bra 	BB0_41;

	add.u64 	%rd273, %SP, 4;
	and.b32  	%r209, %r59, 255;
	add.s32 	%r210, %r209, -128;
	shr.u32 	%r211, %r210, 5;
	cvta.to.local.u64 	%rd82, %rd273;
	st.local.u32 	[%rd82+24], %r389;
	mov.u32 	%r212, 6;
	sub.s32 	%r213, %r212, %r211;
	mul.wide.s32 	%rd83, %r213, 4;
	add.s64 	%rd17, %rd82, %rd83;
	ld.local.u32 	%r390, [%rd17];
	ld.local.u32 	%r391, [%rd17+-4];
	and.b32  	%r68, %r59, 31;
	setp.eq.s32	%p35, %r68, 0;
	@%p35 bra 	BB0_44;

	mov.u32 	%r214, 32;
	sub.s32 	%r215, %r214, %r68;
	shr.u32 	%r216, %r391, %r215;
	shl.b32 	%r217, %r390, %r68;
	add.s32 	%r390, %r216, %r217;
	ld.local.u32 	%r218, [%rd17+-8];
	shr.u32 	%r219, %r218, %r215;
	shl.b32 	%r220, %r391, %r68;
	add.s32 	%r391, %r219, %r220;

BB0_44:
	mov.b32 	 %r367, %f842;
	and.b32  	%r393, %r367, -2147483648;
	shr.u32 	%r221, %r391, 30;
	shl.b32 	%r222, %r390, 2;
	add.s32 	%r392, %r221, %r222;
	shl.b32 	%r74, %r391, 2;
	shr.u32 	%r223, %r392, 31;
	shr.u32 	%r224, %r390, 30;
	add.s32 	%r75, %r223, %r224;
	setp.eq.s32	%p36, %r223, 0;
	@%p36 bra 	BB0_45;
	bra.uni 	BB0_46;

BB0_45:
	mov.u32 	%r394, %r74;
	bra.uni 	BB0_47;

BB0_46:
	mov.b32 	 %r369, %f842;
	and.b32  	%r368, %r369, -2147483648;
	not.b32 	%r225, %r392;
	neg.s32 	%r394, %r74;
	setp.eq.s32	%p37, %r74, 0;
	selp.u32	%r226, 1, 0, %p37;
	add.s32 	%r392, %r226, %r225;
	xor.b32  	%r393, %r368, -2147483648;

BB0_47:
	mov.b32 	 %r371, %f842;
	and.b32  	%r370, %r371, -2147483648;
	clz.b32 	%r396, %r392;
	setp.eq.s32	%p38, %r396, 0;
	shl.b32 	%r227, %r392, %r396;
	mov.u32 	%r228, 32;
	sub.s32 	%r229, %r228, %r396;
	shr.u32 	%r230, %r394, %r229;
	add.s32 	%r231, %r230, %r227;
	selp.b32	%r83, %r392, %r231, %p38;
	mov.u32 	%r232, -921707870;
	mul.hi.u32 	%r395, %r83, %r232;
	setp.eq.s32	%p39, %r370, 0;
	neg.s32 	%r233, %r75;
	selp.b32	%r397, %r75, %r233, %p39;
	setp.lt.s32	%p40, %r395, 1;
	@%p40 bra 	BB0_49;

	mul.lo.s32 	%r234, %r83, -921707870;
	shr.u32 	%r235, %r234, 31;
	shl.b32 	%r236, %r395, 1;
	add.s32 	%r395, %r235, %r236;
	add.s32 	%r396, %r396, 1;

BB0_49:
	mov.u32 	%r237, 126;
	sub.s32 	%r238, %r237, %r396;
	shl.b32 	%r239, %r238, 23;
	add.s32 	%r240, %r395, 1;
	shr.u32 	%r241, %r240, 7;
	add.s32 	%r242, %r241, 1;
	shr.u32 	%r243, %r242, 1;
	add.s32 	%r244, %r243, %r239;
	or.b32  	%r245, %r244, %r393;
	mov.b32 	 %f843, %r245;

BB0_50:
	mul.rn.f32 	%f85, %f843, %f843;
	and.b32  	%r91, %r397, 1;
	setp.eq.s32	%p41, %r91, 0;
	@%p41 bra 	BB0_52;
	bra.uni 	BB0_51;

BB0_52:
	mov.f32 	%f386, 0f3C08839E;
	mov.f32 	%f387, 0fB94CA1F9;
	fma.rn.f32 	%f844, %f387, %f85, %f386;
	bra.uni 	BB0_53;

BB0_51:
	mov.f32 	%f384, 0fBAB6061A;
	mov.f32 	%f385, 0f37CCF5CE;
	fma.rn.f32 	%f844, %f385, %f85, %f384;

BB0_53:
	@%p41 bra 	BB0_55;
	bra.uni 	BB0_54;

BB0_55:
	mov.f32 	%f810, 0f00000000;
	mov.f32 	%f391, 0fBE2AAAA3;
	fma.rn.f32 	%f392, %f844, %f85, %f391;
	fma.rn.f32 	%f845, %f392, %f85, %f810;
	bra.uni 	BB0_56;

BB0_54:
	mov.f32 	%f388, 0f3D2AAAA5;
	fma.rn.f32 	%f389, %f844, %f85, %f388;
	mov.f32 	%f390, 0fBF000000;
	fma.rn.f32 	%f845, %f389, %f85, %f390;

BB0_56:
	fma.rn.f32 	%f846, %f845, %f843, %f843;
	@%p41 bra 	BB0_58;

	mov.f32 	%f808, 0f3F800000;
	fma.rn.f32 	%f846, %f845, %f85, %f808;

BB0_58:
	and.b32  	%r246, %r397, 2;
	setp.eq.s32	%p44, %r246, 0;
	@%p44 bra 	BB0_60;

	mov.f32 	%f809, 0f00000000;
	mov.f32 	%f396, 0fBF800000;
	fma.rn.f32 	%f846, %f846, %f396, %f809;

BB0_60:
	mul.f32 	%f397, %f60, %f840;
	mul.f32 	%f398, %f60, %f846;
	mul.f32 	%f399, %f10, %f398;
	mul.f32 	%f400, %f11, %f398;
	mul.f32 	%f401, %f12, %f398;
	fma.rn.f32 	%f402, %f47, %f397, %f399;
	fma.rn.f32 	%f403, %f48, %f397, %f400;
	fma.rn.f32 	%f404, %f49, %f397, %f401;
	fma.rn.f32 	%f97, %f816, %f59, %f402;
	fma.rn.f32 	%f98, %f817, %f59, %f403;
	fma.rn.f32 	%f99, %f818, %f59, %f404;
	setp.gt.f32	%p45, %f98, 0f00000000;
	setp.eq.s32	%p46, %r4, 0;
	or.pred  	%p47, %p46, %p45;
	@!%p47 bra 	BB0_62;
	bra.uni 	BB0_61;

BB0_61:
	mov.u32 	%r357, 4;
	add.u64 	%rd84, %SP, 0;
	cvta.to.local.u64 	%rd85, %rd84;
	max.f32 	%f411, %f417, %f206;
	mov.u32 	%r250, 1065353216;
	st.local.u32 	[%rd85], %r250;
	ld.global.u32 	%r247, [root];
	mov.u32 	%r248, 1;
	mov.f32 	%f412, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r247, %f7, %f8, %f9, %f97, %f98, %f99, %r248, %f411, %f412, %rd84, %r357);
	// inline asm
	mul.f32 	%f419, %f22, %f98;
	fma.rn.f32 	%f420, %f20, %f97, %f419;
	fma.rn.f32 	%f421, %f24, %f99, %f420;
	cvt.sat.f32.f32	%f422, %f421;
	ld.local.f32 	%f423, [%rd85];
	fma.rn.f32 	%f849, %f422, %f423, %f849;
	mul.f32 	%f424, %f32, %f98;
	fma.rn.f32 	%f425, %f31, %f97, %f424;
	fma.rn.f32 	%f426, %f33, %f99, %f425;
	cvt.sat.f32.f32	%f427, %f426;
	fma.rn.f32 	%f850, %f427, %f423, %f850;
	mul.f32 	%f428, %f41, %f98;
	fma.rn.f32 	%f429, %f40, %f97, %f428;
	fma.rn.f32 	%f430, %f42, %f99, %f429;
	cvt.sat.f32.f32	%f431, %f430;
	fma.rn.f32 	%f851, %f431, %f423, %f851;
	mul.f32 	%f432, %f817, %f98;
	fma.rn.f32 	%f433, %f816, %f97, %f432;
	fma.rn.f32 	%f434, %f818, %f99, %f433;
	cvt.sat.f32.f32	%f435, %f434;
	fma.rn.f32 	%f848, %f435, %f423, %f848;
	ld.global.u32 	%r398, [samples];

BB0_62:
	mad.lo.s32 	%r359, %r400, 1664525, 1013904223;
	mad.lo.s32 	%r400, %r359, 1664525, 1013904223;
	add.s32 	%r376, %r376, 1;
	setp.lt.s32	%p48, %r376, %r398;
	@%p48 bra 	BB0_14;

BB0_63:
	add.s32 	%r373, %r373, 1;
	setp.lt.s32	%p49, %r373, %r398;
	@%p49 bra 	BB0_12;
	bra.uni 	BB0_64;

BB0_10:
	mov.f32 	%f850, %f851;
	mov.f32 	%f849, %f851;
	mov.f32 	%f848, %f851;

BB0_64:
	mul.lo.s32 	%r251, %r398, %r398;
	cvt.rn.f32.s32	%f436, %r251;
	div.rn.f32 	%f437, %f848, %f436;
	div.rn.f32 	%f116, %f849, %f436;
	div.rn.f32 	%f117, %f850, %f436;
	div.rn.f32 	%f118, %f851, %f436;
	add.f32 	%f119, %f437, %f437;
	ld.global.f32 	%f438, [skyColor];
	mul.f32 	%f120, %f119, %f438;
	ld.global.f32 	%f439, [skyColor+4];
	mul.f32 	%f121, %f119, %f439;
	ld.global.f32 	%f440, [skyColor+8];
	mul.f32 	%f122, %f119, %f440;
	ld.global.u32 	%r402, [imageEnabled];
	and.b32  	%r252, %r402, 1;
	setp.eq.b32	%p50, %r252, 1;
	@!%p50 bra 	BB0_99;
	bra.uni 	BB0_65;

BB0_65:
	abs.f32 	%f124, %f120;
	setp.lt.f32	%p51, %f124, 0f00800000;
	mul.f32 	%f446, %f124, 0f4B800000;
	selp.f32	%f447, 0fC3170000, 0fC2FE0000, %p51;
	selp.f32	%f448, %f446, %f124, %p51;
	mov.b32 	 %r253, %f448;
	and.b32  	%r254, %r253, 8388607;
	or.b32  	%r255, %r254, 1065353216;
	mov.b32 	 %f449, %r255;
	shr.u32 	%r256, %r253, 23;
	cvt.rn.f32.u32	%f450, %r256;
	add.f32 	%f451, %f447, %f450;
	setp.gt.f32	%p52, %f449, 0f3FB504F3;
	mul.f32 	%f452, %f449, 0f3F000000;
	add.f32 	%f453, %f451, 0f3F800000;
	selp.f32	%f454, %f452, %f449, %p52;
	selp.f32	%f455, %f453, %f451, %p52;
	add.f32 	%f456, %f454, 0fBF800000;
	add.f32 	%f442, %f454, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f441,%f442;
	// inline asm
	add.f32 	%f457, %f456, %f456;
	mul.f32 	%f458, %f441, %f457;
	mul.f32 	%f459, %f458, %f458;
	mov.f32 	%f460, 0f3C4CAF63;
	mov.f32 	%f461, 0f3B18F0FE;
	fma.rn.f32 	%f462, %f461, %f459, %f460;
	mov.f32 	%f463, 0f3DAAAABD;
	fma.rn.f32 	%f464, %f462, %f459, %f463;
	mul.rn.f32 	%f465, %f464, %f459;
	mul.rn.f32 	%f466, %f465, %f458;
	sub.f32 	%f467, %f456, %f458;
	neg.f32 	%f468, %f458;
	add.f32 	%f469, %f467, %f467;
	fma.rn.f32 	%f470, %f468, %f456, %f469;
	mul.rn.f32 	%f471, %f441, %f470;
	add.f32 	%f472, %f466, %f458;
	sub.f32 	%f473, %f458, %f472;
	add.f32 	%f474, %f466, %f473;
	add.f32 	%f475, %f471, %f474;
	add.f32 	%f476, %f472, %f475;
	sub.f32 	%f477, %f472, %f476;
	add.f32 	%f478, %f475, %f477;
	mov.f32 	%f479, 0f3F317200;
	mul.rn.f32 	%f480, %f455, %f479;
	mov.f32 	%f481, 0f35BFBE8E;
	mul.rn.f32 	%f482, %f455, %f481;
	add.f32 	%f483, %f480, %f476;
	sub.f32 	%f484, %f480, %f483;
	add.f32 	%f485, %f476, %f484;
	add.f32 	%f486, %f478, %f485;
	add.f32 	%f487, %f482, %f486;
	add.f32 	%f488, %f483, %f487;
	sub.f32 	%f489, %f483, %f488;
	add.f32 	%f490, %f487, %f489;
	mov.f32 	%f491, 0f3EE66666;
	mul.rn.f32 	%f492, %f491, %f488;
	neg.f32 	%f493, %f492;
	fma.rn.f32 	%f494, %f491, %f488, %f493;
	fma.rn.f32 	%f495, %f491, %f490, %f494;
	mov.f32 	%f496, 0f00000000;
	fma.rn.f32 	%f497, %f496, %f488, %f495;
	add.rn.f32 	%f498, %f492, %f497;
	neg.f32 	%f499, %f498;
	add.rn.f32 	%f500, %f492, %f499;
	add.rn.f32 	%f501, %f500, %f497;
	mov.b32 	 %r257, %f498;
	setp.eq.s32	%p53, %r257, 1118925336;
	add.s32 	%r258, %r257, -1;
	mov.b32 	 %f502, %r258;
	add.f32 	%f503, %f501, 0f37000000;
	selp.f32	%f504, %f502, %f498, %p53;
	selp.f32	%f125, %f503, %f501, %p53;
	mul.f32 	%f505, %f504, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f506, %f505;
	mov.f32 	%f507, 0fBF317200;
	fma.rn.f32 	%f508, %f506, %f507, %f504;
	mov.f32 	%f509, 0fB5BFBE8E;
	fma.rn.f32 	%f510, %f506, %f509, %f508;
	mul.f32 	%f511, %f510, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f512, %f511;
	add.f32 	%f513, %f506, 0f00000000;
	ex2.approx.f32 	%f514, %f513;
	mul.f32 	%f515, %f512, %f514;
	setp.lt.f32	%p54, %f504, 0fC2D20000;
	selp.f32	%f516, 0f00000000, %f515, %p54;
	setp.gt.f32	%p55, %f504, 0f42D20000;
	selp.f32	%f860, 0f7F800000, %f516, %p55;
	setp.eq.f32	%p56, %f860, 0f7F800000;
	@%p56 bra 	BB0_67;

	fma.rn.f32 	%f860, %f860, %f125, %f860;

BB0_67:
	mov.f32 	%f767, 0f3E666666;
	cvt.rzi.f32.f32	%f766, %f767;
	fma.rn.f32 	%f765, %f766, 0fC0000000, 0f3EE66666;
	abs.f32 	%f764, %f765;
	setp.lt.f32	%p57, %f120, 0f00000000;
	setp.eq.f32	%p58, %f764, 0f3F800000;
	and.pred  	%p1, %p57, %p58;
	mov.b32 	 %r259, %f860;
	xor.b32  	%r260, %r259, -2147483648;
	mov.b32 	 %f517, %r260;
	selp.f32	%f862, %f517, %f860, %p1;
	setp.eq.f32	%p59, %f120, 0f00000000;
	@%p59 bra 	BB0_70;
	bra.uni 	BB0_68;

BB0_70:
	add.f32 	%f520, %f120, %f120;
	selp.f32	%f862, %f520, 0f00000000, %p58;
	bra.uni 	BB0_71;

BB0_117:
	mov.u64 	%rd199, image_HDR;
	cvta.global.u64 	%rd194, %rd199;
	mov.u32 	%r324, 8;
	mov.u64 	%rd198, 0;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r105, %r324, %rd20, %rd21, %rd198, %rd198);
	// inline asm
	mov.f32 	%f742, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs112, %f742;}

	// inline asm
	mov.u16 	%rs113, 0;
	st.v4.u16 	[%rd193], {%rs112, %rs112, %rs112, %rs113};

BB0_118:
	ld.global.u32 	%r325, [additive];
	setp.eq.s32	%p108, %r325, 0;
	@%p108 bra 	BB0_120;

	mov.u64 	%rd212, image_RNM0;
	cvta.global.u64 	%rd201, %rd212;
	mov.u32 	%r329, 8;
	mov.u64 	%rd211, 0;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r105, %r329, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	ld.v4.u16 	{%rs120, %rs121, %rs122, %rs123}, [%rd200];
	// inline asm
	{  cvt.f32.f16 %f743, %rs120;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f744, %rs121;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f745, %rs122;}

	// inline asm
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd201, %r105, %r329, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	add.f32 	%f746, %f743, 0f00000000;
	add.f32 	%f747, %f744, 0f00000000;
	add.f32 	%f748, %f745, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs119, %f748;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f747;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f746;}

	// inline asm
	mov.u16 	%rs124, 0;
	st.v4.u16 	[%rd206], {%rs117, %rs118, %rs119, %rs124};
	bra.uni 	BB0_121;

BB0_120:
	mov.u64 	%rd219, image_RNM0;
	cvta.global.u64 	%rd214, %rd219;
	mov.u32 	%r331, 8;
	mov.u64 	%rd218, 0;
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd214, %r105, %r331, %rd20, %rd21, %rd218, %rd218);
	// inline asm
	mov.f32 	%f749, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs125, %f749;}

	// inline asm
	mov.u16 	%rs126, 0;
	st.v4.u16 	[%rd213], {%rs125, %rs125, %rs125, %rs126};

BB0_121:
	ld.global.u32 	%r332, [additive];
	setp.eq.s32	%p109, %r332, 0;
	@%p109 bra 	BB0_123;

	mov.u64 	%rd232, image_RNM1;
	cvta.global.u64 	%rd221, %rd232;
	mov.u32 	%r336, 8;
	mov.u64 	%rd231, 0;
	// inline asm
	call (%rd220), _rt_buffer_get_64, (%rd221, %r105, %r336, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	ld.v4.u16 	{%rs133, %rs134, %rs135, %rs136}, [%rd220];
	// inline asm
	{  cvt.f32.f16 %f750, %rs133;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f751, %rs134;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f752, %rs135;}

	// inline asm
	// inline asm
	call (%rd226), _rt_buffer_get_64, (%rd221, %r105, %r336, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	add.f32 	%f753, %f750, 0f00000000;
	add.f32 	%f754, %f751, 0f00000000;
	add.f32 	%f755, %f752, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs132, %f755;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs131, %f754;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs130, %f753;}

	// inline asm
	mov.u16 	%rs137, 0;
	st.v4.u16 	[%rd226], {%rs130, %rs131, %rs132, %rs137};
	bra.uni 	BB0_124;

BB0_123:
	mov.u64 	%rd239, image_RNM1;
	cvta.global.u64 	%rd234, %rd239;
	mov.u32 	%r338, 8;
	mov.u64 	%rd238, 0;
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd234, %r105, %r338, %rd20, %rd21, %rd238, %rd238);
	// inline asm
	mov.f32 	%f756, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs138, %f756;}

	// inline asm
	mov.u16 	%rs139, 0;
	st.v4.u16 	[%rd233], {%rs138, %rs138, %rs138, %rs139};

BB0_124:
	ld.global.u32 	%r339, [additive];
	setp.eq.s32	%p110, %r339, 0;
	@%p110 bra 	BB0_126;

	mov.u64 	%rd252, image_RNM2;
	cvta.global.u64 	%rd241, %rd252;
	mov.u32 	%r343, 8;
	mov.u64 	%rd251, 0;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r105, %r343, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	ld.v4.u16 	{%rs146, %rs147, %rs148, %rs149}, [%rd240];
	// inline asm
	{  cvt.f32.f16 %f757, %rs146;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f758, %rs147;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f759, %rs148;}

	// inline asm
	// inline asm
	call (%rd246), _rt_buffer_get_64, (%rd241, %r105, %r343, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	add.f32 	%f760, %f757, 0f00000000;
	add.f32 	%f761, %f758, 0f00000000;
	add.f32 	%f762, %f759, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs145, %f762;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs144, %f761;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs143, %f760;}

	// inline asm
	mov.u16 	%rs150, 0;
	st.v4.u16 	[%rd246], {%rs143, %rs144, %rs145, %rs150};
	bra.uni 	BB0_127;

BB0_126:
	mov.u64 	%rd259, image_RNM2;
	cvta.global.u64 	%rd254, %rd259;
	mov.u32 	%r345, 8;
	mov.u64 	%rd258, 0;
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd254, %r105, %r345, %rd20, %rd21, %rd258, %rd258);
	// inline asm
	mov.f32 	%f763, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs151, %f763;}

	// inline asm
	mov.u16 	%rs152, 0;
	st.v4.u16 	[%rd253], {%rs151, %rs151, %rs151, %rs152};
	bra.uni 	BB0_127;

BB0_68:
	setp.geu.f32	%p60, %f120, 0f00000000;
	@%p60 bra 	BB0_71;

	mov.f32 	%f791, 0f3EE66666;
	cvt.rzi.f32.f32	%f519, %f791;
	setp.neu.f32	%p61, %f519, 0f3EE66666;
	selp.f32	%f862, 0f7FFFFFFF, %f862, %p61;

BB0_71:
	abs.f32 	%f768, %f120;
	add.f32 	%f521, %f768, 0f3EE66666;
	mov.b32 	 %r261, %f521;
	setp.lt.s32	%p63, %r261, 2139095040;
	@%p63 bra 	BB0_76;

	abs.f32 	%f789, %f120;
	setp.gtu.f32	%p64, %f789, 0f7F800000;
	@%p64 bra 	BB0_75;
	bra.uni 	BB0_73;

BB0_75:
	add.f32 	%f862, %f120, 0f3EE66666;
	bra.uni 	BB0_76;

BB0_73:
	abs.f32 	%f790, %f120;
	setp.neu.f32	%p65, %f790, 0f7F800000;
	@%p65 bra 	BB0_76;

	selp.f32	%f862, 0fFF800000, 0f7F800000, %p1;

BB0_76:
	mov.f32 	%f777, 0fB5BFBE8E;
	mov.f32 	%f776, 0fBF317200;
	mov.f32 	%f775, 0f00000000;
	mov.f32 	%f774, 0f35BFBE8E;
	mov.f32 	%f773, 0f3F317200;
	mov.f32 	%f772, 0f3DAAAABD;
	mov.f32 	%f771, 0f3C4CAF63;
	mov.f32 	%f770, 0f3B18F0FE;
	mov.f32 	%f769, 0f3EE66666;
	setp.eq.f32	%p66, %f120, 0f3F800000;
	selp.f32	%f136, 0f3F800000, %f862, %p66;
	abs.f32 	%f137, %f121;
	setp.lt.f32	%p67, %f137, 0f00800000;
	mul.f32 	%f524, %f137, 0f4B800000;
	selp.f32	%f525, 0fC3170000, 0fC2FE0000, %p67;
	selp.f32	%f526, %f524, %f137, %p67;
	mov.b32 	 %r262, %f526;
	and.b32  	%r263, %r262, 8388607;
	or.b32  	%r264, %r263, 1065353216;
	mov.b32 	 %f527, %r264;
	shr.u32 	%r265, %r262, 23;
	cvt.rn.f32.u32	%f528, %r265;
	add.f32 	%f529, %f525, %f528;
	setp.gt.f32	%p68, %f527, 0f3FB504F3;
	mul.f32 	%f530, %f527, 0f3F000000;
	add.f32 	%f531, %f529, 0f3F800000;
	selp.f32	%f532, %f530, %f527, %p68;
	selp.f32	%f533, %f531, %f529, %p68;
	add.f32 	%f534, %f532, 0fBF800000;
	add.f32 	%f523, %f532, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f522,%f523;
	// inline asm
	add.f32 	%f535, %f534, %f534;
	mul.f32 	%f536, %f522, %f535;
	mul.f32 	%f537, %f536, %f536;
	fma.rn.f32 	%f540, %f770, %f537, %f771;
	fma.rn.f32 	%f542, %f540, %f537, %f772;
	mul.rn.f32 	%f543, %f542, %f537;
	mul.rn.f32 	%f544, %f543, %f536;
	sub.f32 	%f545, %f534, %f536;
	neg.f32 	%f546, %f536;
	add.f32 	%f547, %f545, %f545;
	fma.rn.f32 	%f548, %f546, %f534, %f547;
	mul.rn.f32 	%f549, %f522, %f548;
	add.f32 	%f550, %f544, %f536;
	sub.f32 	%f551, %f536, %f550;
	add.f32 	%f552, %f544, %f551;
	add.f32 	%f553, %f549, %f552;
	add.f32 	%f554, %f550, %f553;
	sub.f32 	%f555, %f550, %f554;
	add.f32 	%f556, %f553, %f555;
	mul.rn.f32 	%f558, %f533, %f773;
	mul.rn.f32 	%f560, %f533, %f774;
	add.f32 	%f561, %f558, %f554;
	sub.f32 	%f562, %f558, %f561;
	add.f32 	%f563, %f554, %f562;
	add.f32 	%f564, %f556, %f563;
	add.f32 	%f565, %f560, %f564;
	add.f32 	%f566, %f561, %f565;
	sub.f32 	%f567, %f561, %f566;
	add.f32 	%f568, %f565, %f567;
	mul.rn.f32 	%f570, %f769, %f566;
	neg.f32 	%f571, %f570;
	fma.rn.f32 	%f572, %f769, %f566, %f571;
	fma.rn.f32 	%f573, %f769, %f568, %f572;
	fma.rn.f32 	%f575, %f775, %f566, %f573;
	add.rn.f32 	%f576, %f570, %f575;
	neg.f32 	%f577, %f576;
	add.rn.f32 	%f578, %f570, %f577;
	add.rn.f32 	%f579, %f578, %f575;
	mov.b32 	 %r266, %f576;
	setp.eq.s32	%p69, %r266, 1118925336;
	add.s32 	%r267, %r266, -1;
	mov.b32 	 %f580, %r267;
	add.f32 	%f581, %f579, 0f37000000;
	selp.f32	%f582, %f580, %f576, %p69;
	selp.f32	%f138, %f581, %f579, %p69;
	mul.f32 	%f583, %f582, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f584, %f583;
	fma.rn.f32 	%f586, %f584, %f776, %f582;
	fma.rn.f32 	%f588, %f584, %f777, %f586;
	mul.f32 	%f589, %f588, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f590, %f589;
	add.f32 	%f591, %f584, 0f00000000;
	ex2.approx.f32 	%f592, %f591;
	mul.f32 	%f593, %f590, %f592;
	setp.lt.f32	%p70, %f582, 0fC2D20000;
	selp.f32	%f594, 0f00000000, %f593, %p70;
	setp.gt.f32	%p71, %f582, 0f42D20000;
	selp.f32	%f863, 0f7F800000, %f594, %p71;
	setp.eq.f32	%p72, %f863, 0f7F800000;
	@%p72 bra 	BB0_78;

	fma.rn.f32 	%f863, %f863, %f138, %f863;

BB0_78:
	setp.lt.f32	%p73, %f121, 0f00000000;
	and.pred  	%p2, %p73, %p58;
	mov.b32 	 %r268, %f863;
	xor.b32  	%r269, %r268, -2147483648;
	mov.b32 	 %f595, %r269;
	selp.f32	%f865, %f595, %f863, %p2;
	setp.eq.f32	%p75, %f121, 0f00000000;
	@%p75 bra 	BB0_81;
	bra.uni 	BB0_79;

BB0_81:
	add.f32 	%f598, %f121, %f121;
	selp.f32	%f865, %f598, 0f00000000, %p58;
	bra.uni 	BB0_82;

BB0_79:
	setp.geu.f32	%p76, %f121, 0f00000000;
	@%p76 bra 	BB0_82;

	mov.f32 	%f788, 0f3EE66666;
	cvt.rzi.f32.f32	%f597, %f788;
	setp.neu.f32	%p77, %f597, 0f3EE66666;
	selp.f32	%f865, 0f7FFFFFFF, %f865, %p77;

BB0_82:
	abs.f32 	%f792, %f121;
	add.f32 	%f599, %f792, 0f3EE66666;
	mov.b32 	 %r270, %f599;
	setp.lt.s32	%p79, %r270, 2139095040;
	@%p79 bra 	BB0_87;

	abs.f32 	%f793, %f121;
	setp.gtu.f32	%p80, %f793, 0f7F800000;
	@%p80 bra 	BB0_86;
	bra.uni 	BB0_84;

BB0_86:
	add.f32 	%f865, %f121, 0f3EE66666;
	bra.uni 	BB0_87;

BB0_84:
	abs.f32 	%f794, %f121;
	setp.neu.f32	%p81, %f794, 0f7F800000;
	@%p81 bra 	BB0_87;

	selp.f32	%f865, 0fFF800000, 0f7F800000, %p2;

BB0_87:
	mov.f32 	%f786, 0fB5BFBE8E;
	mov.f32 	%f785, 0fBF317200;
	mov.f32 	%f784, 0f00000000;
	mov.f32 	%f783, 0f35BFBE8E;
	mov.f32 	%f782, 0f3F317200;
	mov.f32 	%f781, 0f3DAAAABD;
	mov.f32 	%f780, 0f3C4CAF63;
	mov.f32 	%f779, 0f3B18F0FE;
	mov.f32 	%f778, 0f3EE66666;
	setp.eq.f32	%p82, %f121, 0f3F800000;
	selp.f32	%f149, 0f3F800000, %f865, %p82;
	abs.f32 	%f150, %f122;
	setp.lt.f32	%p83, %f150, 0f00800000;
	mul.f32 	%f602, %f150, 0f4B800000;
	selp.f32	%f603, 0fC3170000, 0fC2FE0000, %p83;
	selp.f32	%f604, %f602, %f150, %p83;
	mov.b32 	 %r271, %f604;
	and.b32  	%r272, %r271, 8388607;
	or.b32  	%r273, %r272, 1065353216;
	mov.b32 	 %f605, %r273;
	shr.u32 	%r274, %r271, 23;
	cvt.rn.f32.u32	%f606, %r274;
	add.f32 	%f607, %f603, %f606;
	setp.gt.f32	%p84, %f605, 0f3FB504F3;
	mul.f32 	%f608, %f605, 0f3F000000;
	add.f32 	%f609, %f607, 0f3F800000;
	selp.f32	%f610, %f608, %f605, %p84;
	selp.f32	%f611, %f609, %f607, %p84;
	add.f32 	%f612, %f610, 0fBF800000;
	add.f32 	%f601, %f610, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f600,%f601;
	// inline asm
	add.f32 	%f613, %f612, %f612;
	mul.f32 	%f614, %f600, %f613;
	mul.f32 	%f615, %f614, %f614;
	fma.rn.f32 	%f618, %f779, %f615, %f780;
	fma.rn.f32 	%f620, %f618, %f615, %f781;
	mul.rn.f32 	%f621, %f620, %f615;
	mul.rn.f32 	%f622, %f621, %f614;
	sub.f32 	%f623, %f612, %f614;
	neg.f32 	%f624, %f614;
	add.f32 	%f625, %f623, %f623;
	fma.rn.f32 	%f626, %f624, %f612, %f625;
	mul.rn.f32 	%f627, %f600, %f626;
	add.f32 	%f628, %f622, %f614;
	sub.f32 	%f629, %f614, %f628;
	add.f32 	%f630, %f622, %f629;
	add.f32 	%f631, %f627, %f630;
	add.f32 	%f632, %f628, %f631;
	sub.f32 	%f633, %f628, %f632;
	add.f32 	%f634, %f631, %f633;
	mul.rn.f32 	%f636, %f611, %f782;
	mul.rn.f32 	%f638, %f611, %f783;
	add.f32 	%f639, %f636, %f632;
	sub.f32 	%f640, %f636, %f639;
	add.f32 	%f641, %f632, %f640;
	add.f32 	%f642, %f634, %f641;
	add.f32 	%f643, %f638, %f642;
	add.f32 	%f644, %f639, %f643;
	sub.f32 	%f645, %f639, %f644;
	add.f32 	%f646, %f643, %f645;
	mul.rn.f32 	%f648, %f778, %f644;
	neg.f32 	%f649, %f648;
	fma.rn.f32 	%f650, %f778, %f644, %f649;
	fma.rn.f32 	%f651, %f778, %f646, %f650;
	fma.rn.f32 	%f653, %f784, %f644, %f651;
	add.rn.f32 	%f654, %f648, %f653;
	neg.f32 	%f655, %f654;
	add.rn.f32 	%f656, %f648, %f655;
	add.rn.f32 	%f657, %f656, %f653;
	mov.b32 	 %r275, %f654;
	setp.eq.s32	%p85, %r275, 1118925336;
	add.s32 	%r276, %r275, -1;
	mov.b32 	 %f658, %r276;
	add.f32 	%f659, %f657, 0f37000000;
	selp.f32	%f660, %f658, %f654, %p85;
	selp.f32	%f151, %f659, %f657, %p85;
	mul.f32 	%f661, %f660, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f662, %f661;
	fma.rn.f32 	%f664, %f662, %f785, %f660;
	fma.rn.f32 	%f666, %f662, %f786, %f664;
	mul.f32 	%f667, %f666, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f668, %f667;
	add.f32 	%f669, %f662, 0f00000000;
	ex2.approx.f32 	%f670, %f669;
	mul.f32 	%f671, %f668, %f670;
	setp.lt.f32	%p86, %f660, 0fC2D20000;
	selp.f32	%f672, 0f00000000, %f671, %p86;
	setp.gt.f32	%p87, %f660, 0f42D20000;
	selp.f32	%f866, 0f7F800000, %f672, %p87;
	setp.eq.f32	%p88, %f866, 0f7F800000;
	@%p88 bra 	BB0_89;

	fma.rn.f32 	%f866, %f866, %f151, %f866;

BB0_89:
	setp.lt.f32	%p89, %f122, 0f00000000;
	and.pred  	%p3, %p89, %p58;
	mov.b32 	 %r277, %f866;
	xor.b32  	%r278, %r277, -2147483648;
	mov.b32 	 %f673, %r278;
	selp.f32	%f868, %f673, %f866, %p3;
	setp.eq.f32	%p91, %f122, 0f00000000;
	@%p91 bra 	BB0_92;
	bra.uni 	BB0_90;

BB0_92:
	add.f32 	%f676, %f122, %f122;
	selp.f32	%f868, %f676, 0f00000000, %p58;
	bra.uni 	BB0_93;

BB0_90:
	setp.geu.f32	%p92, %f122, 0f00000000;
	@%p92 bra 	BB0_93;

	mov.f32 	%f787, 0f3EE66666;
	cvt.rzi.f32.f32	%f675, %f787;
	setp.neu.f32	%p93, %f675, 0f3EE66666;
	selp.f32	%f868, 0f7FFFFFFF, %f868, %p93;

BB0_93:
	abs.f32 	%f813, %f122;
	add.f32 	%f677, %f813, 0f3EE66666;
	mov.b32 	 %r279, %f677;
	setp.lt.s32	%p95, %r279, 2139095040;
	@%p95 bra 	BB0_98;

	abs.f32 	%f814, %f122;
	setp.gtu.f32	%p96, %f814, 0f7F800000;
	@%p96 bra 	BB0_97;
	bra.uni 	BB0_95;

BB0_97:
	add.f32 	%f868, %f122, 0f3EE66666;
	bra.uni 	BB0_98;

BB0_95:
	abs.f32 	%f815, %f122;
	setp.neu.f32	%p97, %f815, 0f7F800000;
	@%p97 bra 	BB0_98;

	selp.f32	%f868, 0fFF800000, 0f7F800000, %p3;

BB0_98:
	mov.u32 	%r347, 4;
	mov.u64 	%rd260, 0;
	mov.u32 	%r346, 2;
	setp.eq.f32	%p98, %f122, 0f3F800000;
	selp.f32	%f678, 0f3F800000, %f868, %p98;
	cvt.u64.u32	%rd89, %r3;
	cvt.u64.u32	%rd88, %r2;
	mov.u64 	%rd92, image;
	cvta.global.u64 	%rd87, %rd92;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd87, %r346, %r347, %rd88, %rd89, %rd260, %rd260);
	// inline asm
	cvt.sat.f32.f32	%f679, %f678;
	mul.f32 	%f680, %f679, 0f437FFD71;
	cvt.rzi.u32.f32	%r282, %f680;
	cvt.sat.f32.f32	%f681, %f149;
	mul.f32 	%f682, %f681, 0f437FFD71;
	cvt.rzi.u32.f32	%r283, %f682;
	cvt.sat.f32.f32	%f683, %f136;
	mul.f32 	%f684, %f683, 0f437FFD71;
	cvt.rzi.u32.f32	%r284, %f684;
	cvt.u16.u32	%rs40, %r282;
	cvt.u16.u32	%rs41, %r284;
	cvt.u16.u32	%rs42, %r283;
	mov.u16 	%rs43, 255;
	st.v4.u8 	[%rd86], {%rs40, %rs42, %rs41, %rs43};
	ld.global.u32 	%r402, [imageEnabled];

BB0_99:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	and.b32  	%r285, %r402, 4;
	setp.eq.s32	%p99, %r285, 0;
	@%p99 bra 	BB0_103;

	ld.global.u32 	%r286, [additive];
	setp.eq.s32	%p100, %r286, 0;
	mov.f32 	%f685, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f685;}

	// inline asm
	@%p100 bra 	BB0_102;

	mov.u64 	%rd261, 0;
	mov.u32 	%r348, 2;
	mov.u64 	%rd105, image_HDR;
	cvta.global.u64 	%rd94, %rd105;
	mov.u32 	%r290, 8;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r348, %r290, %rd18, %rd19, %rd261, %rd261);
	// inline asm
	ld.v4.u16 	{%rs51, %rs52, %rs53, %rs54}, [%rd93];
	// inline asm
	{  cvt.f32.f16 %f686, %rs51;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f687, %rs52;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f688, %rs53;}

	// inline asm
	// inline asm
	call (%rd99), _rt_buffer_get_64, (%rd94, %r348, %r290, %rd18, %rd19, %rd261, %rd261);
	// inline asm
	add.f32 	%f689, %f120, %f686;
	add.f32 	%f690, %f121, %f687;
	add.f32 	%f691, %f122, %f688;
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f691;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f690;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f689;}

	// inline asm
	st.v4.u16 	[%rd99], {%rs48, %rs49, %rs50, %rs44};
	bra.uni 	BB0_103;

BB0_102:
	mov.u64 	%rd262, 0;
	mov.u32 	%r349, 2;
	mov.u64 	%rd112, image_HDR;
	cvta.global.u64 	%rd107, %rd112;
	mov.u32 	%r292, 8;
	// inline asm
	call (%rd106), _rt_buffer_get_64, (%rd107, %r349, %r292, %rd18, %rd19, %rd262, %rd262);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f122;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f121;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f120;}

	// inline asm
	st.v4.u16 	[%rd106], {%rs55, %rs56, %rs57, %rs44};

BB0_103:
	add.f32 	%f696, %f116, %f117;
	add.f32 	%f697, %f696, %f118;
	mul.f32 	%f698, %f697, 0f3F13CD3A;
	div.rn.f32 	%f699, %f119, %f698;
	setp.eq.f32	%p101, %f119, 0f00000000;
	selp.f32	%f700, 0f00000000, %f699, %p101;
	mul.f32 	%f701, %f116, %f700;
	mul.f32 	%f702, %f117, %f700;
	mul.f32 	%f703, %f118, %f700;
	ld.global.f32 	%f704, [skyColor];
	mul.f32 	%f162, %f704, %f701;
	ld.global.f32 	%f705, [skyColor+4];
	mul.f32 	%f163, %f705, %f701;
	ld.global.f32 	%f706, [skyColor+8];
	mul.f32 	%f164, %f701, %f706;
	mul.f32 	%f165, %f704, %f702;
	mul.f32 	%f166, %f705, %f702;
	mul.f32 	%f167, %f702, %f706;
	mul.f32 	%f168, %f703, %f704;
	mul.f32 	%f169, %f703, %f705;
	mul.f32 	%f170, %f703, %f706;
	ld.global.u32 	%r293, [additive];
	setp.eq.s32	%p102, %r293, 0;
	mov.f32 	%f695, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f695;}

	// inline asm
	@%p102 bra 	BB0_105;

	mov.u64 	%rd263, 0;
	mov.u32 	%r350, 2;
	mov.u64 	%rd125, image_RNM0;
	cvta.global.u64 	%rd114, %rd125;
	mov.u32 	%r297, 8;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd114, %r350, %r297, %rd18, %rd19, %rd263, %rd263);
	// inline asm
	ld.v4.u16 	{%rs65, %rs66, %rs67, %rs68}, [%rd113];
	// inline asm
	{  cvt.f32.f16 %f707, %rs65;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f708, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f709, %rs67;}

	// inline asm
	// inline asm
	call (%rd119), _rt_buffer_get_64, (%rd114, %r350, %r297, %rd18, %rd19, %rd263, %rd263);
	// inline asm
	add.f32 	%f710, %f162, %f707;
	add.f32 	%f711, %f163, %f708;
	add.f32 	%f712, %f164, %f709;
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f712;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f711;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f710;}

	// inline asm
	st.v4.u16 	[%rd119], {%rs62, %rs63, %rs64, %rs58};
	bra.uni 	BB0_106;

BB0_105:
	mov.u64 	%rd268, 0;
	mov.u32 	%r355, 2;
	mov.u64 	%rd132, image_RNM0;
	cvta.global.u64 	%rd127, %rd132;
	mov.u32 	%r299, 8;
	// inline asm
	call (%rd126), _rt_buffer_get_64, (%rd127, %r355, %r299, %rd18, %rd19, %rd268, %rd268);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f164;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f163;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f162;}

	// inline asm
	st.v4.u16 	[%rd126], {%rs69, %rs70, %rs71, %rs58};

BB0_106:
	ld.global.u32 	%r300, [additive];
	setp.eq.s32	%p103, %r300, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f695;}

	// inline asm
	@%p103 bra 	BB0_108;

	mov.u64 	%rd264, 0;
	mov.u32 	%r351, 2;
	mov.u64 	%rd145, image_RNM1;
	cvta.global.u64 	%rd134, %rd145;
	mov.u32 	%r304, 8;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r351, %r304, %rd18, %rd19, %rd264, %rd264);
	// inline asm
	ld.v4.u16 	{%rs79, %rs80, %rs81, %rs82}, [%rd133];
	// inline asm
	{  cvt.f32.f16 %f717, %rs79;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f718, %rs80;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f719, %rs81;}

	// inline asm
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd134, %r351, %r304, %rd18, %rd19, %rd264, %rd264);
	// inline asm
	add.f32 	%f720, %f165, %f717;
	add.f32 	%f721, %f166, %f718;
	add.f32 	%f722, %f167, %f719;
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f722;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f721;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f720;}

	// inline asm
	st.v4.u16 	[%rd139], {%rs76, %rs77, %rs78, %rs72};
	bra.uni 	BB0_109;

BB0_108:
	mov.u64 	%rd267, 0;
	mov.u32 	%r354, 2;
	mov.u64 	%rd152, image_RNM1;
	cvta.global.u64 	%rd147, %rd152;
	mov.u32 	%r306, 8;
	// inline asm
	call (%rd146), _rt_buffer_get_64, (%rd147, %r354, %r306, %rd18, %rd19, %rd267, %rd267);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f167;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs84, %f166;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f165;}

	// inline asm
	st.v4.u16 	[%rd146], {%rs83, %rs84, %rs85, %rs72};

BB0_109:
	ld.global.u32 	%r307, [additive];
	setp.eq.s32	%p104, %r307, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f695;}

	// inline asm
	@%p104 bra 	BB0_111;

	mov.u64 	%rd265, 0;
	mov.u32 	%r352, 2;
	mov.u64 	%rd165, image_RNM2;
	cvta.global.u64 	%rd154, %rd165;
	mov.u32 	%r311, 8;
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd154, %r352, %r311, %rd18, %rd19, %rd265, %rd265);
	// inline asm
	ld.v4.u16 	{%rs93, %rs94, %rs95, %rs96}, [%rd153];
	// inline asm
	{  cvt.f32.f16 %f727, %rs93;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f728, %rs94;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f729, %rs95;}

	// inline asm
	// inline asm
	call (%rd159), _rt_buffer_get_64, (%rd154, %r352, %r311, %rd18, %rd19, %rd265, %rd265);
	// inline asm
	add.f32 	%f730, %f168, %f727;
	add.f32 	%f731, %f169, %f728;
	add.f32 	%f732, %f170, %f729;
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f732;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f731;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f730;}

	// inline asm
	st.v4.u16 	[%rd159], {%rs90, %rs91, %rs92, %rs86};
	bra.uni 	BB0_127;

BB0_111:
	mov.u64 	%rd266, 0;
	mov.u32 	%r353, 2;
	mov.u64 	%rd172, image_RNM2;
	cvta.global.u64 	%rd167, %rd172;
	mov.u32 	%r313, 8;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r353, %r313, %rd18, %rd19, %rd266, %rd266);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f170;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f169;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f168;}

	// inline asm
	st.v4.u16 	[%rd166], {%rs97, %rs98, %rs99, %rs86};

BB0_127:
	ret;
}


