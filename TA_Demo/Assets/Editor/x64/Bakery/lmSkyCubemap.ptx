//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3skyE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename3skyE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3skyE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3skyE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3skyE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<98>;
	.reg .b16 	%rs<42>;
	.reg .f32 	%f<602>;
	.reg .b32 	%r<317>;
	.reg .b64 	%rd<125>;


	mov.u64 	%rd124, __local_depot0;
	cvta.local.u64 	%SP, %rd124;
	ld.global.v2.u32 	{%r100, %r101}, [pixelID];
	cvt.u64.u32	%rd22, %r100;
	cvt.u64.u32	%rd23, %r101;
	mov.u64 	%rd26, uvnormal;
	cvta.global.u64 	%rd21, %rd26;
	mov.u32 	%r98, 2;
	mov.u32 	%r99, 4;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r98, %r99, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.u32 	%r1, [%rd20];
	shr.u32 	%r104, %r1, 16;
	cvt.u16.u32	%rs1, %r104;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r1;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p4, %rs5, 0;
	mov.f32 	%f563, 0f00000000;
	mov.f32 	%f564, %f563;
	mov.f32 	%f565, %f563;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs6, [%rd20+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f124, %rs8;
	div.rn.f32 	%f125, %f124, 0f437F0000;
	fma.rn.f32 	%f126, %f125, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f127, %rs6;
	div.rn.f32 	%f128, %f127, 0f437F0000;
	fma.rn.f32 	%f129, %f128, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f130, %rs3;
	div.rn.f32 	%f131, %f130, 0f437F0000;
	fma.rn.f32 	%f132, %f131, 0f40000000, 0fBF800000;
	mul.f32 	%f133, %f129, %f129;
	fma.rn.f32 	%f134, %f126, %f126, %f133;
	fma.rn.f32 	%f135, %f132, %f132, %f134;
	sqrt.rn.f32 	%f136, %f135;
	rcp.rn.f32 	%f137, %f136;
	mul.f32 	%f563, %f126, %f137;
	mul.f32 	%f564, %f129, %f137;
	mul.f32 	%f565, %f132, %f137;

BB0_2:
	ld.global.v2.u32 	{%r105, %r106}, [pixelID];
	ld.global.v2.u32 	{%r108, %r109}, [tileInfo];
	add.s32 	%r2, %r105, %r108;
	add.s32 	%r3, %r106, %r109;
	setp.eq.f32	%p5, %f564, 0f00000000;
	setp.eq.f32	%p6, %f563, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f565, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_97;
	bra.uni 	BB0_3;

BB0_97:
	ld.global.u32 	%r316, [imageEnabled];
	and.b32  	%r270, %r316, 1;
	setp.eq.b32	%p95, %r270, 1;
	@!%p95 bra 	BB0_99;
	bra.uni 	BB0_98;

BB0_98:
	cvt.u64.u32	%rd92, %r2;
	cvt.u64.u32	%rd93, %r3;
	mov.u64 	%rd96, image;
	cvta.global.u64 	%rd91, %rd96;
	mov.u64 	%rd95, 0;
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd91, %r98, %r99, %rd92, %rd93, %rd95, %rd95);
	// inline asm
	mov.u16 	%rs28, 0;
	st.v4.u8 	[%rd90], {%rs28, %rs28, %rs28, %rs28};
	ld.global.u32 	%r316, [imageEnabled];

BB0_99:
	and.b32  	%r273, %r316, 4;
	setp.eq.s32	%p96, %r273, 0;
	@%p96 bra 	BB0_103;

	ld.global.u32 	%r274, [additive];
	setp.eq.s32	%p97, %r274, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	@%p97 bra 	BB0_102;

	mov.u64 	%rd109, image_HDR;
	cvta.global.u64 	%rd98, %rd109;
	mov.u32 	%r278, 8;
	mov.u64 	%rd108, 0;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r98, %r278, %rd18, %rd19, %rd108, %rd108);
	// inline asm
	ld.v4.u16 	{%rs35, %rs36, %rs37, %rs38}, [%rd97];
	// inline asm
	{  cvt.f32.f16 %f535, %rs35;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f536, %rs36;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f537, %rs37;}

	// inline asm
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd98, %r98, %r278, %rd18, %rd19, %rd108, %rd108);
	// inline asm
	add.f32 	%f538, %f535, 0f00000000;
	add.f32 	%f539, %f536, 0f00000000;
	add.f32 	%f540, %f537, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f540;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f539;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f538;}

	// inline asm
	mov.u16 	%rs39, 0;
	st.v4.u16 	[%rd103], {%rs32, %rs33, %rs34, %rs39};
	bra.uni 	BB0_103;

BB0_3:
	ld.global.v2.u32 	{%r117, %r118}, [pixelID];
	cvt.u64.u32	%rd29, %r117;
	cvt.u64.u32	%rd30, %r118;
	mov.u64 	%rd39, uvpos;
	cvta.global.u64 	%rd28, %rd39;
	mov.u32 	%r114, 12;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r98, %r114, %rd29, %rd30, %rd25, %rd25);
	// inline asm
	ld.f32 	%f141, [%rd27+8];
	ld.f32 	%f142, [%rd27+4];
	ld.f32 	%f143, [%rd27];
	mul.f32 	%f144, %f143, 0f3456BF95;
	mul.f32 	%f145, %f142, 0f3456BF95;
	mul.f32 	%f146, %f141, 0f3456BF95;
	abs.f32 	%f147, %f563;
	div.rn.f32 	%f148, %f144, %f147;
	abs.f32 	%f149, %f564;
	div.rn.f32 	%f150, %f145, %f149;
	abs.f32 	%f151, %f565;
	div.rn.f32 	%f152, %f146, %f151;
	abs.f32 	%f153, %f148;
	abs.f32 	%f154, %f150;
	abs.f32 	%f155, %f152;
	mov.f32 	%f156, 0f38D1B717;
	max.f32 	%f157, %f153, %f156;
	max.f32 	%f158, %f154, %f156;
	max.f32 	%f159, %f155, %f156;
	fma.rn.f32 	%f7, %f563, %f157, %f143;
	fma.rn.f32 	%f8, %f564, %f158, %f142;
	fma.rn.f32 	%f9, %f565, %f159, %f141;
	ld.global.u32 	%r4, [hemispherical];
	setp.gt.f32	%p10, %f147, %f151;
	neg.f32 	%f160, %f564;
	selp.f32	%f161, %f160, 0f00000000, %p10;
	neg.f32 	%f162, %f565;
	selp.f32	%f163, %f563, %f162, %p10;
	selp.f32	%f164, 0f00000000, %f564, %p10;
	mul.f32 	%f165, %f163, %f163;
	fma.rn.f32 	%f166, %f161, %f161, %f165;
	fma.rn.f32 	%f167, %f164, %f164, %f166;
	sqrt.rn.f32 	%f168, %f167;
	rcp.rn.f32 	%f169, %f168;
	mul.f32 	%f10, %f161, %f169;
	mul.f32 	%f11, %f163, %f169;
	mul.f32 	%f12, %f164, %f169;
	ld.global.v2.u32 	{%r121, %r122}, [pixelID];
	cvt.u64.u32	%rd35, %r121;
	cvt.u64.u32	%rd36, %r122;
	mov.u64 	%rd40, rnd_seeds;
	cvta.global.u64 	%rd34, %rd40;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r98, %r99, %rd35, %rd36, %rd25, %rd25);
	// inline asm
	ld.global.u32 	%r311, [samples];
	mov.f32 	%f586, 0f00000000;
	setp.lt.s32	%p11, %r311, 1;
	@%p11 bra 	BB0_4;

	cvt.rn.f32.s32	%f173, %r311;
	rcp.rn.f32 	%f13, %f173;
	ld.u32 	%r313, [%rd33];
	mul.f32 	%f14, %f7, 0f3456BF95;
	mul.f32 	%f15, %f8, 0f3456BF95;
	mul.f32 	%f16, %f9, 0f3456BF95;
	mul.f32 	%f174, %f563, %f11;
	mul.f32 	%f175, %f564, %f10;
	sub.f32 	%f17, %f175, %f174;
	mul.f32 	%f176, %f565, %f10;
	mul.f32 	%f177, %f563, %f12;
	sub.f32 	%f18, %f177, %f176;
	mul.f32 	%f178, %f564, %f12;
	mul.f32 	%f179, %f565, %f11;
	sub.f32 	%f19, %f179, %f178;
	mov.f32 	%f586, 0f00000000;
	mov.u32 	%r286, 0;
	abs.f32 	%f264, %f15;
	abs.f32 	%f265, %f14;
	max.f32 	%f266, %f265, %f264;
	abs.f32 	%f267, %f16;
	max.f32 	%f268, %f266, %f267;
	mov.f32 	%f585, %f586;
	mov.f32 	%f584, %f586;

BB0_6:
	setp.lt.s32	%p12, %r311, 1;
	@%p12 bra 	BB0_57;

	cvt.rn.f32.s32	%f23, %r286;
	mov.u32 	%r289, 0;

BB0_8:
	mad.lo.s32 	%r127, %r313, 1664525, 1013904223;
	and.b32  	%r128, %r127, 16777215;
	cvt.rn.f32.u32	%f180, %r128;
	fma.rn.f32 	%f181, %f180, 0f33800000, %f23;
	mul.f32 	%f182, %f13, %f181;
	mad.lo.s32 	%r313, %r127, 1664525, 1013904223;
	and.b32  	%r129, %r313, 16777215;
	cvt.rn.f32.u32	%f183, %r129;
	cvt.rn.f32.s32	%f184, %r289;
	fma.rn.f32 	%f185, %f183, 0f33800000, %f184;
	mul.f32 	%f186, %f13, %f185;
	sqrt.rn.f32 	%f27, %f182;
	mul.f32 	%f578, %f186, 0f40C90FDB;
	abs.f32 	%f29, %f578;
	setp.neu.f32	%p13, %f29, 0f7F800000;
	mov.f32 	%f572, %f578;
	@%p13 bra 	BB0_10;

	mov.f32 	%f187, 0f00000000;
	mul.rn.f32 	%f572, %f578, %f187;

BB0_10:
	mul.f32 	%f188, %f572, 0f3F22F983;
	cvt.rni.s32.f32	%r300, %f188;
	cvt.rn.f32.s32	%f189, %r300;
	neg.f32 	%f190, %f189;
	mov.f32 	%f191, 0f3FC90FDA;
	fma.rn.f32 	%f192, %f190, %f191, %f572;
	mov.f32 	%f193, 0f33A22168;
	fma.rn.f32 	%f194, %f190, %f193, %f192;
	mov.f32 	%f195, 0f27C234C5;
	fma.rn.f32 	%f573, %f190, %f195, %f194;
	abs.f32 	%f196, %f572;
	setp.leu.f32	%p14, %f196, 0f47CE4780;
	@%p14 bra 	BB0_21;

	add.u64 	%rd42, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd42;
	mov.b32 	 %r15, %f572;
	shr.u32 	%r16, %r15, 23;
	shl.b32 	%r132, %r15, 8;
	or.b32  	%r17, %r132, -2147483648;
	mov.u32 	%r291, 0;
	mov.u64 	%rd121, 0;
	mov.u64 	%rd120, %rd3;
	mov.u32 	%r292, %r291;

BB0_12:
	.pragma "nounroll";
	shl.b64 	%rd43, %rd121, 2;
	mov.u64 	%rd44, __cudart_i2opi_f;
	add.s64 	%rd45, %rd44, %rd43;
	ld.const.u32 	%r135, [%rd45];
	// inline asm
	{
	mad.lo.cc.u32   %r133, %r135, %r17, %r292;
	madc.hi.u32     %r292, %r135, %r17,  0;
	}
	// inline asm
	st.local.u32 	[%rd120], %r133;
	add.s32 	%r291, %r291, 1;
	cvt.s64.s32	%rd121, %r291;
	mul.wide.s32 	%rd48, %r291, 4;
	add.s64 	%rd120, %rd3, %rd48;
	setp.ne.s32	%p15, %r291, 6;
	@%p15 bra 	BB0_12;

	and.b32  	%r138, %r16, 255;
	add.s32 	%r139, %r138, -128;
	shr.u32 	%r140, %r139, 5;
	and.b32  	%r22, %r15, -2147483648;
	cvta.to.local.u64 	%rd50, %rd42;
	st.local.u32 	[%rd50+24], %r292;
	mov.u32 	%r141, 6;
	sub.s32 	%r142, %r141, %r140;
	mul.wide.s32 	%rd51, %r142, 4;
	add.s64 	%rd8, %rd50, %rd51;
	ld.local.u32 	%r293, [%rd8];
	ld.local.u32 	%r294, [%rd8+-4];
	and.b32  	%r25, %r16, 31;
	setp.eq.s32	%p16, %r25, 0;
	@%p16 bra 	BB0_15;

	mov.u32 	%r143, 32;
	sub.s32 	%r144, %r143, %r25;
	shr.u32 	%r145, %r294, %r144;
	shl.b32 	%r146, %r293, %r25;
	add.s32 	%r293, %r145, %r146;
	ld.local.u32 	%r147, [%rd8+-8];
	shr.u32 	%r148, %r147, %r144;
	shl.b32 	%r149, %r294, %r25;
	add.s32 	%r294, %r148, %r149;

BB0_15:
	shr.u32 	%r150, %r294, 30;
	shl.b32 	%r151, %r293, 2;
	add.s32 	%r295, %r150, %r151;
	shl.b32 	%r31, %r294, 2;
	shr.u32 	%r152, %r295, 31;
	shr.u32 	%r153, %r293, 30;
	add.s32 	%r32, %r152, %r153;
	setp.eq.s32	%p17, %r152, 0;
	@%p17 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r296, %r22;
	mov.u32 	%r297, %r31;
	bra.uni 	BB0_18;

BB0_17:
	not.b32 	%r154, %r295;
	neg.s32 	%r297, %r31;
	setp.eq.s32	%p18, %r31, 0;
	selp.u32	%r155, 1, 0, %p18;
	add.s32 	%r295, %r155, %r154;
	xor.b32  	%r296, %r22, -2147483648;

BB0_18:
	clz.b32 	%r299, %r295;
	setp.eq.s32	%p19, %r299, 0;
	shl.b32 	%r156, %r295, %r299;
	mov.u32 	%r157, 32;
	sub.s32 	%r158, %r157, %r299;
	shr.u32 	%r159, %r297, %r158;
	add.s32 	%r160, %r159, %r156;
	selp.b32	%r40, %r295, %r160, %p19;
	mov.u32 	%r161, -921707870;
	mul.hi.u32 	%r298, %r40, %r161;
	setp.eq.s32	%p20, %r22, 0;
	neg.s32 	%r162, %r32;
	selp.b32	%r300, %r32, %r162, %p20;
	setp.lt.s32	%p21, %r298, 1;
	@%p21 bra 	BB0_20;

	mul.lo.s32 	%r163, %r40, -921707870;
	shr.u32 	%r164, %r163, 31;
	shl.b32 	%r165, %r298, 1;
	add.s32 	%r298, %r164, %r165;
	add.s32 	%r299, %r299, 1;

BB0_20:
	mov.u32 	%r166, 126;
	sub.s32 	%r167, %r166, %r299;
	shl.b32 	%r168, %r167, 23;
	add.s32 	%r169, %r298, 1;
	shr.u32 	%r170, %r169, 7;
	add.s32 	%r171, %r170, 1;
	shr.u32 	%r172, %r171, 1;
	add.s32 	%r173, %r172, %r168;
	or.b32  	%r174, %r173, %r296;
	mov.b32 	 %f573, %r174;

BB0_21:
	mul.rn.f32 	%f35, %f573, %f573;
	add.s32 	%r48, %r300, 1;
	and.b32  	%r49, %r48, 1;
	setp.eq.s32	%p22, %r49, 0;
	@%p22 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f199, 0f3C08839E;
	mov.f32 	%f200, 0fB94CA1F9;
	fma.rn.f32 	%f574, %f200, %f35, %f199;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f197, 0fBAB6061A;
	mov.f32 	%f198, 0f37CCF5CE;
	fma.rn.f32 	%f574, %f198, %f35, %f197;

BB0_24:
	@%p22 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f204, 0fBE2AAAA3;
	fma.rn.f32 	%f205, %f574, %f35, %f204;
	mov.f32 	%f206, 0f00000000;
	fma.rn.f32 	%f575, %f205, %f35, %f206;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f201, 0f3D2AAAA5;
	fma.rn.f32 	%f202, %f574, %f35, %f201;
	mov.f32 	%f203, 0fBF000000;
	fma.rn.f32 	%f575, %f202, %f35, %f203;

BB0_27:
	fma.rn.f32 	%f576, %f575, %f573, %f573;
	@%p22 bra 	BB0_29;

	mov.f32 	%f207, 0f3F800000;
	fma.rn.f32 	%f576, %f575, %f35, %f207;

BB0_29:
	and.b32  	%r175, %r48, 2;
	setp.eq.s32	%p25, %r175, 0;
	@%p25 bra 	BB0_31;

	mov.f32 	%f208, 0f00000000;
	mov.f32 	%f209, 0fBF800000;
	fma.rn.f32 	%f576, %f576, %f209, %f208;

BB0_31:
	@%p13 bra 	BB0_33;

	mov.f32 	%f210, 0f00000000;
	mul.rn.f32 	%f578, %f578, %f210;

BB0_33:
	mul.f32 	%f211, %f578, 0f3F22F983;
	cvt.rni.s32.f32	%r310, %f211;
	cvt.rn.f32.s32	%f212, %r310;
	neg.f32 	%f213, %f212;
	fma.rn.f32 	%f215, %f213, %f191, %f578;
	fma.rn.f32 	%f217, %f213, %f193, %f215;
	fma.rn.f32 	%f579, %f213, %f195, %f217;
	abs.f32 	%f219, %f578;
	setp.leu.f32	%p27, %f219, 0f47CE4780;
	@%p27 bra 	BB0_44;

	add.u64 	%rd53, %SP, 0;
	cvta.to.local.u64 	%rd9, %rd53;
	mov.b32 	 %r51, %f578;
	shr.u32 	%r52, %r51, 23;
	shl.b32 	%r178, %r51, 8;
	or.b32  	%r53, %r178, -2147483648;
	mov.u32 	%r301, 0;
	mov.u64 	%rd122, %rd9;
	mov.u64 	%rd123, %rd25;
	mov.u32 	%r302, %r301;

BB0_35:
	.pragma "nounroll";
	shl.b64 	%rd54, %rd123, 2;
	mov.u64 	%rd55, __cudart_i2opi_f;
	add.s64 	%rd56, %rd55, %rd54;
	ld.const.u32 	%r181, [%rd56];
	// inline asm
	{
	mad.lo.cc.u32   %r179, %r181, %r53, %r302;
	madc.hi.u32     %r302, %r181, %r53,  0;
	}
	// inline asm
	st.local.u32 	[%rd122], %r179;
	add.s32 	%r301, %r301, 1;
	cvt.s64.s32	%rd123, %r301;
	mul.wide.s32 	%rd57, %r301, 4;
	add.s64 	%rd122, %rd9, %rd57;
	setp.ne.s32	%p28, %r301, 6;
	@%p28 bra 	BB0_35;

	and.b32  	%r184, %r52, 255;
	add.s32 	%r185, %r184, -128;
	shr.u32 	%r186, %r185, 5;
	and.b32  	%r58, %r51, -2147483648;
	cvta.to.local.u64 	%rd59, %rd53;
	st.local.u32 	[%rd59+24], %r302;
	mov.u32 	%r187, 6;
	sub.s32 	%r188, %r187, %r186;
	mul.wide.s32 	%rd60, %r188, 4;
	add.s64 	%rd15, %rd59, %rd60;
	ld.local.u32 	%r303, [%rd15];
	ld.local.u32 	%r304, [%rd15+-4];
	and.b32  	%r61, %r52, 31;
	setp.eq.s32	%p29, %r61, 0;
	@%p29 bra 	BB0_38;

	mov.u32 	%r189, 32;
	sub.s32 	%r190, %r189, %r61;
	shr.u32 	%r191, %r304, %r190;
	shl.b32 	%r192, %r303, %r61;
	add.s32 	%r303, %r191, %r192;
	ld.local.u32 	%r193, [%rd15+-8];
	shr.u32 	%r194, %r193, %r190;
	shl.b32 	%r195, %r304, %r61;
	add.s32 	%r304, %r194, %r195;

BB0_38:
	shr.u32 	%r196, %r304, 30;
	shl.b32 	%r197, %r303, 2;
	add.s32 	%r305, %r196, %r197;
	shl.b32 	%r67, %r304, 2;
	shr.u32 	%r198, %r305, 31;
	shr.u32 	%r199, %r303, 30;
	add.s32 	%r68, %r198, %r199;
	setp.eq.s32	%p30, %r198, 0;
	@%p30 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r306, %r58;
	mov.u32 	%r307, %r67;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r200, %r305;
	neg.s32 	%r307, %r67;
	setp.eq.s32	%p31, %r67, 0;
	selp.u32	%r201, 1, 0, %p31;
	add.s32 	%r305, %r201, %r200;
	xor.b32  	%r306, %r58, -2147483648;

BB0_41:
	clz.b32 	%r309, %r305;
	setp.eq.s32	%p32, %r309, 0;
	shl.b32 	%r202, %r305, %r309;
	mov.u32 	%r203, 32;
	sub.s32 	%r204, %r203, %r309;
	shr.u32 	%r205, %r307, %r204;
	add.s32 	%r206, %r205, %r202;
	selp.b32	%r76, %r305, %r206, %p32;
	mov.u32 	%r207, -921707870;
	mul.hi.u32 	%r308, %r76, %r207;
	setp.eq.s32	%p33, %r58, 0;
	neg.s32 	%r208, %r68;
	selp.b32	%r310, %r68, %r208, %p33;
	setp.lt.s32	%p34, %r308, 1;
	@%p34 bra 	BB0_43;

	mul.lo.s32 	%r209, %r76, -921707870;
	shr.u32 	%r210, %r209, 31;
	shl.b32 	%r211, %r308, 1;
	add.s32 	%r308, %r210, %r211;
	add.s32 	%r309, %r309, 1;

BB0_43:
	mov.u32 	%r212, 126;
	sub.s32 	%r213, %r212, %r309;
	shl.b32 	%r214, %r213, 23;
	add.s32 	%r215, %r308, 1;
	shr.u32 	%r216, %r215, 7;
	add.s32 	%r217, %r216, 1;
	shr.u32 	%r218, %r217, 1;
	add.s32 	%r219, %r218, %r214;
	or.b32  	%r220, %r219, %r306;
	mov.b32 	 %f579, %r220;

BB0_44:
	mul.rn.f32 	%f52, %f579, %f579;
	and.b32  	%r84, %r310, 1;
	setp.eq.s32	%p35, %r84, 0;
	@%p35 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f222, 0f3C08839E;
	mov.f32 	%f223, 0fB94CA1F9;
	fma.rn.f32 	%f580, %f223, %f52, %f222;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f220, 0fBAB6061A;
	mov.f32 	%f221, 0f37CCF5CE;
	fma.rn.f32 	%f580, %f221, %f52, %f220;

BB0_47:
	@%p35 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f227, 0fBE2AAAA3;
	fma.rn.f32 	%f228, %f580, %f52, %f227;
	mov.f32 	%f229, 0f00000000;
	fma.rn.f32 	%f581, %f228, %f52, %f229;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f224, 0f3D2AAAA5;
	fma.rn.f32 	%f225, %f580, %f52, %f224;
	mov.f32 	%f226, 0fBF000000;
	fma.rn.f32 	%f581, %f225, %f52, %f226;

BB0_50:
	fma.rn.f32 	%f582, %f581, %f579, %f579;
	@%p35 bra 	BB0_52;

	mov.f32 	%f230, 0f3F800000;
	fma.rn.f32 	%f582, %f581, %f52, %f230;

BB0_52:
	and.b32  	%r221, %r310, 2;
	setp.eq.s32	%p38, %r221, 0;
	@%p38 bra 	BB0_54;

	mov.f32 	%f231, 0f00000000;
	mov.f32 	%f232, 0fBF800000;
	fma.rn.f32 	%f582, %f582, %f232, %f231;

BB0_54:
	mul.f32 	%f233, %f27, %f576;
	mul.f32 	%f234, %f233, %f233;
	mov.f32 	%f235, 0f3F800000;
	sub.f32 	%f236, %f235, %f234;
	mul.f32 	%f237, %f27, %f582;
	mul.f32 	%f238, %f237, %f237;
	sub.f32 	%f239, %f236, %f238;
	mov.f32 	%f240, 0f00000000;
	max.f32 	%f241, %f240, %f239;
	sqrt.rn.f32 	%f242, %f241;
	mul.f32 	%f243, %f10, %f237;
	mul.f32 	%f244, %f11, %f237;
	mul.f32 	%f245, %f12, %f237;
	fma.rn.f32 	%f246, %f19, %f233, %f243;
	fma.rn.f32 	%f247, %f18, %f233, %f244;
	fma.rn.f32 	%f248, %f17, %f233, %f245;
	fma.rn.f32 	%f64, %f563, %f242, %f246;
	fma.rn.f32 	%f65, %f564, %f242, %f247;
	fma.rn.f32 	%f66, %f565, %f242, %f248;
	setp.gt.f32	%p39, %f65, 0f00000000;
	setp.eq.s32	%p40, %r4, 0;
	or.pred  	%p41, %p40, %p39;
	@!%p41 bra 	BB0_56;
	bra.uni 	BB0_55;

BB0_55:
	add.u64 	%rd61, %SP, 28;
	cvta.to.local.u64 	%rd62, %rd61;
	max.f32 	%f262, %f268, %f156;
	ld.global.u32 	%r222, [sky];
	neg.f32 	%f255, %f64;
	neg.f32 	%f254, %f65;
	neg.f32 	%f253, %f66;
	mov.u32 	%r223, 6;
	mov.u32 	%r224, 0;
	// inline asm
	call (%f249, %f250, %f251, %f252), _rt_texture_get_base_id, (%r222, %r223, %f253, %f254, %f255, %r224);
	// inline asm
	st.local.f32 	[%rd62], %f249;
	st.local.f32 	[%rd62+4], %f250;
	st.local.f32 	[%rd62+8], %f251;
	ld.global.u32 	%r225, [root];
	mov.u32 	%r226, 1;
	mov.f32 	%f263, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r225, %f7, %f8, %f9, %f64, %f65, %f66, %r226, %f262, %f263, %rd61, %r114);
	// inline asm
	ld.local.f32 	%f270, [%rd62];
	add.f32 	%f584, %f584, %f270;
	ld.local.f32 	%f271, [%rd62+4];
	add.f32 	%f585, %f585, %f271;
	ld.local.f32 	%f272, [%rd62+8];
	add.f32 	%f586, %f586, %f272;
	ld.global.u32 	%r311, [samples];

BB0_56:
	add.s32 	%r289, %r289, 1;
	setp.lt.s32	%p42, %r289, %r311;
	@%p42 bra 	BB0_8;

BB0_57:
	add.s32 	%r286, %r286, 1;
	setp.lt.s32	%p43, %r286, %r311;
	@%p43 bra 	BB0_6;
	bra.uni 	BB0_58;

BB0_4:
	mov.f32 	%f585, %f586;
	mov.f32 	%f584, %f586;

BB0_58:
	mul.lo.s32 	%r228, %r311, %r311;
	cvt.rn.f32.s32	%f273, %r228;
	rcp.rn.f32 	%f274, %f273;
	mul.f32 	%f275, %f584, %f274;
	mul.f32 	%f276, %f585, %f274;
	mul.f32 	%f277, %f586, %f274;
	ld.global.f32 	%f278, [skyColor];
	mul.f32 	%f79, %f275, %f278;
	ld.global.f32 	%f279, [skyColor+4];
	mul.f32 	%f80, %f276, %f279;
	ld.global.f32 	%f280, [skyColor+8];
	mul.f32 	%f81, %f277, %f280;
	ld.global.u32 	%r315, [imageEnabled];
	and.b32  	%r229, %r315, 1;
	setp.eq.b32	%p44, %r229, 1;
	@!%p44 bra 	BB0_93;
	bra.uni 	BB0_59;

BB0_59:
	mov.f32 	%f283, 0f3E666666;
	cvt.rzi.f32.f32	%f284, %f283;
	fma.rn.f32 	%f285, %f284, 0fC0000000, 0f3EE66666;
	abs.f32 	%f82, %f285;
	abs.f32 	%f83, %f79;
	setp.lt.f32	%p45, %f83, 0f00800000;
	mul.f32 	%f286, %f83, 0f4B800000;
	selp.f32	%f287, 0fC3170000, 0fC2FE0000, %p45;
	selp.f32	%f288, %f286, %f83, %p45;
	mov.b32 	 %r230, %f288;
	and.b32  	%r231, %r230, 8388607;
	or.b32  	%r232, %r231, 1065353216;
	mov.b32 	 %f289, %r232;
	shr.u32 	%r233, %r230, 23;
	cvt.rn.f32.u32	%f290, %r233;
	add.f32 	%f291, %f287, %f290;
	setp.gt.f32	%p46, %f289, 0f3FB504F3;
	mul.f32 	%f292, %f289, 0f3F000000;
	add.f32 	%f293, %f291, 0f3F800000;
	selp.f32	%f294, %f292, %f289, %p46;
	selp.f32	%f295, %f293, %f291, %p46;
	add.f32 	%f296, %f294, 0fBF800000;
	add.f32 	%f282, %f294, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f281,%f282;
	// inline asm
	add.f32 	%f297, %f296, %f296;
	mul.f32 	%f298, %f281, %f297;
	mul.f32 	%f299, %f298, %f298;
	mov.f32 	%f300, 0f3C4CAF63;
	mov.f32 	%f301, 0f3B18F0FE;
	fma.rn.f32 	%f302, %f301, %f299, %f300;
	mov.f32 	%f303, 0f3DAAAABD;
	fma.rn.f32 	%f304, %f302, %f299, %f303;
	mul.rn.f32 	%f305, %f304, %f299;
	mul.rn.f32 	%f306, %f305, %f298;
	sub.f32 	%f307, %f296, %f298;
	neg.f32 	%f308, %f298;
	add.f32 	%f309, %f307, %f307;
	fma.rn.f32 	%f310, %f308, %f296, %f309;
	mul.rn.f32 	%f311, %f281, %f310;
	add.f32 	%f312, %f306, %f298;
	sub.f32 	%f313, %f298, %f312;
	add.f32 	%f314, %f306, %f313;
	add.f32 	%f315, %f311, %f314;
	add.f32 	%f316, %f312, %f315;
	sub.f32 	%f317, %f312, %f316;
	add.f32 	%f318, %f315, %f317;
	mov.f32 	%f319, 0f3F317200;
	mul.rn.f32 	%f320, %f295, %f319;
	mov.f32 	%f321, 0f35BFBE8E;
	mul.rn.f32 	%f322, %f295, %f321;
	add.f32 	%f323, %f320, %f316;
	sub.f32 	%f324, %f320, %f323;
	add.f32 	%f325, %f316, %f324;
	add.f32 	%f326, %f318, %f325;
	add.f32 	%f327, %f322, %f326;
	add.f32 	%f328, %f323, %f327;
	sub.f32 	%f329, %f323, %f328;
	add.f32 	%f330, %f327, %f329;
	mov.f32 	%f331, 0f3EE66666;
	mul.rn.f32 	%f332, %f331, %f328;
	neg.f32 	%f333, %f332;
	fma.rn.f32 	%f334, %f331, %f328, %f333;
	fma.rn.f32 	%f335, %f331, %f330, %f334;
	mov.f32 	%f336, 0f00000000;
	fma.rn.f32 	%f337, %f336, %f328, %f335;
	add.rn.f32 	%f338, %f332, %f337;
	neg.f32 	%f339, %f338;
	add.rn.f32 	%f340, %f332, %f339;
	add.rn.f32 	%f341, %f340, %f337;
	mov.b32 	 %r234, %f338;
	setp.eq.s32	%p47, %r234, 1118925336;
	add.s32 	%r235, %r234, -1;
	mov.b32 	 %f342, %r235;
	add.f32 	%f343, %f341, 0f37000000;
	selp.f32	%f344, %f342, %f338, %p47;
	selp.f32	%f84, %f343, %f341, %p47;
	mul.f32 	%f345, %f344, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f346, %f345;
	mov.f32 	%f347, 0fBF317200;
	fma.rn.f32 	%f348, %f346, %f347, %f344;
	mov.f32 	%f349, 0fB5BFBE8E;
	fma.rn.f32 	%f350, %f346, %f349, %f348;
	mul.f32 	%f351, %f350, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f352, %f351;
	add.f32 	%f353, %f346, 0f00000000;
	ex2.approx.f32 	%f354, %f353;
	mul.f32 	%f355, %f352, %f354;
	setp.lt.f32	%p48, %f344, 0fC2D20000;
	selp.f32	%f356, 0f00000000, %f355, %p48;
	setp.gt.f32	%p49, %f344, 0f42D20000;
	selp.f32	%f593, 0f7F800000, %f356, %p49;
	setp.eq.f32	%p50, %f593, 0f7F800000;
	@%p50 bra 	BB0_61;

	fma.rn.f32 	%f593, %f593, %f84, %f593;

BB0_61:
	setp.lt.f32	%p51, %f79, 0f00000000;
	setp.eq.f32	%p52, %f82, 0f3F800000;
	and.pred  	%p1, %p51, %p52;
	mov.b32 	 %r236, %f593;
	xor.b32  	%r237, %r236, -2147483648;
	mov.b32 	 %f357, %r237;
	selp.f32	%f595, %f357, %f593, %p1;
	setp.eq.f32	%p53, %f79, 0f00000000;
	@%p53 bra 	BB0_64;
	bra.uni 	BB0_62;

BB0_64:
	add.f32 	%f360, %f79, %f79;
	selp.f32	%f595, %f360, 0f00000000, %p52;
	bra.uni 	BB0_65;

BB0_102:
	mov.u64 	%rd116, image_HDR;
	cvta.global.u64 	%rd111, %rd116;
	mov.u32 	%r280, 8;
	mov.u64 	%rd115, 0;
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd111, %r98, %r280, %rd18, %rd19, %rd115, %rd115);
	// inline asm
	mov.f32 	%f541, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f541;}

	// inline asm
	mov.u16 	%rs41, 0;
	st.v4.u16 	[%rd110], {%rs40, %rs40, %rs40, %rs41};
	bra.uni 	BB0_103;

BB0_62:
	setp.geu.f32	%p54, %f79, 0f00000000;
	@%p54 bra 	BB0_65;

	mov.f32 	%f562, 0f3EE66666;
	cvt.rzi.f32.f32	%f359, %f562;
	setp.neu.f32	%p55, %f359, 0f3EE66666;
	selp.f32	%f595, 0f7FFFFFFF, %f595, %p55;

BB0_65:
	add.f32 	%f361, %f83, 0f3EE66666;
	mov.b32 	 %r238, %f361;
	setp.lt.s32	%p57, %r238, 2139095040;
	@%p57 bra 	BB0_70;

	setp.gtu.f32	%p58, %f83, 0f7F800000;
	@%p58 bra 	BB0_69;
	bra.uni 	BB0_67;

BB0_69:
	add.f32 	%f595, %f79, 0f3EE66666;
	bra.uni 	BB0_70;

BB0_67:
	setp.neu.f32	%p59, %f83, 0f7F800000;
	@%p59 bra 	BB0_70;

	selp.f32	%f595, 0fFF800000, 0f7F800000, %p1;

BB0_70:
	mov.f32 	%f550, 0fB5BFBE8E;
	mov.f32 	%f549, 0fBF317200;
	mov.f32 	%f548, 0f00000000;
	mov.f32 	%f547, 0f35BFBE8E;
	mov.f32 	%f546, 0f3F317200;
	mov.f32 	%f545, 0f3DAAAABD;
	mov.f32 	%f544, 0f3C4CAF63;
	mov.f32 	%f543, 0f3B18F0FE;
	mov.f32 	%f542, 0f3EE66666;
	setp.eq.f32	%p60, %f79, 0f3F800000;
	selp.f32	%f95, 0f3F800000, %f595, %p60;
	abs.f32 	%f96, %f80;
	setp.lt.f32	%p61, %f96, 0f00800000;
	mul.f32 	%f364, %f96, 0f4B800000;
	selp.f32	%f365, 0fC3170000, 0fC2FE0000, %p61;
	selp.f32	%f366, %f364, %f96, %p61;
	mov.b32 	 %r239, %f366;
	and.b32  	%r240, %r239, 8388607;
	or.b32  	%r241, %r240, 1065353216;
	mov.b32 	 %f367, %r241;
	shr.u32 	%r242, %r239, 23;
	cvt.rn.f32.u32	%f368, %r242;
	add.f32 	%f369, %f365, %f368;
	setp.gt.f32	%p62, %f367, 0f3FB504F3;
	mul.f32 	%f370, %f367, 0f3F000000;
	add.f32 	%f371, %f369, 0f3F800000;
	selp.f32	%f372, %f370, %f367, %p62;
	selp.f32	%f373, %f371, %f369, %p62;
	add.f32 	%f374, %f372, 0fBF800000;
	add.f32 	%f363, %f372, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f362,%f363;
	// inline asm
	add.f32 	%f375, %f374, %f374;
	mul.f32 	%f376, %f362, %f375;
	mul.f32 	%f377, %f376, %f376;
	fma.rn.f32 	%f380, %f543, %f377, %f544;
	fma.rn.f32 	%f382, %f380, %f377, %f545;
	mul.rn.f32 	%f383, %f382, %f377;
	mul.rn.f32 	%f384, %f383, %f376;
	sub.f32 	%f385, %f374, %f376;
	neg.f32 	%f386, %f376;
	add.f32 	%f387, %f385, %f385;
	fma.rn.f32 	%f388, %f386, %f374, %f387;
	mul.rn.f32 	%f389, %f362, %f388;
	add.f32 	%f390, %f384, %f376;
	sub.f32 	%f391, %f376, %f390;
	add.f32 	%f392, %f384, %f391;
	add.f32 	%f393, %f389, %f392;
	add.f32 	%f394, %f390, %f393;
	sub.f32 	%f395, %f390, %f394;
	add.f32 	%f396, %f393, %f395;
	mul.rn.f32 	%f398, %f373, %f546;
	mul.rn.f32 	%f400, %f373, %f547;
	add.f32 	%f401, %f398, %f394;
	sub.f32 	%f402, %f398, %f401;
	add.f32 	%f403, %f394, %f402;
	add.f32 	%f404, %f396, %f403;
	add.f32 	%f405, %f400, %f404;
	add.f32 	%f406, %f401, %f405;
	sub.f32 	%f407, %f401, %f406;
	add.f32 	%f408, %f405, %f407;
	mul.rn.f32 	%f410, %f542, %f406;
	neg.f32 	%f411, %f410;
	fma.rn.f32 	%f412, %f542, %f406, %f411;
	fma.rn.f32 	%f413, %f542, %f408, %f412;
	fma.rn.f32 	%f415, %f548, %f406, %f413;
	add.rn.f32 	%f416, %f410, %f415;
	neg.f32 	%f417, %f416;
	add.rn.f32 	%f418, %f410, %f417;
	add.rn.f32 	%f419, %f418, %f415;
	mov.b32 	 %r243, %f416;
	setp.eq.s32	%p63, %r243, 1118925336;
	add.s32 	%r244, %r243, -1;
	mov.b32 	 %f420, %r244;
	add.f32 	%f421, %f419, 0f37000000;
	selp.f32	%f422, %f420, %f416, %p63;
	selp.f32	%f97, %f421, %f419, %p63;
	mul.f32 	%f423, %f422, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f424, %f423;
	fma.rn.f32 	%f426, %f424, %f549, %f422;
	fma.rn.f32 	%f428, %f424, %f550, %f426;
	mul.f32 	%f429, %f428, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f430, %f429;
	add.f32 	%f431, %f424, 0f00000000;
	ex2.approx.f32 	%f432, %f431;
	mul.f32 	%f433, %f430, %f432;
	setp.lt.f32	%p64, %f422, 0fC2D20000;
	selp.f32	%f434, 0f00000000, %f433, %p64;
	setp.gt.f32	%p65, %f422, 0f42D20000;
	selp.f32	%f596, 0f7F800000, %f434, %p65;
	setp.eq.f32	%p66, %f596, 0f7F800000;
	@%p66 bra 	BB0_72;

	fma.rn.f32 	%f596, %f596, %f97, %f596;

BB0_72:
	setp.lt.f32	%p67, %f80, 0f00000000;
	and.pred  	%p2, %p67, %p52;
	mov.b32 	 %r245, %f596;
	xor.b32  	%r246, %r245, -2147483648;
	mov.b32 	 %f435, %r246;
	selp.f32	%f598, %f435, %f596, %p2;
	setp.eq.f32	%p69, %f80, 0f00000000;
	@%p69 bra 	BB0_75;
	bra.uni 	BB0_73;

BB0_75:
	add.f32 	%f438, %f80, %f80;
	selp.f32	%f598, %f438, 0f00000000, %p52;
	bra.uni 	BB0_76;

BB0_73:
	setp.geu.f32	%p70, %f80, 0f00000000;
	@%p70 bra 	BB0_76;

	mov.f32 	%f561, 0f3EE66666;
	cvt.rzi.f32.f32	%f437, %f561;
	setp.neu.f32	%p71, %f437, 0f3EE66666;
	selp.f32	%f598, 0f7FFFFFFF, %f598, %p71;

BB0_76:
	add.f32 	%f439, %f96, 0f3EE66666;
	mov.b32 	 %r247, %f439;
	setp.lt.s32	%p73, %r247, 2139095040;
	@%p73 bra 	BB0_81;

	setp.gtu.f32	%p74, %f96, 0f7F800000;
	@%p74 bra 	BB0_80;
	bra.uni 	BB0_78;

BB0_80:
	add.f32 	%f598, %f80, 0f3EE66666;
	bra.uni 	BB0_81;

BB0_78:
	setp.neu.f32	%p75, %f96, 0f7F800000;
	@%p75 bra 	BB0_81;

	selp.f32	%f598, 0fFF800000, 0f7F800000, %p2;

BB0_81:
	mov.f32 	%f559, 0fB5BFBE8E;
	mov.f32 	%f558, 0fBF317200;
	mov.f32 	%f557, 0f00000000;
	mov.f32 	%f556, 0f35BFBE8E;
	mov.f32 	%f555, 0f3F317200;
	mov.f32 	%f554, 0f3DAAAABD;
	mov.f32 	%f553, 0f3C4CAF63;
	mov.f32 	%f552, 0f3B18F0FE;
	mov.f32 	%f551, 0f3EE66666;
	setp.eq.f32	%p76, %f80, 0f3F800000;
	selp.f32	%f108, 0f3F800000, %f598, %p76;
	abs.f32 	%f109, %f81;
	setp.lt.f32	%p77, %f109, 0f00800000;
	mul.f32 	%f442, %f109, 0f4B800000;
	selp.f32	%f443, 0fC3170000, 0fC2FE0000, %p77;
	selp.f32	%f444, %f442, %f109, %p77;
	mov.b32 	 %r248, %f444;
	and.b32  	%r249, %r248, 8388607;
	or.b32  	%r250, %r249, 1065353216;
	mov.b32 	 %f445, %r250;
	shr.u32 	%r251, %r248, 23;
	cvt.rn.f32.u32	%f446, %r251;
	add.f32 	%f447, %f443, %f446;
	setp.gt.f32	%p78, %f445, 0f3FB504F3;
	mul.f32 	%f448, %f445, 0f3F000000;
	add.f32 	%f449, %f447, 0f3F800000;
	selp.f32	%f450, %f448, %f445, %p78;
	selp.f32	%f451, %f449, %f447, %p78;
	add.f32 	%f452, %f450, 0fBF800000;
	add.f32 	%f441, %f450, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f440,%f441;
	// inline asm
	add.f32 	%f453, %f452, %f452;
	mul.f32 	%f454, %f440, %f453;
	mul.f32 	%f455, %f454, %f454;
	fma.rn.f32 	%f458, %f552, %f455, %f553;
	fma.rn.f32 	%f460, %f458, %f455, %f554;
	mul.rn.f32 	%f461, %f460, %f455;
	mul.rn.f32 	%f462, %f461, %f454;
	sub.f32 	%f463, %f452, %f454;
	neg.f32 	%f464, %f454;
	add.f32 	%f465, %f463, %f463;
	fma.rn.f32 	%f466, %f464, %f452, %f465;
	mul.rn.f32 	%f467, %f440, %f466;
	add.f32 	%f468, %f462, %f454;
	sub.f32 	%f469, %f454, %f468;
	add.f32 	%f470, %f462, %f469;
	add.f32 	%f471, %f467, %f470;
	add.f32 	%f472, %f468, %f471;
	sub.f32 	%f473, %f468, %f472;
	add.f32 	%f474, %f471, %f473;
	mul.rn.f32 	%f476, %f451, %f555;
	mul.rn.f32 	%f478, %f451, %f556;
	add.f32 	%f479, %f476, %f472;
	sub.f32 	%f480, %f476, %f479;
	add.f32 	%f481, %f472, %f480;
	add.f32 	%f482, %f474, %f481;
	add.f32 	%f483, %f478, %f482;
	add.f32 	%f484, %f479, %f483;
	sub.f32 	%f485, %f479, %f484;
	add.f32 	%f486, %f483, %f485;
	mul.rn.f32 	%f488, %f551, %f484;
	neg.f32 	%f489, %f488;
	fma.rn.f32 	%f490, %f551, %f484, %f489;
	fma.rn.f32 	%f491, %f551, %f486, %f490;
	fma.rn.f32 	%f493, %f557, %f484, %f491;
	add.rn.f32 	%f494, %f488, %f493;
	neg.f32 	%f495, %f494;
	add.rn.f32 	%f496, %f488, %f495;
	add.rn.f32 	%f497, %f496, %f493;
	mov.b32 	 %r252, %f494;
	setp.eq.s32	%p79, %r252, 1118925336;
	add.s32 	%r253, %r252, -1;
	mov.b32 	 %f498, %r253;
	add.f32 	%f499, %f497, 0f37000000;
	selp.f32	%f500, %f498, %f494, %p79;
	selp.f32	%f110, %f499, %f497, %p79;
	mul.f32 	%f501, %f500, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f502, %f501;
	fma.rn.f32 	%f504, %f502, %f558, %f500;
	fma.rn.f32 	%f506, %f502, %f559, %f504;
	mul.f32 	%f507, %f506, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f508, %f507;
	add.f32 	%f509, %f502, 0f00000000;
	ex2.approx.f32 	%f510, %f509;
	mul.f32 	%f511, %f508, %f510;
	setp.lt.f32	%p80, %f500, 0fC2D20000;
	selp.f32	%f512, 0f00000000, %f511, %p80;
	setp.gt.f32	%p81, %f500, 0f42D20000;
	selp.f32	%f599, 0f7F800000, %f512, %p81;
	setp.eq.f32	%p82, %f599, 0f7F800000;
	@%p82 bra 	BB0_83;

	fma.rn.f32 	%f599, %f599, %f110, %f599;

BB0_83:
	setp.lt.f32	%p83, %f81, 0f00000000;
	and.pred  	%p3, %p83, %p52;
	mov.b32 	 %r254, %f599;
	xor.b32  	%r255, %r254, -2147483648;
	mov.b32 	 %f513, %r255;
	selp.f32	%f601, %f513, %f599, %p3;
	setp.eq.f32	%p85, %f81, 0f00000000;
	@%p85 bra 	BB0_86;
	bra.uni 	BB0_84;

BB0_86:
	add.f32 	%f516, %f81, %f81;
	selp.f32	%f601, %f516, 0f00000000, %p52;
	bra.uni 	BB0_87;

BB0_84:
	setp.geu.f32	%p86, %f81, 0f00000000;
	@%p86 bra 	BB0_87;

	mov.f32 	%f560, 0f3EE66666;
	cvt.rzi.f32.f32	%f515, %f560;
	setp.neu.f32	%p87, %f515, 0f3EE66666;
	selp.f32	%f601, 0f7FFFFFFF, %f601, %p87;

BB0_87:
	add.f32 	%f517, %f109, 0f3EE66666;
	mov.b32 	 %r256, %f517;
	setp.lt.s32	%p89, %r256, 2139095040;
	@%p89 bra 	BB0_92;

	setp.gtu.f32	%p90, %f109, 0f7F800000;
	@%p90 bra 	BB0_91;
	bra.uni 	BB0_89;

BB0_91:
	add.f32 	%f601, %f81, 0f3EE66666;
	bra.uni 	BB0_92;

BB0_89:
	setp.neu.f32	%p91, %f109, 0f7F800000;
	@%p91 bra 	BB0_92;

	selp.f32	%f601, 0fFF800000, 0f7F800000, %p3;

BB0_92:
	mov.u32 	%r282, 4;
	mov.u64 	%rd117, 0;
	mov.u32 	%r281, 2;
	setp.eq.f32	%p92, %f81, 0f3F800000;
	selp.f32	%f518, 0f3F800000, %f601, %p92;
	cvt.u64.u32	%rd66, %r3;
	cvt.u64.u32	%rd65, %r2;
	mov.u64 	%rd69, image;
	cvta.global.u64 	%rd64, %rd69;
	// inline asm
	call (%rd63), _rt_buffer_get_64, (%rd64, %r281, %r282, %rd65, %rd66, %rd117, %rd117);
	// inline asm
	cvt.sat.f32.f32	%f519, %f518;
	mul.f32 	%f520, %f519, 0f437FFD71;
	cvt.rzi.u32.f32	%r259, %f520;
	cvt.sat.f32.f32	%f521, %f108;
	mul.f32 	%f522, %f521, 0f437FFD71;
	cvt.rzi.u32.f32	%r260, %f522;
	cvt.sat.f32.f32	%f523, %f95;
	mul.f32 	%f524, %f523, 0f437FFD71;
	cvt.rzi.u32.f32	%r261, %f524;
	cvt.u16.u32	%rs10, %r259;
	cvt.u16.u32	%rs11, %r261;
	cvt.u16.u32	%rs12, %r260;
	mov.u16 	%rs13, 255;
	st.v4.u8 	[%rd63], {%rs10, %rs12, %rs11, %rs13};
	ld.global.u32 	%r315, [imageEnabled];

BB0_93:
	and.b32  	%r262, %r315, 4;
	setp.eq.s32	%p93, %r262, 0;
	@%p93 bra 	BB0_103;

	ld.global.u32 	%r263, [additive];
	setp.eq.s32	%p94, %r263, 0;
	cvt.u64.u32	%rd16, %r2;
	cvt.u64.u32	%rd17, %r3;
	mov.f32 	%f525, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs14, %f525;}

	// inline asm
	@%p94 bra 	BB0_96;

	mov.u64 	%rd118, 0;
	mov.u32 	%r283, 2;
	mov.u64 	%rd82, image_HDR;
	cvta.global.u64 	%rd71, %rd82;
	mov.u32 	%r267, 8;
	// inline asm
	call (%rd70), _rt_buffer_get_64, (%rd71, %r283, %r267, %rd16, %rd17, %rd118, %rd118);
	// inline asm
	ld.v4.u16 	{%rs21, %rs22, %rs23, %rs24}, [%rd70];
	// inline asm
	{  cvt.f32.f16 %f526, %rs21;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f527, %rs22;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f528, %rs23;}

	// inline asm
	// inline asm
	call (%rd76), _rt_buffer_get_64, (%rd71, %r283, %r267, %rd16, %rd17, %rd118, %rd118);
	// inline asm
	add.f32 	%f529, %f79, %f526;
	add.f32 	%f530, %f80, %f527;
	add.f32 	%f531, %f81, %f528;
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f531;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f530;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs18, %f529;}

	// inline asm
	st.v4.u16 	[%rd76], {%rs18, %rs19, %rs20, %rs14};
	bra.uni 	BB0_103;

BB0_96:
	mov.u64 	%rd119, 0;
	mov.u32 	%r284, 2;
	mov.u64 	%rd89, image_HDR;
	cvta.global.u64 	%rd84, %rd89;
	mov.u32 	%r269, 8;
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd84, %r284, %r269, %rd16, %rd17, %rd119, %rd119);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f81;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f80;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f79;}

	// inline asm
	st.v4.u16 	[%rd83], {%rs25, %rs26, %rs27, %rs14};

BB0_103:
	ret;
}


