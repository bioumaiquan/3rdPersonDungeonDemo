//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<157>;
	.reg .b16 	%rs<157>;
	.reg .f32 	%f<1178>;
	.reg .b32 	%r<445>;
	.reg .b64 	%rd<292>;


	mov.u64 	%rd291, __local_depot0;
	cvta.local.u64 	%SP, %rd291;
	ld.global.v2.u32 	{%r114, %r115}, [pixelID];
	cvt.u64.u32	%rd26, %r114;
	cvt.u64.u32	%rd27, %r115;
	mov.u64 	%rd30, uvnormal;
	cvta.global.u64 	%rd25, %rd30;
	mov.u32 	%r112, 2;
	mov.u32 	%r113, 4;
	mov.u64 	%rd29, 0;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r112, %r113, %rd26, %rd27, %rd29, %rd29);
	// inline asm
	ld.u32 	%r1, [%rd24];
	shr.u32 	%r118, %r1, 16;
	cvt.u16.u32	%rs1, %r118;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r1;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p7, %rs8, 0;
	mov.f32 	%f1094, 0f00000000;
	mov.f32 	%f1095, %f1094;
	mov.f32 	%f1096, %f1094;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs9, [%rd24+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f253, %rs11;
	div.rn.f32 	%f254, %f253, 0f437F0000;
	fma.rn.f32 	%f255, %f254, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f256, %rs9;
	div.rn.f32 	%f257, %f256, 0f437F0000;
	fma.rn.f32 	%f258, %f257, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f259, %rs6;
	div.rn.f32 	%f260, %f259, 0f437F0000;
	fma.rn.f32 	%f261, %f260, 0f40000000, 0fBF800000;
	mul.f32 	%f262, %f258, %f258;
	fma.rn.f32 	%f263, %f255, %f255, %f262;
	fma.rn.f32 	%f264, %f261, %f261, %f263;
	sqrt.rn.f32 	%f265, %f264;
	rcp.rn.f32 	%f266, %f265;
	mul.f32 	%f1094, %f255, %f266;
	mul.f32 	%f1095, %f258, %f266;
	mul.f32 	%f1096, %f261, %f266;

BB0_2:
	ld.global.v2.u32 	{%r119, %r120}, [pixelID];
	ld.global.v2.u32 	{%r122, %r123}, [tileInfo];
	add.s32 	%r2, %r119, %r122;
	add.s32 	%r3, %r120, %r123;
	setp.eq.f32	%p8, %f1095, 0f00000000;
	setp.eq.f32	%p9, %f1094, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f1096, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_146;
	bra.uni 	BB0_3;

BB0_146:
	ld.global.u32 	%r444, [imageEnabled];
	and.b32  	%r359, %r444, 1;
	setp.eq.b32	%p149, %r359, 1;
	@!%p149 bra 	BB0_148;
	bra.uni 	BB0_147;

BB0_147:
	cvt.u64.u32	%rd193, %r2;
	cvt.u64.u32	%rd194, %r3;
	mov.u64 	%rd197, image;
	cvta.global.u64 	%rd192, %rd197;
	mov.u64 	%rd196, 0;
	// inline asm
	call (%rd191), _rt_buffer_get_64, (%rd192, %r112, %r113, %rd193, %rd194, %rd196, %rd196);
	// inline asm
	mov.u16 	%rs102, 0;
	st.v4.u8 	[%rd191], {%rs102, %rs102, %rs102, %rs102};
	ld.global.u32 	%r444, [imageEnabled];

BB0_148:
	and.b32  	%r362, %r444, 8;
	setp.eq.s32	%p150, %r362, 0;
	@%p150 bra 	BB0_150;

	cvt.u64.u32	%rd201, %r3;
	cvt.u64.u32	%rd200, %r2;
	mov.u64 	%rd204, image_Mask;
	cvta.global.u64 	%rd199, %rd204;
	mov.u64 	%rd203, 0;
	// inline asm
	call (%rd198), _rt_buffer_get_64, (%rd199, %r112, %r112, %rd200, %rd201, %rd203, %rd203);
	// inline asm
	mov.f32 	%f1056, 0f00000000;
	cvt.rzi.u32.f32	%r365, %f1056;
	cvt.u16.u32	%rs103, %r365;
	mov.u16 	%rs104, 0;
	st.v2.u8 	[%rd198], {%rs103, %rs104};
	ld.global.u32 	%r444, [imageEnabled];

BB0_150:
	cvt.u64.u32	%rd22, %r2;
	cvt.u64.u32	%rd23, %r3;
	and.b32  	%r366, %r444, 4;
	setp.eq.s32	%p151, %r366, 0;
	@%p151 bra 	BB0_154;

	ld.global.u32 	%r367, [additive];
	setp.eq.s32	%p152, %r367, 0;
	@%p152 bra 	BB0_153;

	mov.u64 	%rd217, image_HDR;
	cvta.global.u64 	%rd206, %rd217;
	mov.u32 	%r371, 8;
	mov.u64 	%rd216, 0;
	// inline asm
	call (%rd205), _rt_buffer_get_64, (%rd206, %r112, %r371, %rd22, %rd23, %rd216, %rd216);
	// inline asm
	ld.v4.u16 	{%rs111, %rs112, %rs113, %rs114}, [%rd205];
	// inline asm
	{  cvt.f32.f16 %f1057, %rs111;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1058, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1059, %rs113;}

	// inline asm
	// inline asm
	call (%rd211), _rt_buffer_get_64, (%rd206, %r112, %r371, %rd22, %rd23, %rd216, %rd216);
	// inline asm
	add.f32 	%f1060, %f1057, 0f00000000;
	add.f32 	%f1061, %f1058, 0f00000000;
	add.f32 	%f1062, %f1059, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1062;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1061;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f1060;}

	// inline asm
	mov.u16 	%rs115, 0;
	st.v4.u16 	[%rd211], {%rs108, %rs109, %rs110, %rs115};
	bra.uni 	BB0_154;

BB0_3:
	ld.global.v2.u32 	{%r131, %r132}, [pixelID];
	cvt.u64.u32	%rd33, %r131;
	cvt.u64.u32	%rd34, %r132;
	mov.u64 	%rd43, uvpos;
	cvta.global.u64 	%rd32, %rd43;
	mov.u32 	%r128, 12;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r112, %r128, %rd33, %rd34, %rd29, %rd29);
	// inline asm
	ld.f32 	%f9, [%rd31+8];
	ld.f32 	%f8, [%rd31+4];
	ld.f32 	%f7, [%rd31];
	mul.f32 	%f270, %f7, 0f3456BF95;
	mul.f32 	%f271, %f8, 0f3456BF95;
	mul.f32 	%f272, %f9, 0f3456BF95;
	abs.f32 	%f10, %f1094;
	div.rn.f32 	%f273, %f270, %f10;
	abs.f32 	%f274, %f1095;
	div.rn.f32 	%f275, %f271, %f274;
	abs.f32 	%f11, %f1096;
	div.rn.f32 	%f276, %f272, %f11;
	abs.f32 	%f277, %f273;
	abs.f32 	%f278, %f275;
	abs.f32 	%f279, %f276;
	mov.f32 	%f280, 0f38D1B717;
	max.f32 	%f281, %f277, %f280;
	max.f32 	%f282, %f278, %f280;
	max.f32 	%f283, %f279, %f280;
	fma.rn.f32 	%f12, %f1094, %f281, %f7;
	fma.rn.f32 	%f13, %f1095, %f282, %f8;
	fma.rn.f32 	%f14, %f1096, %f283, %f9;
	ld.global.v2.u32 	{%r135, %r136}, [pixelID];
	cvt.u64.u32	%rd39, %r135;
	cvt.u64.u32	%rd40, %r136;
	mov.u64 	%rd44, uvtangent;
	cvta.global.u64 	%rd38, %rd44;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r112, %r113, %rd39, %rd40, %rd29, %rd29);
	// inline asm
	ld.u32 	%r4, [%rd37];
	shr.u32 	%r5, %r4, 16;
	cvt.u16.u32	%rs13, %r5;
	and.b16  	%rs14, %rs13, 255;
	cvt.u16.u32	%rs15, %r4;
	or.b16  	%rs16, %rs15, %rs14;
	setp.eq.s16	%p13, %rs16, 0;
	mov.f32 	%f50, 0f00000000;
	mov.f32 	%f1097, %f50;
	mov.f32 	%f1098, %f50;
	mov.f32 	%f1099, %f50;
	@%p13 bra 	BB0_5;

	ld.u8 	%rs17, [%rd37+1];
	and.b16  	%rs19, %rs15, 255;
	cvt.rn.f32.u16	%f284, %rs19;
	div.rn.f32 	%f285, %f284, 0f437F0000;
	fma.rn.f32 	%f286, %f285, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f287, %rs17;
	div.rn.f32 	%f288, %f287, 0f437F0000;
	fma.rn.f32 	%f289, %f288, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f290, %rs14;
	div.rn.f32 	%f291, %f290, 0f437F0000;
	fma.rn.f32 	%f292, %f291, 0f40000000, 0fBF800000;
	mul.f32 	%f293, %f289, %f289;
	fma.rn.f32 	%f294, %f286, %f286, %f293;
	fma.rn.f32 	%f295, %f292, %f292, %f294;
	sqrt.rn.f32 	%f296, %f295;
	rcp.rn.f32 	%f297, %f296;
	mul.f32 	%f1097, %f286, %f297;
	mul.f32 	%f1098, %f289, %f297;
	mul.f32 	%f1099, %f292, %f297;

BB0_5:
	mul.f32 	%f301, %f1096, %f1098;
	mul.f32 	%f302, %f1095, %f1099;
	sub.f32 	%f303, %f302, %f301;
	mul.f32 	%f304, %f1094, %f1099;
	mul.f32 	%f305, %f1096, %f1097;
	sub.f32 	%f306, %f305, %f304;
	mul.f32 	%f307, %f1095, %f1097;
	mul.f32 	%f308, %f1094, %f1098;
	sub.f32 	%f309, %f308, %f307;
	setp.lt.u32	%p14, %r4, 16777216;
	selp.f32	%f310, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f311, %f303, %f310;
	mul.f32 	%f312, %f306, %f310;
	mul.f32 	%f313, %f309, %f310;
	mul.f32 	%f314, %f311, 0f00000000;
	mul.f32 	%f315, %f312, 0f00000000;
	mul.f32 	%f316, %f313, 0f00000000;
	fma.rn.f32 	%f317, %f1097, 0f3F5105EC, %f314;
	fma.rn.f32 	%f318, %f1098, 0f3F5105EC, %f315;
	fma.rn.f32 	%f319, %f1099, 0f3F5105EC, %f316;
	mul.f32 	%f21, %f1094, 0f3F13CD3A;
	add.f32 	%f22, %f21, %f317;
	mul.f32 	%f23, %f1095, 0f3F13CD3A;
	add.f32 	%f24, %f23, %f318;
	mul.f32 	%f25, %f1096, 0f3F13CD3A;
	add.f32 	%f26, %f25, %f319;
	ld.global.v2.u32 	{%r141, %r142}, [pixelID];
	cvt.u64.u32	%rd47, %r141;
	cvt.u64.u32	%rd48, %r142;
	// inline asm
	call (%rd45), _rt_buffer_get_64, (%rd38, %r112, %r113, %rd47, %rd48, %rd29, %rd29);
	// inline asm
	ld.u32 	%r6, [%rd45];
	shr.u32 	%r7, %r6, 16;
	cvt.u16.u32	%rs22, %r7;
	and.b16  	%rs23, %rs22, 255;
	cvt.u16.u32	%rs24, %r6;
	or.b16  	%rs25, %rs24, %rs23;
	setp.eq.s16	%p15, %rs25, 0;
	mov.f32 	%f1100, %f50;
	mov.f32 	%f1101, %f50;
	mov.f32 	%f1102, %f50;
	@%p15 bra 	BB0_7;

	ld.u8 	%rs26, [%rd45+1];
	and.b16  	%rs28, %rs24, 255;
	cvt.rn.f32.u16	%f320, %rs28;
	div.rn.f32 	%f321, %f320, 0f437F0000;
	fma.rn.f32 	%f322, %f321, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f323, %rs26;
	div.rn.f32 	%f324, %f323, 0f437F0000;
	fma.rn.f32 	%f325, %f324, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f326, %rs23;
	div.rn.f32 	%f327, %f326, 0f437F0000;
	fma.rn.f32 	%f328, %f327, 0f40000000, 0fBF800000;
	mul.f32 	%f329, %f325, %f325;
	fma.rn.f32 	%f330, %f322, %f322, %f329;
	fma.rn.f32 	%f331, %f328, %f328, %f330;
	sqrt.rn.f32 	%f332, %f331;
	rcp.rn.f32 	%f333, %f332;
	mul.f32 	%f1100, %f322, %f333;
	mul.f32 	%f1101, %f325, %f333;
	mul.f32 	%f1102, %f328, %f333;

BB0_7:
	mul.f32 	%f337, %f1096, %f1101;
	mul.f32 	%f338, %f1095, %f1102;
	sub.f32 	%f339, %f338, %f337;
	mul.f32 	%f340, %f1094, %f1102;
	mul.f32 	%f341, %f1096, %f1100;
	sub.f32 	%f342, %f341, %f340;
	mul.f32 	%f343, %f1095, %f1100;
	mul.f32 	%f344, %f1094, %f1101;
	sub.f32 	%f345, %f344, %f343;
	setp.lt.u32	%p16, %r6, 16777216;
	selp.f32	%f346, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f347, %f339, %f346;
	mul.f32 	%f348, %f342, %f346;
	mul.f32 	%f349, %f345, %f346;
	mul.f32 	%f350, %f347, 0f3F3504F3;
	mul.f32 	%f351, %f348, 0f3F3504F3;
	mul.f32 	%f352, %f349, 0f3F3504F3;
	fma.rn.f32 	%f353, %f1100, 0fBED105EC, %f350;
	fma.rn.f32 	%f354, %f1101, 0fBED105EC, %f351;
	fma.rn.f32 	%f355, %f1102, 0fBED105EC, %f352;
	add.f32 	%f33, %f21, %f353;
	add.f32 	%f34, %f23, %f354;
	add.f32 	%f35, %f25, %f355;
	ld.global.v2.u32 	{%r147, %r148}, [pixelID];
	cvt.u64.u32	%rd54, %r147;
	cvt.u64.u32	%rd55, %r148;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd38, %r112, %r113, %rd54, %rd55, %rd29, %rd29);
	// inline asm
	ld.u32 	%r8, [%rd52];
	shr.u32 	%r9, %r8, 16;
	cvt.u16.u32	%rs31, %r9;
	and.b16  	%rs32, %rs31, 255;
	cvt.u16.u32	%rs33, %r8;
	or.b16  	%rs34, %rs33, %rs32;
	setp.eq.s16	%p17, %rs34, 0;
	mov.f32 	%f1103, %f50;
	mov.f32 	%f1104, %f50;
	mov.f32 	%f1105, %f50;
	@%p17 bra 	BB0_9;

	ld.u8 	%rs35, [%rd52+1];
	and.b16  	%rs37, %rs33, 255;
	cvt.rn.f32.u16	%f356, %rs37;
	div.rn.f32 	%f357, %f356, 0f437F0000;
	fma.rn.f32 	%f358, %f357, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f359, %rs35;
	div.rn.f32 	%f360, %f359, 0f437F0000;
	fma.rn.f32 	%f361, %f360, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f362, %rs32;
	div.rn.f32 	%f363, %f362, 0f437F0000;
	fma.rn.f32 	%f364, %f363, 0f40000000, 0fBF800000;
	mul.f32 	%f365, %f361, %f361;
	fma.rn.f32 	%f366, %f358, %f358, %f365;
	fma.rn.f32 	%f367, %f364, %f364, %f366;
	sqrt.rn.f32 	%f368, %f367;
	rcp.rn.f32 	%f369, %f368;
	mul.f32 	%f1103, %f358, %f369;
	mul.f32 	%f1104, %f361, %f369;
	mul.f32 	%f1105, %f364, %f369;

BB0_9:
	mul.f32 	%f375, %f1096, %f1104;
	mul.f32 	%f376, %f1095, %f1105;
	sub.f32 	%f377, %f376, %f375;
	mul.f32 	%f378, %f1094, %f1105;
	mul.f32 	%f379, %f1096, %f1103;
	sub.f32 	%f380, %f379, %f378;
	mul.f32 	%f381, %f1095, %f1103;
	mul.f32 	%f382, %f1094, %f1104;
	sub.f32 	%f383, %f382, %f381;
	setp.lt.u32	%p19, %r8, 16777216;
	selp.f32	%f384, 0fBF800000, 0f3F800000, %p19;
	mul.f32 	%f385, %f377, %f384;
	mul.f32 	%f386, %f380, %f384;
	mul.f32 	%f387, %f383, %f384;
	mul.f32 	%f388, %f385, 0fBF3504F3;
	mul.f32 	%f389, %f386, 0fBF3504F3;
	mul.f32 	%f390, %f387, 0fBF3504F3;
	fma.rn.f32 	%f391, %f1103, 0fBED105EC, %f388;
	fma.rn.f32 	%f392, %f1104, 0fBED105EC, %f389;
	fma.rn.f32 	%f393, %f1105, 0fBED105EC, %f390;
	add.f32 	%f42, %f21, %f391;
	add.f32 	%f43, %f23, %f392;
	add.f32 	%f44, %f25, %f393;
	ld.global.v2.u32 	{%r154, %r155}, [pixelID];
	cvt.u64.u32	%rd61, %r154;
	cvt.u64.u32	%rd62, %r155;
	mov.u64 	%rd65, rnd_seeds;
	cvta.global.u64 	%rd60, %rd65;
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd60, %r112, %r113, %rd61, %rd62, %rd29, %rd29);
	// inline asm
	ld.u32 	%r158, [%rd59];
	mad.lo.s32 	%r10, %r158, 1664525, 1013904223;
	ld.global.u32 	%r159, [lightMeshBufferSize];
	setp.eq.s32	%p20, %r159, 0;
	mov.pred 	%p18, 0;
	mov.u32 	%r12, 0;
	@%p20 bra 	BB0_10;

	ld.global.f32 	%f45, [lightPointSize];
	mul.f32 	%f46, %f12, 0f3456BF95;
	mul.f32 	%f47, %f13, 0f3456BF95;
	mul.f32 	%f48, %f14, 0f3456BF95;
	and.b32  	%r162, %r10, 16777215;
	cvt.rn.f32.u32	%f399, %r162;
	mul.f32 	%f400, %f399, 0fB3800000;
	fma.rn.f32 	%f49, %f400, 0f3F333333, 0f3F800000;
	mov.f32 	%f50, 0f00000000;
	mov.u32 	%r409, 0;
	abs.f32 	%f522, %f47;
	abs.f32 	%f523, %f46;
	max.f32 	%f524, %f523, %f522;
	abs.f32 	%f525, %f48;
	max.f32 	%f526, %f524, %f525;
	mov.u32 	%r12, %r409;
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;

BB0_12:
	shl.b32 	%r13, %r409, 1;
	cvt.s64.s32	%rd68, %r13;
	mov.u64 	%rd72, lightMeshBuffer;
	cvta.global.u64 	%rd67, %rd72;
	mov.u32 	%r163, 1;
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd67, %r163, %r128, %rd68, %rd29, %rd29, %rd29);
	// inline asm
	ld.f32 	%f401, [%rd66];
	sub.f32 	%f402, %f401, %f7;
	ld.f32 	%f403, [%rd66+4];
	sub.f32 	%f404, %f403, %f8;
	ld.f32 	%f405, [%rd66+8];
	sub.f32 	%f406, %f405, %f9;
	mul.f32 	%f407, %f404, %f404;
	fma.rn.f32 	%f408, %f402, %f402, %f407;
	fma.rn.f32 	%f409, %f406, %f406, %f408;
	sqrt.rn.f32 	%f55, %f409;
	rcp.rn.f32 	%f410, %f55;
	mul.f32 	%f56, %f402, %f410;
	mul.f32 	%f57, %f404, %f410;
	mul.f32 	%f58, %f406, %f410;
	mul.f32 	%f411, %f1095, %f57;
	fma.rn.f32 	%f412, %f1094, %f56, %f411;
	fma.rn.f32 	%f59, %f1096, %f58, %f412;
	setp.leu.f32	%p21, %f59, 0f00000000;
	@%p21 bra 	BB0_28;

	mul.f32 	%f413, %f55, %f55;
	mul.f32 	%f414, %f413, 0f40C90FDB;
	div.rn.f32 	%f415, %f45, %f414;
	add.f32 	%f60, %f415, %f415;
	setp.gt.f32	%p23, %f60, %f49;
	ld.global.u32 	%r165, [samples];
	setp.ne.s32	%p24, %r165, 0;
	and.pred  	%p25, %p24, %p23;
	mov.pred 	%p156, -1;
	@%p25 bra 	BB0_30;

	ld.global.f32 	%f418, [lightInvCutoff];
	mul.f32 	%f61, %f55, %f418;
	mov.f32 	%f422, 0f40800000;
	abs.f32 	%f63, %f61;
	setp.lt.f32	%p26, %f63, 0f00800000;
	mul.f32 	%f424, %f63, 0f4B800000;
	selp.f32	%f425, 0fC3170000, 0fC2FE0000, %p26;
	selp.f32	%f426, %f424, %f63, %p26;
	mov.b32 	 %r166, %f426;
	and.b32  	%r167, %r166, 8388607;
	or.b32  	%r168, %r167, 1065353216;
	mov.b32 	 %f427, %r168;
	shr.u32 	%r169, %r166, 23;
	cvt.rn.f32.u32	%f428, %r169;
	add.f32 	%f429, %f425, %f428;
	setp.gt.f32	%p27, %f427, 0f3FB504F3;
	mul.f32 	%f430, %f427, 0f3F000000;
	add.f32 	%f431, %f429, 0f3F800000;
	selp.f32	%f432, %f430, %f427, %p27;
	selp.f32	%f433, %f431, %f429, %p27;
	add.f32 	%f434, %f432, 0fBF800000;
	add.f32 	%f417, %f432, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f416,%f417;
	// inline asm
	add.f32 	%f435, %f434, %f434;
	mul.f32 	%f436, %f416, %f435;
	mul.f32 	%f437, %f436, %f436;
	mov.f32 	%f438, 0f3C4CAF63;
	mov.f32 	%f439, 0f3B18F0FE;
	fma.rn.f32 	%f440, %f439, %f437, %f438;
	mov.f32 	%f441, 0f3DAAAABD;
	fma.rn.f32 	%f442, %f440, %f437, %f441;
	mul.rn.f32 	%f443, %f442, %f437;
	mul.rn.f32 	%f444, %f443, %f436;
	sub.f32 	%f445, %f434, %f436;
	neg.f32 	%f446, %f436;
	add.f32 	%f447, %f445, %f445;
	fma.rn.f32 	%f448, %f446, %f434, %f447;
	mul.rn.f32 	%f449, %f416, %f448;
	add.f32 	%f450, %f444, %f436;
	sub.f32 	%f451, %f436, %f450;
	add.f32 	%f452, %f444, %f451;
	add.f32 	%f453, %f449, %f452;
	add.f32 	%f454, %f450, %f453;
	sub.f32 	%f455, %f450, %f454;
	add.f32 	%f456, %f453, %f455;
	mov.f32 	%f457, 0f3F317200;
	mul.rn.f32 	%f458, %f433, %f457;
	mov.f32 	%f459, 0f35BFBE8E;
	mul.rn.f32 	%f460, %f433, %f459;
	add.f32 	%f461, %f458, %f454;
	sub.f32 	%f462, %f458, %f461;
	add.f32 	%f463, %f454, %f462;
	add.f32 	%f464, %f456, %f463;
	add.f32 	%f465, %f460, %f464;
	add.f32 	%f466, %f461, %f465;
	sub.f32 	%f467, %f461, %f466;
	add.f32 	%f468, %f465, %f467;
	mul.rn.f32 	%f469, %f422, %f466;
	neg.f32 	%f470, %f469;
	fma.rn.f32 	%f471, %f422, %f466, %f470;
	fma.rn.f32 	%f472, %f422, %f468, %f471;
	mov.f32 	%f473, 0f00000000;
	fma.rn.f32 	%f474, %f473, %f466, %f472;
	add.rn.f32 	%f475, %f469, %f474;
	neg.f32 	%f476, %f475;
	add.rn.f32 	%f477, %f469, %f476;
	add.rn.f32 	%f478, %f477, %f474;
	mov.b32 	 %r170, %f475;
	setp.eq.s32	%p28, %r170, 1118925336;
	add.s32 	%r171, %r170, -1;
	mov.b32 	 %f479, %r171;
	add.f32 	%f480, %f478, 0f37000000;
	selp.f32	%f481, %f479, %f475, %p28;
	selp.f32	%f64, %f480, %f478, %p28;
	mul.f32 	%f482, %f481, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f483, %f482;
	mov.f32 	%f484, 0fBF317200;
	fma.rn.f32 	%f485, %f483, %f484, %f481;
	mov.f32 	%f486, 0fB5BFBE8E;
	fma.rn.f32 	%f487, %f483, %f486, %f485;
	mul.f32 	%f488, %f487, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f489, %f488;
	add.f32 	%f490, %f483, 0f00000000;
	ex2.approx.f32 	%f491, %f490;
	mul.f32 	%f492, %f489, %f491;
	setp.lt.f32	%p29, %f481, 0fC2D20000;
	selp.f32	%f493, 0f00000000, %f492, %p29;
	setp.gt.f32	%p30, %f481, 0f42D20000;
	selp.f32	%f1111, 0f7F800000, %f493, %p30;
	setp.eq.f32	%p31, %f1111, 0f7F800000;
	@%p31 bra 	BB0_16;

	fma.rn.f32 	%f1111, %f1111, %f64, %f1111;

BB0_16:
	mov.f32 	%f1090, 0f40000000;
	cvt.rzi.f32.f32	%f1089, %f1090;
	add.f32 	%f1088, %f1089, %f1089;
	mov.f32 	%f1087, 0f40800000;
	sub.f32 	%f1086, %f1087, %f1088;
	abs.f32 	%f1085, %f1086;
	setp.lt.f32	%p32, %f61, 0f00000000;
	setp.eq.f32	%p33, %f1085, 0f3F800000;
	and.pred  	%p1, %p32, %p33;
	mov.b32 	 %r172, %f1111;
	xor.b32  	%r173, %r172, -2147483648;
	mov.b32 	 %f494, %r173;
	selp.f32	%f1113, %f494, %f1111, %p1;
	setp.eq.f32	%p34, %f61, 0f00000000;
	@%p34 bra 	BB0_19;
	bra.uni 	BB0_17;

BB0_19:
	add.f32 	%f497, %f61, %f61;
	selp.f32	%f1113, %f497, 0f00000000, %p33;
	bra.uni 	BB0_20;

BB0_17:
	setp.geu.f32	%p35, %f61, 0f00000000;
	@%p35 bra 	BB0_20;

	mov.f32 	%f1093, 0f40800000;
	cvt.rzi.f32.f32	%f496, %f1093;
	setp.neu.f32	%p36, %f496, 0f40800000;
	selp.f32	%f1113, 0f7FFFFFFF, %f1113, %p36;

BB0_20:
	add.f32 	%f498, %f63, 0f40800000;
	mov.b32 	 %r174, %f498;
	setp.lt.s32	%p38, %r174, 2139095040;
	@%p38 bra 	BB0_25;

	setp.gtu.f32	%p39, %f63, 0f7F800000;
	@%p39 bra 	BB0_24;
	bra.uni 	BB0_22;

BB0_24:
	add.f32 	%f1113, %f61, 0f40800000;
	bra.uni 	BB0_25;

BB0_22:
	setp.neu.f32	%p40, %f63, 0f7F800000;
	@%p40 bra 	BB0_25;

	selp.f32	%f1113, 0fFF800000, 0f7F800000, %p1;

BB0_25:
	mov.u32 	%r396, 1;
	mov.u64 	%rd286, lightMeshBuffer;
	cvta.global.u64 	%rd285, %rd286;
	shl.b32 	%r395, %r409, 1;
	mov.f32 	%f499, 0f3F800000;
	sub.f32 	%f500, %f499, %f1113;
	setp.eq.f32	%p41, %f61, 0f3F800000;
	selp.f32	%f501, 0f00000000, %f500, %p41;
	cvt.sat.f32.f32	%f502, %f501;
	mul.f32 	%f503, %f60, %f502;
	add.s32 	%r177, %r395, 1;
	cvt.s64.s32	%rd75, %r177;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd285, %r396, %r128, %rd75, %rd29, %rd29, %rd29);
	// inline asm
	ld.f32 	%f504, [%rd73];
	mul.f32 	%f505, %f56, %f504;
	ld.f32 	%f506, [%rd73+4];
	mul.f32 	%f507, %f57, %f506;
	neg.f32 	%f508, %f507;
	sub.f32 	%f509, %f508, %f505;
	ld.f32 	%f510, [%rd73+8];
	mul.f32 	%f511, %f58, %f510;
	sub.f32 	%f512, %f509, %f511;
	cvt.sat.f32.f32	%f513, %f512;
	mul.f32 	%f75, %f503, %f513;
	setp.leu.f32	%p42, %f75, 0f3727C5AC;
	@%p42 bra 	BB0_27;

	mov.u32 	%r408, 1;
	add.u64 	%rd80, %SP, 4;
	cvta.to.local.u64 	%rd81, %rd80;
	max.f32 	%f520, %f526, %f280;
	sub.f32 	%f521, %f55, %f520;
	mov.u32 	%r181, 1065353216;
	st.local.u32 	[%rd81], %r181;
	ld.global.u32 	%r178, [root];
	// inline asm
	call _rt_trace_64, (%r178, %f12, %f13, %f14, %f56, %f57, %f58, %r408, %f520, %f521, %rd80, %r113);
	// inline asm
	ld.local.f32 	%f528, [%rd81];
	mul.f32 	%f529, %f75, %f528;
	cvt.sat.f32.f32	%f530, %f59;
	fma.rn.f32 	%f54, %f530, %f529, %f54;
	mul.f32 	%f531, %f24, %f57;
	fma.rn.f32 	%f532, %f22, %f56, %f531;
	fma.rn.f32 	%f533, %f26, %f58, %f532;
	cvt.sat.f32.f32	%f534, %f533;
	fma.rn.f32 	%f53, %f534, %f529, %f53;
	mul.f32 	%f535, %f34, %f57;
	fma.rn.f32 	%f536, %f33, %f56, %f535;
	fma.rn.f32 	%f537, %f35, %f58, %f536;
	cvt.sat.f32.f32	%f538, %f537;
	fma.rn.f32 	%f52, %f529, %f538, %f52;
	mul.f32 	%f539, %f43, %f57;
	fma.rn.f32 	%f540, %f42, %f56, %f539;
	fma.rn.f32 	%f541, %f44, %f58, %f540;
	cvt.sat.f32.f32	%f542, %f541;
	fma.rn.f32 	%f51, %f529, %f542, %f51;
	add.f32 	%f50, %f50, %f528;

BB0_27:
	add.s32 	%r12, %r12, 1;

BB0_28:
	ld.global.u32 	%r182, [lightMeshBufferSize];
	add.s32 	%r409, %r409, 1;
	setp.lt.u32	%p44, %r409, %r182;
	@%p44 bra 	BB0_12;
	bra.uni 	BB0_29;

BB0_10:
	mov.f32 	%f51, %f50;
	mov.f32 	%f52, %f50;
	mov.f32 	%f53, %f50;
	mov.f32 	%f54, %f50;

BB0_29:
	mov.pred 	%p156, %p18;

BB0_30:
	cvt.rn.f32.s32	%f543, %r12;
	mov.f32 	%f544, 0f3F800000;
	max.f32 	%f545, %f543, %f544;
	div.rn.f32 	%f1161, %f54, %f545;
	div.rn.f32 	%f1165, %f50, %f545;
	div.rn.f32 	%f1162, %f53, %f545;
	div.rn.f32 	%f1163, %f52, %f545;
	div.rn.f32 	%f1164, %f51, %f545;
	@!%p156 bra 	BB0_85;
	bra.uni 	BB0_31;

BB0_31:
	abs.f32 	%f1092, %f1096;
	abs.f32 	%f1091, %f1094;
	setp.gt.f32	%p45, %f1091, %f1092;
	neg.f32 	%f551, %f1095;
	selp.f32	%f552, %f551, 0f00000000, %p45;
	neg.f32 	%f553, %f1096;
	selp.f32	%f554, %f1094, %f553, %p45;
	selp.f32	%f555, 0f00000000, %f1095, %p45;
	mul.f32 	%f556, %f554, %f554;
	fma.rn.f32 	%f557, %f552, %f552, %f556;
	fma.rn.f32 	%f558, %f555, %f555, %f557;
	sqrt.rn.f32 	%f559, %f558;
	rcp.rn.f32 	%f560, %f559;
	mul.f32 	%f101, %f552, %f560;
	mul.f32 	%f102, %f554, %f560;
	mul.f32 	%f103, %f555, %f560;
	ld.global.u32 	%r413, [samples];
	mov.f32 	%f1151, 0f00000000;
	setp.lt.s32	%p46, %r413, 1;
	@%p46 bra 	BB0_32;

	mad.lo.s32 	%r439, %r158, 1664525, 1013904223;
	cvt.rn.f32.s32	%f566, %r413;
	rcp.rn.f32 	%f104, %f566;
	add.u64 	%rd82, %SP, 8;
	cvta.to.local.u64 	%rd5, %rd82;
	mul.f32 	%f105, %f12, 0f3456BF95;
	mul.f32 	%f106, %f13, 0f3456BF95;
	mul.f32 	%f107, %f14, 0f3456BF95;
	mul.f32 	%f567, %f1094, %f102;
	mul.f32 	%f568, %f1095, %f101;
	sub.f32 	%f108, %f568, %f567;
	mul.f32 	%f569, %f1096, %f101;
	mul.f32 	%f570, %f1094, %f103;
	sub.f32 	%f109, %f570, %f569;
	mul.f32 	%f571, %f1095, %f103;
	mul.f32 	%f572, %f1096, %f102;
	sub.f32 	%f110, %f572, %f571;
	mov.f32 	%f1151, 0f00000000;
	mov.u32 	%r414, 0;
	abs.f32 	%f573, %f106;
	abs.f32 	%f574, %f105;
	max.f32 	%f575, %f574, %f573;
	abs.f32 	%f576, %f107;
	max.f32 	%f577, %f575, %f576;
	mov.f32 	%f1152, %f1151;
	mov.f32 	%f1153, %f1151;
	mov.f32 	%f1154, %f1151;
	mov.f32 	%f1155, %f1151;

BB0_34:
	setp.lt.s32	%p47, %r413, 1;
	@%p47 bra 	BB0_83;

	cvt.rn.f32.s32	%f116, %r414;
	max.f32 	%f117, %f577, %f280;
	add.u64 	%rd83, %SP, 0;
	cvta.to.local.u64 	%rd6, %rd83;
	mov.u32 	%r416, 0;

BB0_36:
	mad.lo.s32 	%r185, %r439, 1664525, 1013904223;
	and.b32  	%r186, %r185, 16777215;
	cvt.rn.f32.u32	%f579, %r186;
	fma.rn.f32 	%f580, %f579, 0f33800000, %f116;
	mul.f32 	%f123, %f104, %f580;
	mad.lo.s32 	%r439, %r185, 1664525, 1013904223;
	and.b32  	%r187, %r439, 16777215;
	cvt.rn.f32.u32	%f581, %r187;
	cvt.rn.f32.s32	%f582, %r416;
	fma.rn.f32 	%f583, %f581, 0f33800000, %f582;
	mul.f32 	%f584, %f104, %f583;
	mul.f32 	%f585, %f123, %f123;
	sub.f32 	%f587, %f544, %f585;
	mov.f32 	%f588, 0f00000000;
	max.f32 	%f589, %f588, %f587;
	sqrt.rn.f32 	%f124, %f589;
	mul.f32 	%f1145, %f584, 0f40C90FDB;
	abs.f32 	%f126, %f1145;
	setp.neu.f32	%p48, %f126, 0f7F800000;
	mov.f32 	%f1139, %f1145;
	@%p48 bra 	BB0_38;

	mul.rn.f32 	%f1139, %f1145, %f588;

BB0_38:
	mul.f32 	%f591, %f1139, 0f3F22F983;
	cvt.rni.s32.f32	%r427, %f591;
	cvt.rn.f32.s32	%f592, %r427;
	neg.f32 	%f593, %f592;
	mov.f32 	%f594, 0f3FC90FDA;
	fma.rn.f32 	%f595, %f593, %f594, %f1139;
	mov.f32 	%f596, 0f33A22168;
	fma.rn.f32 	%f597, %f593, %f596, %f595;
	mov.f32 	%f598, 0f27C234C5;
	fma.rn.f32 	%f1140, %f593, %f598, %f597;
	abs.f32 	%f599, %f1139;
	setp.leu.f32	%p49, %f599, 0f47CE4780;
	@%p49 bra 	BB0_49;

	mov.b32 	 %r26, %f1139;
	shr.u32 	%r27, %r26, 23;
	shl.b32 	%r190, %r26, 8;
	or.b32  	%r28, %r190, -2147483648;
	mov.u32 	%r418, 0;
	mov.u64 	%rd288, 0;
	mov.u64 	%rd287, %rd5;
	mov.u32 	%r419, %r418;

BB0_40:
	.pragma "nounroll";
	shl.b64 	%rd85, %rd288, 2;
	mov.u64 	%rd86, __cudart_i2opi_f;
	add.s64 	%rd87, %rd86, %rd85;
	ld.const.u32 	%r193, [%rd87];
	// inline asm
	{
	mad.lo.cc.u32   %r191, %r193, %r28, %r419;
	madc.hi.u32     %r419, %r193, %r28,  0;
	}
	// inline asm
	st.local.u32 	[%rd287], %r191;
	add.s32 	%r418, %r418, 1;
	cvt.s64.s32	%rd288, %r418;
	mul.wide.s32 	%rd88, %r418, 4;
	add.s64 	%rd287, %rd5, %rd88;
	setp.ne.s32	%p50, %r418, 6;
	@%p50 bra 	BB0_40;

	and.b32  	%r196, %r27, 255;
	add.s32 	%r197, %r196, -128;
	shr.u32 	%r198, %r197, 5;
	and.b32  	%r33, %r26, -2147483648;
	st.local.u32 	[%rd5+24], %r419;
	mov.u32 	%r199, 6;
	sub.s32 	%r200, %r199, %r198;
	mul.wide.s32 	%rd89, %r200, 4;
	add.s64 	%rd12, %rd5, %rd89;
	ld.local.u32 	%r420, [%rd12];
	ld.local.u32 	%r421, [%rd12+-4];
	and.b32  	%r36, %r27, 31;
	setp.eq.s32	%p51, %r36, 0;
	@%p51 bra 	BB0_43;

	mov.u32 	%r201, 32;
	sub.s32 	%r202, %r201, %r36;
	shr.u32 	%r203, %r421, %r202;
	shl.b32 	%r204, %r420, %r36;
	add.s32 	%r420, %r203, %r204;
	ld.local.u32 	%r205, [%rd12+-8];
	shr.u32 	%r206, %r205, %r202;
	shl.b32 	%r207, %r421, %r36;
	add.s32 	%r421, %r206, %r207;

BB0_43:
	shr.u32 	%r208, %r421, 30;
	shl.b32 	%r209, %r420, 2;
	add.s32 	%r422, %r208, %r209;
	shl.b32 	%r42, %r421, 2;
	shr.u32 	%r210, %r422, 31;
	shr.u32 	%r211, %r420, 30;
	add.s32 	%r43, %r210, %r211;
	setp.eq.s32	%p52, %r210, 0;
	@%p52 bra 	BB0_44;
	bra.uni 	BB0_45;

BB0_44:
	mov.u32 	%r423, %r33;
	mov.u32 	%r424, %r42;
	bra.uni 	BB0_46;

BB0_45:
	not.b32 	%r212, %r422;
	neg.s32 	%r424, %r42;
	setp.eq.s32	%p53, %r42, 0;
	selp.u32	%r213, 1, 0, %p53;
	add.s32 	%r422, %r213, %r212;
	xor.b32  	%r423, %r33, -2147483648;

BB0_46:
	clz.b32 	%r426, %r422;
	setp.eq.s32	%p54, %r426, 0;
	shl.b32 	%r214, %r422, %r426;
	mov.u32 	%r215, 32;
	sub.s32 	%r216, %r215, %r426;
	shr.u32 	%r217, %r424, %r216;
	add.s32 	%r218, %r217, %r214;
	selp.b32	%r51, %r422, %r218, %p54;
	mov.u32 	%r219, -921707870;
	mul.hi.u32 	%r425, %r51, %r219;
	setp.eq.s32	%p55, %r33, 0;
	neg.s32 	%r220, %r43;
	selp.b32	%r427, %r43, %r220, %p55;
	setp.lt.s32	%p56, %r425, 1;
	@%p56 bra 	BB0_48;

	mul.lo.s32 	%r221, %r51, -921707870;
	shr.u32 	%r222, %r221, 31;
	shl.b32 	%r223, %r425, 1;
	add.s32 	%r425, %r222, %r223;
	add.s32 	%r426, %r426, 1;

BB0_48:
	mov.u32 	%r224, 126;
	sub.s32 	%r225, %r224, %r426;
	shl.b32 	%r226, %r225, 23;
	add.s32 	%r227, %r425, 1;
	shr.u32 	%r228, %r227, 7;
	add.s32 	%r229, %r228, 1;
	shr.u32 	%r230, %r229, 1;
	add.s32 	%r231, %r230, %r226;
	or.b32  	%r232, %r231, %r423;
	mov.b32 	 %f1140, %r232;

BB0_49:
	mul.rn.f32 	%f132, %f1140, %f1140;
	add.s32 	%r59, %r427, 1;
	and.b32  	%r60, %r59, 1;
	setp.eq.s32	%p57, %r60, 0;
	@%p57 bra 	BB0_51;
	bra.uni 	BB0_50;

BB0_51:
	mov.f32 	%f602, 0f3C08839E;
	mov.f32 	%f603, 0fB94CA1F9;
	fma.rn.f32 	%f1141, %f603, %f132, %f602;
	bra.uni 	BB0_52;

BB0_50:
	mov.f32 	%f600, 0fBAB6061A;
	mov.f32 	%f601, 0f37CCF5CE;
	fma.rn.f32 	%f1141, %f601, %f132, %f600;

BB0_52:
	@%p57 bra 	BB0_54;
	bra.uni 	BB0_53;

BB0_54:
	mov.f32 	%f607, 0fBE2AAAA3;
	fma.rn.f32 	%f608, %f1141, %f132, %f607;
	fma.rn.f32 	%f1142, %f608, %f132, %f588;
	bra.uni 	BB0_55;

BB0_53:
	mov.f32 	%f604, 0f3D2AAAA5;
	fma.rn.f32 	%f605, %f1141, %f132, %f604;
	mov.f32 	%f606, 0fBF000000;
	fma.rn.f32 	%f1142, %f605, %f132, %f606;

BB0_55:
	fma.rn.f32 	%f1143, %f1142, %f1140, %f1140;
	@%p57 bra 	BB0_57;

	fma.rn.f32 	%f1143, %f1142, %f132, %f544;

BB0_57:
	and.b32  	%r233, %r59, 2;
	setp.eq.s32	%p60, %r233, 0;
	@%p60 bra 	BB0_59;

	mov.f32 	%f612, 0fBF800000;
	fma.rn.f32 	%f1143, %f1143, %f612, %f588;

BB0_59:
	@%p48 bra 	BB0_61;

	mul.rn.f32 	%f1145, %f1145, %f588;

BB0_61:
	mul.f32 	%f614, %f1145, 0f3F22F983;
	cvt.rni.s32.f32	%r437, %f614;
	cvt.rn.f32.s32	%f615, %r437;
	neg.f32 	%f616, %f615;
	fma.rn.f32 	%f618, %f616, %f594, %f1145;
	fma.rn.f32 	%f620, %f616, %f596, %f618;
	fma.rn.f32 	%f1146, %f616, %f598, %f620;
	abs.f32 	%f622, %f1145;
	setp.leu.f32	%p62, %f622, 0f47CE4780;
	@%p62 bra 	BB0_72;

	mov.b32 	 %r62, %f1145;
	shr.u32 	%r63, %r62, 23;
	shl.b32 	%r236, %r62, 8;
	or.b32  	%r64, %r236, -2147483648;
	mov.u32 	%r428, 0;
	mov.u64 	%rd289, %rd5;
	mov.u64 	%rd290, %rd29;
	mov.u32 	%r429, %r428;

BB0_63:
	.pragma "nounroll";
	shl.b64 	%rd91, %rd290, 2;
	mov.u64 	%rd92, __cudart_i2opi_f;
	add.s64 	%rd93, %rd92, %rd91;
	ld.const.u32 	%r239, [%rd93];
	// inline asm
	{
	mad.lo.cc.u32   %r237, %r239, %r64, %r429;
	madc.hi.u32     %r429, %r239, %r64,  0;
	}
	// inline asm
	st.local.u32 	[%rd289], %r237;
	add.s32 	%r428, %r428, 1;
	cvt.s64.s32	%rd290, %r428;
	mul.wide.s32 	%rd94, %r428, 4;
	add.s64 	%rd289, %rd5, %rd94;
	setp.ne.s32	%p63, %r428, 6;
	@%p63 bra 	BB0_63;

	and.b32  	%r242, %r63, 255;
	add.s32 	%r243, %r242, -128;
	shr.u32 	%r244, %r243, 5;
	and.b32  	%r69, %r62, -2147483648;
	st.local.u32 	[%rd5+24], %r429;
	mov.u32 	%r245, 6;
	sub.s32 	%r246, %r245, %r244;
	mul.wide.s32 	%rd95, %r246, 4;
	add.s64 	%rd18, %rd5, %rd95;
	ld.local.u32 	%r430, [%rd18];
	ld.local.u32 	%r431, [%rd18+-4];
	and.b32  	%r72, %r63, 31;
	setp.eq.s32	%p64, %r72, 0;
	@%p64 bra 	BB0_66;

	mov.u32 	%r247, 32;
	sub.s32 	%r248, %r247, %r72;
	shr.u32 	%r249, %r431, %r248;
	shl.b32 	%r250, %r430, %r72;
	add.s32 	%r430, %r249, %r250;
	ld.local.u32 	%r251, [%rd18+-8];
	shr.u32 	%r252, %r251, %r248;
	shl.b32 	%r253, %r431, %r72;
	add.s32 	%r431, %r252, %r253;

BB0_66:
	shr.u32 	%r254, %r431, 30;
	shl.b32 	%r255, %r430, 2;
	add.s32 	%r432, %r254, %r255;
	shl.b32 	%r78, %r431, 2;
	shr.u32 	%r256, %r432, 31;
	shr.u32 	%r257, %r430, 30;
	add.s32 	%r79, %r256, %r257;
	setp.eq.s32	%p65, %r256, 0;
	@%p65 bra 	BB0_67;
	bra.uni 	BB0_68;

BB0_67:
	mov.u32 	%r433, %r69;
	mov.u32 	%r434, %r78;
	bra.uni 	BB0_69;

BB0_68:
	not.b32 	%r258, %r432;
	neg.s32 	%r434, %r78;
	setp.eq.s32	%p66, %r78, 0;
	selp.u32	%r259, 1, 0, %p66;
	add.s32 	%r432, %r259, %r258;
	xor.b32  	%r433, %r69, -2147483648;

BB0_69:
	clz.b32 	%r436, %r432;
	setp.eq.s32	%p67, %r436, 0;
	shl.b32 	%r260, %r432, %r436;
	mov.u32 	%r261, 32;
	sub.s32 	%r262, %r261, %r436;
	shr.u32 	%r263, %r434, %r262;
	add.s32 	%r264, %r263, %r260;
	selp.b32	%r87, %r432, %r264, %p67;
	mov.u32 	%r265, -921707870;
	mul.hi.u32 	%r435, %r87, %r265;
	setp.eq.s32	%p68, %r69, 0;
	neg.s32 	%r266, %r79;
	selp.b32	%r437, %r79, %r266, %p68;
	setp.lt.s32	%p69, %r435, 1;
	@%p69 bra 	BB0_71;

	mul.lo.s32 	%r267, %r87, -921707870;
	shr.u32 	%r268, %r267, 31;
	shl.b32 	%r269, %r435, 1;
	add.s32 	%r435, %r268, %r269;
	add.s32 	%r436, %r436, 1;

BB0_71:
	mov.u32 	%r270, 126;
	sub.s32 	%r271, %r270, %r436;
	shl.b32 	%r272, %r271, 23;
	add.s32 	%r273, %r435, 1;
	shr.u32 	%r274, %r273, 7;
	add.s32 	%r275, %r274, 1;
	shr.u32 	%r276, %r275, 1;
	add.s32 	%r277, %r276, %r272;
	or.b32  	%r278, %r277, %r433;
	mov.b32 	 %f1146, %r278;

BB0_72:
	mul.rn.f32 	%f149, %f1146, %f1146;
	and.b32  	%r95, %r437, 1;
	setp.eq.s32	%p70, %r95, 0;
	@%p70 bra 	BB0_74;
	bra.uni 	BB0_73;

BB0_74:
	mov.f32 	%f625, 0f3C08839E;
	mov.f32 	%f626, 0fB94CA1F9;
	fma.rn.f32 	%f1147, %f626, %f149, %f625;
	bra.uni 	BB0_75;

BB0_73:
	mov.f32 	%f623, 0fBAB6061A;
	mov.f32 	%f624, 0f37CCF5CE;
	fma.rn.f32 	%f1147, %f624, %f149, %f623;

BB0_75:
	@%p70 bra 	BB0_77;
	bra.uni 	BB0_76;

BB0_77:
	mov.f32 	%f630, 0fBE2AAAA3;
	fma.rn.f32 	%f631, %f1147, %f149, %f630;
	fma.rn.f32 	%f1148, %f631, %f149, %f588;
	bra.uni 	BB0_78;

BB0_76:
	mov.f32 	%f627, 0f3D2AAAA5;
	fma.rn.f32 	%f628, %f1147, %f149, %f627;
	mov.f32 	%f629, 0fBF000000;
	fma.rn.f32 	%f1148, %f628, %f149, %f629;

BB0_78:
	fma.rn.f32 	%f1149, %f1148, %f1146, %f1146;
	@%p70 bra 	BB0_80;

	fma.rn.f32 	%f1149, %f1148, %f149, %f544;

BB0_80:
	and.b32  	%r279, %r437, 2;
	setp.eq.s32	%p73, %r279, 0;
	@%p73 bra 	BB0_82;

	mov.f32 	%f635, 0fBF800000;
	fma.rn.f32 	%f1149, %f1149, %f635, %f588;

BB0_82:
	mul.f32 	%f644, %f124, %f1143;
	mul.f32 	%f645, %f124, %f1149;
	mul.f32 	%f646, %f101, %f645;
	mul.f32 	%f647, %f102, %f645;
	mul.f32 	%f648, %f103, %f645;
	fma.rn.f32 	%f649, %f110, %f644, %f646;
	fma.rn.f32 	%f650, %f109, %f644, %f647;
	fma.rn.f32 	%f651, %f108, %f644, %f648;
	fma.rn.f32 	%f639, %f1094, %f123, %f649;
	fma.rn.f32 	%f640, %f1095, %f123, %f650;
	fma.rn.f32 	%f641, %f1096, %f123, %f651;
	mov.u32 	%r281, 0;
	st.local.u32 	[%rd6], %r281;
	ld.global.u32 	%r280, [root];
	mov.f32 	%f643, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r280, %f12, %f13, %f14, %f639, %f640, %f641, %r281, %f117, %f643, %rd83, %r113);
	// inline asm
	ld.local.f32 	%f652, [%rd6];
	setp.lt.f32	%p74, %f652, 0f00000000;
	selp.f32	%f653, 0f00000000, %f652, %p74;
	selp.f32	%f654, 0f00000000, 0f3F800000, %p74;
	add.f32 	%f1151, %f1151, %f654;
	mul.f32 	%f655, %f24, %f640;
	fma.rn.f32 	%f656, %f22, %f639, %f655;
	fma.rn.f32 	%f657, %f26, %f641, %f656;
	cvt.sat.f32.f32	%f658, %f657;
	fma.rn.f32 	%f1154, %f653, %f658, %f1154;
	mul.f32 	%f659, %f34, %f640;
	fma.rn.f32 	%f660, %f33, %f639, %f659;
	fma.rn.f32 	%f661, %f35, %f641, %f660;
	cvt.sat.f32.f32	%f662, %f661;
	fma.rn.f32 	%f1153, %f653, %f662, %f1153;
	mul.f32 	%f663, %f43, %f640;
	fma.rn.f32 	%f664, %f42, %f639, %f663;
	fma.rn.f32 	%f665, %f44, %f641, %f664;
	cvt.sat.f32.f32	%f666, %f665;
	fma.rn.f32 	%f1152, %f653, %f666, %f1152;
	mul.f32 	%f667, %f1095, %f640;
	fma.rn.f32 	%f668, %f1094, %f639, %f667;
	fma.rn.f32 	%f669, %f1096, %f641, %f668;
	cvt.sat.f32.f32	%f670, %f669;
	fma.rn.f32 	%f1155, %f653, %f670, %f1155;
	ld.global.u32 	%r413, [samples];
	add.s32 	%r416, %r416, 1;
	setp.lt.s32	%p75, %r416, %r413;
	@%p75 bra 	BB0_36;

BB0_83:
	add.s32 	%r414, %r414, 1;
	setp.lt.s32	%p76, %r414, %r413;
	@%p76 bra 	BB0_34;
	bra.uni 	BB0_84;

BB0_153:
	mov.u64 	%rd224, image_HDR;
	cvta.global.u64 	%rd219, %rd224;
	mov.u32 	%r373, 8;
	mov.u64 	%rd223, 0;
	// inline asm
	call (%rd218), _rt_buffer_get_64, (%rd219, %r112, %r373, %rd22, %rd23, %rd223, %rd223);
	// inline asm
	mov.f32 	%f1063, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f1063;}

	// inline asm
	mov.u16 	%rs117, 0;
	st.v4.u16 	[%rd218], {%rs116, %rs116, %rs116, %rs117};

BB0_154:
	ld.global.u32 	%r374, [additive];
	setp.eq.s32	%p153, %r374, 0;
	@%p153 bra 	BB0_156;

	mov.u64 	%rd237, image_RNM0;
	cvta.global.u64 	%rd226, %rd237;
	mov.u32 	%r378, 8;
	mov.u64 	%rd236, 0;
	// inline asm
	call (%rd225), _rt_buffer_get_64, (%rd226, %r112, %r378, %rd22, %rd23, %rd236, %rd236);
	// inline asm
	ld.v4.u16 	{%rs124, %rs125, %rs126, %rs127}, [%rd225];
	// inline asm
	{  cvt.f32.f16 %f1064, %rs124;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1065, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1066, %rs126;}

	// inline asm
	// inline asm
	call (%rd231), _rt_buffer_get_64, (%rd226, %r112, %r378, %rd22, %rd23, %rd236, %rd236);
	// inline asm
	add.f32 	%f1067, %f1064, 0f00000000;
	add.f32 	%f1068, %f1065, 0f00000000;
	add.f32 	%f1069, %f1066, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f1069;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f1068;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f1067;}

	// inline asm
	mov.u16 	%rs128, 0;
	st.v4.u16 	[%rd231], {%rs121, %rs122, %rs123, %rs128};
	bra.uni 	BB0_157;

BB0_156:
	mov.u64 	%rd244, image_RNM0;
	cvta.global.u64 	%rd239, %rd244;
	mov.u32 	%r380, 8;
	mov.u64 	%rd243, 0;
	// inline asm
	call (%rd238), _rt_buffer_get_64, (%rd239, %r112, %r380, %rd22, %rd23, %rd243, %rd243);
	// inline asm
	mov.f32 	%f1070, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs129, %f1070;}

	// inline asm
	mov.u16 	%rs130, 0;
	st.v4.u16 	[%rd238], {%rs129, %rs129, %rs129, %rs130};

BB0_157:
	ld.global.u32 	%r381, [additive];
	setp.eq.s32	%p154, %r381, 0;
	@%p154 bra 	BB0_159;

	mov.u64 	%rd257, image_RNM1;
	cvta.global.u64 	%rd246, %rd257;
	mov.u32 	%r385, 8;
	mov.u64 	%rd256, 0;
	// inline asm
	call (%rd245), _rt_buffer_get_64, (%rd246, %r112, %r385, %rd22, %rd23, %rd256, %rd256);
	// inline asm
	ld.v4.u16 	{%rs137, %rs138, %rs139, %rs140}, [%rd245];
	// inline asm
	{  cvt.f32.f16 %f1071, %rs137;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1072, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1073, %rs139;}

	// inline asm
	// inline asm
	call (%rd251), _rt_buffer_get_64, (%rd246, %r112, %r385, %rd22, %rd23, %rd256, %rd256);
	// inline asm
	add.f32 	%f1074, %f1071, 0f00000000;
	add.f32 	%f1075, %f1072, 0f00000000;
	add.f32 	%f1076, %f1073, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f1076;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f1075;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f1074;}

	// inline asm
	mov.u16 	%rs141, 0;
	st.v4.u16 	[%rd251], {%rs134, %rs135, %rs136, %rs141};
	bra.uni 	BB0_160;

BB0_159:
	mov.u64 	%rd264, image_RNM1;
	cvta.global.u64 	%rd259, %rd264;
	mov.u32 	%r387, 8;
	mov.u64 	%rd263, 0;
	// inline asm
	call (%rd258), _rt_buffer_get_64, (%rd259, %r112, %r387, %rd22, %rd23, %rd263, %rd263);
	// inline asm
	mov.f32 	%f1077, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs142, %f1077;}

	// inline asm
	mov.u16 	%rs143, 0;
	st.v4.u16 	[%rd258], {%rs142, %rs142, %rs142, %rs143};

BB0_160:
	ld.global.u32 	%r388, [additive];
	setp.eq.s32	%p155, %r388, 0;
	@%p155 bra 	BB0_162;

	mov.u64 	%rd277, image_RNM2;
	cvta.global.u64 	%rd266, %rd277;
	mov.u32 	%r392, 8;
	mov.u64 	%rd276, 0;
	// inline asm
	call (%rd265), _rt_buffer_get_64, (%rd266, %r112, %r392, %rd22, %rd23, %rd276, %rd276);
	// inline asm
	ld.v4.u16 	{%rs150, %rs151, %rs152, %rs153}, [%rd265];
	// inline asm
	{  cvt.f32.f16 %f1078, %rs150;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1079, %rs151;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1080, %rs152;}

	// inline asm
	// inline asm
	call (%rd271), _rt_buffer_get_64, (%rd266, %r112, %r392, %rd22, %rd23, %rd276, %rd276);
	// inline asm
	add.f32 	%f1081, %f1078, 0f00000000;
	add.f32 	%f1082, %f1079, 0f00000000;
	add.f32 	%f1083, %f1080, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs149, %f1083;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f1082;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f1081;}

	// inline asm
	mov.u16 	%rs154, 0;
	st.v4.u16 	[%rd271], {%rs147, %rs148, %rs149, %rs154};
	bra.uni 	BB0_163;

BB0_162:
	mov.u64 	%rd284, image_RNM2;
	cvta.global.u64 	%rd279, %rd284;
	mov.u32 	%r394, 8;
	mov.u64 	%rd283, 0;
	// inline asm
	call (%rd278), _rt_buffer_get_64, (%rd279, %r112, %r394, %rd22, %rd23, %rd283, %rd283);
	// inline asm
	mov.f32 	%f1084, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs155, %f1084;}

	// inline asm
	mov.u16 	%rs156, 0;
	st.v4.u16 	[%rd278], {%rs155, %rs155, %rs155, %rs156};
	bra.uni 	BB0_163;

BB0_32:
	mov.f32 	%f1152, %f1151;
	mov.f32 	%f1153, %f1151;
	mov.f32 	%f1154, %f1151;
	mov.f32 	%f1155, %f1151;

BB0_84:
	mul.lo.s32 	%r283, %r413, %r413;
	cvt.rn.f32.s32	%f671, %r283;
	div.rn.f32 	%f672, %f1155, %f671;
	div.rn.f32 	%f1165, %f1151, %f671;
	div.rn.f32 	%f1162, %f1154, %f671;
	div.rn.f32 	%f1163, %f1153, %f671;
	div.rn.f32 	%f1164, %f1152, %f671;
	add.f32 	%f1161, %f672, %f672;

BB0_85:
	ld.global.u32 	%r442, [imageEnabled];
	and.b32  	%r284, %r442, 8;
	setp.eq.s32	%p77, %r284, 0;
	@%p77 bra 	BB0_98;

	mov.u32 	%r397, 2;
	cvt.u64.u32	%rd99, %r2;
	cvt.u64.u32	%rd100, %r3;
	mov.u64 	%rd103, image_Mask;
	cvta.global.u64 	%rd98, %rd103;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r397, %r397, %rd99, %rd100, %rd29, %rd29);
	// inline asm
	mov.f32 	%f675, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f676, %f675;
	fma.rn.f32 	%f677, %f676, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f186, %f677;
	abs.f32 	%f187, %f1165;
	setp.lt.f32	%p78, %f187, 0f00800000;
	mul.f32 	%f678, %f187, 0f4B800000;
	selp.f32	%f679, 0fC3170000, 0fC2FE0000, %p78;
	selp.f32	%f680, %f678, %f187, %p78;
	mov.b32 	 %r287, %f680;
	and.b32  	%r288, %r287, 8388607;
	or.b32  	%r289, %r288, 1065353216;
	mov.b32 	 %f681, %r289;
	shr.u32 	%r290, %r287, 23;
	cvt.rn.f32.u32	%f682, %r290;
	add.f32 	%f683, %f679, %f682;
	setp.gt.f32	%p79, %f681, 0f3FB504F3;
	mul.f32 	%f684, %f681, 0f3F000000;
	add.f32 	%f685, %f683, 0f3F800000;
	selp.f32	%f686, %f684, %f681, %p79;
	selp.f32	%f687, %f685, %f683, %p79;
	add.f32 	%f688, %f686, 0fBF800000;
	add.f32 	%f674, %f686, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f673,%f674;
	// inline asm
	add.f32 	%f689, %f688, %f688;
	mul.f32 	%f690, %f673, %f689;
	mul.f32 	%f691, %f690, %f690;
	mov.f32 	%f692, 0f3C4CAF63;
	mov.f32 	%f693, 0f3B18F0FE;
	fma.rn.f32 	%f694, %f693, %f691, %f692;
	mov.f32 	%f695, 0f3DAAAABD;
	fma.rn.f32 	%f696, %f694, %f691, %f695;
	mul.rn.f32 	%f697, %f696, %f691;
	mul.rn.f32 	%f698, %f697, %f690;
	sub.f32 	%f699, %f688, %f690;
	neg.f32 	%f700, %f690;
	add.f32 	%f701, %f699, %f699;
	fma.rn.f32 	%f702, %f700, %f688, %f701;
	mul.rn.f32 	%f703, %f673, %f702;
	add.f32 	%f704, %f698, %f690;
	sub.f32 	%f705, %f690, %f704;
	add.f32 	%f706, %f698, %f705;
	add.f32 	%f707, %f703, %f706;
	add.f32 	%f708, %f704, %f707;
	sub.f32 	%f709, %f704, %f708;
	add.f32 	%f710, %f707, %f709;
	mov.f32 	%f711, 0f3F317200;
	mul.rn.f32 	%f712, %f687, %f711;
	mov.f32 	%f713, 0f35BFBE8E;
	mul.rn.f32 	%f714, %f687, %f713;
	add.f32 	%f715, %f712, %f708;
	sub.f32 	%f716, %f712, %f715;
	add.f32 	%f717, %f708, %f716;
	add.f32 	%f718, %f710, %f717;
	add.f32 	%f719, %f714, %f718;
	add.f32 	%f720, %f715, %f719;
	sub.f32 	%f721, %f715, %f720;
	add.f32 	%f722, %f719, %f721;
	mov.f32 	%f723, 0f3EE8BA2E;
	mul.rn.f32 	%f724, %f723, %f720;
	neg.f32 	%f725, %f724;
	fma.rn.f32 	%f726, %f723, %f720, %f725;
	fma.rn.f32 	%f727, %f723, %f722, %f726;
	mov.f32 	%f728, 0f00000000;
	fma.rn.f32 	%f729, %f728, %f720, %f727;
	add.rn.f32 	%f730, %f724, %f729;
	neg.f32 	%f731, %f730;
	add.rn.f32 	%f732, %f724, %f731;
	add.rn.f32 	%f733, %f732, %f729;
	mov.b32 	 %r291, %f730;
	setp.eq.s32	%p80, %r291, 1118925336;
	add.s32 	%r292, %r291, -1;
	mov.b32 	 %f734, %r292;
	add.f32 	%f735, %f733, 0f37000000;
	selp.f32	%f736, %f734, %f730, %p80;
	selp.f32	%f188, %f735, %f733, %p80;
	mul.f32 	%f737, %f736, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f738, %f737;
	mov.f32 	%f739, 0fBF317200;
	fma.rn.f32 	%f740, %f738, %f739, %f736;
	mov.f32 	%f741, 0fB5BFBE8E;
	fma.rn.f32 	%f742, %f738, %f741, %f740;
	mul.f32 	%f743, %f742, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f744, %f743;
	add.f32 	%f745, %f738, 0f00000000;
	ex2.approx.f32 	%f746, %f745;
	mul.f32 	%f747, %f744, %f746;
	setp.lt.f32	%p81, %f736, 0fC2D20000;
	selp.f32	%f748, 0f00000000, %f747, %p81;
	setp.gt.f32	%p82, %f736, 0f42D20000;
	selp.f32	%f1166, 0f7F800000, %f748, %p82;
	setp.eq.f32	%p83, %f1166, 0f7F800000;
	@%p83 bra 	BB0_88;

	fma.rn.f32 	%f1166, %f1166, %f188, %f1166;

BB0_88:
	setp.lt.f32	%p84, %f1165, 0f00000000;
	setp.eq.f32	%p85, %f186, 0f3F800000;
	and.pred  	%p3, %p84, %p85;
	mov.b32 	 %r293, %f1166;
	xor.b32  	%r294, %r293, -2147483648;
	mov.b32 	 %f749, %r294;
	selp.f32	%f1168, %f749, %f1166, %p3;
	setp.eq.f32	%p86, %f1165, 0f00000000;
	@%p86 bra 	BB0_91;
	bra.uni 	BB0_89;

BB0_91:
	add.f32 	%f752, %f1165, %f1165;
	selp.f32	%f1168, %f752, 0f00000000, %p85;
	bra.uni 	BB0_92;

BB0_89:
	setp.geu.f32	%p87, %f1165, 0f00000000;
	@%p87 bra 	BB0_92;

	cvt.rzi.f32.f32	%f751, %f723;
	setp.neu.f32	%p88, %f751, 0f3EE8BA2E;
	selp.f32	%f1168, 0f7FFFFFFF, %f1168, %p88;

BB0_92:
	add.f32 	%f753, %f187, 0f3EE8BA2E;
	mov.b32 	 %r295, %f753;
	setp.lt.s32	%p90, %r295, 2139095040;
	@%p90 bra 	BB0_97;

	setp.gtu.f32	%p91, %f187, 0f7F800000;
	@%p91 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f1168, %f1165, 0f3EE8BA2E;
	bra.uni 	BB0_97;

BB0_94:
	setp.neu.f32	%p92, %f187, 0f7F800000;
	@%p92 bra 	BB0_97;

	selp.f32	%f1168, 0fFF800000, 0f7F800000, %p3;

BB0_97:
	mul.f32 	%f754, %f1168, 0f437F0000;
	setp.eq.f32	%p93, %f1165, 0f3F800000;
	selp.f32	%f755, 0f437F0000, %f754, %p93;
	cvt.rzi.u32.f32	%r296, %f755;
	cvt.u16.u32	%rs40, %r296;
	mov.u16 	%rs41, 255;
	st.v2.u8 	[%rd97], {%rs40, %rs41};
	ld.global.u32 	%r442, [imageEnabled];

BB0_98:
	ld.global.f32 	%f756, [lightColor];
	mul.f32 	%f199, %f1161, %f756;
	ld.global.f32 	%f757, [lightColor+4];
	mul.f32 	%f200, %f1161, %f757;
	ld.global.f32 	%f758, [lightColor+8];
	mul.f32 	%f201, %f1161, %f758;
	and.b32  	%r297, %r442, 1;
	setp.eq.b32	%p94, %r297, 1;
	@!%p94 bra 	BB0_133;
	bra.uni 	BB0_99;

BB0_99:
	mov.f32 	%f761, 0f3E666666;
	cvt.rzi.f32.f32	%f762, %f761;
	fma.rn.f32 	%f763, %f762, 0fC0000000, 0f3EE66666;
	abs.f32 	%f202, %f763;
	abs.f32 	%f203, %f199;
	setp.lt.f32	%p95, %f203, 0f00800000;
	mul.f32 	%f764, %f203, 0f4B800000;
	selp.f32	%f765, 0fC3170000, 0fC2FE0000, %p95;
	selp.f32	%f766, %f764, %f203, %p95;
	mov.b32 	 %r298, %f766;
	and.b32  	%r299, %r298, 8388607;
	or.b32  	%r300, %r299, 1065353216;
	mov.b32 	 %f767, %r300;
	shr.u32 	%r301, %r298, 23;
	cvt.rn.f32.u32	%f768, %r301;
	add.f32 	%f769, %f765, %f768;
	setp.gt.f32	%p96, %f767, 0f3FB504F3;
	mul.f32 	%f770, %f767, 0f3F000000;
	add.f32 	%f771, %f769, 0f3F800000;
	selp.f32	%f772, %f770, %f767, %p96;
	selp.f32	%f773, %f771, %f769, %p96;
	add.f32 	%f774, %f772, 0fBF800000;
	add.f32 	%f760, %f772, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f759,%f760;
	// inline asm
	add.f32 	%f775, %f774, %f774;
	mul.f32 	%f776, %f759, %f775;
	mul.f32 	%f777, %f776, %f776;
	mov.f32 	%f778, 0f3C4CAF63;
	mov.f32 	%f779, 0f3B18F0FE;
	fma.rn.f32 	%f780, %f779, %f777, %f778;
	mov.f32 	%f781, 0f3DAAAABD;
	fma.rn.f32 	%f782, %f780, %f777, %f781;
	mul.rn.f32 	%f783, %f782, %f777;
	mul.rn.f32 	%f784, %f783, %f776;
	sub.f32 	%f785, %f774, %f776;
	neg.f32 	%f786, %f776;
	add.f32 	%f787, %f785, %f785;
	fma.rn.f32 	%f788, %f786, %f774, %f787;
	mul.rn.f32 	%f789, %f759, %f788;
	add.f32 	%f790, %f784, %f776;
	sub.f32 	%f791, %f776, %f790;
	add.f32 	%f792, %f784, %f791;
	add.f32 	%f793, %f789, %f792;
	add.f32 	%f794, %f790, %f793;
	sub.f32 	%f795, %f790, %f794;
	add.f32 	%f796, %f793, %f795;
	mov.f32 	%f797, 0f3F317200;
	mul.rn.f32 	%f798, %f773, %f797;
	mov.f32 	%f799, 0f35BFBE8E;
	mul.rn.f32 	%f800, %f773, %f799;
	add.f32 	%f801, %f798, %f794;
	sub.f32 	%f802, %f798, %f801;
	add.f32 	%f803, %f794, %f802;
	add.f32 	%f804, %f796, %f803;
	add.f32 	%f805, %f800, %f804;
	add.f32 	%f806, %f801, %f805;
	sub.f32 	%f807, %f801, %f806;
	add.f32 	%f808, %f805, %f807;
	mov.f32 	%f809, 0f3EE66666;
	mul.rn.f32 	%f810, %f809, %f806;
	neg.f32 	%f811, %f810;
	fma.rn.f32 	%f812, %f809, %f806, %f811;
	fma.rn.f32 	%f813, %f809, %f808, %f812;
	mov.f32 	%f814, 0f00000000;
	fma.rn.f32 	%f815, %f814, %f806, %f813;
	add.rn.f32 	%f816, %f810, %f815;
	neg.f32 	%f817, %f816;
	add.rn.f32 	%f818, %f810, %f817;
	add.rn.f32 	%f819, %f818, %f815;
	mov.b32 	 %r302, %f816;
	setp.eq.s32	%p97, %r302, 1118925336;
	add.s32 	%r303, %r302, -1;
	mov.b32 	 %f820, %r303;
	add.f32 	%f821, %f819, 0f37000000;
	selp.f32	%f822, %f820, %f816, %p97;
	selp.f32	%f204, %f821, %f819, %p97;
	mul.f32 	%f823, %f822, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f824, %f823;
	mov.f32 	%f825, 0fBF317200;
	fma.rn.f32 	%f826, %f824, %f825, %f822;
	mov.f32 	%f827, 0fB5BFBE8E;
	fma.rn.f32 	%f828, %f824, %f827, %f826;
	mul.f32 	%f829, %f828, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f830, %f829;
	add.f32 	%f831, %f824, 0f00000000;
	ex2.approx.f32 	%f832, %f831;
	mul.f32 	%f833, %f830, %f832;
	setp.lt.f32	%p98, %f822, 0fC2D20000;
	selp.f32	%f834, 0f00000000, %f833, %p98;
	setp.gt.f32	%p99, %f822, 0f42D20000;
	selp.f32	%f1169, 0f7F800000, %f834, %p99;
	setp.eq.f32	%p100, %f1169, 0f7F800000;
	@%p100 bra 	BB0_101;

	fma.rn.f32 	%f1169, %f1169, %f204, %f1169;

BB0_101:
	setp.lt.f32	%p101, %f199, 0f00000000;
	setp.eq.f32	%p102, %f202, 0f3F800000;
	and.pred  	%p4, %p101, %p102;
	mov.b32 	 %r304, %f1169;
	xor.b32  	%r305, %r304, -2147483648;
	mov.b32 	 %f835, %r305;
	selp.f32	%f1171, %f835, %f1169, %p4;
	setp.eq.f32	%p103, %f199, 0f00000000;
	@%p103 bra 	BB0_104;
	bra.uni 	BB0_102;

BB0_104:
	add.f32 	%f838, %f199, %f199;
	selp.f32	%f1171, %f838, 0f00000000, %p102;
	bra.uni 	BB0_105;

BB0_102:
	setp.geu.f32	%p104, %f199, 0f00000000;
	@%p104 bra 	BB0_105;

	cvt.rzi.f32.f32	%f837, %f809;
	setp.neu.f32	%p105, %f837, 0f3EE66666;
	selp.f32	%f1171, 0f7FFFFFFF, %f1171, %p105;

BB0_105:
	add.f32 	%f839, %f203, 0f3EE66666;
	mov.b32 	 %r306, %f839;
	setp.lt.s32	%p107, %r306, 2139095040;
	@%p107 bra 	BB0_110;

	setp.gtu.f32	%p108, %f203, 0f7F800000;
	@%p108 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f1171, %f199, 0f3EE66666;
	bra.uni 	BB0_110;

BB0_107:
	setp.neu.f32	%p109, %f203, 0f7F800000;
	@%p109 bra 	BB0_110;

	selp.f32	%f1171, 0fFF800000, 0f7F800000, %p4;

BB0_110:
	setp.eq.f32	%p110, %f199, 0f3F800000;
	selp.f32	%f215, 0f3F800000, %f1171, %p110;
	abs.f32 	%f216, %f200;
	setp.lt.f32	%p111, %f216, 0f00800000;
	mul.f32 	%f842, %f216, 0f4B800000;
	selp.f32	%f843, 0fC3170000, 0fC2FE0000, %p111;
	selp.f32	%f844, %f842, %f216, %p111;
	mov.b32 	 %r307, %f844;
	and.b32  	%r308, %r307, 8388607;
	or.b32  	%r309, %r308, 1065353216;
	mov.b32 	 %f845, %r309;
	shr.u32 	%r310, %r307, 23;
	cvt.rn.f32.u32	%f846, %r310;
	add.f32 	%f847, %f843, %f846;
	setp.gt.f32	%p112, %f845, 0f3FB504F3;
	mul.f32 	%f848, %f845, 0f3F000000;
	add.f32 	%f849, %f847, 0f3F800000;
	selp.f32	%f850, %f848, %f845, %p112;
	selp.f32	%f851, %f849, %f847, %p112;
	add.f32 	%f852, %f850, 0fBF800000;
	add.f32 	%f841, %f850, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f840,%f841;
	// inline asm
	add.f32 	%f853, %f852, %f852;
	mul.f32 	%f854, %f840, %f853;
	mul.f32 	%f855, %f854, %f854;
	fma.rn.f32 	%f858, %f779, %f855, %f778;
	fma.rn.f32 	%f860, %f858, %f855, %f781;
	mul.rn.f32 	%f861, %f860, %f855;
	mul.rn.f32 	%f862, %f861, %f854;
	sub.f32 	%f863, %f852, %f854;
	neg.f32 	%f864, %f854;
	add.f32 	%f865, %f863, %f863;
	fma.rn.f32 	%f866, %f864, %f852, %f865;
	mul.rn.f32 	%f867, %f840, %f866;
	add.f32 	%f868, %f862, %f854;
	sub.f32 	%f869, %f854, %f868;
	add.f32 	%f870, %f862, %f869;
	add.f32 	%f871, %f867, %f870;
	add.f32 	%f872, %f868, %f871;
	sub.f32 	%f873, %f868, %f872;
	add.f32 	%f874, %f871, %f873;
	mul.rn.f32 	%f876, %f851, %f797;
	mul.rn.f32 	%f878, %f851, %f799;
	add.f32 	%f879, %f876, %f872;
	sub.f32 	%f880, %f876, %f879;
	add.f32 	%f881, %f872, %f880;
	add.f32 	%f882, %f874, %f881;
	add.f32 	%f883, %f878, %f882;
	add.f32 	%f884, %f879, %f883;
	sub.f32 	%f885, %f879, %f884;
	add.f32 	%f886, %f883, %f885;
	mul.rn.f32 	%f888, %f809, %f884;
	neg.f32 	%f889, %f888;
	fma.rn.f32 	%f890, %f809, %f884, %f889;
	fma.rn.f32 	%f891, %f809, %f886, %f890;
	fma.rn.f32 	%f893, %f814, %f884, %f891;
	add.rn.f32 	%f894, %f888, %f893;
	neg.f32 	%f895, %f894;
	add.rn.f32 	%f896, %f888, %f895;
	add.rn.f32 	%f897, %f896, %f893;
	mov.b32 	 %r311, %f894;
	setp.eq.s32	%p113, %r311, 1118925336;
	add.s32 	%r312, %r311, -1;
	mov.b32 	 %f898, %r312;
	add.f32 	%f899, %f897, 0f37000000;
	selp.f32	%f900, %f898, %f894, %p113;
	selp.f32	%f217, %f899, %f897, %p113;
	mul.f32 	%f901, %f900, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f902, %f901;
	fma.rn.f32 	%f904, %f902, %f825, %f900;
	fma.rn.f32 	%f906, %f902, %f827, %f904;
	mul.f32 	%f907, %f906, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f908, %f907;
	add.f32 	%f909, %f902, 0f00000000;
	ex2.approx.f32 	%f910, %f909;
	mul.f32 	%f911, %f908, %f910;
	setp.lt.f32	%p114, %f900, 0fC2D20000;
	selp.f32	%f912, 0f00000000, %f911, %p114;
	setp.gt.f32	%p115, %f900, 0f42D20000;
	selp.f32	%f1172, 0f7F800000, %f912, %p115;
	setp.eq.f32	%p116, %f1172, 0f7F800000;
	@%p116 bra 	BB0_112;

	fma.rn.f32 	%f1172, %f1172, %f217, %f1172;

BB0_112:
	setp.lt.f32	%p117, %f200, 0f00000000;
	and.pred  	%p5, %p117, %p102;
	mov.b32 	 %r313, %f1172;
	xor.b32  	%r314, %r313, -2147483648;
	mov.b32 	 %f913, %r314;
	selp.f32	%f1174, %f913, %f1172, %p5;
	setp.eq.f32	%p119, %f200, 0f00000000;
	@%p119 bra 	BB0_115;
	bra.uni 	BB0_113;

BB0_115:
	add.f32 	%f916, %f200, %f200;
	selp.f32	%f1174, %f916, 0f00000000, %p102;
	bra.uni 	BB0_116;

BB0_113:
	setp.geu.f32	%p120, %f200, 0f00000000;
	@%p120 bra 	BB0_116;

	cvt.rzi.f32.f32	%f915, %f809;
	setp.neu.f32	%p121, %f915, 0f3EE66666;
	selp.f32	%f1174, 0f7FFFFFFF, %f1174, %p121;

BB0_116:
	add.f32 	%f917, %f216, 0f3EE66666;
	mov.b32 	 %r315, %f917;
	setp.lt.s32	%p123, %r315, 2139095040;
	@%p123 bra 	BB0_121;

	setp.gtu.f32	%p124, %f216, 0f7F800000;
	@%p124 bra 	BB0_120;
	bra.uni 	BB0_118;

BB0_120:
	add.f32 	%f1174, %f200, 0f3EE66666;
	bra.uni 	BB0_121;

BB0_118:
	setp.neu.f32	%p125, %f216, 0f7F800000;
	@%p125 bra 	BB0_121;

	selp.f32	%f1174, 0fFF800000, 0f7F800000, %p5;

BB0_121:
	setp.eq.f32	%p126, %f200, 0f3F800000;
	selp.f32	%f228, 0f3F800000, %f1174, %p126;
	abs.f32 	%f229, %f201;
	setp.lt.f32	%p127, %f229, 0f00800000;
	mul.f32 	%f920, %f229, 0f4B800000;
	selp.f32	%f921, 0fC3170000, 0fC2FE0000, %p127;
	selp.f32	%f922, %f920, %f229, %p127;
	mov.b32 	 %r316, %f922;
	and.b32  	%r317, %r316, 8388607;
	or.b32  	%r318, %r317, 1065353216;
	mov.b32 	 %f923, %r318;
	shr.u32 	%r319, %r316, 23;
	cvt.rn.f32.u32	%f924, %r319;
	add.f32 	%f925, %f921, %f924;
	setp.gt.f32	%p128, %f923, 0f3FB504F3;
	mul.f32 	%f926, %f923, 0f3F000000;
	add.f32 	%f927, %f925, 0f3F800000;
	selp.f32	%f928, %f926, %f923, %p128;
	selp.f32	%f929, %f927, %f925, %p128;
	add.f32 	%f930, %f928, 0fBF800000;
	add.f32 	%f919, %f928, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f918,%f919;
	// inline asm
	add.f32 	%f931, %f930, %f930;
	mul.f32 	%f932, %f918, %f931;
	mul.f32 	%f933, %f932, %f932;
	fma.rn.f32 	%f936, %f779, %f933, %f778;
	fma.rn.f32 	%f938, %f936, %f933, %f781;
	mul.rn.f32 	%f939, %f938, %f933;
	mul.rn.f32 	%f940, %f939, %f932;
	sub.f32 	%f941, %f930, %f932;
	neg.f32 	%f942, %f932;
	add.f32 	%f943, %f941, %f941;
	fma.rn.f32 	%f944, %f942, %f930, %f943;
	mul.rn.f32 	%f945, %f918, %f944;
	add.f32 	%f946, %f940, %f932;
	sub.f32 	%f947, %f932, %f946;
	add.f32 	%f948, %f940, %f947;
	add.f32 	%f949, %f945, %f948;
	add.f32 	%f950, %f946, %f949;
	sub.f32 	%f951, %f946, %f950;
	add.f32 	%f952, %f949, %f951;
	mul.rn.f32 	%f954, %f929, %f797;
	mul.rn.f32 	%f956, %f929, %f799;
	add.f32 	%f957, %f954, %f950;
	sub.f32 	%f958, %f954, %f957;
	add.f32 	%f959, %f950, %f958;
	add.f32 	%f960, %f952, %f959;
	add.f32 	%f961, %f956, %f960;
	add.f32 	%f962, %f957, %f961;
	sub.f32 	%f963, %f957, %f962;
	add.f32 	%f964, %f961, %f963;
	mul.rn.f32 	%f966, %f809, %f962;
	neg.f32 	%f967, %f966;
	fma.rn.f32 	%f968, %f809, %f962, %f967;
	fma.rn.f32 	%f969, %f809, %f964, %f968;
	fma.rn.f32 	%f971, %f814, %f962, %f969;
	add.rn.f32 	%f972, %f966, %f971;
	neg.f32 	%f973, %f972;
	add.rn.f32 	%f974, %f966, %f973;
	add.rn.f32 	%f975, %f974, %f971;
	mov.b32 	 %r320, %f972;
	setp.eq.s32	%p129, %r320, 1118925336;
	add.s32 	%r321, %r320, -1;
	mov.b32 	 %f976, %r321;
	add.f32 	%f977, %f975, 0f37000000;
	selp.f32	%f978, %f976, %f972, %p129;
	selp.f32	%f230, %f977, %f975, %p129;
	mul.f32 	%f979, %f978, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f980, %f979;
	fma.rn.f32 	%f982, %f980, %f825, %f978;
	fma.rn.f32 	%f984, %f980, %f827, %f982;
	mul.f32 	%f985, %f984, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f986, %f985;
	add.f32 	%f987, %f980, 0f00000000;
	ex2.approx.f32 	%f988, %f987;
	mul.f32 	%f989, %f986, %f988;
	setp.lt.f32	%p130, %f978, 0fC2D20000;
	selp.f32	%f990, 0f00000000, %f989, %p130;
	setp.gt.f32	%p131, %f978, 0f42D20000;
	selp.f32	%f1175, 0f7F800000, %f990, %p131;
	setp.eq.f32	%p132, %f1175, 0f7F800000;
	@%p132 bra 	BB0_123;

	fma.rn.f32 	%f1175, %f1175, %f230, %f1175;

BB0_123:
	setp.lt.f32	%p133, %f201, 0f00000000;
	and.pred  	%p6, %p133, %p102;
	mov.b32 	 %r322, %f1175;
	xor.b32  	%r323, %r322, -2147483648;
	mov.b32 	 %f991, %r323;
	selp.f32	%f1177, %f991, %f1175, %p6;
	setp.eq.f32	%p135, %f201, 0f00000000;
	@%p135 bra 	BB0_126;
	bra.uni 	BB0_124;

BB0_126:
	add.f32 	%f994, %f201, %f201;
	selp.f32	%f1177, %f994, 0f00000000, %p102;
	bra.uni 	BB0_127;

BB0_124:
	setp.geu.f32	%p136, %f201, 0f00000000;
	@%p136 bra 	BB0_127;

	cvt.rzi.f32.f32	%f993, %f809;
	setp.neu.f32	%p137, %f993, 0f3EE66666;
	selp.f32	%f1177, 0f7FFFFFFF, %f1177, %p137;

BB0_127:
	add.f32 	%f995, %f229, 0f3EE66666;
	mov.b32 	 %r324, %f995;
	setp.lt.s32	%p139, %r324, 2139095040;
	@%p139 bra 	BB0_132;

	setp.gtu.f32	%p140, %f229, 0f7F800000;
	@%p140 bra 	BB0_131;
	bra.uni 	BB0_129;

BB0_131:
	add.f32 	%f1177, %f201, 0f3EE66666;
	bra.uni 	BB0_132;

BB0_129:
	setp.neu.f32	%p141, %f229, 0f7F800000;
	@%p141 bra 	BB0_132;

	selp.f32	%f1177, 0fFF800000, 0f7F800000, %p6;

BB0_132:
	mov.u32 	%r398, 2;
	setp.eq.f32	%p142, %f201, 0f3F800000;
	selp.f32	%f996, 0f3F800000, %f1177, %p142;
	cvt.u64.u32	%rd107, %r3;
	cvt.u64.u32	%rd106, %r2;
	mov.u64 	%rd110, image;
	cvta.global.u64 	%rd105, %rd110;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd105, %r398, %r113, %rd106, %rd107, %rd29, %rd29);
	// inline asm
	cvt.sat.f32.f32	%f997, %f996;
	mul.f32 	%f998, %f997, 0f437FFD71;
	cvt.rzi.u32.f32	%r327, %f998;
	cvt.sat.f32.f32	%f999, %f228;
	mul.f32 	%f1000, %f999, 0f437FFD71;
	cvt.rzi.u32.f32	%r328, %f1000;
	cvt.sat.f32.f32	%f1001, %f215;
	mul.f32 	%f1002, %f1001, 0f437FFD71;
	cvt.rzi.u32.f32	%r329, %f1002;
	cvt.u16.u32	%rs42, %r327;
	cvt.u16.u32	%rs43, %r329;
	cvt.u16.u32	%rs44, %r328;
	mov.u16 	%rs45, 255;
	st.v4.u8 	[%rd104], {%rs42, %rs44, %rs43, %rs45};
	ld.global.u32 	%r442, [imageEnabled];

BB0_133:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	and.b32  	%r330, %r442, 4;
	setp.eq.s32	%p143, %r330, 0;
	@%p143 bra 	BB0_137;

	ld.global.u32 	%r331, [additive];
	setp.eq.s32	%p144, %r331, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f544;}

	// inline asm
	@%p144 bra 	BB0_136;

	mov.u32 	%r399, 2;
	mov.u64 	%rd123, image_HDR;
	cvta.global.u64 	%rd112, %rd123;
	mov.u32 	%r335, 8;
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd112, %r399, %r335, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs53, %rs54, %rs55, %rs56}, [%rd111];
	// inline asm
	{  cvt.f32.f16 %f1004, %rs53;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1005, %rs54;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1006, %rs55;}

	// inline asm
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd112, %r399, %r335, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1007, %f199, %f1004;
	add.f32 	%f1008, %f200, %f1005;
	add.f32 	%f1009, %f201, %f1006;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f1009;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs51, %f1008;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f1007;}

	// inline asm
	st.v4.u16 	[%rd117], {%rs50, %rs51, %rs52, %rs46};
	bra.uni 	BB0_137;

BB0_136:
	mov.u32 	%r400, 2;
	mov.u64 	%rd130, image_HDR;
	cvta.global.u64 	%rd125, %rd130;
	mov.u32 	%r337, 8;
	// inline asm
	call (%rd124), _rt_buffer_get_64, (%rd125, %r400, %r337, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f201;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f200;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f199;}

	// inline asm
	st.v4.u16 	[%rd124], {%rs57, %rs58, %rs59, %rs46};

BB0_137:
	add.f32 	%f1014, %f1162, %f1163;
	add.f32 	%f1015, %f1014, %f1164;
	mul.f32 	%f1016, %f1015, 0f3F13CD3A;
	div.rn.f32 	%f1017, %f1161, %f1016;
	setp.eq.f32	%p145, %f1161, 0f00000000;
	selp.f32	%f1018, 0f00000000, %f1017, %p145;
	mul.f32 	%f1019, %f1162, %f1018;
	mul.f32 	%f1020, %f1163, %f1018;
	mul.f32 	%f1021, %f1164, %f1018;
	ld.global.f32 	%f1022, [lightColor];
	mul.f32 	%f241, %f1022, %f1019;
	ld.global.f32 	%f1023, [lightColor+4];
	mul.f32 	%f242, %f1023, %f1019;
	ld.global.f32 	%f1024, [lightColor+8];
	mul.f32 	%f243, %f1019, %f1024;
	mul.f32 	%f244, %f1022, %f1020;
	mul.f32 	%f245, %f1023, %f1020;
	mul.f32 	%f246, %f1020, %f1024;
	mul.f32 	%f247, %f1021, %f1022;
	mul.f32 	%f248, %f1021, %f1023;
	mul.f32 	%f249, %f1021, %f1024;
	ld.global.u32 	%r338, [additive];
	setp.eq.s32	%p146, %r338, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f544;}

	// inline asm
	@%p146 bra 	BB0_139;

	mov.u32 	%r401, 2;
	mov.u64 	%rd143, image_RNM0;
	cvta.global.u64 	%rd132, %rd143;
	mov.u32 	%r342, 8;
	// inline asm
	call (%rd131), _rt_buffer_get_64, (%rd132, %r401, %r342, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs67, %rs68, %rs69, %rs70}, [%rd131];
	// inline asm
	{  cvt.f32.f16 %f1025, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1026, %rs68;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1027, %rs69;}

	// inline asm
	// inline asm
	call (%rd137), _rt_buffer_get_64, (%rd132, %r401, %r342, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1028, %f241, %f1025;
	add.f32 	%f1029, %f242, %f1026;
	add.f32 	%f1030, %f243, %f1027;
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f1030;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1029;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f1028;}

	// inline asm
	st.v4.u16 	[%rd137], {%rs64, %rs65, %rs66, %rs60};
	bra.uni 	BB0_140;

BB0_139:
	mov.u32 	%r406, 2;
	mov.u64 	%rd150, image_RNM0;
	cvta.global.u64 	%rd145, %rd150;
	mov.u32 	%r344, 8;
	// inline asm
	call (%rd144), _rt_buffer_get_64, (%rd145, %r406, %r344, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f243;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f242;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f241;}

	// inline asm
	st.v4.u16 	[%rd144], {%rs71, %rs72, %rs73, %rs60};

BB0_140:
	ld.global.u32 	%r345, [additive];
	setp.eq.s32	%p147, %r345, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f544;}

	// inline asm
	@%p147 bra 	BB0_142;

	mov.u32 	%r402, 2;
	mov.u64 	%rd163, image_RNM1;
	cvta.global.u64 	%rd152, %rd163;
	mov.u32 	%r349, 8;
	// inline asm
	call (%rd151), _rt_buffer_get_64, (%rd152, %r402, %r349, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs81, %rs82, %rs83, %rs84}, [%rd151];
	// inline asm
	{  cvt.f32.f16 %f1035, %rs81;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1036, %rs82;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1037, %rs83;}

	// inline asm
	// inline asm
	call (%rd157), _rt_buffer_get_64, (%rd152, %r402, %r349, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1038, %f244, %f1035;
	add.f32 	%f1039, %f245, %f1036;
	add.f32 	%f1040, %f246, %f1037;
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f1040;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f1039;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f1038;}

	// inline asm
	st.v4.u16 	[%rd157], {%rs78, %rs79, %rs80, %rs74};
	bra.uni 	BB0_143;

BB0_142:
	mov.u32 	%r405, 2;
	mov.u64 	%rd170, image_RNM1;
	cvta.global.u64 	%rd165, %rd170;
	mov.u32 	%r351, 8;
	// inline asm
	call (%rd164), _rt_buffer_get_64, (%rd165, %r405, %r351, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f246;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f245;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f244;}

	// inline asm
	st.v4.u16 	[%rd164], {%rs85, %rs86, %rs87, %rs74};

BB0_143:
	ld.global.u32 	%r352, [additive];
	setp.eq.s32	%p148, %r352, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f544;}

	// inline asm
	@%p148 bra 	BB0_145;

	mov.u32 	%r403, 2;
	mov.u64 	%rd183, image_RNM2;
	cvta.global.u64 	%rd172, %rd183;
	mov.u32 	%r356, 8;
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd172, %r403, %r356, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs95, %rs96, %rs97, %rs98}, [%rd171];
	// inline asm
	{  cvt.f32.f16 %f1045, %rs95;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1046, %rs96;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1047, %rs97;}

	// inline asm
	// inline asm
	call (%rd177), _rt_buffer_get_64, (%rd172, %r403, %r356, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	add.f32 	%f1048, %f247, %f1045;
	add.f32 	%f1049, %f248, %f1046;
	add.f32 	%f1050, %f249, %f1047;
	// inline asm
	{  cvt.rn.f16.f32 %rs94, %f1050;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs93, %f1049;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f1048;}

	// inline asm
	st.v4.u16 	[%rd177], {%rs92, %rs93, %rs94, %rs88};
	bra.uni 	BB0_163;

BB0_145:
	mov.u32 	%r404, 2;
	mov.u64 	%rd190, image_RNM2;
	cvta.global.u64 	%rd185, %rd190;
	mov.u32 	%r358, 8;
	// inline asm
	call (%rd184), _rt_buffer_get_64, (%rd185, %r404, %r358, %rd20, %rd21, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f249;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f248;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f247;}

	// inline asm
	st.v4.u16 	[%rd184], {%rs99, %rs100, %rs101, %rs88};

BB0_163:
	ret;
}


