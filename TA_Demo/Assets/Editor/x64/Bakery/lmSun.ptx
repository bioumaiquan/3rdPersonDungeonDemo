//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<126>;
	.reg .b16 	%rs<76>;
	.reg .f32 	%f<728>;
	.reg .b32 	%r<368>;
	.reg .b64 	%rd<187>;


	mov.u64 	%rd186, __local_depot0;
	cvta.local.u64 	%SP, %rd186;
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	cvt.u64.u32	%rd24, %r106;
	cvt.u64.u32	%rd25, %r107;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r104, 2;
	mov.u32 	%r105, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r104, %r105, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r1, [%rd22];
	shr.u32 	%r110, %r1, 16;
	cvt.u16.u32	%rs1, %r110;
	and.b16  	%rs4, %rs1, 255;
	cvt.u16.u32	%rs5, %r1;
	or.b16  	%rs6, %rs5, %rs4;
	setp.eq.s16	%p5, %rs6, 0;
	mov.f32 	%f696, 0f00000000;
	mov.f32 	%f697, %f696;
	mov.f32 	%f698, %f696;
	@%p5 bra 	BB0_2;

	ld.u8 	%rs7, [%rd22+1];
	and.b16  	%rs9, %rs5, 255;
	cvt.rn.f32.u16	%f128, %rs9;
	div.rn.f32 	%f129, %f128, 0f437F0000;
	fma.rn.f32 	%f130, %f129, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f131, %rs7;
	div.rn.f32 	%f132, %f131, 0f437F0000;
	fma.rn.f32 	%f133, %f132, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f134, %rs4;
	div.rn.f32 	%f135, %f134, 0f437F0000;
	fma.rn.f32 	%f136, %f135, 0f40000000, 0fBF800000;
	mul.f32 	%f137, %f133, %f133;
	fma.rn.f32 	%f138, %f130, %f130, %f137;
	fma.rn.f32 	%f139, %f136, %f136, %f138;
	sqrt.rn.f32 	%f140, %f139;
	rcp.rn.f32 	%f141, %f140;
	mul.f32 	%f696, %f130, %f141;
	mul.f32 	%f697, %f133, %f141;
	mul.f32 	%f698, %f136, %f141;

BB0_2:
	ld.global.v2.u32 	{%r111, %r112}, [pixelID];
	ld.global.v2.u32 	{%r114, %r115}, [tileInfo];
	add.s32 	%r2, %r111, %r114;
	add.s32 	%r3, %r112, %r115;
	setp.eq.f32	%p6, %f697, 0f00000000;
	setp.eq.f32	%p7, %f696, 0f00000000;
	and.pred  	%p8, %p7, %p6;
	setp.eq.f32	%p9, %f698, 0f00000000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_122;
	bra.uni 	BB0_3;

BB0_122:
	ld.global.u32 	%r367, [imageEnabled];
	and.b32  	%r311, %r367, 1;
	setp.eq.b32	%p121, %r311, 1;
	@!%p121 bra 	BB0_124;
	bra.uni 	BB0_123;

BB0_123:
	cvt.u64.u32	%rd139, %r2;
	cvt.u64.u32	%rd140, %r3;
	mov.u64 	%rd143, image;
	cvta.global.u64 	%rd138, %rd143;
	// inline asm
	call (%rd137), _rt_buffer_get_64, (%rd138, %r104, %r105, %rd139, %rd140, %rd27, %rd27);
	// inline asm
	mov.u16 	%rs57, 0;
	st.v4.u8 	[%rd137], {%rs57, %rs57, %rs57, %rs57};
	ld.global.u32 	%r367, [imageEnabled];

BB0_124:
	and.b32  	%r314, %r367, 8;
	setp.eq.s32	%p122, %r314, 0;
	@%p122 bra 	BB0_126;

	cvt.u64.u32	%rd146, %r2;
	cvt.u64.u32	%rd147, %r3;
	mov.u64 	%rd150, image_Mask;
	cvta.global.u64 	%rd145, %rd150;
	// inline asm
	call (%rd144), _rt_buffer_get_64, (%rd145, %r104, %r104, %rd146, %rd147, %rd27, %rd27);
	// inline asm
	mov.f32 	%f660, 0f00000000;
	cvt.rzi.u32.f32	%r317, %f660;
	cvt.u16.u32	%rs58, %r317;
	mov.u16 	%rs59, 0;
	st.v2.u8 	[%rd144], {%rs58, %rs59};
	ld.global.u32 	%r367, [imageEnabled];

BB0_126:
	and.b32  	%r318, %r367, 4;
	setp.eq.s32	%p123, %r318, 0;
	@%p123 bra 	BB0_130;

	ld.global.u32 	%r319, [additive];
	setp.eq.s32	%p124, %r319, 0;
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	@%p124 bra 	BB0_129;

	mov.u64 	%rd163, image_HDR;
	cvta.global.u64 	%rd152, %rd163;
	mov.u32 	%r323, 8;
	// inline asm
	call (%rd151), _rt_buffer_get_64, (%rd152, %r104, %r323, %rd20, %rd21, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd151];
	// inline asm
	{  cvt.f32.f16 %f661, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f662, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f663, %rs68;}

	// inline asm
	// inline asm
	call (%rd157), _rt_buffer_get_64, (%rd152, %r104, %r323, %rd20, %rd21, %rd27, %rd27);
	// inline asm
	add.f32 	%f664, %f661, 0f00000000;
	add.f32 	%f665, %f662, 0f00000000;
	add.f32 	%f666, %f663, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f666;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f665;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f664;}

	// inline asm
	mov.u16 	%rs70, 0;
	st.v4.u16 	[%rd157], {%rs63, %rs64, %rs65, %rs70};
	bra.uni 	BB0_130;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f142, %f696, %f7;
	mul.f32 	%f143, %f697, %f8;
	neg.f32 	%f144, %f143;
	sub.f32 	%f145, %f144, %f142;
	mul.f32 	%f146, %f698, %f9;
	sub.f32 	%f10, %f145, %f146;
	ld.global.u32 	%r119, [ignoreNormal];
	setp.eq.s32	%p11, %r119, 0;
	setp.le.f32	%p12, %f10, 0f00000000;
	and.pred  	%p13, %p11, %p12;
	@%p13 bra 	BB0_112;
	bra.uni 	BB0_4;

BB0_112:
	ld.global.u32 	%r365, [imageEnabled];
	and.b32  	%r294, %r365, 1;
	setp.eq.b32	%p116, %r294, 1;
	@!%p116 bra 	BB0_114;
	bra.uni 	BB0_113;

BB0_113:
	cvt.u64.u32	%rd98, %r2;
	cvt.u64.u32	%rd99, %r3;
	mov.u64 	%rd102, image;
	cvta.global.u64 	%rd97, %rd102;
	// inline asm
	call (%rd96), _rt_buffer_get_64, (%rd97, %r104, %r105, %rd98, %rd99, %rd27, %rd27);
	// inline asm
	mov.u16 	%rs37, 255;
	mov.u16 	%rs38, 0;
	st.v4.u8 	[%rd96], {%rs38, %rs38, %rs38, %rs37};
	ld.global.u32 	%r365, [imageEnabled];

BB0_114:
	and.b32  	%r297, %r365, 8;
	setp.eq.s32	%p117, %r297, 0;
	@%p117 bra 	BB0_116;

	cvt.u64.u32	%rd105, %r2;
	cvt.u64.u32	%rd106, %r3;
	mov.u64 	%rd109, image_Mask;
	cvta.global.u64 	%rd104, %rd109;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd104, %r104, %r104, %rd105, %rd106, %rd27, %rd27);
	// inline asm
	mov.f32 	%f649, 0f00000000;
	cvt.rzi.u32.f32	%r300, %f649;
	cvt.u16.u32	%rs39, %r300;
	mov.u16 	%rs40, 255;
	st.v2.u8 	[%rd103], {%rs39, %rs40};
	ld.global.u32 	%r365, [imageEnabled];

BB0_116:
	and.b32  	%r301, %r365, 4;
	setp.eq.s32	%p118, %r301, 0;
	@%p118 bra 	BB0_120;

	ld.global.u32 	%r302, [additive];
	setp.eq.s32	%p119, %r302, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	mov.f32 	%f650, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f650;}

	// inline asm
	@%p119 bra 	BB0_119;

	mov.u64 	%rd122, image_HDR;
	cvta.global.u64 	%rd111, %rd122;
	mov.u32 	%r306, 8;
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd111, %r104, %r306, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs48, %rs49, %rs50, %rs51}, [%rd110];
	// inline asm
	{  cvt.f32.f16 %f651, %rs48;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f652, %rs49;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f653, %rs50;}

	// inline asm
	// inline asm
	call (%rd116), _rt_buffer_get_64, (%rd111, %r104, %r306, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f654, %f651, 0f00000000;
	add.f32 	%f655, %f652, 0f00000000;
	add.f32 	%f656, %f653, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f656;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f655;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f654;}

	// inline asm
	st.v4.u16 	[%rd116], {%rs45, %rs46, %rs47, %rs41};
	bra.uni 	BB0_120;

BB0_4:
	ld.global.v2.u32 	{%r124, %r125}, [pixelID];
	cvt.u64.u32	%rd31, %r124;
	cvt.u64.u32	%rd32, %r125;
	mov.u64 	%rd41, uvpos;
	cvta.global.u64 	%rd30, %rd41;
	mov.u32 	%r121, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r104, %r121, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f148, [%rd29+8];
	ld.f32 	%f149, [%rd29+4];
	ld.f32 	%f150, [%rd29];
	mul.f32 	%f151, %f150, 0f3456BF95;
	mul.f32 	%f152, %f149, 0f3456BF95;
	mul.f32 	%f153, %f148, 0f3456BF95;
	abs.f32 	%f154, %f696;
	div.rn.f32 	%f155, %f151, %f154;
	abs.f32 	%f156, %f697;
	div.rn.f32 	%f157, %f152, %f156;
	abs.f32 	%f158, %f698;
	div.rn.f32 	%f159, %f153, %f158;
	abs.f32 	%f160, %f155;
	abs.f32 	%f161, %f157;
	abs.f32 	%f162, %f159;
	mov.f32 	%f163, 0f38D1B717;
	max.f32 	%f164, %f160, %f163;
	max.f32 	%f165, %f161, %f163;
	max.f32 	%f166, %f162, %f163;
	fma.rn.f32 	%f11, %f696, %f164, %f150;
	fma.rn.f32 	%f12, %f697, %f165, %f149;
	fma.rn.f32 	%f13, %f698, %f166, %f148;
	abs.f32 	%f167, %f9;
	abs.f32 	%f168, %f7;
	setp.gt.f32	%p14, %f168, %f167;
	neg.f32 	%f169, %f8;
	selp.f32	%f170, %f169, 0f00000000, %p14;
	neg.f32 	%f171, %f9;
	selp.f32	%f172, %f7, %f171, %p14;
	selp.f32	%f173, 0f00000000, %f8, %p14;
	mul.f32 	%f174, %f172, %f172;
	fma.rn.f32 	%f175, %f170, %f170, %f174;
	fma.rn.f32 	%f176, %f173, %f173, %f175;
	sqrt.rn.f32 	%f177, %f176;
	rcp.rn.f32 	%f178, %f177;
	mul.f32 	%f14, %f170, %f178;
	mul.f32 	%f15, %f172, %f178;
	mul.f32 	%f16, %f173, %f178;
	ld.global.v2.u32 	{%r128, %r129}, [pixelID];
	cvt.u64.u32	%rd37, %r128;
	cvt.u64.u32	%rd38, %r129;
	mov.u64 	%rd42, rnd_seeds;
	cvta.global.u64 	%rd36, %rd42;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r104, %r105, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.global.u32 	%r334, [samples];
	mov.f32 	%f713, 0f00000000;
	setp.lt.s32	%p15, %r334, 1;
	@%p15 bra 	BB0_56;

	cvt.rn.f32.s32	%f180, %r334;
	rcp.rn.f32 	%f17, %f180;
	ld.u32 	%r360, [%rd35];
	mul.f32 	%f18, %f11, 0f3456BF95;
	mul.f32 	%f19, %f12, 0f3456BF95;
	mul.f32 	%f20, %f13, 0f3456BF95;
	mul.f32 	%f181, %f7, %f15;
	mul.f32 	%f182, %f8, %f14;
	sub.f32 	%f21, %f182, %f181;
	mul.f32 	%f183, %f9, %f14;
	mul.f32 	%f184, %f7, %f16;
	sub.f32 	%f22, %f184, %f183;
	mul.f32 	%f185, %f8, %f16;
	mul.f32 	%f186, %f9, %f15;
	sub.f32 	%f23, %f186, %f185;
	mov.f32 	%f713, 0f00000000;
	mov.u32 	%r335, 0;
	abs.f32 	%f187, %f19;
	abs.f32 	%f188, %f18;
	max.f32 	%f189, %f188, %f187;
	abs.f32 	%f190, %f20;
	max.f32 	%f191, %f189, %f190;

BB0_6:
	setp.lt.s32	%p16, %r334, 1;
	@%p16 bra 	BB0_55;

	cvt.rn.f32.s32	%f25, %r335;
	max.f32 	%f26, %f191, %f163;
	mov.u32 	%r337, 0;

BB0_8:
	mad.lo.s32 	%r134, %r360, 1664525, 1013904223;
	and.b32  	%r135, %r134, 16777215;
	cvt.rn.f32.u32	%f193, %r135;
	fma.rn.f32 	%f194, %f193, 0f33800000, %f25;
	mul.f32 	%f195, %f17, %f194;
	mad.lo.s32 	%r360, %r134, 1664525, 1013904223;
	and.b32  	%r136, %r360, 16777215;
	cvt.rn.f32.u32	%f196, %r136;
	cvt.rn.f32.s32	%f197, %r337;
	fma.rn.f32 	%f198, %f196, 0f33800000, %f197;
	mul.f32 	%f199, %f17, %f198;
	sqrt.rn.f32 	%f28, %f195;
	mul.f32 	%f707, %f199, 0f40C90FDB;
	abs.f32 	%f30, %f707;
	setp.neu.f32	%p17, %f30, 0f7F800000;
	mov.f32 	%f701, %f707;
	@%p17 bra 	BB0_10;

	mov.f32 	%f200, 0f00000000;
	mul.rn.f32 	%f701, %f707, %f200;

BB0_10:
	mul.f32 	%f201, %f701, 0f3F22F983;
	cvt.rni.s32.f32	%r348, %f201;
	cvt.rn.f32.s32	%f202, %r348;
	neg.f32 	%f203, %f202;
	mov.f32 	%f204, 0f3FC90FDA;
	fma.rn.f32 	%f205, %f203, %f204, %f701;
	mov.f32 	%f206, 0f33A22168;
	fma.rn.f32 	%f207, %f203, %f206, %f205;
	mov.f32 	%f208, 0f27C234C5;
	fma.rn.f32 	%f702, %f203, %f208, %f207;
	abs.f32 	%f209, %f701;
	setp.leu.f32	%p18, %f209, 0f47CE4780;
	@%p18 bra 	BB0_21;

	mov.b32 	 %r13, %f701;
	shr.u32 	%r14, %r13, 23;
	shl.b32 	%r139, %r13, 8;
	or.b32  	%r15, %r139, -2147483648;
	add.u64 	%rd44, %SP, 0;
	cvta.to.local.u64 	%rd183, %rd44;
	mov.u32 	%r340, 0;
	mov.u64 	%rd182, __cudart_i2opi_f;
	mov.u32 	%r339, -6;

BB0_12:
	.pragma "nounroll";
	ld.const.u32 	%r142, [%rd182];
	// inline asm
	{
	mad.lo.cc.u32   %r140, %r142, %r15, %r340;
	madc.hi.u32     %r340, %r142, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd183], %r140;
	add.s64 	%rd183, %rd183, 4;
	add.s64 	%rd182, %rd182, 4;
	add.s32 	%r339, %r339, 1;
	setp.ne.s32	%p19, %r339, 0;
	@%p19 bra 	BB0_12;

	and.b32  	%r145, %r14, 255;
	add.s32 	%r146, %r145, -128;
	shr.u32 	%r147, %r146, 5;
	and.b32  	%r20, %r13, -2147483648;
	cvta.to.local.u64 	%rd46, %rd44;
	st.local.u32 	[%rd46+24], %r340;
	mov.u32 	%r148, 6;
	sub.s32 	%r149, %r148, %r147;
	mul.wide.s32 	%rd47, %r149, 4;
	add.s64 	%rd8, %rd46, %rd47;
	ld.local.u32 	%r341, [%rd8];
	ld.local.u32 	%r342, [%rd8+-4];
	and.b32  	%r23, %r14, 31;
	setp.eq.s32	%p20, %r23, 0;
	@%p20 bra 	BB0_15;

	mov.u32 	%r150, 32;
	sub.s32 	%r151, %r150, %r23;
	shr.u32 	%r152, %r342, %r151;
	shl.b32 	%r153, %r341, %r23;
	add.s32 	%r341, %r152, %r153;
	ld.local.u32 	%r154, [%rd8+-8];
	shr.u32 	%r155, %r154, %r151;
	shl.b32 	%r156, %r342, %r23;
	add.s32 	%r342, %r155, %r156;

BB0_15:
	shr.u32 	%r157, %r342, 30;
	shl.b32 	%r158, %r341, 2;
	add.s32 	%r343, %r157, %r158;
	shl.b32 	%r29, %r342, 2;
	shr.u32 	%r159, %r343, 31;
	shr.u32 	%r160, %r341, 30;
	add.s32 	%r30, %r159, %r160;
	setp.eq.s32	%p21, %r159, 0;
	@%p21 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r344, %r20;
	mov.u32 	%r345, %r29;
	bra.uni 	BB0_18;

BB0_17:
	not.b32 	%r161, %r343;
	neg.s32 	%r345, %r29;
	setp.eq.s32	%p22, %r29, 0;
	selp.u32	%r162, 1, 0, %p22;
	add.s32 	%r343, %r162, %r161;
	xor.b32  	%r344, %r20, -2147483648;

BB0_18:
	clz.b32 	%r347, %r343;
	setp.eq.s32	%p23, %r347, 0;
	shl.b32 	%r163, %r343, %r347;
	mov.u32 	%r164, 32;
	sub.s32 	%r165, %r164, %r347;
	shr.u32 	%r166, %r345, %r165;
	add.s32 	%r167, %r166, %r163;
	selp.b32	%r38, %r343, %r167, %p23;
	mov.u32 	%r168, -921707870;
	mul.hi.u32 	%r346, %r38, %r168;
	setp.eq.s32	%p24, %r20, 0;
	neg.s32 	%r169, %r30;
	selp.b32	%r348, %r30, %r169, %p24;
	setp.lt.s32	%p25, %r346, 1;
	@%p25 bra 	BB0_20;

	mul.lo.s32 	%r170, %r38, -921707870;
	shr.u32 	%r171, %r170, 31;
	shl.b32 	%r172, %r346, 1;
	add.s32 	%r346, %r171, %r172;
	add.s32 	%r347, %r347, 1;

BB0_20:
	mov.u32 	%r173, 126;
	sub.s32 	%r174, %r173, %r347;
	shl.b32 	%r175, %r174, 23;
	add.s32 	%r176, %r346, 1;
	shr.u32 	%r177, %r176, 7;
	add.s32 	%r178, %r177, 1;
	shr.u32 	%r179, %r178, 1;
	add.s32 	%r180, %r179, %r175;
	or.b32  	%r181, %r180, %r344;
	mov.b32 	 %f702, %r181;

BB0_21:
	mul.rn.f32 	%f36, %f702, %f702;
	add.s32 	%r46, %r348, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p26, %r47, 0;
	@%p26 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f212, 0f3C08839E;
	mov.f32 	%f213, 0fB94CA1F9;
	fma.rn.f32 	%f703, %f213, %f36, %f212;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f210, 0fBAB6061A;
	mov.f32 	%f211, 0f37CCF5CE;
	fma.rn.f32 	%f703, %f211, %f36, %f210;

BB0_24:
	@%p26 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f217, 0fBE2AAAA3;
	fma.rn.f32 	%f218, %f703, %f36, %f217;
	mov.f32 	%f219, 0f00000000;
	fma.rn.f32 	%f704, %f218, %f36, %f219;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f214, 0f3D2AAAA5;
	fma.rn.f32 	%f215, %f703, %f36, %f214;
	mov.f32 	%f216, 0fBF000000;
	fma.rn.f32 	%f704, %f215, %f36, %f216;

BB0_27:
	fma.rn.f32 	%f705, %f704, %f702, %f702;
	@%p26 bra 	BB0_29;

	mov.f32 	%f220, 0f3F800000;
	fma.rn.f32 	%f705, %f704, %f36, %f220;

BB0_29:
	and.b32  	%r182, %r46, 2;
	setp.eq.s32	%p29, %r182, 0;
	@%p29 bra 	BB0_31;

	mov.f32 	%f221, 0f00000000;
	mov.f32 	%f222, 0fBF800000;
	fma.rn.f32 	%f705, %f705, %f222, %f221;

BB0_31:
	@%p17 bra 	BB0_33;

	mov.f32 	%f223, 0f00000000;
	mul.rn.f32 	%f707, %f707, %f223;

BB0_33:
	mul.f32 	%f224, %f707, 0f3F22F983;
	cvt.rni.s32.f32	%r358, %f224;
	cvt.rn.f32.s32	%f225, %r358;
	neg.f32 	%f226, %f225;
	fma.rn.f32 	%f228, %f226, %f204, %f707;
	fma.rn.f32 	%f230, %f226, %f206, %f228;
	fma.rn.f32 	%f708, %f226, %f208, %f230;
	abs.f32 	%f232, %f707;
	setp.leu.f32	%p31, %f232, 0f47CE4780;
	@%p31 bra 	BB0_44;

	mov.b32 	 %r49, %f707;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r185, %r49, 8;
	or.b32  	%r51, %r185, -2147483648;
	add.u64 	%rd49, %SP, 0;
	cvta.to.local.u64 	%rd185, %rd49;
	mov.u32 	%r350, 0;
	mov.u64 	%rd184, __cudart_i2opi_f;
	mov.u32 	%r349, -6;

BB0_35:
	.pragma "nounroll";
	ld.const.u32 	%r188, [%rd184];
	// inline asm
	{
	mad.lo.cc.u32   %r186, %r188, %r51, %r350;
	madc.hi.u32     %r350, %r188, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd185], %r186;
	add.s64 	%rd185, %rd185, 4;
	add.s64 	%rd184, %rd184, 4;
	add.s32 	%r349, %r349, 1;
	setp.ne.s32	%p32, %r349, 0;
	@%p32 bra 	BB0_35;

	and.b32  	%r191, %r50, 255;
	add.s32 	%r192, %r191, -128;
	shr.u32 	%r193, %r192, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd51, %rd49;
	st.local.u32 	[%rd51+24], %r350;
	mov.u32 	%r194, 6;
	sub.s32 	%r195, %r194, %r193;
	mul.wide.s32 	%rd52, %r195, 4;
	add.s64 	%rd14, %rd51, %rd52;
	ld.local.u32 	%r351, [%rd14];
	ld.local.u32 	%r352, [%rd14+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p33, %r59, 0;
	@%p33 bra 	BB0_38;

	mov.u32 	%r196, 32;
	sub.s32 	%r197, %r196, %r59;
	shr.u32 	%r198, %r352, %r197;
	shl.b32 	%r199, %r351, %r59;
	add.s32 	%r351, %r198, %r199;
	ld.local.u32 	%r200, [%rd14+-8];
	shr.u32 	%r201, %r200, %r197;
	shl.b32 	%r202, %r352, %r59;
	add.s32 	%r352, %r201, %r202;

BB0_38:
	shr.u32 	%r203, %r352, 30;
	shl.b32 	%r204, %r351, 2;
	add.s32 	%r353, %r203, %r204;
	shl.b32 	%r65, %r352, 2;
	shr.u32 	%r205, %r353, 31;
	shr.u32 	%r206, %r351, 30;
	add.s32 	%r66, %r205, %r206;
	setp.eq.s32	%p34, %r205, 0;
	@%p34 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r354, %r56;
	mov.u32 	%r355, %r65;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r207, %r353;
	neg.s32 	%r355, %r65;
	setp.eq.s32	%p35, %r65, 0;
	selp.u32	%r208, 1, 0, %p35;
	add.s32 	%r353, %r208, %r207;
	xor.b32  	%r354, %r56, -2147483648;

BB0_41:
	clz.b32 	%r357, %r353;
	setp.eq.s32	%p36, %r357, 0;
	shl.b32 	%r209, %r353, %r357;
	mov.u32 	%r210, 32;
	sub.s32 	%r211, %r210, %r357;
	shr.u32 	%r212, %r355, %r211;
	add.s32 	%r213, %r212, %r209;
	selp.b32	%r74, %r353, %r213, %p36;
	mov.u32 	%r214, -921707870;
	mul.hi.u32 	%r356, %r74, %r214;
	setp.eq.s32	%p37, %r56, 0;
	neg.s32 	%r215, %r66;
	selp.b32	%r358, %r66, %r215, %p37;
	setp.lt.s32	%p38, %r356, 1;
	@%p38 bra 	BB0_43;

	mul.lo.s32 	%r216, %r74, -921707870;
	shr.u32 	%r217, %r216, 31;
	shl.b32 	%r218, %r356, 1;
	add.s32 	%r356, %r217, %r218;
	add.s32 	%r357, %r357, 1;

BB0_43:
	mov.u32 	%r219, 126;
	sub.s32 	%r220, %r219, %r357;
	shl.b32 	%r221, %r220, 23;
	add.s32 	%r222, %r356, 1;
	shr.u32 	%r223, %r222, 7;
	add.s32 	%r224, %r223, 1;
	shr.u32 	%r225, %r224, 1;
	add.s32 	%r226, %r225, %r221;
	or.b32  	%r227, %r226, %r354;
	mov.b32 	 %f708, %r227;

BB0_44:
	mul.rn.f32 	%f53, %f708, %f708;
	and.b32  	%r82, %r358, 1;
	setp.eq.s32	%p39, %r82, 0;
	@%p39 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f235, 0f3C08839E;
	mov.f32 	%f236, 0fB94CA1F9;
	fma.rn.f32 	%f709, %f236, %f53, %f235;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f233, 0fBAB6061A;
	mov.f32 	%f234, 0f37CCF5CE;
	fma.rn.f32 	%f709, %f234, %f53, %f233;

BB0_47:
	@%p39 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f240, 0fBE2AAAA3;
	fma.rn.f32 	%f241, %f709, %f53, %f240;
	mov.f32 	%f242, 0f00000000;
	fma.rn.f32 	%f710, %f241, %f53, %f242;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f237, 0f3D2AAAA5;
	fma.rn.f32 	%f238, %f709, %f53, %f237;
	mov.f32 	%f239, 0fBF000000;
	fma.rn.f32 	%f710, %f238, %f53, %f239;

BB0_50:
	fma.rn.f32 	%f711, %f710, %f708, %f708;
	@%p39 bra 	BB0_52;

	mov.f32 	%f243, 0f3F800000;
	fma.rn.f32 	%f711, %f710, %f53, %f243;

BB0_52:
	and.b32  	%r228, %r358, 2;
	setp.eq.s32	%p42, %r228, 0;
	@%p42 bra 	BB0_54;

	mov.f32 	%f244, 0f00000000;
	mov.f32 	%f245, 0fBF800000;
	fma.rn.f32 	%f711, %f711, %f245, %f244;

BB0_54:
	mul.f32 	%f254, %f28, %f705;
	add.u64 	%rd53, %SP, 28;
	cvta.to.local.u64 	%rd54, %rd53;
	mul.f32 	%f255, %f254, %f254;
	mov.f32 	%f256, 0f3F800000;
	sub.f32 	%f257, %f256, %f255;
	mul.f32 	%f258, %f28, %f711;
	mul.f32 	%f259, %f258, %f258;
	sub.f32 	%f260, %f257, %f259;
	mov.f32 	%f261, 0f00000000;
	max.f32 	%f262, %f261, %f260;
	sqrt.rn.f32 	%f263, %f262;
	mul.f32 	%f264, %f14, %f258;
	mul.f32 	%f265, %f15, %f258;
	mul.f32 	%f266, %f16, %f258;
	fma.rn.f32 	%f267, %f23, %f254, %f264;
	fma.rn.f32 	%f268, %f22, %f254, %f265;
	fma.rn.f32 	%f269, %f21, %f254, %f266;
	fma.rn.f32 	%f270, %f7, %f263, %f267;
	fma.rn.f32 	%f271, %f8, %f263, %f268;
	fma.rn.f32 	%f272, %f9, %f263, %f269;
	add.f32 	%f273, %f7, %f270;
	add.f32 	%f274, %f8, %f271;
	add.f32 	%f275, %f9, %f272;
	ld.global.f32 	%f276, [shadowSpread];
	mul.f32 	%f277, %f276, %f273;
	mul.f32 	%f278, %f276, %f274;
	mul.f32 	%f279, %f276, %f275;
	sub.f32 	%f280, %f277, %f7;
	sub.f32 	%f281, %f278, %f8;
	sub.f32 	%f282, %f279, %f9;
	mul.f32 	%f283, %f281, %f281;
	fma.rn.f32 	%f284, %f280, %f280, %f283;
	fma.rn.f32 	%f285, %f282, %f282, %f284;
	sqrt.rn.f32 	%f286, %f285;
	rcp.rn.f32 	%f287, %f286;
	mul.f32 	%f249, %f287, %f280;
	mul.f32 	%f250, %f287, %f281;
	mul.f32 	%f251, %f287, %f282;
	mov.u32 	%r232, 1065353216;
	st.local.u32 	[%rd54], %r232;
	ld.global.u32 	%r229, [root];
	mov.u32 	%r230, 1;
	mov.f32 	%f253, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r229, %f11, %f12, %f13, %f249, %f250, %f251, %r230, %f26, %f253, %rd53, %r105);
	// inline asm
	ld.local.f32 	%f288, [%rd54];
	add.f32 	%f713, %f713, %f288;
	ld.global.u32 	%r334, [samples];
	add.s32 	%r337, %r337, 1;
	setp.lt.s32	%p43, %r337, %r334;
	@%p43 bra 	BB0_8;

BB0_55:
	add.s32 	%r335, %r335, 1;
	setp.lt.s32	%p44, %r335, %r334;
	@%p44 bra 	BB0_6;

BB0_56:
	setp.eq.s32	%p45, %r334, 0;
	mov.f32 	%f715, 0f3F800000;
	@%p45 bra 	BB0_58;

	mul.lo.s32 	%r233, %r334, %r334;
	cvt.rn.f32.s32	%f290, %r233;
	div.rn.f32 	%f715, %f713, %f290;

BB0_58:
	ld.global.f32 	%f291, [directColor];
	mul.f32 	%f292, %f715, %f291;
	ld.global.f32 	%f293, [directColor+4];
	mul.f32 	%f294, %f715, %f293;
	ld.global.f32 	%f295, [directColor+8];
	mul.f32 	%f296, %f715, %f295;
	cvt.sat.f32.f32	%f297, %f10;
	mul.f32 	%f298, %f292, %f297;
	mul.f32 	%f299, %f294, %f297;
	mul.f32 	%f300, %f296, %f297;
	ld.global.u32 	%r234, [ignoreNormal];
	setp.eq.s32	%p46, %r234, 0;
	selp.f32	%f70, %f298, %f292, %p46;
	selp.f32	%f71, %f299, %f294, %p46;
	selp.f32	%f72, %f300, %f296, %p46;
	ld.global.u32 	%r363, [imageEnabled];
	and.b32  	%r235, %r363, 8;
	setp.eq.s32	%p47, %r235, 0;
	@%p47 bra 	BB0_71;

	cvt.u64.u32	%rd57, %r2;
	cvt.u64.u32	%rd58, %r3;
	mov.u64 	%rd61, image_Mask;
	cvta.global.u64 	%rd56, %rd61;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd56, %r104, %r104, %rd57, %rd58, %rd27, %rd27);
	// inline asm
	mov.f32 	%f303, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f304, %f303;
	fma.rn.f32 	%f305, %f304, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f73, %f305;
	abs.f32 	%f74, %f715;
	setp.lt.f32	%p48, %f74, 0f00800000;
	mul.f32 	%f306, %f74, 0f4B800000;
	selp.f32	%f307, 0fC3170000, 0fC2FE0000, %p48;
	selp.f32	%f308, %f306, %f74, %p48;
	mov.b32 	 %r238, %f308;
	and.b32  	%r239, %r238, 8388607;
	or.b32  	%r240, %r239, 1065353216;
	mov.b32 	 %f309, %r240;
	shr.u32 	%r241, %r238, 23;
	cvt.rn.f32.u32	%f310, %r241;
	add.f32 	%f311, %f307, %f310;
	setp.gt.f32	%p49, %f309, 0f3FB504F3;
	mul.f32 	%f312, %f309, 0f3F000000;
	add.f32 	%f313, %f311, 0f3F800000;
	selp.f32	%f314, %f312, %f309, %p49;
	selp.f32	%f315, %f313, %f311, %p49;
	add.f32 	%f316, %f314, 0fBF800000;
	add.f32 	%f302, %f314, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f301,%f302;
	// inline asm
	add.f32 	%f317, %f316, %f316;
	mul.f32 	%f318, %f301, %f317;
	mul.f32 	%f319, %f318, %f318;
	mov.f32 	%f320, 0f3C4CAF63;
	mov.f32 	%f321, 0f3B18F0FE;
	fma.rn.f32 	%f322, %f321, %f319, %f320;
	mov.f32 	%f323, 0f3DAAAABD;
	fma.rn.f32 	%f324, %f322, %f319, %f323;
	mul.rn.f32 	%f325, %f324, %f319;
	mul.rn.f32 	%f326, %f325, %f318;
	sub.f32 	%f327, %f316, %f318;
	neg.f32 	%f328, %f318;
	add.f32 	%f329, %f327, %f327;
	fma.rn.f32 	%f330, %f328, %f316, %f329;
	mul.rn.f32 	%f331, %f301, %f330;
	add.f32 	%f332, %f326, %f318;
	sub.f32 	%f333, %f318, %f332;
	add.f32 	%f334, %f326, %f333;
	add.f32 	%f335, %f331, %f334;
	add.f32 	%f336, %f332, %f335;
	sub.f32 	%f337, %f332, %f336;
	add.f32 	%f338, %f335, %f337;
	mov.f32 	%f339, 0f3F317200;
	mul.rn.f32 	%f340, %f315, %f339;
	mov.f32 	%f341, 0f35BFBE8E;
	mul.rn.f32 	%f342, %f315, %f341;
	add.f32 	%f343, %f340, %f336;
	sub.f32 	%f344, %f340, %f343;
	add.f32 	%f345, %f336, %f344;
	add.f32 	%f346, %f338, %f345;
	add.f32 	%f347, %f342, %f346;
	add.f32 	%f348, %f343, %f347;
	sub.f32 	%f349, %f343, %f348;
	add.f32 	%f350, %f347, %f349;
	mov.f32 	%f351, 0f3EE8BA2E;
	mul.rn.f32 	%f352, %f351, %f348;
	neg.f32 	%f353, %f352;
	fma.rn.f32 	%f354, %f351, %f348, %f353;
	fma.rn.f32 	%f355, %f351, %f350, %f354;
	mov.f32 	%f356, 0f00000000;
	fma.rn.f32 	%f357, %f356, %f348, %f355;
	add.rn.f32 	%f358, %f352, %f357;
	neg.f32 	%f359, %f358;
	add.rn.f32 	%f360, %f352, %f359;
	add.rn.f32 	%f361, %f360, %f357;
	mov.b32 	 %r242, %f358;
	setp.eq.s32	%p50, %r242, 1118925336;
	add.s32 	%r243, %r242, -1;
	mov.b32 	 %f362, %r243;
	add.f32 	%f363, %f361, 0f37000000;
	selp.f32	%f364, %f362, %f358, %p50;
	selp.f32	%f75, %f363, %f361, %p50;
	mul.f32 	%f365, %f364, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f366, %f365;
	mov.f32 	%f367, 0fBF317200;
	fma.rn.f32 	%f368, %f366, %f367, %f364;
	mov.f32 	%f369, 0fB5BFBE8E;
	fma.rn.f32 	%f370, %f366, %f369, %f368;
	mul.f32 	%f371, %f370, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f372, %f371;
	add.f32 	%f373, %f366, 0f00000000;
	ex2.approx.f32 	%f374, %f373;
	mul.f32 	%f375, %f372, %f374;
	setp.lt.f32	%p51, %f364, 0fC2D20000;
	selp.f32	%f376, 0f00000000, %f375, %p51;
	setp.gt.f32	%p52, %f364, 0f42D20000;
	selp.f32	%f716, 0f7F800000, %f376, %p52;
	setp.eq.f32	%p53, %f716, 0f7F800000;
	@%p53 bra 	BB0_61;

	fma.rn.f32 	%f716, %f716, %f75, %f716;

BB0_61:
	setp.lt.f32	%p54, %f715, 0f00000000;
	setp.eq.f32	%p55, %f73, 0f3F800000;
	and.pred  	%p1, %p54, %p55;
	mov.b32 	 %r244, %f716;
	xor.b32  	%r245, %r244, -2147483648;
	mov.b32 	 %f377, %r245;
	selp.f32	%f718, %f377, %f716, %p1;
	setp.eq.f32	%p56, %f715, 0f00000000;
	@%p56 bra 	BB0_64;
	bra.uni 	BB0_62;

BB0_64:
	add.f32 	%f380, %f715, %f715;
	selp.f32	%f718, %f380, 0f00000000, %p55;
	bra.uni 	BB0_65;

BB0_129:
	mov.u64 	%rd170, image_HDR;
	cvta.global.u64 	%rd165, %rd170;
	mov.u32 	%r325, 8;
	// inline asm
	call (%rd164), _rt_buffer_get_64, (%rd165, %r104, %r325, %rd20, %rd21, %rd27, %rd27);
	// inline asm
	mov.f32 	%f667, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f667;}

	// inline asm
	mov.u16 	%rs72, 0;
	st.v4.u16 	[%rd164], {%rs71, %rs71, %rs71, %rs72};

BB0_130:
	ld.global.u8 	%rs73, [imageEnabled];
	and.b16  	%rs74, %rs73, 64;
	setp.eq.s16	%p125, %rs74, 0;
	@%p125 bra 	BB0_132;

	cvt.u64.u32	%rd173, %r2;
	cvt.u64.u32	%rd174, %r3;
	mov.u64 	%rd177, image_Dir;
	cvta.global.u64 	%rd172, %rd177;
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd172, %r104, %r105, %rd173, %rd174, %rd27, %rd27);
	// inline asm
	mov.u16 	%rs75, 0;
	st.v4.u8 	[%rd171], {%rs75, %rs75, %rs75, %rs75};
	bra.uni 	BB0_132;

BB0_119:
	mov.u64 	%rd129, image_HDR;
	cvta.global.u64 	%rd124, %rd129;
	mov.u32 	%r308, 8;
	// inline asm
	call (%rd123), _rt_buffer_get_64, (%rd124, %r104, %r308, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	mov.f32 	%f657, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f657;}

	// inline asm
	st.v4.u16 	[%rd123], {%rs52, %rs52, %rs52, %rs41};

BB0_120:
	ld.global.u8 	%rs53, [imageEnabled];
	and.b16  	%rs54, %rs53, 64;
	setp.eq.s16	%p120, %rs54, 0;
	@%p120 bra 	BB0_132;

	cvt.u64.u32	%rd132, %r2;
	cvt.u64.u32	%rd133, %r3;
	mov.u64 	%rd136, image_Dir;
	cvta.global.u64 	%rd131, %rd136;
	// inline asm
	call (%rd130), _rt_buffer_get_64, (%rd131, %r104, %r105, %rd132, %rd133, %rd27, %rd27);
	// inline asm
	mov.u16 	%rs55, 255;
	mov.u16 	%rs56, 0;
	st.v4.u8 	[%rd130], {%rs56, %rs56, %rs56, %rs55};
	bra.uni 	BB0_132;

BB0_62:
	setp.geu.f32	%p57, %f715, 0f00000000;
	@%p57 bra 	BB0_65;

	cvt.rzi.f32.f32	%f379, %f351;
	setp.neu.f32	%p58, %f379, 0f3EE8BA2E;
	selp.f32	%f718, 0f7FFFFFFF, %f718, %p58;

BB0_65:
	add.f32 	%f381, %f74, 0f3EE8BA2E;
	mov.b32 	 %r246, %f381;
	setp.lt.s32	%p60, %r246, 2139095040;
	@%p60 bra 	BB0_70;

	setp.gtu.f32	%p61, %f74, 0f7F800000;
	@%p61 bra 	BB0_69;
	bra.uni 	BB0_67;

BB0_69:
	add.f32 	%f718, %f715, 0f3EE8BA2E;
	bra.uni 	BB0_70;

BB0_67:
	setp.neu.f32	%p62, %f74, 0f7F800000;
	@%p62 bra 	BB0_70;

	selp.f32	%f718, 0fFF800000, 0f7F800000, %p1;

BB0_70:
	mul.f32 	%f382, %f718, 0f437F0000;
	setp.eq.f32	%p63, %f715, 0f3F800000;
	selp.f32	%f383, 0f437F0000, %f382, %p63;
	cvt.rzi.u32.f32	%r247, %f383;
	cvt.u16.u32	%rs11, %r247;
	mov.u16 	%rs12, 255;
	st.v2.u8 	[%rd55], {%rs11, %rs12};
	ld.global.u32 	%r363, [imageEnabled];

BB0_71:
	and.b32  	%r248, %r363, 1;
	setp.eq.b32	%p64, %r248, 1;
	@!%p64 bra 	BB0_106;
	bra.uni 	BB0_72;

BB0_72:
	mov.f32 	%f386, 0f3E666666;
	cvt.rzi.f32.f32	%f387, %f386;
	fma.rn.f32 	%f388, %f387, 0fC0000000, 0f3EE66666;
	abs.f32 	%f86, %f388;
	abs.f32 	%f87, %f70;
	setp.lt.f32	%p65, %f87, 0f00800000;
	mul.f32 	%f389, %f87, 0f4B800000;
	selp.f32	%f390, 0fC3170000, 0fC2FE0000, %p65;
	selp.f32	%f391, %f389, %f87, %p65;
	mov.b32 	 %r249, %f391;
	and.b32  	%r250, %r249, 8388607;
	or.b32  	%r251, %r250, 1065353216;
	mov.b32 	 %f392, %r251;
	shr.u32 	%r252, %r249, 23;
	cvt.rn.f32.u32	%f393, %r252;
	add.f32 	%f394, %f390, %f393;
	setp.gt.f32	%p66, %f392, 0f3FB504F3;
	mul.f32 	%f395, %f392, 0f3F000000;
	add.f32 	%f396, %f394, 0f3F800000;
	selp.f32	%f397, %f395, %f392, %p66;
	selp.f32	%f398, %f396, %f394, %p66;
	add.f32 	%f399, %f397, 0fBF800000;
	add.f32 	%f385, %f397, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f384,%f385;
	// inline asm
	add.f32 	%f400, %f399, %f399;
	mul.f32 	%f401, %f384, %f400;
	mul.f32 	%f402, %f401, %f401;
	mov.f32 	%f403, 0f3C4CAF63;
	mov.f32 	%f404, 0f3B18F0FE;
	fma.rn.f32 	%f405, %f404, %f402, %f403;
	mov.f32 	%f406, 0f3DAAAABD;
	fma.rn.f32 	%f407, %f405, %f402, %f406;
	mul.rn.f32 	%f408, %f407, %f402;
	mul.rn.f32 	%f409, %f408, %f401;
	sub.f32 	%f410, %f399, %f401;
	neg.f32 	%f411, %f401;
	add.f32 	%f412, %f410, %f410;
	fma.rn.f32 	%f413, %f411, %f399, %f412;
	mul.rn.f32 	%f414, %f384, %f413;
	add.f32 	%f415, %f409, %f401;
	sub.f32 	%f416, %f401, %f415;
	add.f32 	%f417, %f409, %f416;
	add.f32 	%f418, %f414, %f417;
	add.f32 	%f419, %f415, %f418;
	sub.f32 	%f420, %f415, %f419;
	add.f32 	%f421, %f418, %f420;
	mov.f32 	%f422, 0f3F317200;
	mul.rn.f32 	%f423, %f398, %f422;
	mov.f32 	%f424, 0f35BFBE8E;
	mul.rn.f32 	%f425, %f398, %f424;
	add.f32 	%f426, %f423, %f419;
	sub.f32 	%f427, %f423, %f426;
	add.f32 	%f428, %f419, %f427;
	add.f32 	%f429, %f421, %f428;
	add.f32 	%f430, %f425, %f429;
	add.f32 	%f431, %f426, %f430;
	sub.f32 	%f432, %f426, %f431;
	add.f32 	%f433, %f430, %f432;
	mov.f32 	%f434, 0f3EE66666;
	mul.rn.f32 	%f435, %f434, %f431;
	neg.f32 	%f436, %f435;
	fma.rn.f32 	%f437, %f434, %f431, %f436;
	fma.rn.f32 	%f438, %f434, %f433, %f437;
	mov.f32 	%f439, 0f00000000;
	fma.rn.f32 	%f440, %f439, %f431, %f438;
	add.rn.f32 	%f441, %f435, %f440;
	neg.f32 	%f442, %f441;
	add.rn.f32 	%f443, %f435, %f442;
	add.rn.f32 	%f444, %f443, %f440;
	mov.b32 	 %r253, %f441;
	setp.eq.s32	%p67, %r253, 1118925336;
	add.s32 	%r254, %r253, -1;
	mov.b32 	 %f445, %r254;
	add.f32 	%f446, %f444, 0f37000000;
	selp.f32	%f447, %f445, %f441, %p67;
	selp.f32	%f88, %f446, %f444, %p67;
	mul.f32 	%f448, %f447, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f449, %f448;
	mov.f32 	%f450, 0fBF317200;
	fma.rn.f32 	%f451, %f449, %f450, %f447;
	mov.f32 	%f452, 0fB5BFBE8E;
	fma.rn.f32 	%f453, %f449, %f452, %f451;
	mul.f32 	%f454, %f453, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f455, %f454;
	add.f32 	%f456, %f449, 0f00000000;
	ex2.approx.f32 	%f457, %f456;
	mul.f32 	%f458, %f455, %f457;
	setp.lt.f32	%p68, %f447, 0fC2D20000;
	selp.f32	%f459, 0f00000000, %f458, %p68;
	setp.gt.f32	%p69, %f447, 0f42D20000;
	selp.f32	%f719, 0f7F800000, %f459, %p69;
	setp.eq.f32	%p70, %f719, 0f7F800000;
	@%p70 bra 	BB0_74;

	fma.rn.f32 	%f719, %f719, %f88, %f719;

BB0_74:
	setp.lt.f32	%p71, %f70, 0f00000000;
	setp.eq.f32	%p72, %f86, 0f3F800000;
	and.pred  	%p2, %p71, %p72;
	mov.b32 	 %r255, %f719;
	xor.b32  	%r256, %r255, -2147483648;
	mov.b32 	 %f460, %r256;
	selp.f32	%f721, %f460, %f719, %p2;
	setp.eq.f32	%p73, %f70, 0f00000000;
	@%p73 bra 	BB0_77;
	bra.uni 	BB0_75;

BB0_77:
	add.f32 	%f463, %f70, %f70;
	selp.f32	%f721, %f463, 0f00000000, %p72;
	bra.uni 	BB0_78;

BB0_75:
	setp.geu.f32	%p74, %f70, 0f00000000;
	@%p74 bra 	BB0_78;

	cvt.rzi.f32.f32	%f462, %f434;
	setp.neu.f32	%p75, %f462, 0f3EE66666;
	selp.f32	%f721, 0f7FFFFFFF, %f721, %p75;

BB0_78:
	abs.f32 	%f668, %f70;
	add.f32 	%f464, %f668, 0f3EE66666;
	mov.b32 	 %r257, %f464;
	setp.lt.s32	%p77, %r257, 2139095040;
	@%p77 bra 	BB0_83;

	abs.f32 	%f685, %f70;
	setp.gtu.f32	%p78, %f685, 0f7F800000;
	@%p78 bra 	BB0_82;
	bra.uni 	BB0_80;

BB0_82:
	add.f32 	%f721, %f70, 0f3EE66666;
	bra.uni 	BB0_83;

BB0_80:
	abs.f32 	%f686, %f70;
	setp.neu.f32	%p79, %f686, 0f7F800000;
	@%p79 bra 	BB0_83;

	selp.f32	%f721, 0fFF800000, 0f7F800000, %p2;

BB0_83:
	mov.f32 	%f676, 0fB5BFBE8E;
	mov.f32 	%f675, 0fBF317200;
	mov.f32 	%f674, 0f00000000;
	mov.f32 	%f673, 0f35BFBE8E;
	mov.f32 	%f672, 0f3F317200;
	mov.f32 	%f671, 0f3DAAAABD;
	mov.f32 	%f670, 0f3C4CAF63;
	mov.f32 	%f669, 0f3B18F0FE;
	setp.eq.f32	%p80, %f70, 0f3F800000;
	selp.f32	%f99, 0f3F800000, %f721, %p80;
	abs.f32 	%f100, %f71;
	setp.lt.f32	%p81, %f100, 0f00800000;
	mul.f32 	%f467, %f100, 0f4B800000;
	selp.f32	%f468, 0fC3170000, 0fC2FE0000, %p81;
	selp.f32	%f469, %f467, %f100, %p81;
	mov.b32 	 %r258, %f469;
	and.b32  	%r259, %r258, 8388607;
	or.b32  	%r260, %r259, 1065353216;
	mov.b32 	 %f470, %r260;
	shr.u32 	%r261, %r258, 23;
	cvt.rn.f32.u32	%f471, %r261;
	add.f32 	%f472, %f468, %f471;
	setp.gt.f32	%p82, %f470, 0f3FB504F3;
	mul.f32 	%f473, %f470, 0f3F000000;
	add.f32 	%f474, %f472, 0f3F800000;
	selp.f32	%f475, %f473, %f470, %p82;
	selp.f32	%f476, %f474, %f472, %p82;
	add.f32 	%f477, %f475, 0fBF800000;
	add.f32 	%f466, %f475, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f465,%f466;
	// inline asm
	add.f32 	%f478, %f477, %f477;
	mul.f32 	%f479, %f465, %f478;
	mul.f32 	%f480, %f479, %f479;
	fma.rn.f32 	%f483, %f669, %f480, %f670;
	fma.rn.f32 	%f485, %f483, %f480, %f671;
	mul.rn.f32 	%f486, %f485, %f480;
	mul.rn.f32 	%f487, %f486, %f479;
	sub.f32 	%f488, %f477, %f479;
	neg.f32 	%f489, %f479;
	add.f32 	%f490, %f488, %f488;
	fma.rn.f32 	%f491, %f489, %f477, %f490;
	mul.rn.f32 	%f492, %f465, %f491;
	add.f32 	%f493, %f487, %f479;
	sub.f32 	%f494, %f479, %f493;
	add.f32 	%f495, %f487, %f494;
	add.f32 	%f496, %f492, %f495;
	add.f32 	%f497, %f493, %f496;
	sub.f32 	%f498, %f493, %f497;
	add.f32 	%f499, %f496, %f498;
	mul.rn.f32 	%f501, %f476, %f672;
	mul.rn.f32 	%f503, %f476, %f673;
	add.f32 	%f504, %f501, %f497;
	sub.f32 	%f505, %f501, %f504;
	add.f32 	%f506, %f497, %f505;
	add.f32 	%f507, %f499, %f506;
	add.f32 	%f508, %f503, %f507;
	add.f32 	%f509, %f504, %f508;
	sub.f32 	%f510, %f504, %f509;
	add.f32 	%f511, %f508, %f510;
	mul.rn.f32 	%f513, %f434, %f509;
	neg.f32 	%f514, %f513;
	fma.rn.f32 	%f515, %f434, %f509, %f514;
	fma.rn.f32 	%f516, %f434, %f511, %f515;
	fma.rn.f32 	%f518, %f674, %f509, %f516;
	add.rn.f32 	%f519, %f513, %f518;
	neg.f32 	%f520, %f519;
	add.rn.f32 	%f521, %f513, %f520;
	add.rn.f32 	%f522, %f521, %f518;
	mov.b32 	 %r262, %f519;
	setp.eq.s32	%p83, %r262, 1118925336;
	add.s32 	%r263, %r262, -1;
	mov.b32 	 %f523, %r263;
	add.f32 	%f524, %f522, 0f37000000;
	selp.f32	%f525, %f523, %f519, %p83;
	selp.f32	%f101, %f524, %f522, %p83;
	mul.f32 	%f526, %f525, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f527, %f526;
	fma.rn.f32 	%f529, %f527, %f675, %f525;
	fma.rn.f32 	%f531, %f527, %f676, %f529;
	mul.f32 	%f532, %f531, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f533, %f532;
	add.f32 	%f534, %f527, 0f00000000;
	ex2.approx.f32 	%f535, %f534;
	mul.f32 	%f536, %f533, %f535;
	setp.lt.f32	%p84, %f525, 0fC2D20000;
	selp.f32	%f537, 0f00000000, %f536, %p84;
	setp.gt.f32	%p85, %f525, 0f42D20000;
	selp.f32	%f722, 0f7F800000, %f537, %p85;
	setp.eq.f32	%p86, %f722, 0f7F800000;
	@%p86 bra 	BB0_85;

	fma.rn.f32 	%f722, %f722, %f101, %f722;

BB0_85:
	setp.lt.f32	%p87, %f71, 0f00000000;
	and.pred  	%p3, %p87, %p72;
	mov.b32 	 %r264, %f722;
	xor.b32  	%r265, %r264, -2147483648;
	mov.b32 	 %f538, %r265;
	selp.f32	%f724, %f538, %f722, %p3;
	setp.eq.f32	%p89, %f71, 0f00000000;
	@%p89 bra 	BB0_88;
	bra.uni 	BB0_86;

BB0_88:
	add.f32 	%f541, %f71, %f71;
	selp.f32	%f724, %f541, 0f00000000, %p72;
	bra.uni 	BB0_89;

BB0_86:
	setp.geu.f32	%p90, %f71, 0f00000000;
	@%p90 bra 	BB0_89;

	mov.f32 	%f692, 0f3EE66666;
	cvt.rzi.f32.f32	%f540, %f692;
	setp.neu.f32	%p91, %f540, 0f3EE66666;
	selp.f32	%f724, 0f7FFFFFFF, %f724, %p91;

BB0_89:
	abs.f32 	%f687, %f71;
	add.f32 	%f542, %f687, 0f3EE66666;
	mov.b32 	 %r266, %f542;
	setp.lt.s32	%p93, %r266, 2139095040;
	@%p93 bra 	BB0_94;

	abs.f32 	%f690, %f71;
	setp.gtu.f32	%p94, %f690, 0f7F800000;
	@%p94 bra 	BB0_93;
	bra.uni 	BB0_91;

BB0_93:
	add.f32 	%f724, %f71, 0f3EE66666;
	bra.uni 	BB0_94;

BB0_91:
	abs.f32 	%f691, %f71;
	setp.neu.f32	%p95, %f691, 0f7F800000;
	@%p95 bra 	BB0_94;

	selp.f32	%f724, 0fFF800000, 0f7F800000, %p3;

BB0_94:
	mov.f32 	%f688, 0f3EE66666;
	mov.f32 	%f684, 0fB5BFBE8E;
	mov.f32 	%f683, 0fBF317200;
	mov.f32 	%f682, 0f00000000;
	mov.f32 	%f681, 0f35BFBE8E;
	mov.f32 	%f680, 0f3F317200;
	mov.f32 	%f679, 0f3DAAAABD;
	mov.f32 	%f678, 0f3C4CAF63;
	mov.f32 	%f677, 0f3B18F0FE;
	setp.eq.f32	%p96, %f71, 0f3F800000;
	selp.f32	%f112, 0f3F800000, %f724, %p96;
	abs.f32 	%f113, %f72;
	setp.lt.f32	%p97, %f113, 0f00800000;
	mul.f32 	%f545, %f113, 0f4B800000;
	selp.f32	%f546, 0fC3170000, 0fC2FE0000, %p97;
	selp.f32	%f547, %f545, %f113, %p97;
	mov.b32 	 %r267, %f547;
	and.b32  	%r268, %r267, 8388607;
	or.b32  	%r269, %r268, 1065353216;
	mov.b32 	 %f548, %r269;
	shr.u32 	%r270, %r267, 23;
	cvt.rn.f32.u32	%f549, %r270;
	add.f32 	%f550, %f546, %f549;
	setp.gt.f32	%p98, %f548, 0f3FB504F3;
	mul.f32 	%f551, %f548, 0f3F000000;
	add.f32 	%f552, %f550, 0f3F800000;
	selp.f32	%f553, %f551, %f548, %p98;
	selp.f32	%f554, %f552, %f550, %p98;
	add.f32 	%f555, %f553, 0fBF800000;
	add.f32 	%f544, %f553, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f543,%f544;
	// inline asm
	add.f32 	%f556, %f555, %f555;
	mul.f32 	%f557, %f543, %f556;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f561, %f677, %f558, %f678;
	fma.rn.f32 	%f563, %f561, %f558, %f679;
	mul.rn.f32 	%f564, %f563, %f558;
	mul.rn.f32 	%f565, %f564, %f557;
	sub.f32 	%f566, %f555, %f557;
	neg.f32 	%f567, %f557;
	add.f32 	%f568, %f566, %f566;
	fma.rn.f32 	%f569, %f567, %f555, %f568;
	mul.rn.f32 	%f570, %f543, %f569;
	add.f32 	%f571, %f565, %f557;
	sub.f32 	%f572, %f557, %f571;
	add.f32 	%f573, %f565, %f572;
	add.f32 	%f574, %f570, %f573;
	add.f32 	%f575, %f571, %f574;
	sub.f32 	%f576, %f571, %f575;
	add.f32 	%f577, %f574, %f576;
	mul.rn.f32 	%f579, %f554, %f680;
	mul.rn.f32 	%f581, %f554, %f681;
	add.f32 	%f582, %f579, %f575;
	sub.f32 	%f583, %f579, %f582;
	add.f32 	%f584, %f575, %f583;
	add.f32 	%f585, %f577, %f584;
	add.f32 	%f586, %f581, %f585;
	add.f32 	%f587, %f582, %f586;
	sub.f32 	%f588, %f582, %f587;
	add.f32 	%f589, %f586, %f588;
	mul.rn.f32 	%f591, %f688, %f587;
	neg.f32 	%f592, %f591;
	fma.rn.f32 	%f593, %f688, %f587, %f592;
	fma.rn.f32 	%f594, %f688, %f589, %f593;
	fma.rn.f32 	%f596, %f682, %f587, %f594;
	add.rn.f32 	%f597, %f591, %f596;
	neg.f32 	%f598, %f597;
	add.rn.f32 	%f599, %f591, %f598;
	add.rn.f32 	%f600, %f599, %f596;
	mov.b32 	 %r271, %f597;
	setp.eq.s32	%p99, %r271, 1118925336;
	add.s32 	%r272, %r271, -1;
	mov.b32 	 %f601, %r272;
	add.f32 	%f602, %f600, 0f37000000;
	selp.f32	%f603, %f601, %f597, %p99;
	selp.f32	%f114, %f602, %f600, %p99;
	mul.f32 	%f604, %f603, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f605, %f604;
	fma.rn.f32 	%f607, %f605, %f683, %f603;
	fma.rn.f32 	%f609, %f605, %f684, %f607;
	mul.f32 	%f610, %f609, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f611, %f610;
	add.f32 	%f612, %f605, 0f00000000;
	ex2.approx.f32 	%f613, %f612;
	mul.f32 	%f614, %f611, %f613;
	setp.lt.f32	%p100, %f603, 0fC2D20000;
	selp.f32	%f615, 0f00000000, %f614, %p100;
	setp.gt.f32	%p101, %f603, 0f42D20000;
	selp.f32	%f725, 0f7F800000, %f615, %p101;
	setp.eq.f32	%p102, %f725, 0f7F800000;
	@%p102 bra 	BB0_96;

	fma.rn.f32 	%f725, %f725, %f114, %f725;

BB0_96:
	setp.lt.f32	%p103, %f72, 0f00000000;
	and.pred  	%p4, %p103, %p72;
	mov.b32 	 %r273, %f725;
	xor.b32  	%r274, %r273, -2147483648;
	mov.b32 	 %f616, %r274;
	selp.f32	%f727, %f616, %f725, %p4;
	setp.eq.f32	%p105, %f72, 0f00000000;
	@%p105 bra 	BB0_99;
	bra.uni 	BB0_97;

BB0_99:
	add.f32 	%f619, %f72, %f72;
	selp.f32	%f727, %f619, 0f00000000, %p72;
	bra.uni 	BB0_100;

BB0_97:
	setp.geu.f32	%p106, %f72, 0f00000000;
	@%p106 bra 	BB0_100;

	mov.f32 	%f689, 0f3EE66666;
	cvt.rzi.f32.f32	%f618, %f689;
	setp.neu.f32	%p107, %f618, 0f3EE66666;
	selp.f32	%f727, 0f7FFFFFFF, %f727, %p107;

BB0_100:
	abs.f32 	%f693, %f72;
	add.f32 	%f620, %f693, 0f3EE66666;
	mov.b32 	 %r275, %f620;
	setp.lt.s32	%p109, %r275, 2139095040;
	@%p109 bra 	BB0_105;

	abs.f32 	%f694, %f72;
	setp.gtu.f32	%p110, %f694, 0f7F800000;
	@%p110 bra 	BB0_104;
	bra.uni 	BB0_102;

BB0_104:
	add.f32 	%f727, %f72, 0f3EE66666;
	bra.uni 	BB0_105;

BB0_102:
	abs.f32 	%f695, %f72;
	setp.neu.f32	%p111, %f695, 0f7F800000;
	@%p111 bra 	BB0_105;

	selp.f32	%f727, 0fFF800000, 0f7F800000, %p4;

BB0_105:
	mov.u32 	%r329, 4;
	mov.u64 	%rd178, 0;
	mov.u32 	%r328, 2;
	setp.eq.f32	%p112, %f72, 0f3F800000;
	selp.f32	%f621, 0f3F800000, %f727, %p112;
	cvt.u64.u32	%rd65, %r3;
	cvt.u64.u32	%rd64, %r2;
	mov.u64 	%rd68, image;
	cvta.global.u64 	%rd63, %rd68;
	// inline asm
	call (%rd62), _rt_buffer_get_64, (%rd63, %r328, %r329, %rd64, %rd65, %rd178, %rd178);
	// inline asm
	cvt.sat.f32.f32	%f622, %f621;
	mul.f32 	%f623, %f622, 0f437FFD71;
	cvt.rzi.u32.f32	%r278, %f623;
	cvt.sat.f32.f32	%f624, %f112;
	mul.f32 	%f625, %f624, 0f437FFD71;
	cvt.rzi.u32.f32	%r279, %f625;
	cvt.sat.f32.f32	%f626, %f99;
	mul.f32 	%f627, %f626, 0f437FFD71;
	cvt.rzi.u32.f32	%r280, %f627;
	cvt.u16.u32	%rs13, %r278;
	cvt.u16.u32	%rs14, %r280;
	cvt.u16.u32	%rs15, %r279;
	mov.u16 	%rs16, 255;
	st.v4.u8 	[%rd62], {%rs13, %rs15, %rs14, %rs16};
	ld.global.u32 	%r363, [imageEnabled];

BB0_106:
	and.b32  	%r281, %r363, 4;
	setp.eq.s32	%p113, %r281, 0;
	@%p113 bra 	BB0_110;

	ld.global.u32 	%r282, [additive];
	setp.eq.s32	%p114, %r282, 0;
	cvt.u64.u32	%rd16, %r2;
	cvt.u64.u32	%rd17, %r3;
	mov.f32 	%f628, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f628;}

	// inline asm
	@%p114 bra 	BB0_109;

	mov.u64 	%rd179, 0;
	mov.u32 	%r330, 2;
	mov.u64 	%rd81, image_HDR;
	cvta.global.u64 	%rd70, %rd81;
	mov.u32 	%r286, 8;
	// inline asm
	call (%rd69), _rt_buffer_get_64, (%rd70, %r330, %r286, %rd16, %rd17, %rd179, %rd179);
	// inline asm
	ld.v4.u16 	{%rs24, %rs25, %rs26, %rs27}, [%rd69];
	// inline asm
	{  cvt.f32.f16 %f629, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f630, %rs25;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f631, %rs26;}

	// inline asm
	// inline asm
	call (%rd75), _rt_buffer_get_64, (%rd70, %r330, %r286, %rd16, %rd17, %rd179, %rd179);
	// inline asm
	add.f32 	%f632, %f70, %f629;
	add.f32 	%f633, %f71, %f630;
	add.f32 	%f634, %f72, %f631;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f634;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f633;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f632;}

	// inline asm
	st.v4.u16 	[%rd75], {%rs21, %rs22, %rs23, %rs17};
	bra.uni 	BB0_110;

BB0_109:
	mov.u64 	%rd180, 0;
	mov.u32 	%r331, 2;
	mov.u64 	%rd88, image_HDR;
	cvta.global.u64 	%rd83, %rd88;
	mov.u32 	%r288, 8;
	// inline asm
	call (%rd82), _rt_buffer_get_64, (%rd83, %r331, %r288, %rd16, %rd17, %rd180, %rd180);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f72;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f71;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f70;}

	// inline asm
	st.v4.u16 	[%rd82], {%rs28, %rs29, %rs30, %rs17};

BB0_110:
	ld.global.u8 	%rs31, [imageEnabled];
	and.b16  	%rs32, %rs31, 64;
	setp.eq.s16	%p115, %rs32, 0;
	@%p115 bra 	BB0_132;

	mov.u32 	%r333, 4;
	mov.u64 	%rd181, 0;
	mov.u32 	%r332, 2;
	ld.global.f32 	%f638, [directDir];
	ld.global.f32 	%f639, [directDir+4];
	ld.global.f32 	%f640, [directDir+8];
	cvt.u64.u32	%rd92, %r3;
	cvt.u64.u32	%rd91, %r2;
	mov.u64 	%rd95, image_Dir;
	cvta.global.u64 	%rd90, %rd95;
	// inline asm
	call (%rd89), _rt_buffer_get_64, (%rd90, %r332, %r333, %rd91, %rd92, %rd181, %rd181);
	// inline asm
	fma.rn.f32 	%f641, %f638, 0fBF000000, 0f3F000000;
	mul.f32 	%f642, %f641, 0f437F0000;
	cvt.rzi.u32.f32	%r291, %f642;
	fma.rn.f32 	%f643, %f639, 0fBF000000, 0f3F000000;
	mul.f32 	%f644, %f643, 0f437F0000;
	cvt.rzi.u32.f32	%r292, %f644;
	fma.rn.f32 	%f645, %f640, 0fBF000000, 0f3F000000;
	mul.f32 	%f646, %f645, 0f437F0000;
	cvt.rzi.u32.f32	%r293, %f646;
	cvt.u16.u32	%rs33, %r293;
	cvt.u16.u32	%rs34, %r292;
	cvt.u16.u32	%rs35, %r291;
	mov.u16 	%rs36, 255;
	st.v4.u8 	[%rd89], {%rs35, %rs34, %rs33, %rs36};

BB0_132:
	ret;
}


