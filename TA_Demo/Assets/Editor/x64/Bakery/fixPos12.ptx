//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 uvfacenormal[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvsmoothpos[1];
.global .align 1 .b8 triangleMarks[1];
.global .align 1 .b8 image_Mask[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<26>;
	.reg .b16 	%rs<12>;
	.reg .f32 	%f<356>;
	.reg .b32 	%r<129>;
	.reg .b64 	%rd<124>;


	mov.u64 	%rd123, __local_depot0;
	cvta.local.u64 	%SP, %rd123;
	ld.global.v2.u32 	{%r8, %r9}, [pixelID];
	cvt.u64.u32	%rd8, %r8;
	cvt.u64.u32	%rd9, %r9;
	mov.u64 	%rd12, uvfacenormal;
	cvta.global.u64 	%rd7, %rd12;
	mov.u32 	%r6, 2;
	mov.u32 	%r7, 4;
	mov.u64 	%rd11, 0;
	// inline asm
	call (%rd6), _rt_buffer_get_64, (%rd7, %r6, %r7, %rd8, %rd9, %rd11, %rd11);
	// inline asm
	ld.u32 	%r1, [%rd6];
	shr.u32 	%r12, %r1, 16;
	cvt.u16.u32	%rs1, %r12;
	and.b16  	%rs2, %rs1, 255;
	cvt.u16.u32	%rs3, %r1;
	or.b16  	%rs4, %rs3, %rs2;
	setp.eq.s16	%p1, %rs4, 0;
	mov.f32 	%f337, 0f00000000;
	mov.f32 	%f338, %f337;
	mov.f32 	%f339, %f337;
	@%p1 bra 	BB0_2;

	ld.u8 	%rs5, [%rd6+1];
	and.b16  	%rs7, %rs3, 255;
	cvt.rn.f32.u16	%f105, %rs7;
	div.rn.f32 	%f106, %f105, 0f437F0000;
	fma.rn.f32 	%f107, %f106, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f108, %rs5;
	div.rn.f32 	%f109, %f108, 0f437F0000;
	fma.rn.f32 	%f110, %f109, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f111, %rs2;
	div.rn.f32 	%f112, %f111, 0f437F0000;
	fma.rn.f32 	%f113, %f112, 0f40000000, 0fBF800000;
	mul.f32 	%f114, %f110, %f110;
	fma.rn.f32 	%f115, %f107, %f107, %f114;
	fma.rn.f32 	%f116, %f113, %f113, %f115;
	sqrt.rn.f32 	%f117, %f116;
	rcp.rn.f32 	%f118, %f117;
	mul.f32 	%f337, %f107, %f118;
	mul.f32 	%f338, %f110, %f118;
	mul.f32 	%f339, %f113, %f118;

BB0_2:
	ld.global.v2.u32 	{%r13, %r14}, [pixelID];
	ld.global.v2.u32 	{%r16, %r17}, [tileInfo];
	add.s32 	%r2, %r13, %r16;
	add.s32 	%r3, %r14, %r17;
	setp.eq.f32	%p2, %f338, 0f00000000;
	setp.eq.f32	%p3, %f337, 0f00000000;
	and.pred  	%p4, %p3, %p2;
	setp.eq.f32	%p5, %f339, 0f00000000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB0_25;
	bra.uni 	BB0_3;

BB0_25:
	cvt.u64.u32	%rd107, %r2;
	cvt.u64.u32	%rd108, %r3;
	mov.u64 	%rd111, image_HDR;
	cvta.global.u64 	%rd106, %rd111;
	mov.u32 	%r109, 16;
	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd106, %r6, %r109, %rd107, %rd108, %rd11, %rd11);
	// inline asm
	mov.f32 	%f329, 0f00000000;
	st.v4.f32 	[%rd105], {%f329, %f329, %f329, %f329};
	bra.uni 	BB0_26;

BB0_3:
	ld.global.v2.u32 	{%r39, %r40}, [pixelID];
	cvt.u64.u32	%rd15, %r39;
	cvt.u64.u32	%rd16, %r40;
	mov.u64 	%rd67, uvpos;
	cvta.global.u64 	%rd14, %rd67;
	mov.u32 	%r36, 16;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r6, %r36, %rd15, %rd16, %rd11, %rd11);
	// inline asm
	ld.f32 	%f7, [%rd13];
	ld.global.v2.u32 	{%r43, %r44}, [pixelID];
	cvt.u64.u32	%rd21, %r43;
	cvt.u64.u32	%rd22, %r44;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd14, %r6, %r36, %rd21, %rd22, %rd11, %rd11);
	// inline asm
	ld.f32 	%f8, [%rd19+4];
	ld.global.v2.u32 	{%r47, %r48}, [pixelID];
	cvt.u64.u32	%rd27, %r47;
	cvt.u64.u32	%rd28, %r48;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd14, %r6, %r36, %rd27, %rd28, %rd11, %rd11);
	// inline asm
	ld.f32 	%f9, [%rd25+8];
	ld.global.v2.u32 	{%r51, %r52}, [pixelID];
	cvt.u64.u32	%rd33, %r51;
	cvt.u64.u32	%rd34, %r52;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd14, %r6, %r36, %rd33, %rd34, %rd11, %rd11);
	// inline asm
	ld.f32 	%f119, [%rd31+12];
	add.f32 	%f10, %f119, 0f38D1B717;
	mul.f32 	%f120, %f7, 0f3456BF95;
	mul.f32 	%f121, %f8, 0f3456BF95;
	mul.f32 	%f122, %f9, 0f3456BF95;
	abs.f32 	%f11, %f337;
	div.rn.f32 	%f123, %f120, %f11;
	abs.f32 	%f124, %f338;
	div.rn.f32 	%f125, %f121, %f124;
	abs.f32 	%f12, %f339;
	div.rn.f32 	%f126, %f122, %f12;
	abs.f32 	%f127, %f123;
	abs.f32 	%f128, %f125;
	abs.f32 	%f129, %f126;
	mov.f32 	%f130, 0f38D1B717;
	max.f32 	%f131, %f127, %f130;
	max.f32 	%f132, %f128, %f130;
	max.f32 	%f133, %f129, %f130;
	fma.rn.f32 	%f13, %f337, %f131, %f7;
	fma.rn.f32 	%f14, %f338, %f132, %f8;
	fma.rn.f32 	%f15, %f339, %f133, %f9;
	ld.global.v2.u32 	{%r55, %r56}, [pixelID];
	cvt.u64.u32	%rd39, %r55;
	cvt.u64.u32	%rd40, %r56;
	mov.u64 	%rd68, uvsmoothpos;
	cvta.global.u64 	%rd38, %rd68;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd38, %r6, %r36, %rd39, %rd40, %rd11, %rd11);
	// inline asm
	ld.f32 	%f16, [%rd37];
	ld.global.v2.u32 	{%r59, %r60}, [pixelID];
	cvt.u64.u32	%rd45, %r59;
	cvt.u64.u32	%rd46, %r60;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd38, %r6, %r36, %rd45, %rd46, %rd11, %rd11);
	// inline asm
	ld.f32 	%f17, [%rd43+4];
	ld.global.v2.u32 	{%r63, %r64}, [pixelID];
	cvt.u64.u32	%rd51, %r63;
	cvt.u64.u32	%rd52, %r64;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd38, %r6, %r36, %rd51, %rd52, %rd11, %rd11);
	// inline asm
	ld.f32 	%f18, [%rd49+8];
	ld.global.v2.u32 	{%r67, %r68}, [pixelID];
	cvt.u64.u32	%rd57, %r67;
	cvt.u64.u32	%rd58, %r68;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd38, %r6, %r36, %rd57, %rd58, %rd11, %rd11);
	// inline asm
	ld.f32 	%f134, [%rd55+12];
	cvt.rzi.u32.f32	%r71, %f134;
	cvt.u64.u32	%rd63, %r71;
	mov.u64 	%rd69, triangleMarks;
	cvta.global.u64 	%rd62, %rd69;
	mov.u32 	%r38, 1;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd62, %r38, %r38, %rd63, %rd11, %rd11, %rd11);
	// inline asm
	ld.u8 	%r128, [%rd61];
	sub.f32 	%f19, %f16, %f7;
	sub.f32 	%f20, %f17, %f8;
	sub.f32 	%f21, %f18, %f9;
	mul.f32 	%f135, %f20, %f20;
	fma.rn.f32 	%f136, %f19, %f19, %f135;
	fma.rn.f32 	%f137, %f21, %f21, %f136;
	sqrt.rn.f32 	%f22, %f137;
	setp.leu.f32	%p7, %f22, 0f3727C5AC;
	setp.eq.s32	%p8, %r128, 255;
	or.pred  	%p9, %p8, %p7;
	@%p9 bra 	BB0_6;

	rcp.rn.f32 	%f146, %f22;
	mul.f32 	%f141, %f19, %f146;
	mul.f32 	%f142, %f20, %f146;
	mul.f32 	%f143, %f21, %f146;
	add.u64 	%rd70, %SP, 12;
	cvta.to.local.u64 	%rd71, %rd70;
	mov.u32 	%r75, 1065353216;
	st.local.u32 	[%rd71], %r75;
	ld.global.u32 	%r72, [root];
	// inline asm
	call _rt_trace_64, (%r72, %f13, %f14, %f15, %f141, %f142, %f143, %r38, %f130, %f22, %rd70, %r7);
	// inline asm
	ld.local.f32 	%f147, [%rd71];
	setp.neu.f32	%p10, %f147, 0f00000000;
	@%p10 bra 	BB0_6;

	// inline asm
	call (%rd72), _rt_buffer_get_64, (%rd62, %r38, %r38, %rd63, %rd11, %rd11, %rd11);
	// inline asm
	mov.u16 	%rs9, 255;
	st.u8 	[%rd72], %rs9;
	mov.u32 	%r128, 255;

BB0_6:
	setp.eq.s32	%p11, %r128, 0;
	selp.f32	%f344, %f16, %f7, %p11;
	selp.f32	%f345, %f17, %f8, %p11;
	selp.f32	%f346, %f18, %f9, %p11;
	neg.f32 	%f157, %f338;
	setp.gt.f32	%p12, %f11, %f12;
	selp.f32	%f158, %f157, 0f00000000, %p12;
	neg.f32 	%f159, %f339;
	selp.f32	%f160, %f337, %f159, %p12;
	selp.f32	%f161, 0f00000000, %f338, %p12;
	mul.f32 	%f162, %f160, %f160;
	fma.rn.f32 	%f163, %f158, %f158, %f162;
	fma.rn.f32 	%f164, %f161, %f161, %f163;
	sqrt.rn.f32 	%f165, %f164;
	rcp.rn.f32 	%f166, %f165;
	mul.f32 	%f26, %f158, %f166;
	mul.f32 	%f27, %f160, %f166;
	mul.f32 	%f28, %f161, %f166;
	mul.f32 	%f167, %f339, %f27;
	mul.f32 	%f168, %f338, %f28;
	sub.f32 	%f29, %f167, %f168;
	mul.f32 	%f169, %f337, %f28;
	mul.f32 	%f170, %f339, %f26;
	sub.f32 	%f30, %f169, %f170;
	mul.f32 	%f171, %f338, %f26;
	mul.f32 	%f172, %f337, %f27;
	sub.f32 	%f31, %f171, %f172;
	mov.f32 	%f173, 0f3F8147AE;
	sqrt.rn.f32 	%f174, %f173;
	rcp.rn.f32 	%f32, %f174;
	neg.f32 	%f33, %f32;
	mul.f32 	%f34, %f32, 0f00000000;
	mul.f32 	%f175, %f32, 0f3DCCCCCD;
	mul.f32 	%f176, %f13, 0f3456BF95;
	abs.f32 	%f177, %f176;
	mul.f32 	%f178, %f14, 0f3456BF95;
	abs.f32 	%f179, %f178;
	mul.f32 	%f180, %f15, 0f3456BF95;
	abs.f32 	%f181, %f180;
	max.f32 	%f182, %f177, %f179;
	max.f32 	%f183, %f182, %f181;
	max.f32 	%f154, %f183, %f130;
	mul.f32 	%f36, %f26, %f34;
	mul.f32 	%f37, %f27, %f34;
	mul.f32 	%f38, %f28, %f34;
	fma.rn.f32 	%f185, %f29, %f33, %f36;
	fma.rn.f32 	%f186, %f30, %f33, %f37;
	fma.rn.f32 	%f187, %f31, %f33, %f38;
	mul.f32 	%f39, %f337, %f175;
	mul.f32 	%f40, %f338, %f175;
	mul.f32 	%f41, %f339, %f175;
	add.f32 	%f151, %f185, %f39;
	add.f32 	%f152, %f186, %f40;
	add.f32 	%f153, %f187, %f41;
	add.u64 	%rd79, %SP, 16;
	cvta.to.local.u64 	%rd80, %rd79;
	mov.u32 	%r80, 0;
	st.local.u32 	[%rd80+8], %r80;
	st.local.u32 	[%rd80+4], %r80;
	st.local.u32 	[%rd80], %r80;
	ld.global.u32 	%r79, [root];
	mul.f32 	%f155, %f10, 0f3FB504F3;
	mov.u32 	%r81, 12;
	// inline asm
	call _rt_trace_64, (%r79, %f13, %f14, %f15, %f151, %f152, %f153, %r80, %f154, %f155, %rd79, %r81);
	// inline asm
	ld.local.f32 	%f46, [%rd80+4];
	ld.local.f32 	%f47, [%rd80];
	add.f32 	%f188, %f47, %f46;
	ld.local.f32 	%f48, [%rd80+8];
	add.f32 	%f189, %f188, %f48;
	mov.f32 	%f347, 0f47C34F80;
	setp.eq.f32	%p13, %f189, 0f00000000;
	@%p13 bra 	BB0_9;

	mul.f32 	%f191, %f46, %f46;
	fma.rn.f32 	%f192, %f47, %f47, %f191;
	fma.rn.f32 	%f193, %f48, %f48, %f192;
	sqrt.rn.f32 	%f49, %f193;
	rcp.rn.f32 	%f194, %f49;
	mul.f32 	%f195, %f194, %f47;
	mul.f32 	%f196, %f194, %f46;
	mul.f32 	%f197, %f194, %f48;
	fma.rn.f32 	%f198, %f154, %f195, %f13;
	fma.rn.f32 	%f199, %f154, %f196, %f14;
	fma.rn.f32 	%f200, %f154, %f197, %f15;
	fma.rn.f32 	%f50, %f49, %f151, %f198;
	fma.rn.f32 	%f51, %f49, %f152, %f199;
	fma.rn.f32 	%f52, %f49, %f153, %f200;
	setp.geu.f32	%p14, %f49, 0f47C34F80;
	@%p14 bra 	BB0_9;

	mov.f32 	%f344, %f50;
	mov.f32 	%f345, %f51;
	mov.f32 	%f346, %f52;
	mov.f32 	%f347, %f49;

BB0_9:
	mov.u32 	%r115, 12;
	mov.u32 	%r114, 0;
	add.u64 	%rd113, %SP, 16;
	cvta.to.local.u64 	%rd112, %rd113;
	fma.rn.f32 	%f209, %f29, %f32, %f36;
	fma.rn.f32 	%f210, %f30, %f32, %f37;
	fma.rn.f32 	%f211, %f31, %f32, %f38;
	add.f32 	%f204, %f209, %f39;
	add.f32 	%f205, %f210, %f40;
	add.f32 	%f206, %f211, %f41;
	st.local.u32 	[%rd112+8], %r114;
	st.local.u32 	[%rd112+4], %r114;
	st.local.u32 	[%rd112], %r114;
	ld.global.u32 	%r82, [root];
	// inline asm
	call _rt_trace_64, (%r82, %f13, %f14, %f15, %f204, %f205, %f206, %r114, %f154, %f155, %rd113, %r115);
	// inline asm
	ld.local.f32 	%f60, [%rd112+4];
	ld.local.f32 	%f61, [%rd112];
	add.f32 	%f212, %f61, %f60;
	ld.local.f32 	%f62, [%rd112+8];
	add.f32 	%f213, %f212, %f62;
	setp.eq.f32	%p15, %f213, 0f00000000;
	@%p15 bra 	BB0_12;

	mul.f32 	%f214, %f60, %f60;
	fma.rn.f32 	%f215, %f61, %f61, %f214;
	fma.rn.f32 	%f216, %f62, %f62, %f215;
	sqrt.rn.f32 	%f63, %f216;
	rcp.rn.f32 	%f217, %f63;
	mul.f32 	%f218, %f217, %f61;
	mul.f32 	%f219, %f217, %f60;
	mul.f32 	%f220, %f217, %f62;
	fma.rn.f32 	%f221, %f154, %f218, %f13;
	fma.rn.f32 	%f222, %f154, %f219, %f14;
	fma.rn.f32 	%f223, %f154, %f220, %f15;
	fma.rn.f32 	%f64, %f63, %f204, %f221;
	fma.rn.f32 	%f65, %f63, %f205, %f222;
	fma.rn.f32 	%f66, %f63, %f206, %f223;
	setp.geu.f32	%p16, %f63, %f347;
	@%p16 bra 	BB0_12;

	mov.f32 	%f344, %f64;
	mov.f32 	%f345, %f65;
	mov.f32 	%f346, %f66;
	mov.f32 	%f347, %f63;

BB0_12:
	mov.u32 	%r117, 12;
	mov.u32 	%r116, 0;
	neg.f32 	%f331, %f32;
	mul.f32 	%f330, %f32, 0f00000000;
	add.u64 	%rd116, %SP, 16;
	cvta.to.local.u64 	%rd115, %rd116;
	mul.f32 	%f71, %f29, %f330;
	fma.rn.f32 	%f232, %f26, %f331, %f71;
	mul.f32 	%f72, %f30, %f330;
	fma.rn.f32 	%f233, %f27, %f331, %f72;
	mul.f32 	%f73, %f31, %f330;
	fma.rn.f32 	%f234, %f28, %f331, %f73;
	add.f32 	%f227, %f232, %f39;
	add.f32 	%f228, %f233, %f40;
	add.f32 	%f229, %f234, %f41;
	st.local.u32 	[%rd115+8], %r116;
	st.local.u32 	[%rd115+4], %r116;
	st.local.u32 	[%rd115], %r116;
	ld.global.u32 	%r85, [root];
	// inline asm
	call _rt_trace_64, (%r85, %f13, %f14, %f15, %f227, %f228, %f229, %r116, %f154, %f155, %rd116, %r117);
	// inline asm
	ld.local.f32 	%f77, [%rd115+4];
	ld.local.f32 	%f78, [%rd115];
	add.f32 	%f235, %f78, %f77;
	ld.local.f32 	%f79, [%rd115+8];
	add.f32 	%f236, %f235, %f79;
	setp.eq.f32	%p17, %f236, 0f00000000;
	@%p17 bra 	BB0_15;

	mul.f32 	%f237, %f77, %f77;
	fma.rn.f32 	%f238, %f78, %f78, %f237;
	fma.rn.f32 	%f239, %f79, %f79, %f238;
	sqrt.rn.f32 	%f80, %f239;
	rcp.rn.f32 	%f240, %f80;
	mul.f32 	%f241, %f240, %f78;
	mul.f32 	%f242, %f240, %f77;
	mul.f32 	%f243, %f240, %f79;
	fma.rn.f32 	%f244, %f154, %f241, %f13;
	fma.rn.f32 	%f245, %f154, %f242, %f14;
	fma.rn.f32 	%f246, %f154, %f243, %f15;
	fma.rn.f32 	%f81, %f80, %f227, %f244;
	fma.rn.f32 	%f82, %f80, %f228, %f245;
	fma.rn.f32 	%f83, %f80, %f229, %f246;
	setp.geu.f32	%p18, %f80, %f347;
	@%p18 bra 	BB0_15;

	mov.f32 	%f344, %f81;
	mov.f32 	%f345, %f82;
	mov.f32 	%f346, %f83;
	mov.f32 	%f347, %f80;

BB0_15:
	mov.u32 	%r119, 12;
	mov.u32 	%r118, 0;
	add.u64 	%rd119, %SP, 16;
	cvta.to.local.u64 	%rd118, %rd119;
	fma.rn.f32 	%f255, %f26, %f32, %f71;
	fma.rn.f32 	%f256, %f27, %f32, %f72;
	fma.rn.f32 	%f257, %f28, %f32, %f73;
	add.f32 	%f250, %f255, %f39;
	add.f32 	%f251, %f256, %f40;
	add.f32 	%f252, %f257, %f41;
	st.local.u32 	[%rd118+8], %r118;
	st.local.u32 	[%rd118+4], %r118;
	st.local.u32 	[%rd118], %r118;
	ld.global.u32 	%r88, [root];
	// inline asm
	call _rt_trace_64, (%r88, %f13, %f14, %f15, %f250, %f251, %f252, %r118, %f154, %f155, %rd119, %r119);
	// inline asm
	ld.local.f32 	%f91, [%rd118+4];
	ld.local.f32 	%f92, [%rd118];
	add.f32 	%f258, %f92, %f91;
	ld.local.f32 	%f93, [%rd118+8];
	add.f32 	%f259, %f258, %f93;
	setp.eq.f32	%p19, %f259, 0f00000000;
	@%p19 bra 	BB0_18;

	mul.f32 	%f260, %f91, %f91;
	fma.rn.f32 	%f261, %f92, %f92, %f260;
	fma.rn.f32 	%f262, %f93, %f93, %f261;
	sqrt.rn.f32 	%f263, %f262;
	rcp.rn.f32 	%f264, %f263;
	mul.f32 	%f265, %f264, %f92;
	mul.f32 	%f266, %f264, %f91;
	mul.f32 	%f267, %f264, %f93;
	fma.rn.f32 	%f268, %f154, %f265, %f13;
	fma.rn.f32 	%f269, %f154, %f266, %f14;
	fma.rn.f32 	%f270, %f154, %f267, %f15;
	fma.rn.f32 	%f94, %f263, %f250, %f268;
	fma.rn.f32 	%f95, %f263, %f251, %f269;
	fma.rn.f32 	%f96, %f263, %f252, %f270;
	setp.geu.f32	%p20, %f263, %f347;
	@%p20 bra 	BB0_18;

	mov.f32 	%f344, %f94;
	mov.f32 	%f345, %f95;
	mov.f32 	%f346, %f96;

BB0_18:
	mov.u32 	%r111, 16;
	mov.u64 	%rd121, 0;
	mov.u32 	%r110, 2;
	cvt.u64.u32	%rd90, %r3;
	cvt.u64.u32	%rd89, %r2;
	mov.u64 	%rd93, image_HDR;
	cvta.global.u64 	%rd88, %rd93;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r110, %r111, %rd89, %rd90, %rd121, %rd121);
	// inline asm
	mov.f32 	%f271, 0f3F800000;
	st.v4.f32 	[%rd87], {%f344, %f345, %f346, %f271};
	ld.global.u8 	%rs10, [imageEnabled];
	and.b16  	%rs11, %rs10, 32;
	setp.eq.s16	%p21, %rs11, 0;
	@%p21 bra 	BB0_26;

	mov.u32 	%r121, 12;
	mov.u32 	%r120, 0;
	add.f32 	%f333, %f119, 0f38D1B717;
	mov.f32 	%f332, 0f38D1B717;
	mul.f32 	%f279, %f333, 0f41000000;
	add.u64 	%rd94, %SP, 0;
	cvta.to.local.u64 	%rd5, %rd94;
	st.local.u32 	[%rd5+8], %r120;
	st.local.u32 	[%rd5+4], %r120;
	st.local.u32 	[%rd5], %r120;
	ld.global.u32 	%r93, [root];
	// inline asm
	call _rt_trace_64, (%r93, %f13, %f14, %f15, %f151, %f152, %f153, %r120, %f332, %f279, %rd94, %r121);
	// inline asm
	ld.local.f32 	%f281, [%rd5+4];
	ld.local.f32 	%f282, [%rd5];
	add.f32 	%f283, %f282, %f281;
	ld.local.f32 	%f284, [%rd5+8];
	add.f32 	%f285, %f283, %f284;
	setp.neu.f32	%p22, %f285, 0f00000000;
	mov.f32 	%f355, 0f437F0000;
	@%p22 bra 	BB0_24;

	mov.u32 	%r123, 12;
	mov.u32 	%r122, 0;
	mov.f32 	%f334, 0f38D1B717;
	st.local.u32 	[%rd5+8], %r122;
	st.local.u32 	[%rd5+4], %r122;
	st.local.u32 	[%rd5], %r122;
	ld.global.u32 	%r96, [root];
	// inline asm
	call _rt_trace_64, (%r96, %f13, %f14, %f15, %f204, %f205, %f206, %r122, %f334, %f279, %rd94, %r123);
	// inline asm
	ld.local.f32 	%f295, [%rd5+4];
	ld.local.f32 	%f296, [%rd5];
	add.f32 	%f297, %f296, %f295;
	ld.local.f32 	%f298, [%rd5+8];
	add.f32 	%f299, %f297, %f298;
	setp.neu.f32	%p23, %f299, 0f00000000;
	@%p23 bra 	BB0_24;

	mov.u32 	%r125, 12;
	mov.u32 	%r124, 0;
	mov.f32 	%f335, 0f38D1B717;
	st.local.u32 	[%rd5+8], %r124;
	st.local.u32 	[%rd5+4], %r124;
	st.local.u32 	[%rd5], %r124;
	ld.global.u32 	%r99, [root];
	// inline asm
	call _rt_trace_64, (%r99, %f13, %f14, %f15, %f227, %f228, %f229, %r124, %f335, %f279, %rd94, %r125);
	// inline asm
	ld.local.f32 	%f309, [%rd5+4];
	ld.local.f32 	%f310, [%rd5];
	add.f32 	%f311, %f310, %f309;
	ld.local.f32 	%f312, [%rd5+8];
	add.f32 	%f313, %f311, %f312;
	setp.neu.f32	%p24, %f313, 0f00000000;
	@%p24 bra 	BB0_24;

	mov.u32 	%r127, 12;
	mov.u32 	%r126, 0;
	mov.f32 	%f336, 0f38D1B717;
	st.local.u32 	[%rd5+8], %r126;
	st.local.u32 	[%rd5+4], %r126;
	st.local.u32 	[%rd5], %r126;
	ld.global.u32 	%r102, [root];
	// inline asm
	call _rt_trace_64, (%r102, %f13, %f14, %f15, %f250, %f251, %f252, %r126, %f336, %f279, %rd94, %r127);
	// inline asm
	ld.local.f32 	%f323, [%rd5+4];
	ld.local.f32 	%f324, [%rd5];
	add.f32 	%f325, %f324, %f323;
	ld.local.f32 	%f326, [%rd5+8];
	add.f32 	%f327, %f325, %f326;
	setp.neu.f32	%p25, %f327, 0f00000000;
	@%p25 bra 	BB0_24;

	mov.f32 	%f355, 0f00000000;

BB0_24:
	mov.u32 	%r113, 1;
	mov.u64 	%rd122, 0;
	mov.u32 	%r112, 2;
	mov.u64 	%rd104, image_Mask;
	cvta.global.u64 	%rd99, %rd104;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd99, %r112, %r113, %rd89, %rd90, %rd122, %rd122);
	// inline asm
	cvt.rzi.u32.f32	%r107, %f355;
	st.u8 	[%rd98], %r107;

BB0_26:
	ret;
}


