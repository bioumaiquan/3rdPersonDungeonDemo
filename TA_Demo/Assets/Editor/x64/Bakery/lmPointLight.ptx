//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 4 .u32 samples;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightRadius;
.global .align 4 .b8 lightPos[12];
.global .align 4 .b8 lightColor[12];
.global .align 4 .u32 ignoreNormal;
.global .align 4 .f32 lightFalloffFakeDistanceMult;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightRadiusE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8lightPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo28lightFalloffFakeDistanceMultE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11lightRadiusE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8lightPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename28lightFalloffFakeDistanceMultE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11lightRadiusE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8lightPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum28lightFalloffFakeDistanceMultE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11lightRadiusE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8lightPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic28lightFalloffFakeDistanceMultE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11lightRadiusE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8lightPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation28lightFalloffFakeDistanceMultE[1];

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<112>;
	.reg .b16 	%rs<76>;
	.reg .f32 	%f<754>;
	.reg .b32 	%r<161>;
	.reg .b64 	%rd<150>;


	mov.u64 	%rd149, __local_depot0;
	cvta.local.u64 	%SP, %rd149;
	ld.global.v2.u32 	{%r26, %r27}, [pixelID];
	cvt.u64.u32	%rd12, %r26;
	cvt.u64.u32	%rd13, %r27;
	mov.u64 	%rd16, uvnormal;
	cvta.global.u64 	%rd11, %rd16;
	mov.u32 	%r24, 2;
	mov.u32 	%r25, 4;
	mov.u64 	%rd15, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r24, %r25, %rd12, %rd13, %rd15, %rd15);
	// inline asm
	ld.u32 	%r1, [%rd10];
	shr.u32 	%r30, %r1, 16;
	cvt.u16.u32	%rs1, %r30;
	and.b16  	%rs4, %rs1, 255;
	cvt.u16.u32	%rs5, %r1;
	or.b16  	%rs6, %rs5, %rs4;
	setp.eq.s16	%p6, %rs6, 0;
	mov.f32 	%f730, 0f00000000;
	mov.f32 	%f731, %f730;
	mov.f32 	%f732, %f730;
	@%p6 bra 	BB0_2;

	ld.u8 	%rs7, [%rd10+1];
	and.b16  	%rs9, %rs5, 255;
	cvt.rn.f32.u16	%f105, %rs9;
	div.rn.f32 	%f106, %f105, 0f437F0000;
	fma.rn.f32 	%f107, %f106, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f108, %rs7;
	div.rn.f32 	%f109, %f108, 0f437F0000;
	fma.rn.f32 	%f110, %f109, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f111, %rs4;
	div.rn.f32 	%f112, %f111, 0f437F0000;
	fma.rn.f32 	%f113, %f112, 0f40000000, 0fBF800000;
	mul.f32 	%f114, %f110, %f110;
	fma.rn.f32 	%f115, %f107, %f107, %f114;
	fma.rn.f32 	%f116, %f113, %f113, %f115;
	sqrt.rn.f32 	%f117, %f116;
	rcp.rn.f32 	%f118, %f117;
	mul.f32 	%f730, %f107, %f118;
	mul.f32 	%f731, %f110, %f118;
	mul.f32 	%f732, %f113, %f118;

BB0_2:
	ld.global.v2.u32 	{%r31, %r32}, [pixelID];
	ld.global.v2.u32 	{%r34, %r35}, [tileInfo];
	add.s32 	%r2, %r31, %r34;
	add.s32 	%r3, %r32, %r35;
	setp.eq.f32	%p7, %f731, 0f00000000;
	setp.eq.f32	%p8, %f730, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	setp.eq.f32	%p10, %f732, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_85;
	bra.uni 	BB0_3;

BB0_85:
	ld.global.u32 	%r160, [imageEnabled];
	and.b32  	%r136, %r160, 1;
	setp.eq.b32	%p107, %r136, 1;
	@!%p107 bra 	BB0_87;
	bra.uni 	BB0_86;

BB0_86:
	cvt.u64.u32	%rd110, %r2;
	cvt.u64.u32	%rd111, %r3;
	mov.u64 	%rd114, image;
	cvta.global.u64 	%rd109, %rd114;
	// inline asm
	call (%rd108), _rt_buffer_get_64, (%rd109, %r24, %r25, %rd110, %rd111, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs57, 0;
	st.v4.u8 	[%rd108], {%rs57, %rs57, %rs57, %rs57};
	ld.global.u32 	%r160, [imageEnabled];

BB0_87:
	and.b32  	%r139, %r160, 8;
	setp.eq.s32	%p108, %r139, 0;
	@%p108 bra 	BB0_89;

	cvt.u64.u32	%rd117, %r2;
	cvt.u64.u32	%rd118, %r3;
	mov.u64 	%rd121, image_Mask;
	cvta.global.u64 	%rd116, %rd121;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd116, %r24, %r24, %rd117, %rd118, %rd15, %rd15);
	// inline asm
	mov.f32 	%f671, 0f00000000;
	cvt.rzi.u32.f32	%r142, %f671;
	cvt.u16.u32	%rs58, %r142;
	mov.u16 	%rs59, 0;
	st.v2.u8 	[%rd115], {%rs58, %rs59};
	ld.global.u32 	%r160, [imageEnabled];

BB0_89:
	and.b32  	%r143, %r160, 4;
	setp.eq.s32	%p109, %r143, 0;
	@%p109 bra 	BB0_93;

	ld.global.u32 	%r144, [additive];
	setp.eq.s32	%p110, %r144, 0;
	cvt.u64.u32	%rd8, %r2;
	cvt.u64.u32	%rd9, %r3;
	@%p110 bra 	BB0_92;

	mov.u64 	%rd134, image_HDR;
	cvta.global.u64 	%rd123, %rd134;
	mov.u32 	%r148, 8;
	// inline asm
	call (%rd122), _rt_buffer_get_64, (%rd123, %r24, %r148, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd122];
	// inline asm
	{  cvt.f32.f16 %f672, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f673, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f674, %rs68;}

	// inline asm
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd123, %r24, %r148, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	add.f32 	%f675, %f672, 0f00000000;
	add.f32 	%f676, %f673, 0f00000000;
	add.f32 	%f677, %f674, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f677;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f676;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f675;}

	// inline asm
	mov.u16 	%rs70, 0;
	st.v4.u16 	[%rd128], {%rs63, %rs64, %rs65, %rs70};
	bra.uni 	BB0_93;

BB0_3:
	ld.global.v2.u32 	{%r41, %r42}, [pixelID];
	cvt.u64.u32	%rd19, %r41;
	cvt.u64.u32	%rd20, %r42;
	mov.u64 	%rd23, uvpos;
	cvta.global.u64 	%rd18, %rd23;
	mov.u32 	%r40, 12;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd18, %r24, %r40, %rd19, %rd20, %rd15, %rd15);
	// inline asm
	ld.global.f32 	%f7, [lightPos];
	ld.f32 	%f12, [%rd17+8];
	ld.f32 	%f10, [%rd17+4];
	ld.f32 	%f8, [%rd17];
	sub.f32 	%f121, %f7, %f8;
	ld.global.f32 	%f9, [lightPos+4];
	sub.f32 	%f122, %f9, %f10;
	ld.global.f32 	%f11, [lightPos+8];
	sub.f32 	%f123, %f11, %f12;
	mul.f32 	%f124, %f122, %f122;
	fma.rn.f32 	%f125, %f121, %f121, %f124;
	fma.rn.f32 	%f126, %f123, %f123, %f125;
	sqrt.rn.f32 	%f127, %f126;
	rcp.rn.f32 	%f128, %f127;
	ld.global.f32 	%f129, [lightFalloffFakeDistanceMult];
	mul.f32 	%f16, %f127, %f129;
	ld.global.f32 	%f130, [lightInvCutoff];
	mul.f32 	%f17, %f127, %f130;
	mov.f32 	%f134, 0f40800000;
	abs.f32 	%f19, %f17;
	setp.lt.f32	%p12, %f19, 0f00800000;
	mul.f32 	%f136, %f19, 0f4B800000;
	selp.f32	%f137, 0fC3170000, 0fC2FE0000, %p12;
	selp.f32	%f138, %f136, %f19, %p12;
	mov.b32 	 %r45, %f138;
	and.b32  	%r46, %r45, 8388607;
	or.b32  	%r47, %r46, 1065353216;
	mov.b32 	 %f139, %r47;
	shr.u32 	%r48, %r45, 23;
	cvt.rn.f32.u32	%f140, %r48;
	add.f32 	%f141, %f137, %f140;
	setp.gt.f32	%p13, %f139, 0f3FB504F3;
	mul.f32 	%f142, %f139, 0f3F000000;
	add.f32 	%f143, %f141, 0f3F800000;
	selp.f32	%f144, %f142, %f139, %p13;
	selp.f32	%f145, %f143, %f141, %p13;
	add.f32 	%f146, %f144, 0fBF800000;
	add.f32 	%f120, %f144, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f119,%f120;
	// inline asm
	add.f32 	%f147, %f146, %f146;
	mul.f32 	%f148, %f119, %f147;
	mul.f32 	%f149, %f148, %f148;
	mov.f32 	%f150, 0f3C4CAF63;
	mov.f32 	%f151, 0f3B18F0FE;
	fma.rn.f32 	%f152, %f151, %f149, %f150;
	mov.f32 	%f153, 0f3DAAAABD;
	fma.rn.f32 	%f154, %f152, %f149, %f153;
	mul.rn.f32 	%f155, %f154, %f149;
	mul.rn.f32 	%f156, %f155, %f148;
	sub.f32 	%f157, %f146, %f148;
	neg.f32 	%f158, %f148;
	add.f32 	%f159, %f157, %f157;
	fma.rn.f32 	%f160, %f158, %f146, %f159;
	mul.rn.f32 	%f161, %f119, %f160;
	add.f32 	%f162, %f156, %f148;
	sub.f32 	%f163, %f148, %f162;
	add.f32 	%f164, %f156, %f163;
	add.f32 	%f165, %f161, %f164;
	add.f32 	%f166, %f162, %f165;
	sub.f32 	%f167, %f162, %f166;
	add.f32 	%f168, %f165, %f167;
	mov.f32 	%f169, 0f3F317200;
	mul.rn.f32 	%f170, %f145, %f169;
	mov.f32 	%f171, 0f35BFBE8E;
	mul.rn.f32 	%f172, %f145, %f171;
	add.f32 	%f173, %f170, %f166;
	sub.f32 	%f174, %f170, %f173;
	add.f32 	%f175, %f166, %f174;
	add.f32 	%f176, %f168, %f175;
	add.f32 	%f177, %f172, %f176;
	add.f32 	%f178, %f173, %f177;
	sub.f32 	%f179, %f173, %f178;
	add.f32 	%f180, %f177, %f179;
	mul.rn.f32 	%f181, %f134, %f178;
	neg.f32 	%f182, %f181;
	fma.rn.f32 	%f183, %f134, %f178, %f182;
	fma.rn.f32 	%f184, %f134, %f180, %f183;
	mov.f32 	%f185, 0f00000000;
	fma.rn.f32 	%f186, %f185, %f178, %f184;
	add.rn.f32 	%f187, %f181, %f186;
	neg.f32 	%f188, %f187;
	add.rn.f32 	%f189, %f181, %f188;
	add.rn.f32 	%f190, %f189, %f186;
	mov.b32 	 %r49, %f187;
	setp.eq.s32	%p14, %r49, 1118925336;
	add.s32 	%r50, %r49, -1;
	mov.b32 	 %f191, %r50;
	add.f32 	%f192, %f190, 0f37000000;
	selp.f32	%f193, %f191, %f187, %p14;
	selp.f32	%f20, %f192, %f190, %p14;
	mul.f32 	%f194, %f193, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f195, %f194;
	mov.f32 	%f196, 0fBF317200;
	fma.rn.f32 	%f197, %f195, %f196, %f193;
	mov.f32 	%f198, 0fB5BFBE8E;
	fma.rn.f32 	%f199, %f195, %f198, %f197;
	mul.f32 	%f200, %f199, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f201, %f200;
	add.f32 	%f202, %f195, 0f00000000;
	ex2.approx.f32 	%f203, %f202;
	mul.f32 	%f204, %f201, %f203;
	setp.lt.f32	%p15, %f193, 0fC2D20000;
	selp.f32	%f205, 0f00000000, %f204, %p15;
	setp.gt.f32	%p16, %f193, 0f42D20000;
	selp.f32	%f733, 0f7F800000, %f205, %p16;
	setp.eq.f32	%p17, %f733, 0f7F800000;
	@%p17 bra 	BB0_5;

	fma.rn.f32 	%f733, %f733, %f20, %f733;

BB0_5:
	mov.f32 	%f684, 0f40000000;
	cvt.rzi.f32.f32	%f683, %f684;
	add.f32 	%f682, %f683, %f683;
	mov.f32 	%f681, 0f40800000;
	sub.f32 	%f680, %f681, %f682;
	abs.f32 	%f679, %f680;
	setp.lt.f32	%p18, %f17, 0f00000000;
	setp.eq.f32	%p19, %f679, 0f3F800000;
	and.pred  	%p1, %p18, %p19;
	mov.b32 	 %r51, %f733;
	xor.b32  	%r52, %r51, -2147483648;
	mov.b32 	 %f206, %r52;
	selp.f32	%f735, %f206, %f733, %p1;
	setp.eq.f32	%p20, %f17, 0f00000000;
	@%p20 bra 	BB0_8;
	bra.uni 	BB0_6;

BB0_8:
	add.f32 	%f209, %f17, %f17;
	selp.f32	%f735, %f209, 0f00000000, %p19;
	bra.uni 	BB0_9;

BB0_6:
	setp.geu.f32	%p21, %f17, 0f00000000;
	@%p21 bra 	BB0_9;

	mov.f32 	%f729, 0f40800000;
	cvt.rzi.f32.f32	%f208, %f729;
	setp.neu.f32	%p22, %f208, 0f40800000;
	selp.f32	%f735, 0f7FFFFFFF, %f735, %p22;

BB0_9:
	abs.f32 	%f685, %f17;
	add.f32 	%f210, %f685, 0f40800000;
	mov.b32 	 %r53, %f210;
	setp.lt.s32	%p24, %r53, 2139095040;
	@%p24 bra 	BB0_14;

	abs.f32 	%f727, %f17;
	setp.gtu.f32	%p25, %f727, 0f7F800000;
	@%p25 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f735, %f17, 0f40800000;
	bra.uni 	BB0_14;

BB0_11:
	abs.f32 	%f728, %f17;
	setp.neu.f32	%p26, %f728, 0f7F800000;
	@%p26 bra 	BB0_14;

	selp.f32	%f735, 0fFF800000, 0f7F800000, %p1;

BB0_14:
	sub.f32 	%f691, %f11, %f12;
	mul.f32 	%f690, %f691, %f128;
	sub.f32 	%f689, %f7, %f8;
	mul.f32 	%f688, %f689, %f128;
	sub.f32 	%f687, %f9, %f10;
	mul.f32 	%f686, %f687, %f128;
	mov.f32 	%f741, 0f3F800000;
	sub.f32 	%f212, %f741, %f735;
	setp.eq.f32	%p27, %f17, 0f3F800000;
	selp.f32	%f213, 0f00000000, %f212, %p27;
	cvt.sat.f32.f32	%f214, %f213;
	fma.rn.f32 	%f215, %f16, %f16, 0f3F800000;
	div.rn.f32 	%f216, %f214, %f215;
	mul.f32 	%f217, %f731, %f686;
	fma.rn.f32 	%f218, %f730, %f688, %f217;
	fma.rn.f32 	%f219, %f732, %f690, %f218;
	ld.global.u32 	%r54, [ignoreNormal];
	setp.eq.s32	%p28, %r54, 0;
	selp.f32	%f220, %f219, 0f3F800000, %p28;
	cvt.sat.f32.f32	%f221, %f220;
	mul.f32 	%f31, %f216, %f221;
	ld.global.f32 	%f222, [lightColor+4];
	ld.global.f32 	%f223, [lightColor];
	max.f32 	%f224, %f223, %f222;
	ld.global.f32 	%f225, [lightColor+8];
	max.f32 	%f226, %f224, %f225;
	mul.f32 	%f227, %f31, %f226;
	setp.lt.f32	%p29, %f227, 0f3727C5AC;
	@%p29 bra 	BB0_75;
	bra.uni 	BB0_15;

BB0_75:
	ld.global.u32 	%r158, [imageEnabled];
	and.b32  	%r119, %r158, 1;
	setp.eq.b32	%p102, %r119, 1;
	@!%p102 bra 	BB0_77;
	bra.uni 	BB0_76;

BB0_76:
	cvt.u64.u32	%rd69, %r2;
	cvt.u64.u32	%rd70, %r3;
	mov.u64 	%rd73, image;
	cvta.global.u64 	%rd68, %rd73;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd68, %r24, %r25, %rd69, %rd70, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs37, 1;
	mov.u16 	%rs38, 0;
	st.v4.u8 	[%rd67], {%rs38, %rs38, %rs38, %rs37};
	ld.global.u32 	%r158, [imageEnabled];

BB0_77:
	and.b32  	%r122, %r158, 8;
	setp.eq.s32	%p103, %r122, 0;
	@%p103 bra 	BB0_79;

	cvt.u64.u32	%rd76, %r2;
	cvt.u64.u32	%rd77, %r3;
	mov.u64 	%rd80, image_Mask;
	cvta.global.u64 	%rd75, %rd80;
	// inline asm
	call (%rd74), _rt_buffer_get_64, (%rd75, %r24, %r24, %rd76, %rd77, %rd15, %rd15);
	// inline asm
	mov.f32 	%f660, 0f00000000;
	cvt.rzi.u32.f32	%r125, %f660;
	cvt.u16.u32	%rs39, %r125;
	mov.u16 	%rs40, 255;
	st.v2.u8 	[%rd74], {%rs39, %rs40};
	ld.global.u32 	%r158, [imageEnabled];

BB0_79:
	and.b32  	%r126, %r158, 4;
	setp.eq.s32	%p104, %r126, 0;
	@%p104 bra 	BB0_83;

	ld.global.u32 	%r127, [additive];
	setp.eq.s32	%p105, %r127, 0;
	cvt.u64.u32	%rd6, %r2;
	cvt.u64.u32	%rd7, %r3;
	mov.f32 	%f661, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f661;}

	// inline asm
	@%p105 bra 	BB0_82;

	mov.u64 	%rd93, image_HDR;
	cvta.global.u64 	%rd82, %rd93;
	mov.u32 	%r131, 8;
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd82, %r24, %r131, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs48, %rs49, %rs50, %rs51}, [%rd81];
	// inline asm
	{  cvt.f32.f16 %f662, %rs48;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f663, %rs49;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f664, %rs50;}

	// inline asm
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd82, %r24, %r131, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	add.f32 	%f665, %f662, 0f00000000;
	add.f32 	%f666, %f663, 0f00000000;
	add.f32 	%f667, %f664, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f667;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f666;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f665;}

	// inline asm
	st.v4.u16 	[%rd87], {%rs45, %rs46, %rs47, %rs41};
	bra.uni 	BB0_83;

BB0_15:
	mov.f32 	%f739, 0f00000000;
	mul.f32 	%f229, %f8, 0f3456BF95;
	abs.f32 	%f230, %f730;
	div.rn.f32 	%f231, %f229, %f230;
	abs.f32 	%f232, %f731;
	mul.f32 	%f233, %f10, 0f3456BF95;
	div.rn.f32 	%f234, %f233, %f232;
	abs.f32 	%f235, %f732;
	mul.f32 	%f236, %f12, 0f3456BF95;
	div.rn.f32 	%f237, %f236, %f235;
	abs.f32 	%f238, %f231;
	abs.f32 	%f239, %f234;
	abs.f32 	%f240, %f237;
	mov.f32 	%f241, 0f38D1B717;
	max.f32 	%f242, %f238, %f241;
	max.f32 	%f243, %f239, %f241;
	max.f32 	%f244, %f240, %f241;
	fma.rn.f32 	%f32, %f730, %f242, %f8;
	fma.rn.f32 	%f33, %f731, %f243, %f10;
	fma.rn.f32 	%f34, %f732, %f244, %f12;
	ld.global.u32 	%r154, [samples];
	setp.lt.s32	%p30, %r154, 1;
	@%p30 bra 	BB0_18;

	mul.f32 	%f246, %f32, 0f3456BF95;
	abs.f32 	%f247, %f246;
	mul.f32 	%f248, %f33, 0f3456BF95;
	abs.f32 	%f249, %f248;
	mul.f32 	%f250, %f34, 0f3456BF95;
	abs.f32 	%f251, %f250;
	max.f32 	%f252, %f247, %f249;
	max.f32 	%f253, %f252, %f251;
	max.f32 	%f35, %f253, %f241;
	add.u64 	%rd24, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd24;
	mov.f32 	%f739, 0f00000000;
	mov.u32 	%r153, 0;
	mov.f32 	%f736, %f11;
	mov.f32 	%f737, %f9;
	mov.f32 	%f738, %f7;
	bra.uni 	BB0_17;

BB0_74:
	ld.global.f32 	%f738, [lightPos];
	ld.global.f32 	%f737, [lightPos+4];
	ld.global.f32 	%f736, [lightPos+8];

BB0_17:
	cvt.rn.f32.s32	%f263, %r153;
	mul.f32 	%f264, %f263, 0f3DD32618;
	cvt.rmi.f32.f32	%f265, %f264;
	sub.f32 	%f266, %f264, %f265;
	mul.f32 	%f267, %f263, 0f3DD2F1AA;
	cvt.rmi.f32.f32	%f268, %f267;
	sub.f32 	%f269, %f267, %f268;
	mul.f32 	%f270, %f263, 0f3DC74539;
	cvt.rmi.f32.f32	%f271, %f270;
	sub.f32 	%f272, %f270, %f271;
	add.f32 	%f273, %f269, 0f4199851F;
	add.f32 	%f274, %f272, 0f4199851F;
	add.f32 	%f275, %f266, 0f4199851F;
	mul.f32 	%f276, %f269, %f274;
	fma.rn.f32 	%f277, %f266, %f273, %f276;
	fma.rn.f32 	%f278, %f275, %f272, %f277;
	add.f32 	%f279, %f266, %f278;
	add.f32 	%f280, %f269, %f278;
	add.f32 	%f281, %f272, %f278;
	add.f32 	%f282, %f279, %f280;
	mul.f32 	%f283, %f281, %f282;
	cvt.rmi.f32.f32	%f284, %f283;
	sub.f32 	%f285, %f283, %f284;
	add.f32 	%f286, %f279, %f281;
	mul.f32 	%f287, %f280, %f286;
	cvt.rmi.f32.f32	%f288, %f287;
	sub.f32 	%f289, %f287, %f288;
	add.f32 	%f290, %f280, %f281;
	mul.f32 	%f291, %f279, %f290;
	cvt.rmi.f32.f32	%f292, %f291;
	sub.f32 	%f293, %f291, %f292;
	fma.rn.f32 	%f294, %f285, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f295, %f289, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f296, %f293, 0f40000000, 0fBF800000;
	ld.global.f32 	%f297, [lightRadius];
	fma.rn.f32 	%f298, %f297, %f294, %f738;
	fma.rn.f32 	%f299, %f297, %f295, %f737;
	fma.rn.f32 	%f300, %f297, %f296, %f736;
	sub.f32 	%f301, %f298, %f8;
	sub.f32 	%f302, %f299, %f10;
	sub.f32 	%f303, %f300, %f12;
	mul.f32 	%f304, %f302, %f302;
	fma.rn.f32 	%f305, %f301, %f301, %f304;
	fma.rn.f32 	%f306, %f303, %f303, %f305;
	sqrt.rn.f32 	%f262, %f306;
	rcp.rn.f32 	%f307, %f262;
	mul.f32 	%f258, %f307, %f301;
	mul.f32 	%f259, %f307, %f302;
	mul.f32 	%f260, %f307, %f303;
	mov.u32 	%r59, 1065353216;
	st.local.u32 	[%rd2], %r59;
	ld.global.u32 	%r56, [root];
	mov.u32 	%r57, 1;
	// inline asm
	call _rt_trace_64, (%r56, %f32, %f33, %f34, %f258, %f259, %f260, %r57, %f35, %f262, %rd24, %r25);
	// inline asm
	ld.local.f32 	%f308, [%rd2];
	add.f32 	%f739, %f739, %f308;
	ld.global.u32 	%r154, [samples];
	add.s32 	%r153, %r153, 1;
	setp.lt.s32	%p31, %r153, %r154;
	@%p31 bra 	BB0_74;

BB0_18:
	setp.eq.s32	%p32, %r154, 0;
	@%p32 bra 	BB0_20;

	cvt.rn.f32.s32	%f310, %r154;
	div.rn.f32 	%f741, %f739, %f310;

BB0_20:
	ld.global.f32 	%f311, [lightColor];
	mul.f32 	%f312, %f31, %f741;
	mul.f32 	%f44, %f311, %f312;
	ld.global.f32 	%f313, [lightColor+4];
	mul.f32 	%f45, %f312, %f313;
	ld.global.f32 	%f314, [lightColor+8];
	mul.f32 	%f46, %f312, %f314;
	ld.global.u32 	%r156, [imageEnabled];
	and.b32  	%r60, %r156, 8;
	setp.eq.s32	%p33, %r60, 0;
	@%p33 bra 	BB0_33;

	mov.f32 	%f699, 0fB5BFBE8E;
	mov.f32 	%f698, 0fBF317200;
	mov.f32 	%f697, 0f35BFBE8E;
	mov.f32 	%f696, 0f3F317200;
	mov.f32 	%f695, 0f3DAAAABD;
	mov.f32 	%f694, 0f3C4CAF63;
	mov.f32 	%f693, 0f3B18F0FE;
	cvt.u64.u32	%rd28, %r2;
	cvt.u64.u32	%rd29, %r3;
	mov.u64 	%rd32, image_Mask;
	cvta.global.u64 	%rd27, %rd32;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r24, %r24, %rd28, %rd29, %rd15, %rd15);
	// inline asm
	mov.f32 	%f317, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f318, %f317;
	fma.rn.f32 	%f319, %f318, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f47, %f319;
	abs.f32 	%f48, %f741;
	setp.lt.f32	%p34, %f48, 0f00800000;
	mul.f32 	%f320, %f48, 0f4B800000;
	selp.f32	%f321, 0fC3170000, 0fC2FE0000, %p34;
	selp.f32	%f322, %f320, %f48, %p34;
	mov.b32 	 %r63, %f322;
	and.b32  	%r64, %r63, 8388607;
	or.b32  	%r65, %r64, 1065353216;
	mov.b32 	 %f323, %r65;
	shr.u32 	%r66, %r63, 23;
	cvt.rn.f32.u32	%f324, %r66;
	add.f32 	%f325, %f321, %f324;
	setp.gt.f32	%p35, %f323, 0f3FB504F3;
	mul.f32 	%f326, %f323, 0f3F000000;
	add.f32 	%f327, %f325, 0f3F800000;
	selp.f32	%f328, %f326, %f323, %p35;
	selp.f32	%f329, %f327, %f325, %p35;
	add.f32 	%f330, %f328, 0fBF800000;
	add.f32 	%f316, %f328, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f315,%f316;
	// inline asm
	add.f32 	%f331, %f330, %f330;
	mul.f32 	%f332, %f315, %f331;
	mul.f32 	%f333, %f332, %f332;
	fma.rn.f32 	%f336, %f693, %f333, %f694;
	fma.rn.f32 	%f338, %f336, %f333, %f695;
	mul.rn.f32 	%f339, %f338, %f333;
	mul.rn.f32 	%f340, %f339, %f332;
	sub.f32 	%f341, %f330, %f332;
	neg.f32 	%f342, %f332;
	add.f32 	%f343, %f341, %f341;
	fma.rn.f32 	%f344, %f342, %f330, %f343;
	mul.rn.f32 	%f345, %f315, %f344;
	add.f32 	%f346, %f340, %f332;
	sub.f32 	%f347, %f332, %f346;
	add.f32 	%f348, %f340, %f347;
	add.f32 	%f349, %f345, %f348;
	add.f32 	%f350, %f346, %f349;
	sub.f32 	%f351, %f346, %f350;
	add.f32 	%f352, %f349, %f351;
	mul.rn.f32 	%f354, %f329, %f696;
	mul.rn.f32 	%f356, %f329, %f697;
	add.f32 	%f357, %f354, %f350;
	sub.f32 	%f358, %f354, %f357;
	add.f32 	%f359, %f350, %f358;
	add.f32 	%f360, %f352, %f359;
	add.f32 	%f361, %f356, %f360;
	add.f32 	%f362, %f357, %f361;
	sub.f32 	%f363, %f357, %f362;
	add.f32 	%f364, %f361, %f363;
	mov.f32 	%f365, 0f3EE8BA2E;
	mul.rn.f32 	%f366, %f365, %f362;
	neg.f32 	%f367, %f366;
	fma.rn.f32 	%f368, %f365, %f362, %f367;
	fma.rn.f32 	%f369, %f365, %f364, %f368;
	mov.f32 	%f370, 0f00000000;
	fma.rn.f32 	%f371, %f370, %f362, %f369;
	add.rn.f32 	%f372, %f366, %f371;
	neg.f32 	%f373, %f372;
	add.rn.f32 	%f374, %f366, %f373;
	add.rn.f32 	%f375, %f374, %f371;
	mov.b32 	 %r67, %f372;
	setp.eq.s32	%p36, %r67, 1118925336;
	add.s32 	%r68, %r67, -1;
	mov.b32 	 %f376, %r68;
	add.f32 	%f377, %f375, 0f37000000;
	selp.f32	%f378, %f376, %f372, %p36;
	selp.f32	%f49, %f377, %f375, %p36;
	mul.f32 	%f379, %f378, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f380, %f379;
	fma.rn.f32 	%f382, %f380, %f698, %f378;
	fma.rn.f32 	%f384, %f380, %f699, %f382;
	mul.f32 	%f385, %f384, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f386, %f385;
	add.f32 	%f387, %f380, 0f00000000;
	ex2.approx.f32 	%f388, %f387;
	mul.f32 	%f389, %f386, %f388;
	setp.lt.f32	%p37, %f378, 0fC2D20000;
	selp.f32	%f390, 0f00000000, %f389, %p37;
	setp.gt.f32	%p38, %f378, 0f42D20000;
	selp.f32	%f742, 0f7F800000, %f390, %p38;
	setp.eq.f32	%p39, %f742, 0f7F800000;
	@%p39 bra 	BB0_23;

	fma.rn.f32 	%f742, %f742, %f49, %f742;

BB0_23:
	setp.lt.f32	%p40, %f741, 0f00000000;
	setp.eq.f32	%p41, %f47, 0f3F800000;
	and.pred  	%p2, %p40, %p41;
	mov.b32 	 %r69, %f742;
	xor.b32  	%r70, %r69, -2147483648;
	mov.b32 	 %f391, %r70;
	selp.f32	%f744, %f391, %f742, %p2;
	setp.eq.f32	%p42, %f741, 0f00000000;
	@%p42 bra 	BB0_26;
	bra.uni 	BB0_24;

BB0_26:
	add.f32 	%f394, %f741, %f741;
	selp.f32	%f744, %f394, 0f00000000, %p41;
	bra.uni 	BB0_27;

BB0_92:
	mov.u64 	%rd141, image_HDR;
	cvta.global.u64 	%rd136, %rd141;
	mov.u32 	%r150, 8;
	// inline asm
	call (%rd135), _rt_buffer_get_64, (%rd136, %r24, %r150, %rd8, %rd9, %rd15, %rd15);
	// inline asm
	mov.f32 	%f678, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f678;}

	// inline asm
	mov.u16 	%rs72, 0;
	st.v4.u16 	[%rd135], {%rs71, %rs71, %rs71, %rs72};

BB0_93:
	ld.global.u8 	%rs73, [imageEnabled];
	and.b16  	%rs74, %rs73, 64;
	setp.eq.s16	%p111, %rs74, 0;
	@%p111 bra 	BB0_95;

	cvt.u64.u32	%rd144, %r2;
	cvt.u64.u32	%rd145, %r3;
	mov.u64 	%rd148, image_Dir;
	cvta.global.u64 	%rd143, %rd148;
	// inline asm
	call (%rd142), _rt_buffer_get_64, (%rd143, %r24, %r25, %rd144, %rd145, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs75, 0;
	st.v4.u8 	[%rd142], {%rs75, %rs75, %rs75, %rs75};
	bra.uni 	BB0_95;

BB0_82:
	mov.u64 	%rd100, image_HDR;
	cvta.global.u64 	%rd95, %rd100;
	mov.u32 	%r133, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r24, %r133, %rd6, %rd7, %rd15, %rd15);
	// inline asm
	mov.f32 	%f668, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f668;}

	// inline asm
	st.v4.u16 	[%rd94], {%rs52, %rs52, %rs52, %rs41};

BB0_83:
	ld.global.u8 	%rs53, [imageEnabled];
	and.b16  	%rs54, %rs53, 64;
	setp.eq.s16	%p106, %rs54, 0;
	@%p106 bra 	BB0_95;

	cvt.u64.u32	%rd103, %r2;
	cvt.u64.u32	%rd104, %r3;
	mov.u64 	%rd107, image_Dir;
	cvta.global.u64 	%rd102, %rd107;
	// inline asm
	call (%rd101), _rt_buffer_get_64, (%rd102, %r24, %r25, %rd103, %rd104, %rd15, %rd15);
	// inline asm
	mov.u16 	%rs55, 255;
	mov.u16 	%rs56, 0;
	st.v4.u8 	[%rd101], {%rs56, %rs56, %rs56, %rs55};
	bra.uni 	BB0_95;

BB0_24:
	setp.geu.f32	%p43, %f741, 0f00000000;
	@%p43 bra 	BB0_27;

	cvt.rzi.f32.f32	%f393, %f365;
	setp.neu.f32	%p44, %f393, 0f3EE8BA2E;
	selp.f32	%f744, 0f7FFFFFFF, %f744, %p44;

BB0_27:
	add.f32 	%f395, %f48, 0f3EE8BA2E;
	mov.b32 	 %r71, %f395;
	setp.lt.s32	%p46, %r71, 2139095040;
	@%p46 bra 	BB0_32;

	setp.gtu.f32	%p47, %f48, 0f7F800000;
	@%p47 bra 	BB0_31;
	bra.uni 	BB0_29;

BB0_31:
	add.f32 	%f744, %f741, 0f3EE8BA2E;
	bra.uni 	BB0_32;

BB0_29:
	setp.neu.f32	%p48, %f48, 0f7F800000;
	@%p48 bra 	BB0_32;

	selp.f32	%f744, 0fFF800000, 0f7F800000, %p2;

BB0_32:
	mul.f32 	%f396, %f744, 0f437F0000;
	setp.eq.f32	%p49, %f741, 0f3F800000;
	selp.f32	%f397, 0f437F0000, %f396, %p49;
	cvt.rzi.u32.f32	%r72, %f397;
	cvt.u16.u32	%rs11, %r72;
	mov.u16 	%rs12, 255;
	st.v2.u8 	[%rd26], {%rs11, %rs12};
	ld.global.u32 	%r156, [imageEnabled];

BB0_33:
	and.b32  	%r73, %r156, 1;
	setp.eq.b32	%p50, %r73, 1;
	@!%p50 bra 	BB0_68;
	bra.uni 	BB0_34;

BB0_34:
	mov.f32 	%f706, 0fB5BFBE8E;
	mov.f32 	%f705, 0fBF317200;
	mov.f32 	%f704, 0f35BFBE8E;
	mov.f32 	%f703, 0f3F317200;
	mov.f32 	%f702, 0f3DAAAABD;
	mov.f32 	%f701, 0f3C4CAF63;
	mov.f32 	%f700, 0f3B18F0FE;
	mov.f32 	%f400, 0f3E666666;
	cvt.rzi.f32.f32	%f401, %f400;
	fma.rn.f32 	%f402, %f401, 0fC0000000, 0f3EE66666;
	abs.f32 	%f60, %f402;
	abs.f32 	%f61, %f44;
	setp.lt.f32	%p51, %f61, 0f00800000;
	mul.f32 	%f403, %f61, 0f4B800000;
	selp.f32	%f404, 0fC3170000, 0fC2FE0000, %p51;
	selp.f32	%f405, %f403, %f61, %p51;
	mov.b32 	 %r74, %f405;
	and.b32  	%r75, %r74, 8388607;
	or.b32  	%r76, %r75, 1065353216;
	mov.b32 	 %f406, %r76;
	shr.u32 	%r77, %r74, 23;
	cvt.rn.f32.u32	%f407, %r77;
	add.f32 	%f408, %f404, %f407;
	setp.gt.f32	%p52, %f406, 0f3FB504F3;
	mul.f32 	%f409, %f406, 0f3F000000;
	add.f32 	%f410, %f408, 0f3F800000;
	selp.f32	%f411, %f409, %f406, %p52;
	selp.f32	%f412, %f410, %f408, %p52;
	add.f32 	%f413, %f411, 0fBF800000;
	add.f32 	%f399, %f411, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f398,%f399;
	// inline asm
	add.f32 	%f414, %f413, %f413;
	mul.f32 	%f415, %f398, %f414;
	mul.f32 	%f416, %f415, %f415;
	fma.rn.f32 	%f419, %f700, %f416, %f701;
	fma.rn.f32 	%f421, %f419, %f416, %f702;
	mul.rn.f32 	%f422, %f421, %f416;
	mul.rn.f32 	%f423, %f422, %f415;
	sub.f32 	%f424, %f413, %f415;
	neg.f32 	%f425, %f415;
	add.f32 	%f426, %f424, %f424;
	fma.rn.f32 	%f427, %f425, %f413, %f426;
	mul.rn.f32 	%f428, %f398, %f427;
	add.f32 	%f429, %f423, %f415;
	sub.f32 	%f430, %f415, %f429;
	add.f32 	%f431, %f423, %f430;
	add.f32 	%f432, %f428, %f431;
	add.f32 	%f433, %f429, %f432;
	sub.f32 	%f434, %f429, %f433;
	add.f32 	%f435, %f432, %f434;
	mul.rn.f32 	%f437, %f412, %f703;
	mul.rn.f32 	%f439, %f412, %f704;
	add.f32 	%f440, %f437, %f433;
	sub.f32 	%f441, %f437, %f440;
	add.f32 	%f442, %f433, %f441;
	add.f32 	%f443, %f435, %f442;
	add.f32 	%f444, %f439, %f443;
	add.f32 	%f445, %f440, %f444;
	sub.f32 	%f446, %f440, %f445;
	add.f32 	%f447, %f444, %f446;
	mov.f32 	%f448, 0f3EE66666;
	mul.rn.f32 	%f449, %f448, %f445;
	neg.f32 	%f450, %f449;
	fma.rn.f32 	%f451, %f448, %f445, %f450;
	fma.rn.f32 	%f452, %f448, %f447, %f451;
	mov.f32 	%f453, 0f00000000;
	fma.rn.f32 	%f454, %f453, %f445, %f452;
	add.rn.f32 	%f455, %f449, %f454;
	neg.f32 	%f456, %f455;
	add.rn.f32 	%f457, %f449, %f456;
	add.rn.f32 	%f458, %f457, %f454;
	mov.b32 	 %r78, %f455;
	setp.eq.s32	%p53, %r78, 1118925336;
	add.s32 	%r79, %r78, -1;
	mov.b32 	 %f459, %r79;
	add.f32 	%f460, %f458, 0f37000000;
	selp.f32	%f461, %f459, %f455, %p53;
	selp.f32	%f62, %f460, %f458, %p53;
	mul.f32 	%f462, %f461, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f463, %f462;
	fma.rn.f32 	%f465, %f463, %f705, %f461;
	fma.rn.f32 	%f467, %f463, %f706, %f465;
	mul.f32 	%f468, %f467, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f469, %f468;
	add.f32 	%f470, %f463, 0f00000000;
	ex2.approx.f32 	%f471, %f470;
	mul.f32 	%f472, %f469, %f471;
	setp.lt.f32	%p54, %f461, 0fC2D20000;
	selp.f32	%f473, 0f00000000, %f472, %p54;
	setp.gt.f32	%p55, %f461, 0f42D20000;
	selp.f32	%f745, 0f7F800000, %f473, %p55;
	setp.eq.f32	%p56, %f745, 0f7F800000;
	@%p56 bra 	BB0_36;

	fma.rn.f32 	%f745, %f745, %f62, %f745;

BB0_36:
	setp.lt.f32	%p57, %f44, 0f00000000;
	setp.eq.f32	%p58, %f60, 0f3F800000;
	and.pred  	%p3, %p57, %p58;
	mov.b32 	 %r80, %f745;
	xor.b32  	%r81, %r80, -2147483648;
	mov.b32 	 %f474, %r81;
	selp.f32	%f747, %f474, %f745, %p3;
	setp.eq.f32	%p59, %f44, 0f00000000;
	@%p59 bra 	BB0_39;
	bra.uni 	BB0_37;

BB0_39:
	add.f32 	%f477, %f44, %f44;
	selp.f32	%f747, %f477, 0f00000000, %p58;
	bra.uni 	BB0_40;

BB0_37:
	setp.geu.f32	%p60, %f44, 0f00000000;
	@%p60 bra 	BB0_40;

	cvt.rzi.f32.f32	%f476, %f448;
	setp.neu.f32	%p61, %f476, 0f3EE66666;
	selp.f32	%f747, 0f7FFFFFFF, %f747, %p61;

BB0_40:
	add.f32 	%f478, %f61, 0f3EE66666;
	mov.b32 	 %r82, %f478;
	setp.lt.s32	%p63, %r82, 2139095040;
	@%p63 bra 	BB0_45;

	setp.gtu.f32	%p64, %f61, 0f7F800000;
	@%p64 bra 	BB0_44;
	bra.uni 	BB0_42;

BB0_44:
	add.f32 	%f747, %f44, 0f3EE66666;
	bra.uni 	BB0_45;

BB0_42:
	setp.neu.f32	%p65, %f61, 0f7F800000;
	@%p65 bra 	BB0_45;

	selp.f32	%f747, 0fFF800000, 0f7F800000, %p3;

BB0_45:
	mov.f32 	%f713, 0fB5BFBE8E;
	mov.f32 	%f712, 0fBF317200;
	mov.f32 	%f711, 0f35BFBE8E;
	mov.f32 	%f710, 0f3F317200;
	mov.f32 	%f709, 0f3DAAAABD;
	mov.f32 	%f708, 0f3C4CAF63;
	mov.f32 	%f707, 0f3B18F0FE;
	setp.eq.f32	%p66, %f44, 0f3F800000;
	selp.f32	%f73, 0f3F800000, %f747, %p66;
	abs.f32 	%f74, %f45;
	setp.lt.f32	%p67, %f74, 0f00800000;
	mul.f32 	%f481, %f74, 0f4B800000;
	selp.f32	%f482, 0fC3170000, 0fC2FE0000, %p67;
	selp.f32	%f483, %f481, %f74, %p67;
	mov.b32 	 %r83, %f483;
	and.b32  	%r84, %r83, 8388607;
	or.b32  	%r85, %r84, 1065353216;
	mov.b32 	 %f484, %r85;
	shr.u32 	%r86, %r83, 23;
	cvt.rn.f32.u32	%f485, %r86;
	add.f32 	%f486, %f482, %f485;
	setp.gt.f32	%p68, %f484, 0f3FB504F3;
	mul.f32 	%f487, %f484, 0f3F000000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32	%f489, %f487, %f484, %p68;
	selp.f32	%f490, %f488, %f486, %p68;
	add.f32 	%f491, %f489, 0fBF800000;
	add.f32 	%f480, %f489, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f479,%f480;
	// inline asm
	add.f32 	%f492, %f491, %f491;
	mul.f32 	%f493, %f479, %f492;
	mul.f32 	%f494, %f493, %f493;
	fma.rn.f32 	%f497, %f707, %f494, %f708;
	fma.rn.f32 	%f499, %f497, %f494, %f709;
	mul.rn.f32 	%f500, %f499, %f494;
	mul.rn.f32 	%f501, %f500, %f493;
	sub.f32 	%f502, %f491, %f493;
	neg.f32 	%f503, %f493;
	add.f32 	%f504, %f502, %f502;
	fma.rn.f32 	%f505, %f503, %f491, %f504;
	mul.rn.f32 	%f506, %f479, %f505;
	add.f32 	%f507, %f501, %f493;
	sub.f32 	%f508, %f493, %f507;
	add.f32 	%f509, %f501, %f508;
	add.f32 	%f510, %f506, %f509;
	add.f32 	%f511, %f507, %f510;
	sub.f32 	%f512, %f507, %f511;
	add.f32 	%f513, %f510, %f512;
	mul.rn.f32 	%f515, %f490, %f710;
	mul.rn.f32 	%f517, %f490, %f711;
	add.f32 	%f518, %f515, %f511;
	sub.f32 	%f519, %f515, %f518;
	add.f32 	%f520, %f511, %f519;
	add.f32 	%f521, %f513, %f520;
	add.f32 	%f522, %f517, %f521;
	add.f32 	%f523, %f518, %f522;
	sub.f32 	%f524, %f518, %f523;
	add.f32 	%f525, %f522, %f524;
	mul.rn.f32 	%f527, %f448, %f523;
	neg.f32 	%f528, %f527;
	fma.rn.f32 	%f529, %f448, %f523, %f528;
	fma.rn.f32 	%f530, %f448, %f525, %f529;
	fma.rn.f32 	%f532, %f453, %f523, %f530;
	add.rn.f32 	%f533, %f527, %f532;
	neg.f32 	%f534, %f533;
	add.rn.f32 	%f535, %f527, %f534;
	add.rn.f32 	%f536, %f535, %f532;
	mov.b32 	 %r87, %f533;
	setp.eq.s32	%p69, %r87, 1118925336;
	add.s32 	%r88, %r87, -1;
	mov.b32 	 %f537, %r88;
	add.f32 	%f538, %f536, 0f37000000;
	selp.f32	%f539, %f537, %f533, %p69;
	selp.f32	%f75, %f538, %f536, %p69;
	mul.f32 	%f540, %f539, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f541, %f540;
	fma.rn.f32 	%f543, %f541, %f712, %f539;
	fma.rn.f32 	%f545, %f541, %f713, %f543;
	mul.f32 	%f546, %f545, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f547, %f546;
	add.f32 	%f548, %f541, 0f00000000;
	ex2.approx.f32 	%f549, %f548;
	mul.f32 	%f550, %f547, %f549;
	setp.lt.f32	%p70, %f539, 0fC2D20000;
	selp.f32	%f551, 0f00000000, %f550, %p70;
	setp.gt.f32	%p71, %f539, 0f42D20000;
	selp.f32	%f748, 0f7F800000, %f551, %p71;
	setp.eq.f32	%p72, %f748, 0f7F800000;
	@%p72 bra 	BB0_47;

	fma.rn.f32 	%f748, %f748, %f75, %f748;

BB0_47:
	setp.lt.f32	%p73, %f45, 0f00000000;
	and.pred  	%p4, %p73, %p58;
	mov.b32 	 %r89, %f748;
	xor.b32  	%r90, %r89, -2147483648;
	mov.b32 	 %f552, %r90;
	selp.f32	%f750, %f552, %f748, %p4;
	setp.eq.f32	%p75, %f45, 0f00000000;
	@%p75 bra 	BB0_50;
	bra.uni 	BB0_48;

BB0_50:
	add.f32 	%f555, %f45, %f45;
	selp.f32	%f750, %f555, 0f00000000, %p58;
	bra.uni 	BB0_51;

BB0_48:
	setp.geu.f32	%p76, %f45, 0f00000000;
	@%p76 bra 	BB0_51;

	cvt.rzi.f32.f32	%f554, %f448;
	setp.neu.f32	%p77, %f554, 0f3EE66666;
	selp.f32	%f750, 0f7FFFFFFF, %f750, %p77;

BB0_51:
	add.f32 	%f556, %f74, 0f3EE66666;
	mov.b32 	 %r91, %f556;
	setp.lt.s32	%p79, %r91, 2139095040;
	@%p79 bra 	BB0_56;

	setp.gtu.f32	%p80, %f74, 0f7F800000;
	@%p80 bra 	BB0_55;
	bra.uni 	BB0_53;

BB0_55:
	add.f32 	%f750, %f45, 0f3EE66666;
	bra.uni 	BB0_56;

BB0_53:
	setp.neu.f32	%p81, %f74, 0f7F800000;
	@%p81 bra 	BB0_56;

	selp.f32	%f750, 0fFF800000, 0f7F800000, %p4;

BB0_56:
	mov.f32 	%f720, 0fB5BFBE8E;
	mov.f32 	%f719, 0fBF317200;
	mov.f32 	%f718, 0f35BFBE8E;
	mov.f32 	%f717, 0f3F317200;
	mov.f32 	%f716, 0f3DAAAABD;
	mov.f32 	%f715, 0f3C4CAF63;
	mov.f32 	%f714, 0f3B18F0FE;
	setp.eq.f32	%p82, %f45, 0f3F800000;
	selp.f32	%f86, 0f3F800000, %f750, %p82;
	abs.f32 	%f87, %f46;
	setp.lt.f32	%p83, %f87, 0f00800000;
	mul.f32 	%f559, %f87, 0f4B800000;
	selp.f32	%f560, 0fC3170000, 0fC2FE0000, %p83;
	selp.f32	%f561, %f559, %f87, %p83;
	mov.b32 	 %r92, %f561;
	and.b32  	%r93, %r92, 8388607;
	or.b32  	%r94, %r93, 1065353216;
	mov.b32 	 %f562, %r94;
	shr.u32 	%r95, %r92, 23;
	cvt.rn.f32.u32	%f563, %r95;
	add.f32 	%f564, %f560, %f563;
	setp.gt.f32	%p84, %f562, 0f3FB504F3;
	mul.f32 	%f565, %f562, 0f3F000000;
	add.f32 	%f566, %f564, 0f3F800000;
	selp.f32	%f567, %f565, %f562, %p84;
	selp.f32	%f568, %f566, %f564, %p84;
	add.f32 	%f569, %f567, 0fBF800000;
	add.f32 	%f558, %f567, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f557,%f558;
	// inline asm
	add.f32 	%f570, %f569, %f569;
	mul.f32 	%f571, %f557, %f570;
	mul.f32 	%f572, %f571, %f571;
	fma.rn.f32 	%f575, %f714, %f572, %f715;
	fma.rn.f32 	%f577, %f575, %f572, %f716;
	mul.rn.f32 	%f578, %f577, %f572;
	mul.rn.f32 	%f579, %f578, %f571;
	sub.f32 	%f580, %f569, %f571;
	neg.f32 	%f581, %f571;
	add.f32 	%f582, %f580, %f580;
	fma.rn.f32 	%f583, %f581, %f569, %f582;
	mul.rn.f32 	%f584, %f557, %f583;
	add.f32 	%f585, %f579, %f571;
	sub.f32 	%f586, %f571, %f585;
	add.f32 	%f587, %f579, %f586;
	add.f32 	%f588, %f584, %f587;
	add.f32 	%f589, %f585, %f588;
	sub.f32 	%f590, %f585, %f589;
	add.f32 	%f591, %f588, %f590;
	mul.rn.f32 	%f593, %f568, %f717;
	mul.rn.f32 	%f595, %f568, %f718;
	add.f32 	%f596, %f593, %f589;
	sub.f32 	%f597, %f593, %f596;
	add.f32 	%f598, %f589, %f597;
	add.f32 	%f599, %f591, %f598;
	add.f32 	%f600, %f595, %f599;
	add.f32 	%f601, %f596, %f600;
	sub.f32 	%f602, %f596, %f601;
	add.f32 	%f603, %f600, %f602;
	mul.rn.f32 	%f605, %f448, %f601;
	neg.f32 	%f606, %f605;
	fma.rn.f32 	%f607, %f448, %f601, %f606;
	fma.rn.f32 	%f608, %f448, %f603, %f607;
	fma.rn.f32 	%f610, %f453, %f601, %f608;
	add.rn.f32 	%f611, %f605, %f610;
	neg.f32 	%f612, %f611;
	add.rn.f32 	%f613, %f605, %f612;
	add.rn.f32 	%f614, %f613, %f610;
	mov.b32 	 %r96, %f611;
	setp.eq.s32	%p85, %r96, 1118925336;
	add.s32 	%r97, %r96, -1;
	mov.b32 	 %f615, %r97;
	add.f32 	%f616, %f614, 0f37000000;
	selp.f32	%f617, %f615, %f611, %p85;
	selp.f32	%f88, %f616, %f614, %p85;
	mul.f32 	%f618, %f617, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f619, %f618;
	fma.rn.f32 	%f621, %f619, %f719, %f617;
	fma.rn.f32 	%f623, %f619, %f720, %f621;
	mul.f32 	%f624, %f623, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f625, %f624;
	add.f32 	%f626, %f619, 0f00000000;
	ex2.approx.f32 	%f627, %f626;
	mul.f32 	%f628, %f625, %f627;
	setp.lt.f32	%p86, %f617, 0fC2D20000;
	selp.f32	%f629, 0f00000000, %f628, %p86;
	setp.gt.f32	%p87, %f617, 0f42D20000;
	selp.f32	%f751, 0f7F800000, %f629, %p87;
	setp.eq.f32	%p88, %f751, 0f7F800000;
	@%p88 bra 	BB0_58;

	fma.rn.f32 	%f751, %f751, %f88, %f751;

BB0_58:
	setp.lt.f32	%p89, %f46, 0f00000000;
	and.pred  	%p5, %p89, %p58;
	mov.b32 	 %r98, %f751;
	xor.b32  	%r99, %r98, -2147483648;
	mov.b32 	 %f630, %r99;
	selp.f32	%f753, %f630, %f751, %p5;
	setp.eq.f32	%p91, %f46, 0f00000000;
	@%p91 bra 	BB0_61;
	bra.uni 	BB0_59;

BB0_61:
	add.f32 	%f633, %f46, %f46;
	selp.f32	%f753, %f633, 0f00000000, %p58;
	bra.uni 	BB0_62;

BB0_59:
	setp.geu.f32	%p92, %f46, 0f00000000;
	@%p92 bra 	BB0_62;

	cvt.rzi.f32.f32	%f632, %f448;
	setp.neu.f32	%p93, %f632, 0f3EE66666;
	selp.f32	%f753, 0f7FFFFFFF, %f753, %p93;

BB0_62:
	add.f32 	%f634, %f87, 0f3EE66666;
	mov.b32 	 %r100, %f634;
	setp.lt.s32	%p95, %r100, 2139095040;
	@%p95 bra 	BB0_67;

	setp.gtu.f32	%p96, %f87, 0f7F800000;
	@%p96 bra 	BB0_66;
	bra.uni 	BB0_64;

BB0_66:
	add.f32 	%f753, %f46, 0f3EE66666;
	bra.uni 	BB0_67;

BB0_64:
	setp.neu.f32	%p97, %f87, 0f7F800000;
	@%p97 bra 	BB0_67;

	selp.f32	%f753, 0fFF800000, 0f7F800000, %p5;

BB0_67:
	setp.eq.f32	%p98, %f46, 0f3F800000;
	selp.f32	%f635, 0f3F800000, %f753, %p98;
	cvt.u64.u32	%rd36, %r3;
	cvt.u64.u32	%rd35, %r2;
	mov.u64 	%rd39, image;
	cvta.global.u64 	%rd34, %rd39;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r24, %r25, %rd35, %rd36, %rd15, %rd15);
	// inline asm
	cvt.sat.f32.f32	%f636, %f635;
	mul.f32 	%f637, %f636, 0f437FFD71;
	cvt.rzi.u32.f32	%r103, %f637;
	cvt.sat.f32.f32	%f638, %f86;
	mul.f32 	%f639, %f638, 0f437FFD71;
	cvt.rzi.u32.f32	%r104, %f639;
	cvt.sat.f32.f32	%f640, %f73;
	mul.f32 	%f641, %f640, 0f437FFD71;
	cvt.rzi.u32.f32	%r105, %f641;
	cvt.u16.u32	%rs13, %r103;
	cvt.u16.u32	%rs14, %r105;
	cvt.u16.u32	%rs15, %r104;
	mov.u16 	%rs16, 255;
	st.v4.u8 	[%rd33], {%rs13, %rs15, %rs14, %rs16};
	ld.global.u32 	%r156, [imageEnabled];

BB0_68:
	and.b32  	%r106, %r156, 4;
	setp.eq.s32	%p99, %r106, 0;
	@%p99 bra 	BB0_72;

	ld.global.u32 	%r107, [additive];
	setp.eq.s32	%p100, %r107, 0;
	cvt.u64.u32	%rd4, %r2;
	cvt.u64.u32	%rd5, %r3;
	mov.f32 	%f642, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f642;}

	// inline asm
	@%p100 bra 	BB0_71;

	mov.u64 	%rd52, image_HDR;
	cvta.global.u64 	%rd41, %rd52;
	mov.u32 	%r111, 8;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd41, %r24, %r111, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	ld.v4.u16 	{%rs24, %rs25, %rs26, %rs27}, [%rd40];
	// inline asm
	{  cvt.f32.f16 %f643, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f644, %rs25;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f645, %rs26;}

	// inline asm
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd41, %r24, %r111, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	add.f32 	%f646, %f44, %f643;
	add.f32 	%f647, %f45, %f644;
	add.f32 	%f648, %f46, %f645;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f648;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f647;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f646;}

	// inline asm
	st.v4.u16 	[%rd46], {%rs21, %rs22, %rs23, %rs17};
	bra.uni 	BB0_72;

BB0_71:
	mov.u64 	%rd59, image_HDR;
	cvta.global.u64 	%rd54, %rd59;
	mov.u32 	%r113, 8;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r24, %r113, %rd4, %rd5, %rd15, %rd15);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f46;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f45;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f44;}

	// inline asm
	st.v4.u16 	[%rd53], {%rs28, %rs29, %rs30, %rs17};

BB0_72:
	ld.global.u8 	%rs31, [imageEnabled];
	and.b16  	%rs32, %rs31, 64;
	setp.eq.s16	%p101, %rs32, 0;
	@%p101 bra 	BB0_95;

	sub.f32 	%f726, %f11, %f12;
	mul.f32 	%f725, %f726, %f128;
	sub.f32 	%f724, %f7, %f8;
	mul.f32 	%f723, %f724, %f128;
	sub.f32 	%f722, %f9, %f10;
	mul.f32 	%f721, %f722, %f128;
	cvt.u64.u32	%rd62, %r2;
	cvt.u64.u32	%rd63, %r3;
	mov.u64 	%rd66, image_Dir;
	cvta.global.u64 	%rd61, %rd66;
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd61, %r24, %r25, %rd62, %rd63, %rd15, %rd15);
	// inline asm
	fma.rn.f32 	%f652, %f723, 0f3F000000, 0f3F000000;
	mul.f32 	%f653, %f652, 0f437F0000;
	cvt.rzi.u32.f32	%r116, %f653;
	fma.rn.f32 	%f654, %f721, 0f3F000000, 0f3F000000;
	mul.f32 	%f655, %f654, 0f437F0000;
	cvt.rzi.u32.f32	%r117, %f655;
	fma.rn.f32 	%f656, %f725, 0f3F000000, 0f3F000000;
	mul.f32 	%f657, %f656, 0f437F0000;
	cvt.rzi.u32.f32	%r118, %f657;
	cvt.u16.u32	%rs33, %r118;
	cvt.u16.u32	%rs34, %r117;
	cvt.u16.u32	%rs35, %r116;
	mov.u16 	%rs36, 255;
	st.v4.u8 	[%rd60], {%rs35, %rs34, %rs33, %rs36};

BB0_95:
	ret;
}


