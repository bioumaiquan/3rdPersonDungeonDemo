//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 sky;
.global .align 4 .b8 skyColor[12];
.global .align 4 .u32 samples;
.global .align 4 .u32 hemispherical;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3skyE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8skyColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13hemisphericalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename3skyE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8skyColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename13hemisphericalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3skyE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8skyColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13hemisphericalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3skyE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8skyColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13hemisphericalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3skyE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8skyColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13hemisphericalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<114>;
	.reg .b16 	%rs<153>;
	.reg .f32 	%f<989>;
	.reg .b32 	%r<417>;
	.reg .b64 	%rd<275>;


	mov.u64 	%rd274, __local_depot0;
	cvta.local.u64 	%SP, %rd274;
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	cvt.u64.u32	%rd24, %r106;
	cvt.u64.u32	%rd25, %r107;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r104, 2;
	mov.u32 	%r105, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r104, %r105, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r1, [%rd22];
	shr.u32 	%r110, %r1, 16;
	cvt.u16.u32	%rs1, %r110;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r1;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p4, %rs8, 0;
	mov.f32 	%f896, 0f00000000;
	mov.f32 	%f897, %f896;
	mov.f32 	%f898, %f896;
	@%p4 bra 	BB0_2;

	ld.u8 	%rs9, [%rd22+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f227, %rs11;
	div.rn.f32 	%f228, %f227, 0f437F0000;
	fma.rn.f32 	%f229, %f228, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f230, %rs9;
	div.rn.f32 	%f231, %f230, 0f437F0000;
	fma.rn.f32 	%f232, %f231, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f233, %rs6;
	div.rn.f32 	%f234, %f233, 0f437F0000;
	fma.rn.f32 	%f235, %f234, 0f40000000, 0fBF800000;
	mul.f32 	%f236, %f232, %f232;
	fma.rn.f32 	%f237, %f229, %f229, %f236;
	fma.rn.f32 	%f238, %f235, %f235, %f237;
	sqrt.rn.f32 	%f239, %f238;
	rcp.rn.f32 	%f240, %f239;
	mul.f32 	%f896, %f229, %f240;
	mul.f32 	%f897, %f232, %f240;
	mul.f32 	%f898, %f235, %f240;

BB0_2:
	ld.global.v2.u32 	{%r111, %r112}, [pixelID];
	ld.global.v2.u32 	{%r114, %r115}, [tileInfo];
	add.s32 	%r2, %r111, %r114;
	add.s32 	%r3, %r112, %r115;
	setp.eq.f32	%p5, %f897, 0f00000000;
	setp.eq.f32	%p6, %f896, 0f00000000;
	and.pred  	%p7, %p6, %p5;
	setp.eq.f32	%p8, %f898, 0f00000000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB0_112;
	bra.uni 	BB0_3;

BB0_112:
	ld.global.u32 	%r416, [imageEnabled];
	and.b32  	%r315, %r416, 1;
	setp.eq.b32	%p107, %r315, 1;
	@!%p107 bra 	BB0_114;
	bra.uni 	BB0_113;

BB0_113:
	cvt.u64.u32	%rd176, %r3;
	cvt.u64.u32	%rd175, %r2;
	mov.u64 	%rd179, image;
	cvta.global.u64 	%rd174, %rd179;
	mov.u64 	%rd178, 0;
	// inline asm
	call (%rd173), _rt_buffer_get_64, (%rd174, %r104, %r105, %rd175, %rd176, %rd178, %rd178);
	// inline asm
	mov.u16 	%rs100, 0;
	st.v4.u8 	[%rd173], {%rs100, %rs100, %rs100, %rs100};
	ld.global.u32 	%r416, [imageEnabled];

BB0_114:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	and.b32  	%r318, %r416, 4;
	setp.eq.s32	%p108, %r318, 0;
	@%p108 bra 	BB0_118;

	ld.global.u32 	%r319, [additive];
	setp.eq.s32	%p109, %r319, 0;
	@%p109 bra 	BB0_117;

	mov.u64 	%rd192, image_HDR;
	cvta.global.u64 	%rd181, %rd192;
	mov.u32 	%r323, 8;
	mov.u64 	%rd191, 0;
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd181, %r104, %r323, %rd20, %rd21, %rd191, %rd191);
	// inline asm
	ld.v4.u16 	{%rs107, %rs108, %rs109, %rs110}, [%rd180];
	// inline asm
	{  cvt.f32.f16 %f836, %rs107;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f837, %rs108;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f838, %rs109;}

	// inline asm
	// inline asm
	call (%rd186), _rt_buffer_get_64, (%rd181, %r104, %r323, %rd20, %rd21, %rd191, %rd191);
	// inline asm
	add.f32 	%f839, %f836, 0f00000000;
	add.f32 	%f840, %f837, 0f00000000;
	add.f32 	%f841, %f838, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs106, %f841;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f840;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f839;}

	// inline asm
	mov.u16 	%rs111, 0;
	st.v4.u16 	[%rd186], {%rs104, %rs105, %rs106, %rs111};
	bra.uni 	BB0_118;

BB0_3:
	ld.global.v2.u32 	{%r125, %r126}, [pixelID];
	cvt.u64.u32	%rd31, %r125;
	cvt.u64.u32	%rd32, %r126;
	mov.u64 	%rd47, uvpos;
	cvta.global.u64 	%rd30, %rd47;
	mov.u32 	%r120, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r104, %r120, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f244, [%rd29+8];
	ld.f32 	%f245, [%rd29+4];
	ld.f32 	%f246, [%rd29];
	mul.f32 	%f247, %f246, 0f3456BF95;
	mul.f32 	%f248, %f245, 0f3456BF95;
	mul.f32 	%f249, %f244, 0f3456BF95;
	abs.f32 	%f250, %f896;
	div.rn.f32 	%f251, %f247, %f250;
	abs.f32 	%f252, %f897;
	div.rn.f32 	%f253, %f248, %f252;
	abs.f32 	%f254, %f898;
	div.rn.f32 	%f255, %f249, %f254;
	abs.f32 	%f256, %f251;
	abs.f32 	%f257, %f253;
	abs.f32 	%f258, %f255;
	mov.f32 	%f259, 0f38D1B717;
	max.f32 	%f260, %f256, %f259;
	max.f32 	%f261, %f257, %f259;
	max.f32 	%f262, %f258, %f259;
	fma.rn.f32 	%f7, %f896, %f260, %f246;
	fma.rn.f32 	%f8, %f897, %f261, %f245;
	fma.rn.f32 	%f9, %f898, %f262, %f244;
	ld.global.u32 	%r4, [hemispherical];
	setp.gt.f32	%p10, %f250, %f254;
	neg.f32 	%f263, %f897;
	selp.f32	%f264, %f263, 0f00000000, %p10;
	neg.f32 	%f265, %f898;
	selp.f32	%f266, %f896, %f265, %p10;
	selp.f32	%f267, 0f00000000, %f897, %p10;
	mul.f32 	%f268, %f266, %f266;
	fma.rn.f32 	%f269, %f264, %f264, %f268;
	fma.rn.f32 	%f270, %f267, %f267, %f269;
	sqrt.rn.f32 	%f271, %f270;
	rcp.rn.f32 	%f272, %f271;
	mul.f32 	%f10, %f264, %f272;
	mul.f32 	%f11, %f266, %f272;
	mul.f32 	%f12, %f267, %f272;
	ld.global.v2.u32 	{%r129, %r130}, [pixelID];
	cvt.u64.u32	%rd37, %r129;
	cvt.u64.u32	%rd38, %r130;
	mov.u64 	%rd48, rnd_seeds;
	cvta.global.u64 	%rd36, %rd48;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r104, %r105, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.u32 	%r413, [%rd35];
	ld.global.v2.u32 	{%r133, %r134}, [pixelID];
	cvt.u64.u32	%rd43, %r133;
	cvt.u64.u32	%rd44, %r134;
	mov.u64 	%rd49, uvtangent;
	cvta.global.u64 	%rd42, %rd49;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r104, %r105, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.u32 	%r6, [%rd41];
	shr.u32 	%r7, %r6, 16;
	cvt.u16.u32	%rs13, %r7;
	and.b16  	%rs14, %rs13, 255;
	cvt.u16.u32	%rs15, %r6;
	or.b16  	%rs16, %rs15, %rs14;
	setp.eq.s16	%p11, %rs16, 0;
	mov.f32 	%f899, 0f00000000;
	mov.f32 	%f900, %f899;
	mov.f32 	%f901, %f899;
	@%p11 bra 	BB0_5;

	ld.u8 	%rs17, [%rd41+1];
	and.b16  	%rs19, %rs15, 255;
	cvt.rn.f32.u16	%f273, %rs19;
	div.rn.f32 	%f274, %f273, 0f437F0000;
	fma.rn.f32 	%f275, %f274, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f276, %rs17;
	div.rn.f32 	%f277, %f276, 0f437F0000;
	fma.rn.f32 	%f278, %f277, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f279, %rs14;
	div.rn.f32 	%f280, %f279, 0f437F0000;
	fma.rn.f32 	%f281, %f280, 0f40000000, 0fBF800000;
	mul.f32 	%f282, %f278, %f278;
	fma.rn.f32 	%f283, %f275, %f275, %f282;
	fma.rn.f32 	%f284, %f281, %f281, %f283;
	sqrt.rn.f32 	%f285, %f284;
	rcp.rn.f32 	%f286, %f285;
	mul.f32 	%f899, %f275, %f286;
	mul.f32 	%f900, %f278, %f286;
	mul.f32 	%f901, %f281, %f286;

BB0_5:
	mov.f32 	%f902, 0f00000000;
	mov.u64 	%rd267, uvtangent;
	cvta.global.u64 	%rd266, %rd267;
	mov.u32 	%r382, 4;
	mov.u32 	%r381, 2;
	mul.f32 	%f290, %f898, %f900;
	mul.f32 	%f291, %f897, %f901;
	sub.f32 	%f292, %f291, %f290;
	mul.f32 	%f293, %f896, %f901;
	mul.f32 	%f294, %f898, %f899;
	sub.f32 	%f295, %f294, %f293;
	mul.f32 	%f296, %f897, %f899;
	mul.f32 	%f297, %f896, %f900;
	sub.f32 	%f298, %f297, %f296;
	setp.lt.u32	%p12, %r6, 16777216;
	selp.f32	%f299, 0fBF800000, 0f3F800000, %p12;
	mul.f32 	%f300, %f292, %f299;
	mul.f32 	%f301, %f295, %f299;
	mul.f32 	%f302, %f298, %f299;
	mul.f32 	%f303, %f300, 0f00000000;
	mul.f32 	%f304, %f301, 0f00000000;
	mul.f32 	%f305, %f302, 0f00000000;
	fma.rn.f32 	%f306, %f899, 0f3F5105EC, %f303;
	fma.rn.f32 	%f307, %f900, 0f3F5105EC, %f304;
	fma.rn.f32 	%f308, %f901, 0f3F5105EC, %f305;
	mul.f32 	%f19, %f896, 0f3F13CD3A;
	add.f32 	%f20, %f19, %f306;
	mul.f32 	%f21, %f897, 0f3F13CD3A;
	add.f32 	%f22, %f21, %f307;
	mul.f32 	%f23, %f898, 0f3F13CD3A;
	add.f32 	%f24, %f23, %f308;
	ld.global.v2.u32 	{%r139, %r140}, [pixelID];
	cvt.u64.u32	%rd52, %r139;
	cvt.u64.u32	%rd53, %r140;
	// inline asm
	call (%rd50), _rt_buffer_get_64, (%rd266, %r381, %r382, %rd52, %rd53, %rd27, %rd27);
	// inline asm
	ld.u32 	%r8, [%rd50];
	shr.u32 	%r9, %r8, 16;
	cvt.u16.u32	%rs22, %r9;
	and.b16  	%rs23, %rs22, 255;
	cvt.u16.u32	%rs24, %r8;
	or.b16  	%rs25, %rs24, %rs23;
	setp.eq.s16	%p13, %rs25, 0;
	mov.f32 	%f903, %f902;
	mov.f32 	%f904, %f902;
	@%p13 bra 	BB0_7;

	ld.u8 	%rs26, [%rd50+1];
	and.b16  	%rs28, %rs24, 255;
	cvt.rn.f32.u16	%f309, %rs28;
	div.rn.f32 	%f310, %f309, 0f437F0000;
	fma.rn.f32 	%f311, %f310, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f312, %rs26;
	div.rn.f32 	%f313, %f312, 0f437F0000;
	fma.rn.f32 	%f314, %f313, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f315, %rs23;
	div.rn.f32 	%f316, %f315, 0f437F0000;
	fma.rn.f32 	%f317, %f316, 0f40000000, 0fBF800000;
	mul.f32 	%f318, %f314, %f314;
	fma.rn.f32 	%f319, %f311, %f311, %f318;
	fma.rn.f32 	%f320, %f317, %f317, %f319;
	sqrt.rn.f32 	%f321, %f320;
	rcp.rn.f32 	%f322, %f321;
	mul.f32 	%f902, %f311, %f322;
	mul.f32 	%f903, %f314, %f322;
	mul.f32 	%f904, %f317, %f322;

BB0_7:
	mul.f32 	%f892, %f898, 0f3F13CD3A;
	mul.f32 	%f891, %f897, 0f3F13CD3A;
	mul.f32 	%f890, %f896, 0f3F13CD3A;
	mov.f32 	%f905, 0f00000000;
	mov.u64 	%rd269, uvtangent;
	cvta.global.u64 	%rd268, %rd269;
	mov.u32 	%r384, 4;
	mov.u32 	%r383, 2;
	mul.f32 	%f326, %f898, %f903;
	mul.f32 	%f327, %f897, %f904;
	sub.f32 	%f328, %f327, %f326;
	mul.f32 	%f329, %f896, %f904;
	mul.f32 	%f330, %f898, %f902;
	sub.f32 	%f331, %f330, %f329;
	mul.f32 	%f332, %f897, %f902;
	mul.f32 	%f333, %f896, %f903;
	sub.f32 	%f334, %f333, %f332;
	setp.lt.u32	%p14, %r8, 16777216;
	selp.f32	%f335, 0fBF800000, 0f3F800000, %p14;
	mul.f32 	%f336, %f328, %f335;
	mul.f32 	%f337, %f331, %f335;
	mul.f32 	%f338, %f334, %f335;
	mul.f32 	%f339, %f336, 0f3F3504F3;
	mul.f32 	%f340, %f337, 0f3F3504F3;
	mul.f32 	%f341, %f338, 0f3F3504F3;
	fma.rn.f32 	%f342, %f902, 0fBED105EC, %f339;
	fma.rn.f32 	%f343, %f903, 0fBED105EC, %f340;
	fma.rn.f32 	%f344, %f904, 0fBED105EC, %f341;
	add.f32 	%f31, %f890, %f342;
	add.f32 	%f32, %f891, %f343;
	add.f32 	%f33, %f892, %f344;
	ld.global.v2.u32 	{%r145, %r146}, [pixelID];
	cvt.u64.u32	%rd59, %r145;
	cvt.u64.u32	%rd60, %r146;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd268, %r383, %r384, %rd59, %rd60, %rd27, %rd27);
	// inline asm
	ld.u32 	%r10, [%rd57];
	shr.u32 	%r11, %r10, 16;
	cvt.u16.u32	%rs31, %r11;
	and.b16  	%rs32, %rs31, 255;
	cvt.u16.u32	%rs33, %r10;
	or.b16  	%rs34, %rs33, %rs32;
	setp.eq.s16	%p15, %rs34, 0;
	mov.f32 	%f906, %f905;
	mov.f32 	%f907, %f905;
	@%p15 bra 	BB0_9;

	ld.u8 	%rs35, [%rd57+1];
	and.b16  	%rs37, %rs33, 255;
	cvt.rn.f32.u16	%f345, %rs37;
	div.rn.f32 	%f346, %f345, 0f437F0000;
	fma.rn.f32 	%f347, %f346, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f348, %rs35;
	div.rn.f32 	%f349, %f348, 0f437F0000;
	fma.rn.f32 	%f350, %f349, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f351, %rs32;
	div.rn.f32 	%f352, %f351, 0f437F0000;
	fma.rn.f32 	%f353, %f352, 0f40000000, 0fBF800000;
	mul.f32 	%f354, %f350, %f350;
	fma.rn.f32 	%f355, %f347, %f347, %f354;
	fma.rn.f32 	%f356, %f353, %f353, %f355;
	sqrt.rn.f32 	%f357, %f356;
	rcp.rn.f32 	%f358, %f357;
	mul.f32 	%f905, %f347, %f358;
	mul.f32 	%f906, %f350, %f358;
	mul.f32 	%f907, %f353, %f358;

BB0_9:
	mul.f32 	%f895, %f898, 0f3F13CD3A;
	mul.f32 	%f894, %f897, 0f3F13CD3A;
	mul.f32 	%f893, %f896, 0f3F13CD3A;
	mov.f32 	%f955, 0f00000000;
	mul.f32 	%f371, %f898, %f906;
	mul.f32 	%f372, %f897, %f907;
	sub.f32 	%f373, %f372, %f371;
	mul.f32 	%f374, %f896, %f907;
	mul.f32 	%f375, %f898, %f905;
	sub.f32 	%f376, %f375, %f374;
	mul.f32 	%f377, %f897, %f905;
	mul.f32 	%f378, %f896, %f906;
	sub.f32 	%f379, %f378, %f377;
	setp.lt.u32	%p16, %r10, 16777216;
	selp.f32	%f380, 0fBF800000, 0f3F800000, %p16;
	mul.f32 	%f381, %f373, %f380;
	mul.f32 	%f382, %f376, %f380;
	mul.f32 	%f383, %f379, %f380;
	mul.f32 	%f384, %f381, 0fBF3504F3;
	mul.f32 	%f385, %f382, 0fBF3504F3;
	mul.f32 	%f386, %f383, 0fBF3504F3;
	fma.rn.f32 	%f387, %f905, 0fBED105EC, %f384;
	fma.rn.f32 	%f388, %f906, 0fBED105EC, %f385;
	fma.rn.f32 	%f389, %f907, 0fBED105EC, %f386;
	add.f32 	%f40, %f893, %f387;
	add.f32 	%f41, %f894, %f388;
	add.f32 	%f42, %f895, %f389;
	ld.global.u32 	%r411, [samples];
	setp.lt.s32	%p17, %r411, 1;
	@%p17 bra 	BB0_10;

	cvt.rn.f32.s32	%f402, %r411;
	rcp.rn.f32 	%f43, %f402;
	mul.f32 	%f44, %f7, 0f3456BF95;
	mul.f32 	%f45, %f8, 0f3456BF95;
	mul.f32 	%f46, %f9, 0f3456BF95;
	mul.f32 	%f403, %f898, %f11;
	mul.f32 	%f404, %f897, %f12;
	sub.f32 	%f47, %f403, %f404;
	mul.f32 	%f405, %f896, %f12;
	mul.f32 	%f406, %f898, %f10;
	sub.f32 	%f48, %f405, %f406;
	mul.f32 	%f407, %f897, %f10;
	mul.f32 	%f408, %f896, %f11;
	sub.f32 	%f49, %f407, %f408;
	mov.f32 	%f955, 0f00000000;
	mov.u32 	%r386, 0;
	abs.f32 	%f489, %f45;
	abs.f32 	%f490, %f44;
	max.f32 	%f491, %f490, %f489;
	abs.f32 	%f492, %f46;
	max.f32 	%f493, %f491, %f492;
	mov.f32 	%f954, %f955;
	mov.f32 	%f953, %f955;
	mov.f32 	%f952, %f955;
	mov.f32 	%f951, %f955;
	mov.f32 	%f950, %f955;
	mov.f32 	%f949, %f955;
	mov.f32 	%f948, %f955;
	mov.f32 	%f947, %f955;
	mov.f32 	%f946, %f955;
	mov.f32 	%f945, %f955;
	mov.f32 	%f944, %f955;

BB0_12:
	setp.lt.s32	%p18, %r411, 1;
	@%p18 bra 	BB0_63;

	mov.u32 	%r389, 0;

BB0_14:
	cvt.rn.f32.s32	%f872, %r386;
	mad.lo.s32 	%r151, %r413, 1664525, 1013904223;
	and.b32  	%r152, %r151, 16777215;
	cvt.rn.f32.u32	%f409, %r152;
	fma.rn.f32 	%f410, %f409, 0f33800000, %f872;
	mul.f32 	%f75, %f43, %f410;
	mad.lo.s32 	%r19, %r151, 1664525, 1013904223;
	and.b32  	%r153, %r19, 16777215;
	cvt.rn.f32.u32	%f411, %r153;
	cvt.rn.f32.s32	%f412, %r389;
	fma.rn.f32 	%f413, %f411, 0f33800000, %f412;
	mul.f32 	%f414, %f43, %f413;
	mul.f32 	%f415, %f75, %f75;
	mov.f32 	%f416, 0f3F800000;
	sub.f32 	%f417, %f416, %f415;
	mov.f32 	%f418, 0f00000000;
	max.f32 	%f419, %f418, %f417;
	sqrt.rn.f32 	%f76, %f419;
	mul.f32 	%f938, %f414, 0f40C90FDB;
	abs.f32 	%f78, %f938;
	setp.neu.f32	%p19, %f78, 0f7F800000;
	mov.f32 	%f932, %f938;
	@%p19 bra 	BB0_16;

	mov.f32 	%f873, 0f00000000;
	mul.rn.f32 	%f932, %f938, %f873;

BB0_16:
	mul.f32 	%f421, %f932, 0f3F22F983;
	cvt.rni.s32.f32	%r400, %f421;
	cvt.rn.f32.s32	%f422, %r400;
	neg.f32 	%f423, %f422;
	mov.f32 	%f424, 0f3FC90FDA;
	fma.rn.f32 	%f425, %f423, %f424, %f932;
	mov.f32 	%f426, 0f33A22168;
	fma.rn.f32 	%f427, %f423, %f426, %f425;
	mov.f32 	%f428, 0f27C234C5;
	fma.rn.f32 	%f933, %f423, %f428, %f427;
	abs.f32 	%f429, %f932;
	setp.leu.f32	%p20, %f429, 0f47CE4780;
	@%p20 bra 	BB0_27;

	add.u64 	%rd65, %SP, 12;
	cvta.to.local.u64 	%rd270, %rd65;
	mov.u32 	%r391, 0;
	mov.u64 	%rd271, 0;
	mov.u32 	%r392, %r391;

BB0_18:
	.pragma "nounroll";
	mov.b32 	 %r349, %f932;
	shl.b32 	%r348, %r349, 8;
	or.b32  	%r347, %r348, -2147483648;
	add.u64 	%rd261, %SP, 12;
	cvta.to.local.u64 	%rd260, %rd261;
	shl.b64 	%rd66, %rd271, 2;
	mov.u64 	%rd67, __cudart_i2opi_f;
	add.s64 	%rd68, %rd67, %rd66;
	ld.const.u32 	%r159, [%rd68];
	// inline asm
	{
	mad.lo.cc.u32   %r157, %r159, %r347, %r392;
	madc.hi.u32     %r392, %r159, %r347,  0;
	}
	// inline asm
	st.local.u32 	[%rd270], %r157;
	add.s32 	%r391, %r391, 1;
	cvt.s64.s32	%rd271, %r391;
	mul.wide.s32 	%rd71, %r391, 4;
	add.s64 	%rd270, %rd260, %rd71;
	setp.ne.s32	%p21, %r391, 6;
	@%p21 bra 	BB0_18;

	mov.b32 	 %r351, %f932;
	shr.u32 	%r350, %r351, 23;
	add.u64 	%rd262, %SP, 12;
	and.b32  	%r162, %r350, 255;
	add.s32 	%r163, %r162, -128;
	shr.u32 	%r164, %r163, 5;
	cvta.to.local.u64 	%rd73, %rd262;
	st.local.u32 	[%rd73+24], %r392;
	mov.u32 	%r165, 6;
	sub.s32 	%r166, %r165, %r164;
	mul.wide.s32 	%rd74, %r166, 4;
	add.s64 	%rd10, %rd73, %rd74;
	ld.local.u32 	%r393, [%rd10];
	ld.local.u32 	%r394, [%rd10+-4];
	and.b32  	%r31, %r350, 31;
	setp.eq.s32	%p22, %r31, 0;
	@%p22 bra 	BB0_21;

	mov.u32 	%r167, 32;
	sub.s32 	%r168, %r167, %r31;
	shr.u32 	%r169, %r394, %r168;
	shl.b32 	%r170, %r393, %r31;
	add.s32 	%r393, %r169, %r170;
	ld.local.u32 	%r171, [%rd10+-8];
	shr.u32 	%r172, %r171, %r168;
	shl.b32 	%r173, %r394, %r31;
	add.s32 	%r394, %r172, %r173;

BB0_21:
	mov.b32 	 %r357, %f932;
	and.b32  	%r396, %r357, -2147483648;
	shr.u32 	%r174, %r394, 30;
	shl.b32 	%r175, %r393, 2;
	add.s32 	%r395, %r174, %r175;
	shl.b32 	%r37, %r394, 2;
	shr.u32 	%r176, %r395, 31;
	shr.u32 	%r177, %r393, 30;
	add.s32 	%r38, %r176, %r177;
	setp.eq.s32	%p23, %r176, 0;
	@%p23 bra 	BB0_22;
	bra.uni 	BB0_23;

BB0_22:
	mov.u32 	%r397, %r37;
	bra.uni 	BB0_24;

BB0_23:
	mov.b32 	 %r359, %f932;
	and.b32  	%r358, %r359, -2147483648;
	not.b32 	%r178, %r395;
	neg.s32 	%r397, %r37;
	setp.eq.s32	%p24, %r37, 0;
	selp.u32	%r179, 1, 0, %p24;
	add.s32 	%r395, %r179, %r178;
	xor.b32  	%r396, %r358, -2147483648;

BB0_24:
	mov.b32 	 %r361, %f932;
	and.b32  	%r360, %r361, -2147483648;
	clz.b32 	%r399, %r395;
	setp.eq.s32	%p25, %r399, 0;
	shl.b32 	%r180, %r395, %r399;
	mov.u32 	%r181, 32;
	sub.s32 	%r182, %r181, %r399;
	shr.u32 	%r183, %r397, %r182;
	add.s32 	%r184, %r183, %r180;
	selp.b32	%r46, %r395, %r184, %p25;
	mov.u32 	%r185, -921707870;
	mul.hi.u32 	%r398, %r46, %r185;
	setp.eq.s32	%p26, %r360, 0;
	neg.s32 	%r186, %r38;
	selp.b32	%r400, %r38, %r186, %p26;
	setp.lt.s32	%p27, %r398, 1;
	@%p27 bra 	BB0_26;

	mul.lo.s32 	%r187, %r46, -921707870;
	shr.u32 	%r188, %r187, 31;
	shl.b32 	%r189, %r398, 1;
	add.s32 	%r398, %r188, %r189;
	add.s32 	%r399, %r399, 1;

BB0_26:
	mov.u32 	%r190, 126;
	sub.s32 	%r191, %r190, %r399;
	shl.b32 	%r192, %r191, 23;
	add.s32 	%r193, %r398, 1;
	shr.u32 	%r194, %r193, 7;
	add.s32 	%r195, %r194, 1;
	shr.u32 	%r196, %r195, 1;
	add.s32 	%r197, %r196, %r192;
	or.b32  	%r198, %r197, %r396;
	mov.b32 	 %f933, %r198;

BB0_27:
	add.s32 	%r54, %r400, 1;
	and.b32  	%r55, %r54, 1;
	setp.eq.s32	%p28, %r55, 0;
	@%p28 bra 	BB0_29;
	bra.uni 	BB0_28;

BB0_29:
	mul.rn.f32 	%f881, %f933, %f933;
	mov.f32 	%f432, 0f3C08839E;
	mov.f32 	%f433, 0fB94CA1F9;
	fma.rn.f32 	%f934, %f433, %f881, %f432;
	bra.uni 	BB0_30;

BB0_28:
	mul.rn.f32 	%f877, %f933, %f933;
	mov.f32 	%f430, 0fBAB6061A;
	mov.f32 	%f431, 0f37CCF5CE;
	fma.rn.f32 	%f934, %f431, %f877, %f430;

BB0_30:
	@%p28 bra 	BB0_32;
	bra.uni 	BB0_31;

BB0_32:
	mul.rn.f32 	%f880, %f933, %f933;
	mov.f32 	%f876, 0f00000000;
	mov.f32 	%f437, 0fBE2AAAA3;
	fma.rn.f32 	%f438, %f934, %f880, %f437;
	fma.rn.f32 	%f935, %f438, %f880, %f876;
	bra.uni 	BB0_33;

BB0_31:
	mul.rn.f32 	%f878, %f933, %f933;
	mov.f32 	%f434, 0f3D2AAAA5;
	fma.rn.f32 	%f435, %f934, %f878, %f434;
	mov.f32 	%f436, 0fBF000000;
	fma.rn.f32 	%f935, %f435, %f878, %f436;

BB0_33:
	fma.rn.f32 	%f936, %f935, %f933, %f933;
	@%p28 bra 	BB0_35;

	mul.rn.f32 	%f879, %f933, %f933;
	mov.f32 	%f864, 0f3F800000;
	fma.rn.f32 	%f936, %f935, %f879, %f864;

BB0_35:
	add.s32 	%r371, %r400, 1;
	and.b32  	%r199, %r371, 2;
	setp.eq.s32	%p31, %r199, 0;
	@%p31 bra 	BB0_37;

	mov.f32 	%f865, 0f00000000;
	mov.f32 	%f442, 0fBF800000;
	fma.rn.f32 	%f936, %f936, %f442, %f865;

BB0_37:
	abs.f32 	%f866, %f938;
	setp.neu.f32	%p113, %f866, 0f7F800000;
	@%p113 bra 	BB0_39;

	mov.f32 	%f875, 0f00000000;
	mul.rn.f32 	%f938, %f938, %f875;

BB0_39:
	mov.f32 	%f869, 0f27C234C5;
	mov.f32 	%f868, 0f33A22168;
	mov.f32 	%f867, 0f3FC90FDA;
	mul.f32 	%f444, %f938, 0f3F22F983;
	cvt.rni.s32.f32	%r410, %f444;
	cvt.rn.f32.s32	%f445, %r410;
	neg.f32 	%f446, %f445;
	fma.rn.f32 	%f448, %f446, %f867, %f938;
	fma.rn.f32 	%f450, %f446, %f868, %f448;
	fma.rn.f32 	%f939, %f446, %f869, %f450;
	abs.f32 	%f452, %f938;
	setp.leu.f32	%p33, %f452, 0f47CE4780;
	@%p33 bra 	BB0_50;

	add.u64 	%rd76, %SP, 12;
	cvta.to.local.u64 	%rd272, %rd76;
	mov.b32 	 %r57, %f938;
	shl.b32 	%r202, %r57, 8;
	or.b32  	%r59, %r202, -2147483648;
	mov.u32 	%r401, 0;
	mov.u64 	%rd273, %rd27;
	mov.u32 	%r402, %r401;

BB0_41:
	.pragma "nounroll";
	add.u64 	%rd264, %SP, 12;
	cvta.to.local.u64 	%rd263, %rd264;
	shl.b64 	%rd77, %rd273, 2;
	mov.u64 	%rd78, __cudart_i2opi_f;
	add.s64 	%rd79, %rd78, %rd77;
	ld.const.u32 	%r205, [%rd79];
	// inline asm
	{
	mad.lo.cc.u32   %r203, %r205, %r59, %r402;
	madc.hi.u32     %r402, %r205, %r59,  0;
	}
	// inline asm
	st.local.u32 	[%rd272], %r203;
	add.s32 	%r401, %r401, 1;
	cvt.s64.s32	%rd273, %r401;
	mul.wide.s32 	%rd80, %r401, 4;
	add.s64 	%rd272, %rd263, %rd80;
	setp.ne.s32	%p34, %r401, 6;
	@%p34 bra 	BB0_41;

	mov.b32 	 %r373, %f938;
	shr.u32 	%r372, %r373, 23;
	add.u64 	%rd265, %SP, 12;
	and.b32  	%r208, %r372, 255;
	add.s32 	%r209, %r208, -128;
	shr.u32 	%r210, %r209, 5;
	cvta.to.local.u64 	%rd82, %rd265;
	st.local.u32 	[%rd82+24], %r402;
	mov.u32 	%r211, 6;
	sub.s32 	%r212, %r211, %r210;
	mul.wide.s32 	%rd83, %r212, 4;
	add.s64 	%rd17, %rd82, %rd83;
	ld.local.u32 	%r403, [%rd17];
	ld.local.u32 	%r404, [%rd17+-4];
	and.b32  	%r67, %r372, 31;
	setp.eq.s32	%p35, %r67, 0;
	@%p35 bra 	BB0_44;

	mov.u32 	%r213, 32;
	sub.s32 	%r214, %r213, %r67;
	shr.u32 	%r215, %r404, %r214;
	shl.b32 	%r216, %r403, %r67;
	add.s32 	%r403, %r215, %r216;
	ld.local.u32 	%r217, [%rd17+-8];
	shr.u32 	%r218, %r217, %r214;
	shl.b32 	%r219, %r404, %r67;
	add.s32 	%r404, %r218, %r219;

BB0_44:
	mov.b32 	 %r376, %f938;
	and.b32  	%r406, %r376, -2147483648;
	shr.u32 	%r220, %r404, 30;
	shl.b32 	%r221, %r403, 2;
	add.s32 	%r405, %r220, %r221;
	shl.b32 	%r73, %r404, 2;
	shr.u32 	%r222, %r405, 31;
	shr.u32 	%r223, %r403, 30;
	add.s32 	%r74, %r222, %r223;
	setp.eq.s32	%p36, %r222, 0;
	@%p36 bra 	BB0_45;
	bra.uni 	BB0_46;

BB0_45:
	mov.u32 	%r407, %r73;
	bra.uni 	BB0_47;

BB0_46:
	mov.b32 	 %r378, %f938;
	and.b32  	%r377, %r378, -2147483648;
	not.b32 	%r224, %r405;
	neg.s32 	%r407, %r73;
	setp.eq.s32	%p37, %r73, 0;
	selp.u32	%r225, 1, 0, %p37;
	add.s32 	%r405, %r225, %r224;
	xor.b32  	%r406, %r377, -2147483648;

BB0_47:
	mov.b32 	 %r380, %f938;
	and.b32  	%r379, %r380, -2147483648;
	clz.b32 	%r409, %r405;
	setp.eq.s32	%p38, %r409, 0;
	shl.b32 	%r226, %r405, %r409;
	mov.u32 	%r227, 32;
	sub.s32 	%r228, %r227, %r409;
	shr.u32 	%r229, %r407, %r228;
	add.s32 	%r230, %r229, %r226;
	selp.b32	%r82, %r405, %r230, %p38;
	mov.u32 	%r231, -921707870;
	mul.hi.u32 	%r408, %r82, %r231;
	setp.eq.s32	%p39, %r379, 0;
	neg.s32 	%r232, %r74;
	selp.b32	%r410, %r74, %r232, %p39;
	setp.lt.s32	%p40, %r408, 1;
	@%p40 bra 	BB0_49;

	mul.lo.s32 	%r233, %r82, -921707870;
	shr.u32 	%r234, %r233, 31;
	shl.b32 	%r235, %r408, 1;
	add.s32 	%r408, %r234, %r235;
	add.s32 	%r409, %r409, 1;

BB0_49:
	mov.u32 	%r236, 126;
	sub.s32 	%r237, %r236, %r409;
	shl.b32 	%r238, %r237, 23;
	add.s32 	%r239, %r408, 1;
	shr.u32 	%r240, %r239, 7;
	add.s32 	%r241, %r240, 1;
	shr.u32 	%r242, %r241, 1;
	add.s32 	%r243, %r242, %r238;
	or.b32  	%r244, %r243, %r406;
	mov.b32 	 %f939, %r244;

BB0_50:
	and.b32  	%r90, %r410, 1;
	setp.eq.s32	%p41, %r90, 0;
	@%p41 bra 	BB0_52;
	bra.uni 	BB0_51;

BB0_52:
	mul.rn.f32 	%f886, %f939, %f939;
	mov.f32 	%f455, 0f3C08839E;
	mov.f32 	%f456, 0fB94CA1F9;
	fma.rn.f32 	%f940, %f456, %f886, %f455;
	bra.uni 	BB0_53;

BB0_51:
	mul.rn.f32 	%f882, %f939, %f939;
	mov.f32 	%f453, 0fBAB6061A;
	mov.f32 	%f454, 0f37CCF5CE;
	fma.rn.f32 	%f940, %f454, %f882, %f453;

BB0_53:
	@%p41 bra 	BB0_55;
	bra.uni 	BB0_54;

BB0_55:
	mul.rn.f32 	%f885, %f939, %f939;
	mov.f32 	%f874, 0f00000000;
	mov.f32 	%f460, 0fBE2AAAA3;
	fma.rn.f32 	%f461, %f940, %f885, %f460;
	fma.rn.f32 	%f941, %f461, %f885, %f874;
	bra.uni 	BB0_56;

BB0_54:
	mul.rn.f32 	%f883, %f939, %f939;
	mov.f32 	%f457, 0f3D2AAAA5;
	fma.rn.f32 	%f458, %f940, %f883, %f457;
	mov.f32 	%f459, 0fBF000000;
	fma.rn.f32 	%f941, %f458, %f883, %f459;

BB0_56:
	fma.rn.f32 	%f942, %f941, %f939, %f939;
	@%p41 bra 	BB0_58;

	mul.rn.f32 	%f884, %f939, %f939;
	mov.f32 	%f870, 0f3F800000;
	fma.rn.f32 	%f942, %f941, %f884, %f870;

BB0_58:
	and.b32  	%r245, %r410, 2;
	setp.eq.s32	%p44, %r245, 0;
	@%p44 bra 	BB0_60;

	mov.f32 	%f871, 0f00000000;
	mov.f32 	%f465, 0fBF800000;
	fma.rn.f32 	%f942, %f942, %f465, %f871;

BB0_60:
	mul.f32 	%f466, %f76, %f936;
	mul.f32 	%f467, %f76, %f942;
	mul.f32 	%f468, %f10, %f467;
	mul.f32 	%f469, %f11, %f467;
	mul.f32 	%f470, %f12, %f467;
	fma.rn.f32 	%f471, %f47, %f466, %f468;
	fma.rn.f32 	%f472, %f48, %f466, %f469;
	fma.rn.f32 	%f473, %f49, %f466, %f470;
	fma.rn.f32 	%f113, %f896, %f75, %f471;
	fma.rn.f32 	%f114, %f897, %f75, %f472;
	fma.rn.f32 	%f115, %f898, %f75, %f473;
	setp.gt.f32	%p45, %f114, 0f00000000;
	setp.eq.s32	%p46, %r4, 0;
	or.pred  	%p47, %p46, %p45;
	@!%p47 bra 	BB0_62;
	bra.uni 	BB0_61;

BB0_61:
	add.u64 	%rd84, %SP, 0;
	cvta.to.local.u64 	%rd85, %rd84;
	max.f32 	%f487, %f493, %f259;
	ld.global.u32 	%r246, [sky];
	neg.f32 	%f480, %f113;
	neg.f32 	%f479, %f114;
	neg.f32 	%f478, %f115;
	mov.u32 	%r247, 6;
	mov.u32 	%r248, 0;
	// inline asm
	call (%f474, %f475, %f476, %f477), _rt_texture_get_base_id, (%r246, %r247, %f478, %f479, %f480, %r248);
	// inline asm
	st.local.f32 	[%rd85], %f474;
	st.local.f32 	[%rd85+4], %f475;
	st.local.f32 	[%rd85+8], %f476;
	ld.global.u32 	%r249, [root];
	mov.u32 	%r250, 1;
	mov.f32 	%f488, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r249, %f7, %f8, %f9, %f113, %f114, %f115, %r250, %f487, %f488, %rd84, %r120);
	// inline asm
	mul.f32 	%f495, %f22, %f114;
	fma.rn.f32 	%f496, %f20, %f113, %f495;
	fma.rn.f32 	%f497, %f24, %f115, %f496;
	cvt.sat.f32.f32	%f498, %f497;
	ld.local.f32 	%f499, [%rd85];
	ld.local.f32 	%f500, [%rd85+4];
	ld.local.f32 	%f501, [%rd85+8];
	fma.rn.f32 	%f950, %f498, %f499, %f950;
	fma.rn.f32 	%f951, %f498, %f500, %f951;
	fma.rn.f32 	%f952, %f498, %f501, %f952;
	mul.f32 	%f502, %f32, %f114;
	fma.rn.f32 	%f503, %f31, %f113, %f502;
	fma.rn.f32 	%f504, %f33, %f115, %f503;
	cvt.sat.f32.f32	%f505, %f504;
	fma.rn.f32 	%f947, %f505, %f499, %f947;
	fma.rn.f32 	%f948, %f505, %f500, %f948;
	fma.rn.f32 	%f949, %f505, %f501, %f949;
	mul.f32 	%f506, %f41, %f114;
	fma.rn.f32 	%f507, %f40, %f113, %f506;
	fma.rn.f32 	%f508, %f42, %f115, %f507;
	cvt.sat.f32.f32	%f509, %f508;
	fma.rn.f32 	%f944, %f509, %f499, %f944;
	fma.rn.f32 	%f945, %f509, %f500, %f945;
	fma.rn.f32 	%f946, %f509, %f501, %f946;
	mul.f32 	%f510, %f897, %f114;
	fma.rn.f32 	%f511, %f896, %f113, %f510;
	fma.rn.f32 	%f512, %f898, %f115, %f511;
	cvt.sat.f32.f32	%f513, %f512;
	fma.rn.f32 	%f953, %f513, %f499, %f953;
	fma.rn.f32 	%f954, %f513, %f500, %f954;
	fma.rn.f32 	%f955, %f513, %f501, %f955;
	ld.global.u32 	%r411, [samples];

BB0_62:
	mad.lo.s32 	%r354, %r413, 1664525, 1013904223;
	mad.lo.s32 	%r413, %r354, 1664525, 1013904223;
	add.s32 	%r389, %r389, 1;
	setp.lt.s32	%p48, %r389, %r411;
	@%p48 bra 	BB0_14;

BB0_63:
	add.s32 	%r386, %r386, 1;
	setp.lt.s32	%p49, %r386, %r411;
	@%p49 bra 	BB0_12;
	bra.uni 	BB0_64;

BB0_10:
	mov.f32 	%f954, %f955;
	mov.f32 	%f953, %f955;
	mov.f32 	%f952, %f955;
	mov.f32 	%f951, %f955;
	mov.f32 	%f950, %f955;
	mov.f32 	%f949, %f955;
	mov.f32 	%f948, %f955;
	mov.f32 	%f947, %f955;
	mov.f32 	%f946, %f955;
	mov.f32 	%f945, %f955;
	mov.f32 	%f944, %f955;

BB0_64:
	mul.lo.s32 	%r252, %r411, %r411;
	cvt.rn.f32.s32	%f514, %r252;
	rcp.rn.f32 	%f515, %f514;
	mul.f32 	%f516, %f953, %f515;
	mul.f32 	%f517, %f954, %f515;
	mul.f32 	%f518, %f955, %f515;
	mul.f32 	%f164, %f950, %f515;
	mul.f32 	%f165, %f951, %f515;
	mul.f32 	%f166, %f952, %f515;
	mul.f32 	%f167, %f947, %f515;
	mul.f32 	%f168, %f948, %f515;
	mul.f32 	%f169, %f949, %f515;
	mul.f32 	%f170, %f944, %f515;
	mul.f32 	%f171, %f945, %f515;
	mul.f32 	%f172, %f946, %f515;
	fma.rn.f32 	%f519, %f953, %f515, %f516;
	fma.rn.f32 	%f520, %f954, %f515, %f517;
	fma.rn.f32 	%f521, %f955, %f515, %f518;
	ld.global.f32 	%f522, [skyColor];
	mul.f32 	%f173, %f519, %f522;
	ld.global.f32 	%f523, [skyColor+4];
	mul.f32 	%f174, %f520, %f523;
	ld.global.f32 	%f524, [skyColor+8];
	mul.f32 	%f175, %f521, %f524;
	ld.global.u32 	%r415, [imageEnabled];
	and.b32  	%r253, %r415, 1;
	setp.eq.b32	%p50, %r253, 1;
	@!%p50 bra 	BB0_99;
	bra.uni 	BB0_65;

BB0_65:
	mov.f32 	%f527, 0f3E666666;
	cvt.rzi.f32.f32	%f528, %f527;
	fma.rn.f32 	%f529, %f528, 0fC0000000, 0f3EE66666;
	abs.f32 	%f176, %f529;
	abs.f32 	%f177, %f173;
	setp.lt.f32	%p51, %f177, 0f00800000;
	mul.f32 	%f530, %f177, 0f4B800000;
	selp.f32	%f531, 0fC3170000, 0fC2FE0000, %p51;
	selp.f32	%f532, %f530, %f177, %p51;
	mov.b32 	 %r254, %f532;
	and.b32  	%r255, %r254, 8388607;
	or.b32  	%r256, %r255, 1065353216;
	mov.b32 	 %f533, %r256;
	shr.u32 	%r257, %r254, 23;
	cvt.rn.f32.u32	%f534, %r257;
	add.f32 	%f535, %f531, %f534;
	setp.gt.f32	%p52, %f533, 0f3FB504F3;
	mul.f32 	%f536, %f533, 0f3F000000;
	add.f32 	%f537, %f535, 0f3F800000;
	selp.f32	%f538, %f536, %f533, %p52;
	selp.f32	%f539, %f537, %f535, %p52;
	add.f32 	%f540, %f538, 0fBF800000;
	add.f32 	%f526, %f538, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f525,%f526;
	// inline asm
	add.f32 	%f541, %f540, %f540;
	mul.f32 	%f542, %f525, %f541;
	mul.f32 	%f543, %f542, %f542;
	mov.f32 	%f544, 0f3C4CAF63;
	mov.f32 	%f545, 0f3B18F0FE;
	fma.rn.f32 	%f546, %f545, %f543, %f544;
	mov.f32 	%f547, 0f3DAAAABD;
	fma.rn.f32 	%f548, %f546, %f543, %f547;
	mul.rn.f32 	%f549, %f548, %f543;
	mul.rn.f32 	%f550, %f549, %f542;
	sub.f32 	%f551, %f540, %f542;
	neg.f32 	%f552, %f542;
	add.f32 	%f553, %f551, %f551;
	fma.rn.f32 	%f554, %f552, %f540, %f553;
	mul.rn.f32 	%f555, %f525, %f554;
	add.f32 	%f556, %f550, %f542;
	sub.f32 	%f557, %f542, %f556;
	add.f32 	%f558, %f550, %f557;
	add.f32 	%f559, %f555, %f558;
	add.f32 	%f560, %f556, %f559;
	sub.f32 	%f561, %f556, %f560;
	add.f32 	%f562, %f559, %f561;
	mov.f32 	%f563, 0f3F317200;
	mul.rn.f32 	%f564, %f539, %f563;
	mov.f32 	%f565, 0f35BFBE8E;
	mul.rn.f32 	%f566, %f539, %f565;
	add.f32 	%f567, %f564, %f560;
	sub.f32 	%f568, %f564, %f567;
	add.f32 	%f569, %f560, %f568;
	add.f32 	%f570, %f562, %f569;
	add.f32 	%f571, %f566, %f570;
	add.f32 	%f572, %f567, %f571;
	sub.f32 	%f573, %f567, %f572;
	add.f32 	%f574, %f571, %f573;
	mov.f32 	%f575, 0f3EE66666;
	mul.rn.f32 	%f576, %f575, %f572;
	neg.f32 	%f577, %f576;
	fma.rn.f32 	%f578, %f575, %f572, %f577;
	fma.rn.f32 	%f579, %f575, %f574, %f578;
	mov.f32 	%f580, 0f00000000;
	fma.rn.f32 	%f581, %f580, %f572, %f579;
	add.rn.f32 	%f582, %f576, %f581;
	neg.f32 	%f583, %f582;
	add.rn.f32 	%f584, %f576, %f583;
	add.rn.f32 	%f585, %f584, %f581;
	mov.b32 	 %r258, %f582;
	setp.eq.s32	%p53, %r258, 1118925336;
	add.s32 	%r259, %r258, -1;
	mov.b32 	 %f586, %r259;
	add.f32 	%f587, %f585, 0f37000000;
	selp.f32	%f588, %f586, %f582, %p53;
	selp.f32	%f178, %f587, %f585, %p53;
	mul.f32 	%f589, %f588, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f590, %f589;
	mov.f32 	%f591, 0fBF317200;
	fma.rn.f32 	%f592, %f590, %f591, %f588;
	mov.f32 	%f593, 0fB5BFBE8E;
	fma.rn.f32 	%f594, %f590, %f593, %f592;
	mul.f32 	%f595, %f594, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f596, %f595;
	add.f32 	%f597, %f590, 0f00000000;
	ex2.approx.f32 	%f598, %f597;
	mul.f32 	%f599, %f596, %f598;
	setp.lt.f32	%p54, %f588, 0fC2D20000;
	selp.f32	%f600, 0f00000000, %f599, %p54;
	setp.gt.f32	%p55, %f588, 0f42D20000;
	selp.f32	%f980, 0f7F800000, %f600, %p55;
	setp.eq.f32	%p56, %f980, 0f7F800000;
	@%p56 bra 	BB0_67;

	fma.rn.f32 	%f980, %f980, %f178, %f980;

BB0_67:
	setp.lt.f32	%p57, %f173, 0f00000000;
	setp.eq.f32	%p58, %f176, 0f3F800000;
	and.pred  	%p1, %p57, %p58;
	mov.b32 	 %r260, %f980;
	xor.b32  	%r261, %r260, -2147483648;
	mov.b32 	 %f601, %r261;
	selp.f32	%f982, %f601, %f980, %p1;
	setp.eq.f32	%p59, %f173, 0f00000000;
	@%p59 bra 	BB0_70;
	bra.uni 	BB0_68;

BB0_70:
	add.f32 	%f604, %f173, %f173;
	selp.f32	%f982, %f604, 0f00000000, %p58;
	bra.uni 	BB0_71;

BB0_117:
	mov.u64 	%rd199, image_HDR;
	cvta.global.u64 	%rd194, %rd199;
	mov.u32 	%r325, 8;
	mov.u64 	%rd198, 0;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r104, %r325, %rd20, %rd21, %rd198, %rd198);
	// inline asm
	mov.f32 	%f842, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs112, %f842;}

	// inline asm
	mov.u16 	%rs113, 0;
	st.v4.u16 	[%rd193], {%rs112, %rs112, %rs112, %rs113};

BB0_118:
	ld.global.u32 	%r326, [additive];
	setp.eq.s32	%p110, %r326, 0;
	@%p110 bra 	BB0_120;

	mov.u64 	%rd212, image_RNM0;
	cvta.global.u64 	%rd201, %rd212;
	mov.u32 	%r330, 8;
	mov.u64 	%rd211, 0;
	// inline asm
	call (%rd200), _rt_buffer_get_64, (%rd201, %r104, %r330, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	ld.v4.u16 	{%rs120, %rs121, %rs122, %rs123}, [%rd200];
	// inline asm
	{  cvt.f32.f16 %f843, %rs120;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f844, %rs121;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f845, %rs122;}

	// inline asm
	// inline asm
	call (%rd206), _rt_buffer_get_64, (%rd201, %r104, %r330, %rd20, %rd21, %rd211, %rd211);
	// inline asm
	add.f32 	%f846, %f843, 0f00000000;
	add.f32 	%f847, %f844, 0f00000000;
	add.f32 	%f848, %f845, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs119, %f848;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f847;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f846;}

	// inline asm
	mov.u16 	%rs124, 0;
	st.v4.u16 	[%rd206], {%rs117, %rs118, %rs119, %rs124};
	bra.uni 	BB0_121;

BB0_120:
	mov.u64 	%rd219, image_RNM0;
	cvta.global.u64 	%rd214, %rd219;
	mov.u32 	%r332, 8;
	mov.u64 	%rd218, 0;
	// inline asm
	call (%rd213), _rt_buffer_get_64, (%rd214, %r104, %r332, %rd20, %rd21, %rd218, %rd218);
	// inline asm
	mov.f32 	%f849, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs125, %f849;}

	// inline asm
	mov.u16 	%rs126, 0;
	st.v4.u16 	[%rd213], {%rs125, %rs125, %rs125, %rs126};

BB0_121:
	ld.global.u32 	%r333, [additive];
	setp.eq.s32	%p111, %r333, 0;
	@%p111 bra 	BB0_123;

	mov.u64 	%rd232, image_RNM1;
	cvta.global.u64 	%rd221, %rd232;
	mov.u32 	%r337, 8;
	mov.u64 	%rd231, 0;
	// inline asm
	call (%rd220), _rt_buffer_get_64, (%rd221, %r104, %r337, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	ld.v4.u16 	{%rs133, %rs134, %rs135, %rs136}, [%rd220];
	// inline asm
	{  cvt.f32.f16 %f850, %rs133;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f851, %rs134;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f852, %rs135;}

	// inline asm
	// inline asm
	call (%rd226), _rt_buffer_get_64, (%rd221, %r104, %r337, %rd20, %rd21, %rd231, %rd231);
	// inline asm
	add.f32 	%f853, %f850, 0f00000000;
	add.f32 	%f854, %f851, 0f00000000;
	add.f32 	%f855, %f852, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs132, %f855;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs131, %f854;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs130, %f853;}

	// inline asm
	mov.u16 	%rs137, 0;
	st.v4.u16 	[%rd226], {%rs130, %rs131, %rs132, %rs137};
	bra.uni 	BB0_124;

BB0_123:
	mov.u64 	%rd239, image_RNM1;
	cvta.global.u64 	%rd234, %rd239;
	mov.u32 	%r339, 8;
	mov.u64 	%rd238, 0;
	// inline asm
	call (%rd233), _rt_buffer_get_64, (%rd234, %r104, %r339, %rd20, %rd21, %rd238, %rd238);
	// inline asm
	mov.f32 	%f856, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs138, %f856;}

	// inline asm
	mov.u16 	%rs139, 0;
	st.v4.u16 	[%rd233], {%rs138, %rs138, %rs138, %rs139};

BB0_124:
	ld.global.u32 	%r340, [additive];
	setp.eq.s32	%p112, %r340, 0;
	@%p112 bra 	BB0_126;

	mov.u64 	%rd252, image_RNM2;
	cvta.global.u64 	%rd241, %rd252;
	mov.u32 	%r344, 8;
	mov.u64 	%rd251, 0;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r104, %r344, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	ld.v4.u16 	{%rs146, %rs147, %rs148, %rs149}, [%rd240];
	// inline asm
	{  cvt.f32.f16 %f857, %rs146;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f858, %rs147;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f859, %rs148;}

	// inline asm
	// inline asm
	call (%rd246), _rt_buffer_get_64, (%rd241, %r104, %r344, %rd20, %rd21, %rd251, %rd251);
	// inline asm
	add.f32 	%f860, %f857, 0f00000000;
	add.f32 	%f861, %f858, 0f00000000;
	add.f32 	%f862, %f859, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs145, %f862;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs144, %f861;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs143, %f860;}

	// inline asm
	mov.u16 	%rs150, 0;
	st.v4.u16 	[%rd246], {%rs143, %rs144, %rs145, %rs150};
	bra.uni 	BB0_127;

BB0_126:
	mov.u64 	%rd259, image_RNM2;
	cvta.global.u64 	%rd254, %rd259;
	mov.u32 	%r346, 8;
	mov.u64 	%rd258, 0;
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd254, %r104, %r346, %rd20, %rd21, %rd258, %rd258);
	// inline asm
	mov.f32 	%f863, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs151, %f863;}

	// inline asm
	mov.u16 	%rs152, 0;
	st.v4.u16 	[%rd253], {%rs151, %rs151, %rs151, %rs152};
	bra.uni 	BB0_127;

BB0_68:
	setp.geu.f32	%p60, %f173, 0f00000000;
	@%p60 bra 	BB0_71;

	cvt.rzi.f32.f32	%f603, %f575;
	setp.neu.f32	%p61, %f603, 0f3EE66666;
	selp.f32	%f982, 0f7FFFFFFF, %f982, %p61;

BB0_71:
	add.f32 	%f605, %f177, 0f3EE66666;
	mov.b32 	 %r262, %f605;
	setp.lt.s32	%p63, %r262, 2139095040;
	@%p63 bra 	BB0_76;

	setp.gtu.f32	%p64, %f177, 0f7F800000;
	@%p64 bra 	BB0_75;
	bra.uni 	BB0_73;

BB0_75:
	add.f32 	%f982, %f173, 0f3EE66666;
	bra.uni 	BB0_76;

BB0_73:
	setp.neu.f32	%p65, %f177, 0f7F800000;
	@%p65 bra 	BB0_76;

	selp.f32	%f982, 0fFF800000, 0f7F800000, %p1;

BB0_76:
	setp.eq.f32	%p66, %f173, 0f3F800000;
	selp.f32	%f189, 0f3F800000, %f982, %p66;
	abs.f32 	%f190, %f174;
	setp.lt.f32	%p67, %f190, 0f00800000;
	mul.f32 	%f608, %f190, 0f4B800000;
	selp.f32	%f609, 0fC3170000, 0fC2FE0000, %p67;
	selp.f32	%f610, %f608, %f190, %p67;
	mov.b32 	 %r263, %f610;
	and.b32  	%r264, %r263, 8388607;
	or.b32  	%r265, %r264, 1065353216;
	mov.b32 	 %f611, %r265;
	shr.u32 	%r266, %r263, 23;
	cvt.rn.f32.u32	%f612, %r266;
	add.f32 	%f613, %f609, %f612;
	setp.gt.f32	%p68, %f611, 0f3FB504F3;
	mul.f32 	%f614, %f611, 0f3F000000;
	add.f32 	%f615, %f613, 0f3F800000;
	selp.f32	%f616, %f614, %f611, %p68;
	selp.f32	%f617, %f615, %f613, %p68;
	add.f32 	%f618, %f616, 0fBF800000;
	add.f32 	%f607, %f616, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f606,%f607;
	// inline asm
	add.f32 	%f619, %f618, %f618;
	mul.f32 	%f620, %f606, %f619;
	mul.f32 	%f621, %f620, %f620;
	fma.rn.f32 	%f624, %f545, %f621, %f544;
	fma.rn.f32 	%f626, %f624, %f621, %f547;
	mul.rn.f32 	%f627, %f626, %f621;
	mul.rn.f32 	%f628, %f627, %f620;
	sub.f32 	%f629, %f618, %f620;
	neg.f32 	%f630, %f620;
	add.f32 	%f631, %f629, %f629;
	fma.rn.f32 	%f632, %f630, %f618, %f631;
	mul.rn.f32 	%f633, %f606, %f632;
	add.f32 	%f634, %f628, %f620;
	sub.f32 	%f635, %f620, %f634;
	add.f32 	%f636, %f628, %f635;
	add.f32 	%f637, %f633, %f636;
	add.f32 	%f638, %f634, %f637;
	sub.f32 	%f639, %f634, %f638;
	add.f32 	%f640, %f637, %f639;
	mul.rn.f32 	%f642, %f617, %f563;
	mul.rn.f32 	%f644, %f617, %f565;
	add.f32 	%f645, %f642, %f638;
	sub.f32 	%f646, %f642, %f645;
	add.f32 	%f647, %f638, %f646;
	add.f32 	%f648, %f640, %f647;
	add.f32 	%f649, %f644, %f648;
	add.f32 	%f650, %f645, %f649;
	sub.f32 	%f651, %f645, %f650;
	add.f32 	%f652, %f649, %f651;
	mul.rn.f32 	%f654, %f575, %f650;
	neg.f32 	%f655, %f654;
	fma.rn.f32 	%f656, %f575, %f650, %f655;
	fma.rn.f32 	%f657, %f575, %f652, %f656;
	fma.rn.f32 	%f659, %f580, %f650, %f657;
	add.rn.f32 	%f660, %f654, %f659;
	neg.f32 	%f661, %f660;
	add.rn.f32 	%f662, %f654, %f661;
	add.rn.f32 	%f663, %f662, %f659;
	mov.b32 	 %r267, %f660;
	setp.eq.s32	%p69, %r267, 1118925336;
	add.s32 	%r268, %r267, -1;
	mov.b32 	 %f664, %r268;
	add.f32 	%f665, %f663, 0f37000000;
	selp.f32	%f666, %f664, %f660, %p69;
	selp.f32	%f191, %f665, %f663, %p69;
	mul.f32 	%f667, %f666, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f668, %f667;
	fma.rn.f32 	%f670, %f668, %f591, %f666;
	fma.rn.f32 	%f672, %f668, %f593, %f670;
	mul.f32 	%f673, %f672, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f674, %f673;
	add.f32 	%f675, %f668, 0f00000000;
	ex2.approx.f32 	%f676, %f675;
	mul.f32 	%f677, %f674, %f676;
	setp.lt.f32	%p70, %f666, 0fC2D20000;
	selp.f32	%f678, 0f00000000, %f677, %p70;
	setp.gt.f32	%p71, %f666, 0f42D20000;
	selp.f32	%f983, 0f7F800000, %f678, %p71;
	setp.eq.f32	%p72, %f983, 0f7F800000;
	@%p72 bra 	BB0_78;

	fma.rn.f32 	%f983, %f983, %f191, %f983;

BB0_78:
	setp.lt.f32	%p73, %f174, 0f00000000;
	and.pred  	%p2, %p73, %p58;
	mov.b32 	 %r269, %f983;
	xor.b32  	%r270, %r269, -2147483648;
	mov.b32 	 %f679, %r270;
	selp.f32	%f985, %f679, %f983, %p2;
	setp.eq.f32	%p75, %f174, 0f00000000;
	@%p75 bra 	BB0_81;
	bra.uni 	BB0_79;

BB0_81:
	add.f32 	%f682, %f174, %f174;
	selp.f32	%f985, %f682, 0f00000000, %p58;
	bra.uni 	BB0_82;

BB0_79:
	setp.geu.f32	%p76, %f174, 0f00000000;
	@%p76 bra 	BB0_82;

	cvt.rzi.f32.f32	%f681, %f575;
	setp.neu.f32	%p77, %f681, 0f3EE66666;
	selp.f32	%f985, 0f7FFFFFFF, %f985, %p77;

BB0_82:
	add.f32 	%f683, %f190, 0f3EE66666;
	mov.b32 	 %r271, %f683;
	setp.lt.s32	%p79, %r271, 2139095040;
	@%p79 bra 	BB0_87;

	setp.gtu.f32	%p80, %f190, 0f7F800000;
	@%p80 bra 	BB0_86;
	bra.uni 	BB0_84;

BB0_86:
	add.f32 	%f985, %f174, 0f3EE66666;
	bra.uni 	BB0_87;

BB0_84:
	setp.neu.f32	%p81, %f190, 0f7F800000;
	@%p81 bra 	BB0_87;

	selp.f32	%f985, 0fFF800000, 0f7F800000, %p2;

BB0_87:
	setp.eq.f32	%p82, %f174, 0f3F800000;
	selp.f32	%f202, 0f3F800000, %f985, %p82;
	abs.f32 	%f203, %f175;
	setp.lt.f32	%p83, %f203, 0f00800000;
	mul.f32 	%f686, %f203, 0f4B800000;
	selp.f32	%f687, 0fC3170000, 0fC2FE0000, %p83;
	selp.f32	%f688, %f686, %f203, %p83;
	mov.b32 	 %r272, %f688;
	and.b32  	%r273, %r272, 8388607;
	or.b32  	%r274, %r273, 1065353216;
	mov.b32 	 %f689, %r274;
	shr.u32 	%r275, %r272, 23;
	cvt.rn.f32.u32	%f690, %r275;
	add.f32 	%f691, %f687, %f690;
	setp.gt.f32	%p84, %f689, 0f3FB504F3;
	mul.f32 	%f692, %f689, 0f3F000000;
	add.f32 	%f693, %f691, 0f3F800000;
	selp.f32	%f694, %f692, %f689, %p84;
	selp.f32	%f695, %f693, %f691, %p84;
	add.f32 	%f696, %f694, 0fBF800000;
	add.f32 	%f685, %f694, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f684,%f685;
	// inline asm
	add.f32 	%f697, %f696, %f696;
	mul.f32 	%f698, %f684, %f697;
	mul.f32 	%f699, %f698, %f698;
	fma.rn.f32 	%f702, %f545, %f699, %f544;
	fma.rn.f32 	%f704, %f702, %f699, %f547;
	mul.rn.f32 	%f705, %f704, %f699;
	mul.rn.f32 	%f706, %f705, %f698;
	sub.f32 	%f707, %f696, %f698;
	neg.f32 	%f708, %f698;
	add.f32 	%f709, %f707, %f707;
	fma.rn.f32 	%f710, %f708, %f696, %f709;
	mul.rn.f32 	%f711, %f684, %f710;
	add.f32 	%f712, %f706, %f698;
	sub.f32 	%f713, %f698, %f712;
	add.f32 	%f714, %f706, %f713;
	add.f32 	%f715, %f711, %f714;
	add.f32 	%f716, %f712, %f715;
	sub.f32 	%f717, %f712, %f716;
	add.f32 	%f718, %f715, %f717;
	mul.rn.f32 	%f720, %f695, %f563;
	mul.rn.f32 	%f722, %f695, %f565;
	add.f32 	%f723, %f720, %f716;
	sub.f32 	%f724, %f720, %f723;
	add.f32 	%f725, %f716, %f724;
	add.f32 	%f726, %f718, %f725;
	add.f32 	%f727, %f722, %f726;
	add.f32 	%f728, %f723, %f727;
	sub.f32 	%f729, %f723, %f728;
	add.f32 	%f730, %f727, %f729;
	mul.rn.f32 	%f732, %f575, %f728;
	neg.f32 	%f733, %f732;
	fma.rn.f32 	%f734, %f575, %f728, %f733;
	fma.rn.f32 	%f735, %f575, %f730, %f734;
	fma.rn.f32 	%f737, %f580, %f728, %f735;
	add.rn.f32 	%f738, %f732, %f737;
	neg.f32 	%f739, %f738;
	add.rn.f32 	%f740, %f732, %f739;
	add.rn.f32 	%f741, %f740, %f737;
	mov.b32 	 %r276, %f738;
	setp.eq.s32	%p85, %r276, 1118925336;
	add.s32 	%r277, %r276, -1;
	mov.b32 	 %f742, %r277;
	add.f32 	%f743, %f741, 0f37000000;
	selp.f32	%f744, %f742, %f738, %p85;
	selp.f32	%f204, %f743, %f741, %p85;
	mul.f32 	%f745, %f744, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f746, %f745;
	fma.rn.f32 	%f748, %f746, %f591, %f744;
	fma.rn.f32 	%f750, %f746, %f593, %f748;
	mul.f32 	%f751, %f750, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f752, %f751;
	add.f32 	%f753, %f746, 0f00000000;
	ex2.approx.f32 	%f754, %f753;
	mul.f32 	%f755, %f752, %f754;
	setp.lt.f32	%p86, %f744, 0fC2D20000;
	selp.f32	%f756, 0f00000000, %f755, %p86;
	setp.gt.f32	%p87, %f744, 0f42D20000;
	selp.f32	%f986, 0f7F800000, %f756, %p87;
	setp.eq.f32	%p88, %f986, 0f7F800000;
	@%p88 bra 	BB0_89;

	fma.rn.f32 	%f986, %f986, %f204, %f986;

BB0_89:
	setp.lt.f32	%p89, %f175, 0f00000000;
	and.pred  	%p3, %p89, %p58;
	mov.b32 	 %r278, %f986;
	xor.b32  	%r279, %r278, -2147483648;
	mov.b32 	 %f757, %r279;
	selp.f32	%f988, %f757, %f986, %p3;
	setp.eq.f32	%p91, %f175, 0f00000000;
	@%p91 bra 	BB0_92;
	bra.uni 	BB0_90;

BB0_92:
	add.f32 	%f760, %f175, %f175;
	selp.f32	%f988, %f760, 0f00000000, %p58;
	bra.uni 	BB0_93;

BB0_90:
	setp.geu.f32	%p92, %f175, 0f00000000;
	@%p92 bra 	BB0_93;

	cvt.rzi.f32.f32	%f759, %f575;
	setp.neu.f32	%p93, %f759, 0f3EE66666;
	selp.f32	%f988, 0f7FFFFFFF, %f988, %p93;

BB0_93:
	add.f32 	%f761, %f203, 0f3EE66666;
	mov.b32 	 %r280, %f761;
	setp.lt.s32	%p95, %r280, 2139095040;
	@%p95 bra 	BB0_98;

	setp.gtu.f32	%p96, %f203, 0f7F800000;
	@%p96 bra 	BB0_97;
	bra.uni 	BB0_95;

BB0_97:
	add.f32 	%f988, %f175, 0f3EE66666;
	bra.uni 	BB0_98;

BB0_95:
	setp.neu.f32	%p97, %f203, 0f7F800000;
	@%p97 bra 	BB0_98;

	selp.f32	%f988, 0fFF800000, 0f7F800000, %p3;

BB0_98:
	mov.u32 	%r362, 2;
	mov.u32 	%r355, 4;
	setp.eq.f32	%p98, %f175, 0f3F800000;
	selp.f32	%f762, 0f3F800000, %f988, %p98;
	cvt.u64.u32	%rd89, %r3;
	cvt.u64.u32	%rd88, %r2;
	mov.u64 	%rd92, image;
	cvta.global.u64 	%rd87, %rd92;
	// inline asm
	call (%rd86), _rt_buffer_get_64, (%rd87, %r362, %r355, %rd88, %rd89, %rd27, %rd27);
	// inline asm
	cvt.sat.f32.f32	%f763, %f762;
	mul.f32 	%f764, %f763, 0f437FFD71;
	cvt.rzi.u32.f32	%r283, %f764;
	cvt.sat.f32.f32	%f765, %f202;
	mul.f32 	%f766, %f765, 0f437FFD71;
	cvt.rzi.u32.f32	%r284, %f766;
	cvt.sat.f32.f32	%f767, %f189;
	mul.f32 	%f768, %f767, 0f437FFD71;
	cvt.rzi.u32.f32	%r285, %f768;
	cvt.u16.u32	%rs40, %r283;
	cvt.u16.u32	%rs41, %r285;
	cvt.u16.u32	%rs42, %r284;
	mov.u16 	%rs43, 255;
	st.v4.u8 	[%rd86], {%rs40, %rs42, %rs41, %rs43};
	ld.global.u32 	%r415, [imageEnabled];

BB0_99:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	and.b32  	%r286, %r415, 4;
	setp.eq.s32	%p99, %r286, 0;
	@%p99 bra 	BB0_103;

	ld.global.u32 	%r287, [additive];
	setp.eq.s32	%p100, %r287, 0;
	mov.f32 	%f769, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f769;}

	// inline asm
	@%p100 bra 	BB0_102;

	mov.u32 	%r363, 2;
	mov.u64 	%rd105, image_HDR;
	cvta.global.u64 	%rd94, %rd105;
	mov.u32 	%r291, 8;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r363, %r291, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs51, %rs52, %rs53, %rs54}, [%rd93];
	// inline asm
	{  cvt.f32.f16 %f770, %rs51;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f771, %rs52;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f772, %rs53;}

	// inline asm
	// inline asm
	call (%rd99), _rt_buffer_get_64, (%rd94, %r363, %r291, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f773, %f173, %f770;
	add.f32 	%f774, %f174, %f771;
	add.f32 	%f775, %f175, %f772;
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f775;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs49, %f774;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f773;}

	// inline asm
	st.v4.u16 	[%rd99], {%rs48, %rs49, %rs50, %rs44};
	bra.uni 	BB0_103;

BB0_102:
	mov.u32 	%r364, 2;
	mov.u64 	%rd112, image_HDR;
	cvta.global.u64 	%rd107, %rd112;
	mov.u32 	%r293, 8;
	// inline asm
	call (%rd106), _rt_buffer_get_64, (%rd107, %r364, %r293, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs57, %f175;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs56, %f174;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs55, %f173;}

	// inline asm
	st.v4.u16 	[%rd106], {%rs55, %rs56, %rs57, %rs44};

BB0_103:
	ld.global.f32 	%f780, [skyColor];
	mul.f32 	%f781, %f164, %f780;
	ld.global.f32 	%f782, [skyColor+4];
	mul.f32 	%f783, %f165, %f782;
	ld.global.f32 	%f784, [skyColor+8];
	mul.f32 	%f785, %f166, %f784;
	mul.f32 	%f786, %f167, %f780;
	mul.f32 	%f787, %f168, %f782;
	mul.f32 	%f788, %f169, %f784;
	mul.f32 	%f789, %f170, %f780;
	mul.f32 	%f790, %f171, %f782;
	mul.f32 	%f791, %f172, %f784;
	add.f32 	%f792, %f781, %f786;
	add.f32 	%f793, %f783, %f787;
	add.f32 	%f794, %f785, %f788;
	add.f32 	%f795, %f792, %f789;
	add.f32 	%f796, %f793, %f790;
	add.f32 	%f797, %f794, %f791;
	mul.f32 	%f798, %f795, 0f3F13CD3A;
	mul.f32 	%f799, %f796, 0f3F13CD3A;
	mul.f32 	%f800, %f797, 0f3F13CD3A;
	div.rn.f32 	%f801, %f173, %f798;
	div.rn.f32 	%f802, %f174, %f799;
	div.rn.f32 	%f803, %f175, %f800;
	setp.eq.f32	%p101, %f173, 0f00000000;
	selp.f32	%f804, 0f00000000, %f801, %p101;
	setp.eq.f32	%p102, %f174, 0f00000000;
	selp.f32	%f805, 0f00000000, %f802, %p102;
	setp.eq.f32	%p103, %f175, 0f00000000;
	selp.f32	%f806, 0f00000000, %f803, %p103;
	mul.f32 	%f215, %f781, %f804;
	mul.f32 	%f216, %f783, %f805;
	mul.f32 	%f217, %f785, %f806;
	mul.f32 	%f218, %f786, %f804;
	mul.f32 	%f219, %f787, %f805;
	mul.f32 	%f220, %f788, %f806;
	mul.f32 	%f221, %f789, %f804;
	mul.f32 	%f222, %f790, %f805;
	mul.f32 	%f223, %f791, %f806;
	ld.global.u32 	%r294, [additive];
	setp.eq.s32	%p104, %r294, 0;
	mov.f32 	%f779, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs58, %f779;}

	// inline asm
	@%p104 bra 	BB0_105;

	mov.u32 	%r365, 2;
	mov.u64 	%rd125, image_RNM0;
	cvta.global.u64 	%rd114, %rd125;
	mov.u32 	%r298, 8;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd114, %r365, %r298, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs65, %rs66, %rs67, %rs68}, [%rd113];
	// inline asm
	{  cvt.f32.f16 %f807, %rs65;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f808, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f809, %rs67;}

	// inline asm
	// inline asm
	call (%rd119), _rt_buffer_get_64, (%rd114, %r365, %r298, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f810, %f215, %f807;
	add.f32 	%f811, %f216, %f808;
	add.f32 	%f812, %f217, %f809;
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f812;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f811;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f810;}

	// inline asm
	st.v4.u16 	[%rd119], {%rs62, %rs63, %rs64, %rs58};
	bra.uni 	BB0_106;

BB0_105:
	mov.u32 	%r370, 2;
	mov.u64 	%rd132, image_RNM0;
	cvta.global.u64 	%rd127, %rd132;
	mov.u32 	%r300, 8;
	// inline asm
	call (%rd126), _rt_buffer_get_64, (%rd127, %r370, %r300, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f217;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs70, %f216;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs69, %f215;}

	// inline asm
	st.v4.u16 	[%rd126], {%rs69, %rs70, %rs71, %rs58};

BB0_106:
	ld.global.u32 	%r301, [additive];
	setp.eq.s32	%p105, %r301, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f779;}

	// inline asm
	@%p105 bra 	BB0_108;

	mov.u32 	%r366, 2;
	mov.u64 	%rd145, image_RNM1;
	cvta.global.u64 	%rd134, %rd145;
	mov.u32 	%r305, 8;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r366, %r305, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs79, %rs80, %rs81, %rs82}, [%rd133];
	// inline asm
	{  cvt.f32.f16 %f817, %rs79;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f818, %rs80;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f819, %rs81;}

	// inline asm
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd134, %r366, %r305, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f820, %f218, %f817;
	add.f32 	%f821, %f219, %f818;
	add.f32 	%f822, %f220, %f819;
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f822;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f821;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f820;}

	// inline asm
	st.v4.u16 	[%rd139], {%rs76, %rs77, %rs78, %rs72};
	bra.uni 	BB0_109;

BB0_108:
	mov.u32 	%r369, 2;
	mov.u64 	%rd152, image_RNM1;
	cvta.global.u64 	%rd147, %rd152;
	mov.u32 	%r307, 8;
	// inline asm
	call (%rd146), _rt_buffer_get_64, (%rd147, %r369, %r307, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f220;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs84, %f219;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f218;}

	// inline asm
	st.v4.u16 	[%rd146], {%rs83, %rs84, %rs85, %rs72};

BB0_109:
	ld.global.u32 	%r308, [additive];
	setp.eq.s32	%p106, %r308, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f779;}

	// inline asm
	@%p106 bra 	BB0_111;

	mov.u32 	%r367, 2;
	mov.u64 	%rd165, image_RNM2;
	cvta.global.u64 	%rd154, %rd165;
	mov.u32 	%r312, 8;
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd154, %r367, %r312, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs93, %rs94, %rs95, %rs96}, [%rd153];
	// inline asm
	{  cvt.f32.f16 %f827, %rs93;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f828, %rs94;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f829, %rs95;}

	// inline asm
	// inline asm
	call (%rd159), _rt_buffer_get_64, (%rd154, %r367, %r312, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f830, %f221, %f827;
	add.f32 	%f831, %f222, %f828;
	add.f32 	%f832, %f223, %f829;
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f832;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f831;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f830;}

	// inline asm
	st.v4.u16 	[%rd159], {%rs90, %rs91, %rs92, %rs86};
	bra.uni 	BB0_127;

BB0_111:
	mov.u32 	%r368, 2;
	mov.u64 	%rd172, image_RNM2;
	cvta.global.u64 	%rd167, %rd172;
	mov.u32 	%r314, 8;
	// inline asm
	call (%rd166), _rt_buffer_get_64, (%rd167, %r368, %r314, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f223;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f222;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f221;}

	// inline asm
	st.v4.u16 	[%rd166], {%rs97, %rs98, %rs99, %rs86};

BB0_127:
	ret;
}


