//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<144>;
	.reg .b16 	%rs<46>;
	.reg .f32 	%f<857>;
	.reg .b32 	%r<373>;
	.reg .b64 	%rd<138>;


	mov.u64 	%rd137, __local_depot0;
	cvta.local.u64 	%SP, %rd137;
	ld.global.v2.u32 	{%r108, %r109}, [pixelID];
	cvt.u64.u32	%rd21, %r108;
	cvt.u64.u32	%rd22, %r109;
	mov.u64 	%rd25, uvnormal;
	cvta.global.u64 	%rd20, %rd25;
	mov.u32 	%r106, 2;
	mov.u32 	%r107, 4;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r106, %r107, %rd21, %rd22, %rd24, %rd24);
	// inline asm
	ld.u32 	%r1, [%rd19];
	shr.u32 	%r112, %r1, 16;
	cvt.u16.u32	%rs1, %r112;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r1;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p7, %rs5, 0;
	mov.f32 	%f809, 0f00000000;
	mov.f32 	%f810, %f809;
	mov.f32 	%f811, %f809;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs6, [%rd19+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f175, %rs8;
	div.rn.f32 	%f176, %f175, 0f437F0000;
	fma.rn.f32 	%f177, %f176, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f178, %rs6;
	div.rn.f32 	%f179, %f178, 0f437F0000;
	fma.rn.f32 	%f180, %f179, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f181, %rs3;
	div.rn.f32 	%f182, %f181, 0f437F0000;
	fma.rn.f32 	%f183, %f182, 0f40000000, 0fBF800000;
	mul.f32 	%f184, %f180, %f180;
	fma.rn.f32 	%f185, %f177, %f177, %f184;
	fma.rn.f32 	%f186, %f183, %f183, %f185;
	sqrt.rn.f32 	%f187, %f186;
	rcp.rn.f32 	%f188, %f187;
	mul.f32 	%f809, %f177, %f188;
	mul.f32 	%f810, %f180, %f188;
	mul.f32 	%f811, %f183, %f188;

BB0_2:
	ld.global.v2.u32 	{%r113, %r114}, [pixelID];
	ld.global.v2.u32 	{%r116, %r117}, [tileInfo];
	add.s32 	%r2, %r113, %r116;
	add.s32 	%r3, %r114, %r117;
	setp.eq.f32	%p8, %f810, 0f00000000;
	setp.eq.f32	%p9, %f809, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f811, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_131;
	bra.uni 	BB0_3;

BB0_131:
	ld.global.u32 	%r372, [imageEnabled];
	and.b32  	%r314, %r372, 1;
	setp.eq.b32	%p139, %r314, 1;
	@!%p139 bra 	BB0_133;
	bra.uni 	BB0_132;

BB0_132:
	cvt.u64.u32	%rd99, %r2;
	cvt.u64.u32	%rd100, %r3;
	mov.u64 	%rd103, image;
	cvta.global.u64 	%rd98, %rd103;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r106, %r107, %rd99, %rd100, %rd24, %rd24);
	// inline asm
	mov.u16 	%rs30, 0;
	st.v4.u8 	[%rd97], {%rs30, %rs30, %rs30, %rs30};
	ld.global.u32 	%r372, [imageEnabled];

BB0_133:
	and.b32  	%r317, %r372, 8;
	setp.eq.s32	%p140, %r317, 0;
	@%p140 bra 	BB0_135;

	cvt.u64.u32	%rd106, %r2;
	cvt.u64.u32	%rd107, %r3;
	mov.u64 	%rd110, image_Mask;
	cvta.global.u64 	%rd105, %rd110;
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd105, %r106, %r106, %rd106, %rd107, %rd24, %rd24);
	// inline asm
	mov.f32 	%f792, 0f00000000;
	cvt.rzi.u32.f32	%r320, %f792;
	cvt.u16.u32	%rs31, %r320;
	mov.u16 	%rs32, 0;
	st.v2.u8 	[%rd104], {%rs31, %rs32};
	ld.global.u32 	%r372, [imageEnabled];

BB0_135:
	and.b32  	%r321, %r372, 4;
	setp.eq.s32	%p141, %r321, 0;
	@%p141 bra 	BB0_139;

	ld.global.u32 	%r322, [additive];
	setp.eq.s32	%p142, %r322, 0;
	cvt.u64.u32	%rd17, %r2;
	cvt.u64.u32	%rd18, %r3;
	@%p142 bra 	BB0_138;

	mov.u64 	%rd123, image_HDR;
	cvta.global.u64 	%rd112, %rd123;
	mov.u32 	%r326, 8;
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd112, %r106, %r326, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	ld.v4.u16 	{%rs39, %rs40, %rs41, %rs42}, [%rd111];
	// inline asm
	{  cvt.f32.f16 %f793, %rs39;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f794, %rs40;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f795, %rs41;}

	// inline asm
	// inline asm
	call (%rd117), _rt_buffer_get_64, (%rd112, %r106, %r326, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	add.f32 	%f796, %f793, 0f00000000;
	add.f32 	%f797, %f794, 0f00000000;
	add.f32 	%f798, %f795, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f798;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs37, %f797;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs36, %f796;}

	// inline asm
	mov.u16 	%rs43, 0;
	st.v4.u16 	[%rd117], {%rs36, %rs37, %rs38, %rs43};
	bra.uni 	BB0_139;

BB0_3:
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd28, %r126;
	cvt.u64.u32	%rd29, %r127;
	mov.u64 	%rd38, uvpos;
	cvta.global.u64 	%rd27, %rd38;
	mov.u32 	%r122, 12;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd27, %r106, %r122, %rd28, %rd29, %rd24, %rd24);
	// inline asm
	ld.f32 	%f9, [%rd26+8];
	ld.f32 	%f8, [%rd26+4];
	ld.f32 	%f7, [%rd26];
	mul.f32 	%f191, %f7, 0f3456BF95;
	mul.f32 	%f192, %f8, 0f3456BF95;
	mul.f32 	%f193, %f9, 0f3456BF95;
	abs.f32 	%f10, %f809;
	div.rn.f32 	%f194, %f191, %f10;
	abs.f32 	%f195, %f810;
	div.rn.f32 	%f196, %f192, %f195;
	abs.f32 	%f11, %f811;
	div.rn.f32 	%f197, %f193, %f11;
	abs.f32 	%f198, %f194;
	abs.f32 	%f199, %f196;
	abs.f32 	%f200, %f197;
	mov.f32 	%f201, 0f38D1B717;
	max.f32 	%f202, %f198, %f201;
	max.f32 	%f203, %f199, %f201;
	max.f32 	%f204, %f200, %f201;
	fma.rn.f32 	%f12, %f809, %f202, %f7;
	fma.rn.f32 	%f13, %f810, %f203, %f8;
	fma.rn.f32 	%f14, %f811, %f204, %f9;
	ld.global.v2.u32 	{%r130, %r131}, [pixelID];
	cvt.u64.u32	%rd34, %r130;
	cvt.u64.u32	%rd35, %r131;
	mov.u64 	%rd39, rnd_seeds;
	cvta.global.u64 	%rd33, %rd39;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r106, %r107, %rd34, %rd35, %rd24, %rd24);
	// inline asm
	ld.u32 	%r134, [%rd32];
	mad.lo.s32 	%r4, %r134, 1664525, 1013904223;
	ld.global.u32 	%r135, [lightMeshBufferSize];
	setp.eq.s32	%p14, %r135, 0;
	mov.pred 	%p13, 0;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r6, 0;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	and.b32  	%r138, %r4, 16777215;
	cvt.rn.f32.u32	%f207, %r138;
	mul.f32 	%f208, %f207, 0fB3800000;
	fma.rn.f32 	%f19, %f208, 0f3F333333, 0f3F800000;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r337, 0;
	abs.f32 	%f331, %f17;
	abs.f32 	%f332, %f16;
	max.f32 	%f333, %f332, %f331;
	abs.f32 	%f334, %f18;
	max.f32 	%f335, %f333, %f334;
	mov.u32 	%r6, %r337;
	mov.f32 	%f21, %f20;

BB0_6:
	shl.b32 	%r7, %r337, 1;
	cvt.s64.s32	%rd42, %r7;
	mov.u64 	%rd46, lightMeshBuffer;
	cvta.global.u64 	%rd41, %rd46;
	mov.u32 	%r139, 1;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd41, %r139, %r122, %rd42, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f209, [%rd40];
	sub.f32 	%f210, %f209, %f7;
	ld.f32 	%f211, [%rd40+4];
	sub.f32 	%f212, %f211, %f8;
	ld.f32 	%f213, [%rd40+8];
	sub.f32 	%f214, %f213, %f9;
	mul.f32 	%f215, %f212, %f212;
	fma.rn.f32 	%f216, %f210, %f210, %f215;
	fma.rn.f32 	%f217, %f214, %f214, %f216;
	sqrt.rn.f32 	%f22, %f217;
	rcp.rn.f32 	%f218, %f22;
	mul.f32 	%f23, %f210, %f218;
	mul.f32 	%f24, %f212, %f218;
	mul.f32 	%f25, %f214, %f218;
	mul.f32 	%f219, %f810, %f24;
	fma.rn.f32 	%f220, %f809, %f23, %f219;
	fma.rn.f32 	%f26, %f811, %f25, %f220;
	setp.leu.f32	%p15, %f26, 0f00000000;
	@%p15 bra 	BB0_22;

	mul.f32 	%f221, %f22, %f22;
	mul.f32 	%f222, %f221, 0f40C90FDB;
	div.rn.f32 	%f223, %f15, %f222;
	add.f32 	%f27, %f223, %f223;
	setp.gt.f32	%p17, %f27, %f19;
	ld.global.u32 	%r141, [samples];
	setp.ne.s32	%p18, %r141, 0;
	and.pred  	%p19, %p18, %p17;
	mov.pred 	%p143, -1;
	@%p19 bra 	BB0_24;

	ld.global.f32 	%f226, [lightInvCutoff];
	mul.f32 	%f28, %f22, %f226;
	mov.f32 	%f230, 0f40800000;
	abs.f32 	%f30, %f28;
	setp.lt.f32	%p20, %f30, 0f00800000;
	mul.f32 	%f232, %f30, 0f4B800000;
	selp.f32	%f233, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f234, %f232, %f30, %p20;
	mov.b32 	 %r142, %f234;
	and.b32  	%r143, %r142, 8388607;
	or.b32  	%r144, %r143, 1065353216;
	mov.b32 	 %f235, %r144;
	shr.u32 	%r145, %r142, 23;
	cvt.rn.f32.u32	%f236, %r145;
	add.f32 	%f237, %f233, %f236;
	setp.gt.f32	%p21, %f235, 0f3FB504F3;
	mul.f32 	%f238, %f235, 0f3F000000;
	add.f32 	%f239, %f237, 0f3F800000;
	selp.f32	%f240, %f238, %f235, %p21;
	selp.f32	%f241, %f239, %f237, %p21;
	add.f32 	%f242, %f240, 0fBF800000;
	add.f32 	%f225, %f240, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f224,%f225;
	// inline asm
	add.f32 	%f243, %f242, %f242;
	mul.f32 	%f244, %f224, %f243;
	mul.f32 	%f245, %f244, %f244;
	mov.f32 	%f246, 0f3C4CAF63;
	mov.f32 	%f247, 0f3B18F0FE;
	fma.rn.f32 	%f248, %f247, %f245, %f246;
	mov.f32 	%f249, 0f3DAAAABD;
	fma.rn.f32 	%f250, %f248, %f245, %f249;
	mul.rn.f32 	%f251, %f250, %f245;
	mul.rn.f32 	%f252, %f251, %f244;
	sub.f32 	%f253, %f242, %f244;
	neg.f32 	%f254, %f244;
	add.f32 	%f255, %f253, %f253;
	fma.rn.f32 	%f256, %f254, %f242, %f255;
	mul.rn.f32 	%f257, %f224, %f256;
	add.f32 	%f258, %f252, %f244;
	sub.f32 	%f259, %f244, %f258;
	add.f32 	%f260, %f252, %f259;
	add.f32 	%f261, %f257, %f260;
	add.f32 	%f262, %f258, %f261;
	sub.f32 	%f263, %f258, %f262;
	add.f32 	%f264, %f261, %f263;
	mov.f32 	%f265, 0f3F317200;
	mul.rn.f32 	%f266, %f241, %f265;
	mov.f32 	%f267, 0f35BFBE8E;
	mul.rn.f32 	%f268, %f241, %f267;
	add.f32 	%f269, %f266, %f262;
	sub.f32 	%f270, %f266, %f269;
	add.f32 	%f271, %f262, %f270;
	add.f32 	%f272, %f264, %f271;
	add.f32 	%f273, %f268, %f272;
	add.f32 	%f274, %f269, %f273;
	sub.f32 	%f275, %f269, %f274;
	add.f32 	%f276, %f273, %f275;
	mul.rn.f32 	%f277, %f230, %f274;
	neg.f32 	%f278, %f277;
	fma.rn.f32 	%f279, %f230, %f274, %f278;
	fma.rn.f32 	%f280, %f230, %f276, %f279;
	mov.f32 	%f281, 0f00000000;
	fma.rn.f32 	%f282, %f281, %f274, %f280;
	add.rn.f32 	%f283, %f277, %f282;
	neg.f32 	%f284, %f283;
	add.rn.f32 	%f285, %f277, %f284;
	add.rn.f32 	%f286, %f285, %f282;
	mov.b32 	 %r146, %f283;
	setp.eq.s32	%p22, %r146, 1118925336;
	add.s32 	%r147, %r146, -1;
	mov.b32 	 %f287, %r147;
	add.f32 	%f288, %f286, 0f37000000;
	selp.f32	%f289, %f287, %f283, %p22;
	selp.f32	%f31, %f288, %f286, %p22;
	mul.f32 	%f290, %f289, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f291, %f290;
	mov.f32 	%f292, 0fBF317200;
	fma.rn.f32 	%f293, %f291, %f292, %f289;
	mov.f32 	%f294, 0fB5BFBE8E;
	fma.rn.f32 	%f295, %f291, %f294, %f293;
	mul.f32 	%f296, %f295, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f297, %f296;
	add.f32 	%f298, %f291, 0f00000000;
	ex2.approx.f32 	%f299, %f298;
	mul.f32 	%f300, %f297, %f299;
	setp.lt.f32	%p23, %f289, 0fC2D20000;
	selp.f32	%f301, 0f00000000, %f300, %p23;
	setp.gt.f32	%p24, %f289, 0f42D20000;
	selp.f32	%f814, 0f7F800000, %f301, %p24;
	setp.eq.f32	%p25, %f814, 0f7F800000;
	@%p25 bra 	BB0_10;

	fma.rn.f32 	%f814, %f814, %f31, %f814;

BB0_10:
	mov.f32 	%f805, 0f40000000;
	cvt.rzi.f32.f32	%f804, %f805;
	add.f32 	%f803, %f804, %f804;
	mov.f32 	%f802, 0f40800000;
	sub.f32 	%f801, %f802, %f803;
	abs.f32 	%f800, %f801;
	setp.lt.f32	%p26, %f28, 0f00000000;
	setp.eq.f32	%p27, %f800, 0f3F800000;
	and.pred  	%p1, %p26, %p27;
	mov.b32 	 %r148, %f814;
	xor.b32  	%r149, %r148, -2147483648;
	mov.b32 	 %f302, %r149;
	selp.f32	%f816, %f302, %f814, %p1;
	setp.eq.f32	%p28, %f28, 0f00000000;
	@%p28 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f305, %f28, %f28;
	selp.f32	%f816, %f305, 0f00000000, %p27;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p29, %f28, 0f00000000;
	@%p29 bra 	BB0_14;

	mov.f32 	%f808, 0f40800000;
	cvt.rzi.f32.f32	%f304, %f808;
	setp.neu.f32	%p30, %f304, 0f40800000;
	selp.f32	%f816, 0f7FFFFFFF, %f816, %p30;

BB0_14:
	add.f32 	%f306, %f30, 0f40800000;
	mov.b32 	 %r150, %f306;
	setp.lt.s32	%p32, %r150, 2139095040;
	@%p32 bra 	BB0_19;

	setp.gtu.f32	%p33, %f30, 0f7F800000;
	@%p33 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f816, %f28, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p34, %f30, 0f7F800000;
	@%p34 bra 	BB0_19;

	selp.f32	%f816, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u32 	%r330, 1;
	mov.u64 	%rd132, lightMeshBuffer;
	cvta.global.u64 	%rd131, %rd132;
	shl.b32 	%r329, %r337, 1;
	mov.f32 	%f307, 0f3F800000;
	sub.f32 	%f308, %f307, %f816;
	setp.eq.f32	%p35, %f28, 0f3F800000;
	selp.f32	%f309, 0f00000000, %f308, %p35;
	cvt.sat.f32.f32	%f310, %f309;
	mul.f32 	%f311, %f27, %f310;
	add.s32 	%r153, %r329, 1;
	cvt.s64.s32	%rd49, %r153;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd131, %r330, %r122, %rd49, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f312, [%rd47];
	mul.f32 	%f313, %f23, %f312;
	ld.f32 	%f314, [%rd47+4];
	mul.f32 	%f315, %f24, %f314;
	neg.f32 	%f316, %f315;
	sub.f32 	%f317, %f316, %f313;
	ld.f32 	%f318, [%rd47+8];
	mul.f32 	%f319, %f25, %f318;
	sub.f32 	%f320, %f317, %f319;
	cvt.sat.f32.f32	%f321, %f320;
	mul.f32 	%f42, %f311, %f321;
	cvt.sat.f32.f32	%f43, %f26;
	mul.f32 	%f322, %f42, %f43;
	setp.leu.f32	%p36, %f322, 0f3727C5AC;
	@%p36 bra 	BB0_21;

	mov.u32 	%r336, 1;
	add.u64 	%rd54, %SP, 28;
	cvta.to.local.u64 	%rd55, %rd54;
	max.f32 	%f329, %f335, %f201;
	sub.f32 	%f330, %f22, %f329;
	mov.u32 	%r157, 1065353216;
	st.local.u32 	[%rd55], %r157;
	ld.global.u32 	%r154, [root];
	// inline asm
	call _rt_trace_64, (%r154, %f12, %f13, %f14, %f23, %f24, %f25, %r336, %f329, %f330, %rd54, %r107);
	// inline asm
	ld.local.f32 	%f337, [%rd55];
	mul.f32 	%f338, %f42, %f337;
	fma.rn.f32 	%f21, %f43, %f338, %f21;
	add.f32 	%f20, %f20, %f337;

BB0_21:
	add.s32 	%r6, %r6, 1;

BB0_22:
	ld.global.u32 	%r158, [lightMeshBufferSize];
	add.s32 	%r337, %r337, 1;
	setp.lt.u32	%p38, %r337, %r158;
	@%p38 bra 	BB0_6;
	bra.uni 	BB0_23;

BB0_4:
	mov.f32 	%f21, %f20;

BB0_23:
	mov.pred 	%p143, %p13;

BB0_24:
	cvt.rn.f32.s32	%f339, %r6;
	mov.f32 	%f340, 0f3F800000;
	max.f32 	%f341, %f339, %f340;
	div.rn.f32 	%f843, %f21, %f341;
	div.rn.f32 	%f844, %f20, %f341;
	@!%p143 bra 	BB0_79;
	bra.uni 	BB0_25;

BB0_25:
	abs.f32 	%f807, %f811;
	abs.f32 	%f806, %f809;
	setp.gt.f32	%p39, %f806, %f807;
	neg.f32 	%f344, %f810;
	selp.f32	%f345, %f344, 0f00000000, %p39;
	neg.f32 	%f346, %f811;
	selp.f32	%f347, %f809, %f346, %p39;
	selp.f32	%f348, 0f00000000, %f810, %p39;
	mul.f32 	%f349, %f347, %f347;
	fma.rn.f32 	%f350, %f345, %f345, %f349;
	fma.rn.f32 	%f351, %f348, %f348, %f350;
	sqrt.rn.f32 	%f352, %f351;
	rcp.rn.f32 	%f353, %f352;
	mul.f32 	%f54, %f345, %f353;
	mul.f32 	%f55, %f347, %f353;
	mul.f32 	%f56, %f348, %f353;
	ld.global.u32 	%r341, [samples];
	mov.f32 	%f839, 0f00000000;
	setp.lt.s32	%p40, %r341, 1;
	@%p40 bra 	BB0_26;

	mad.lo.s32 	%r367, %r134, 1664525, 1013904223;
	cvt.rn.f32.s32	%f356, %r341;
	rcp.rn.f32 	%f57, %f356;
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd56;
	mul.f32 	%f58, %f12, 0f3456BF95;
	mul.f32 	%f59, %f13, 0f3456BF95;
	mul.f32 	%f60, %f14, 0f3456BF95;
	mul.f32 	%f357, %f809, %f55;
	mul.f32 	%f358, %f810, %f54;
	sub.f32 	%f61, %f358, %f357;
	mul.f32 	%f359, %f811, %f54;
	mul.f32 	%f360, %f809, %f56;
	sub.f32 	%f62, %f360, %f359;
	mul.f32 	%f361, %f810, %f56;
	mul.f32 	%f362, %f811, %f55;
	sub.f32 	%f63, %f362, %f361;
	mov.f32 	%f839, 0f00000000;
	mov.u32 	%r342, 0;
	abs.f32 	%f363, %f59;
	abs.f32 	%f364, %f58;
	max.f32 	%f365, %f364, %f363;
	abs.f32 	%f366, %f60;
	max.f32 	%f367, %f365, %f366;
	mov.f32 	%f840, %f839;

BB0_28:
	setp.lt.s32	%p41, %r341, 1;
	@%p41 bra 	BB0_77;

	cvt.rn.f32.s32	%f66, %r342;
	max.f32 	%f67, %f367, %f201;
	add.u64 	%rd57, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd57;
	mov.u32 	%r344, 0;

BB0_30:
	mad.lo.s32 	%r161, %r367, 1664525, 1013904223;
	and.b32  	%r162, %r161, 16777215;
	cvt.rn.f32.u32	%f369, %r162;
	fma.rn.f32 	%f370, %f369, 0f33800000, %f66;
	mul.f32 	%f371, %f57, %f370;
	mad.lo.s32 	%r367, %r161, 1664525, 1013904223;
	and.b32  	%r163, %r367, 16777215;
	cvt.rn.f32.u32	%f372, %r163;
	cvt.rn.f32.s32	%f373, %r344;
	fma.rn.f32 	%f374, %f372, 0f33800000, %f373;
	mul.f32 	%f375, %f57, %f374;
	sqrt.rn.f32 	%f70, %f371;
	mul.f32 	%f833, %f375, 0f40C90FDB;
	abs.f32 	%f72, %f833;
	setp.neu.f32	%p42, %f72, 0f7F800000;
	mov.f32 	%f827, %f833;
	@%p42 bra 	BB0_32;

	mov.f32 	%f376, 0f00000000;
	mul.rn.f32 	%f827, %f833, %f376;

BB0_32:
	mul.f32 	%f377, %f827, 0f3F22F983;
	cvt.rni.s32.f32	%r355, %f377;
	cvt.rn.f32.s32	%f378, %r355;
	neg.f32 	%f379, %f378;
	mov.f32 	%f380, 0f3FC90FDA;
	fma.rn.f32 	%f381, %f379, %f380, %f827;
	mov.f32 	%f382, 0f33A22168;
	fma.rn.f32 	%f383, %f379, %f382, %f381;
	mov.f32 	%f384, 0f27C234C5;
	fma.rn.f32 	%f828, %f379, %f384, %f383;
	abs.f32 	%f385, %f827;
	setp.leu.f32	%p43, %f385, 0f47CE4780;
	@%p43 bra 	BB0_43;

	mov.b32 	 %r20, %f827;
	shr.u32 	%r21, %r20, 23;
	shl.b32 	%r166, %r20, 8;
	or.b32  	%r22, %r166, -2147483648;
	mov.u32 	%r347, 0;
	mov.u64 	%rd133, __cudart_i2opi_f;
	mov.u32 	%r346, -6;
	mov.u64 	%rd134, %rd2;

BB0_34:
	.pragma "nounroll";
	ld.const.u32 	%r169, [%rd133];
	// inline asm
	{
	mad.lo.cc.u32   %r167, %r169, %r22, %r347;
	madc.hi.u32     %r347, %r169, %r22,  0;
	}
	// inline asm
	st.local.u32 	[%rd134], %r167;
	add.s64 	%rd134, %rd134, 4;
	add.s64 	%rd133, %rd133, 4;
	add.s32 	%r346, %r346, 1;
	setp.ne.s32	%p44, %r346, 0;
	@%p44 bra 	BB0_34;

	and.b32  	%r172, %r21, 255;
	add.s32 	%r173, %r172, -128;
	shr.u32 	%r174, %r173, 5;
	and.b32  	%r27, %r20, -2147483648;
	st.local.u32 	[%rd2+24], %r347;
	mov.u32 	%r175, 6;
	sub.s32 	%r176, %r175, %r174;
	mul.wide.s32 	%rd59, %r176, 4;
	add.s64 	%rd8, %rd2, %rd59;
	ld.local.u32 	%r348, [%rd8];
	ld.local.u32 	%r349, [%rd8+-4];
	and.b32  	%r30, %r21, 31;
	setp.eq.s32	%p45, %r30, 0;
	@%p45 bra 	BB0_37;

	mov.u32 	%r177, 32;
	sub.s32 	%r178, %r177, %r30;
	shr.u32 	%r179, %r349, %r178;
	shl.b32 	%r180, %r348, %r30;
	add.s32 	%r348, %r179, %r180;
	ld.local.u32 	%r181, [%rd8+-8];
	shr.u32 	%r182, %r181, %r178;
	shl.b32 	%r183, %r349, %r30;
	add.s32 	%r349, %r182, %r183;

BB0_37:
	shr.u32 	%r184, %r349, 30;
	shl.b32 	%r185, %r348, 2;
	add.s32 	%r350, %r184, %r185;
	shl.b32 	%r36, %r349, 2;
	shr.u32 	%r186, %r350, 31;
	shr.u32 	%r187, %r348, 30;
	add.s32 	%r37, %r186, %r187;
	setp.eq.s32	%p46, %r186, 0;
	@%p46 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.u32 	%r351, %r27;
	mov.u32 	%r352, %r36;
	bra.uni 	BB0_40;

BB0_39:
	not.b32 	%r188, %r350;
	neg.s32 	%r352, %r36;
	setp.eq.s32	%p47, %r36, 0;
	selp.u32	%r189, 1, 0, %p47;
	add.s32 	%r350, %r189, %r188;
	xor.b32  	%r351, %r27, -2147483648;

BB0_40:
	clz.b32 	%r354, %r350;
	setp.eq.s32	%p48, %r354, 0;
	shl.b32 	%r190, %r350, %r354;
	mov.u32 	%r191, 32;
	sub.s32 	%r192, %r191, %r354;
	shr.u32 	%r193, %r352, %r192;
	add.s32 	%r194, %r193, %r190;
	selp.b32	%r45, %r350, %r194, %p48;
	mov.u32 	%r195, -921707870;
	mul.hi.u32 	%r353, %r45, %r195;
	setp.eq.s32	%p49, %r27, 0;
	neg.s32 	%r196, %r37;
	selp.b32	%r355, %r37, %r196, %p49;
	setp.lt.s32	%p50, %r353, 1;
	@%p50 bra 	BB0_42;

	mul.lo.s32 	%r197, %r45, -921707870;
	shr.u32 	%r198, %r197, 31;
	shl.b32 	%r199, %r353, 1;
	add.s32 	%r353, %r198, %r199;
	add.s32 	%r354, %r354, 1;

BB0_42:
	mov.u32 	%r200, 126;
	sub.s32 	%r201, %r200, %r354;
	shl.b32 	%r202, %r201, 23;
	add.s32 	%r203, %r353, 1;
	shr.u32 	%r204, %r203, 7;
	add.s32 	%r205, %r204, 1;
	shr.u32 	%r206, %r205, 1;
	add.s32 	%r207, %r206, %r202;
	or.b32  	%r208, %r207, %r351;
	mov.b32 	 %f828, %r208;

BB0_43:
	mul.rn.f32 	%f78, %f828, %f828;
	add.s32 	%r53, %r355, 1;
	and.b32  	%r54, %r53, 1;
	setp.eq.s32	%p51, %r54, 0;
	@%p51 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f388, 0f3C08839E;
	mov.f32 	%f389, 0fB94CA1F9;
	fma.rn.f32 	%f829, %f389, %f78, %f388;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f386, 0fBAB6061A;
	mov.f32 	%f387, 0f37CCF5CE;
	fma.rn.f32 	%f829, %f387, %f78, %f386;

BB0_46:
	@%p51 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	mov.f32 	%f393, 0fBE2AAAA3;
	fma.rn.f32 	%f394, %f829, %f78, %f393;
	mov.f32 	%f395, 0f00000000;
	fma.rn.f32 	%f830, %f394, %f78, %f395;
	bra.uni 	BB0_49;

BB0_47:
	mov.f32 	%f390, 0f3D2AAAA5;
	fma.rn.f32 	%f391, %f829, %f78, %f390;
	mov.f32 	%f392, 0fBF000000;
	fma.rn.f32 	%f830, %f391, %f78, %f392;

BB0_49:
	fma.rn.f32 	%f831, %f830, %f828, %f828;
	@%p51 bra 	BB0_51;

	fma.rn.f32 	%f831, %f830, %f78, %f340;

BB0_51:
	and.b32  	%r209, %r53, 2;
	setp.eq.s32	%p54, %r209, 0;
	@%p54 bra 	BB0_53;

	mov.f32 	%f397, 0f00000000;
	mov.f32 	%f398, 0fBF800000;
	fma.rn.f32 	%f831, %f831, %f398, %f397;

BB0_53:
	@%p42 bra 	BB0_55;

	mov.f32 	%f399, 0f00000000;
	mul.rn.f32 	%f833, %f833, %f399;

BB0_55:
	mul.f32 	%f400, %f833, 0f3F22F983;
	cvt.rni.s32.f32	%r365, %f400;
	cvt.rn.f32.s32	%f401, %r365;
	neg.f32 	%f402, %f401;
	fma.rn.f32 	%f404, %f402, %f380, %f833;
	fma.rn.f32 	%f406, %f402, %f382, %f404;
	fma.rn.f32 	%f834, %f402, %f384, %f406;
	abs.f32 	%f408, %f833;
	setp.leu.f32	%p56, %f408, 0f47CE4780;
	@%p56 bra 	BB0_66;

	mov.b32 	 %r56, %f833;
	shr.u32 	%r57, %r56, 23;
	shl.b32 	%r212, %r56, 8;
	or.b32  	%r58, %r212, -2147483648;
	mov.u32 	%r357, 0;
	mov.u64 	%rd135, __cudart_i2opi_f;
	mov.u32 	%r356, -6;
	mov.u64 	%rd136, %rd2;

BB0_57:
	.pragma "nounroll";
	ld.const.u32 	%r215, [%rd135];
	// inline asm
	{
	mad.lo.cc.u32   %r213, %r215, %r58, %r357;
	madc.hi.u32     %r357, %r215, %r58,  0;
	}
	// inline asm
	st.local.u32 	[%rd136], %r213;
	add.s64 	%rd136, %rd136, 4;
	add.s64 	%rd135, %rd135, 4;
	add.s32 	%r356, %r356, 1;
	setp.ne.s32	%p57, %r356, 0;
	@%p57 bra 	BB0_57;

	and.b32  	%r218, %r57, 255;
	add.s32 	%r219, %r218, -128;
	shr.u32 	%r220, %r219, 5;
	and.b32  	%r63, %r56, -2147483648;
	st.local.u32 	[%rd2+24], %r357;
	mov.u32 	%r221, 6;
	sub.s32 	%r222, %r221, %r220;
	mul.wide.s32 	%rd61, %r222, 4;
	add.s64 	%rd13, %rd2, %rd61;
	ld.local.u32 	%r358, [%rd13];
	ld.local.u32 	%r359, [%rd13+-4];
	and.b32  	%r66, %r57, 31;
	setp.eq.s32	%p58, %r66, 0;
	@%p58 bra 	BB0_60;

	mov.u32 	%r223, 32;
	sub.s32 	%r224, %r223, %r66;
	shr.u32 	%r225, %r359, %r224;
	shl.b32 	%r226, %r358, %r66;
	add.s32 	%r358, %r225, %r226;
	ld.local.u32 	%r227, [%rd13+-8];
	shr.u32 	%r228, %r227, %r224;
	shl.b32 	%r229, %r359, %r66;
	add.s32 	%r359, %r228, %r229;

BB0_60:
	shr.u32 	%r230, %r359, 30;
	shl.b32 	%r231, %r358, 2;
	add.s32 	%r360, %r230, %r231;
	shl.b32 	%r72, %r359, 2;
	shr.u32 	%r232, %r360, 31;
	shr.u32 	%r233, %r358, 30;
	add.s32 	%r73, %r232, %r233;
	setp.eq.s32	%p59, %r232, 0;
	@%p59 bra 	BB0_61;
	bra.uni 	BB0_62;

BB0_61:
	mov.u32 	%r361, %r63;
	mov.u32 	%r362, %r72;
	bra.uni 	BB0_63;

BB0_62:
	not.b32 	%r234, %r360;
	neg.s32 	%r362, %r72;
	setp.eq.s32	%p60, %r72, 0;
	selp.u32	%r235, 1, 0, %p60;
	add.s32 	%r360, %r235, %r234;
	xor.b32  	%r361, %r63, -2147483648;

BB0_63:
	clz.b32 	%r364, %r360;
	setp.eq.s32	%p61, %r364, 0;
	shl.b32 	%r236, %r360, %r364;
	mov.u32 	%r237, 32;
	sub.s32 	%r238, %r237, %r364;
	shr.u32 	%r239, %r362, %r238;
	add.s32 	%r240, %r239, %r236;
	selp.b32	%r81, %r360, %r240, %p61;
	mov.u32 	%r241, -921707870;
	mul.hi.u32 	%r363, %r81, %r241;
	setp.eq.s32	%p62, %r63, 0;
	neg.s32 	%r242, %r73;
	selp.b32	%r365, %r73, %r242, %p62;
	setp.lt.s32	%p63, %r363, 1;
	@%p63 bra 	BB0_65;

	mul.lo.s32 	%r243, %r81, -921707870;
	shr.u32 	%r244, %r243, 31;
	shl.b32 	%r245, %r363, 1;
	add.s32 	%r363, %r244, %r245;
	add.s32 	%r364, %r364, 1;

BB0_65:
	mov.u32 	%r246, 126;
	sub.s32 	%r247, %r246, %r364;
	shl.b32 	%r248, %r247, 23;
	add.s32 	%r249, %r363, 1;
	shr.u32 	%r250, %r249, 7;
	add.s32 	%r251, %r250, 1;
	shr.u32 	%r252, %r251, 1;
	add.s32 	%r253, %r252, %r248;
	or.b32  	%r254, %r253, %r361;
	mov.b32 	 %f834, %r254;

BB0_66:
	mul.rn.f32 	%f95, %f834, %f834;
	and.b32  	%r89, %r365, 1;
	setp.eq.s32	%p64, %r89, 0;
	@%p64 bra 	BB0_68;
	bra.uni 	BB0_67;

BB0_68:
	mov.f32 	%f411, 0f3C08839E;
	mov.f32 	%f412, 0fB94CA1F9;
	fma.rn.f32 	%f835, %f412, %f95, %f411;
	bra.uni 	BB0_69;

BB0_67:
	mov.f32 	%f409, 0fBAB6061A;
	mov.f32 	%f410, 0f37CCF5CE;
	fma.rn.f32 	%f835, %f410, %f95, %f409;

BB0_69:
	@%p64 bra 	BB0_71;
	bra.uni 	BB0_70;

BB0_71:
	mov.f32 	%f416, 0fBE2AAAA3;
	fma.rn.f32 	%f417, %f835, %f95, %f416;
	mov.f32 	%f418, 0f00000000;
	fma.rn.f32 	%f836, %f417, %f95, %f418;
	bra.uni 	BB0_72;

BB0_70:
	mov.f32 	%f413, 0f3D2AAAA5;
	fma.rn.f32 	%f414, %f835, %f95, %f413;
	mov.f32 	%f415, 0fBF000000;
	fma.rn.f32 	%f836, %f414, %f95, %f415;

BB0_72:
	fma.rn.f32 	%f837, %f836, %f834, %f834;
	@%p64 bra 	BB0_74;

	fma.rn.f32 	%f837, %f836, %f95, %f340;

BB0_74:
	and.b32  	%r255, %r365, 2;
	setp.eq.s32	%p67, %r255, 0;
	@%p67 bra 	BB0_76;

	mov.f32 	%f420, 0f00000000;
	mov.f32 	%f421, 0fBF800000;
	fma.rn.f32 	%f837, %f837, %f421, %f420;

BB0_76:
	mul.f32 	%f430, %f70, %f831;
	mul.f32 	%f431, %f430, %f430;
	sub.f32 	%f433, %f340, %f431;
	mul.f32 	%f434, %f70, %f837;
	mul.f32 	%f435, %f434, %f434;
	sub.f32 	%f436, %f433, %f435;
	mov.f32 	%f437, 0f00000000;
	max.f32 	%f438, %f437, %f436;
	sqrt.rn.f32 	%f439, %f438;
	mul.f32 	%f440, %f54, %f434;
	mul.f32 	%f441, %f55, %f434;
	mul.f32 	%f442, %f56, %f434;
	fma.rn.f32 	%f443, %f63, %f430, %f440;
	fma.rn.f32 	%f444, %f62, %f430, %f441;
	fma.rn.f32 	%f445, %f61, %f430, %f442;
	fma.rn.f32 	%f425, %f809, %f439, %f443;
	fma.rn.f32 	%f426, %f810, %f439, %f444;
	fma.rn.f32 	%f427, %f811, %f439, %f445;
	mov.u32 	%r257, 0;
	st.local.u32 	[%rd3], %r257;
	ld.global.u32 	%r256, [root];
	mov.f32 	%f429, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r256, %f12, %f13, %f14, %f425, %f426, %f427, %r257, %f67, %f429, %rd57, %r107);
	// inline asm
	ld.local.f32 	%f446, [%rd3];
	setp.lt.f32	%p68, %f446, 0f00000000;
	selp.f32	%f447, 0f00000000, %f446, %p68;
	selp.f32	%f448, 0f00000000, 0f3F800000, %p68;
	add.f32 	%f839, %f839, %f448;
	add.f32 	%f840, %f840, %f447;
	ld.global.u32 	%r341, [samples];
	add.s32 	%r344, %r344, 1;
	setp.lt.s32	%p69, %r344, %r341;
	@%p69 bra 	BB0_30;

BB0_77:
	add.s32 	%r342, %r342, 1;
	setp.lt.s32	%p70, %r342, %r341;
	@%p70 bra 	BB0_28;
	bra.uni 	BB0_78;

BB0_138:
	mov.u64 	%rd130, image_HDR;
	cvta.global.u64 	%rd125, %rd130;
	mov.u32 	%r328, 8;
	// inline asm
	call (%rd124), _rt_buffer_get_64, (%rd125, %r106, %r328, %rd17, %rd18, %rd24, %rd24);
	// inline asm
	mov.f32 	%f799, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f799;}

	// inline asm
	mov.u16 	%rs45, 0;
	st.v4.u16 	[%rd124], {%rs44, %rs44, %rs44, %rs45};
	bra.uni 	BB0_139;

BB0_26:
	mov.f32 	%f840, %f839;

BB0_78:
	mul.lo.s32 	%r259, %r341, %r341;
	cvt.rn.f32.s32	%f449, %r259;
	div.rn.f32 	%f843, %f840, %f449;
	div.rn.f32 	%f844, %f839, %f449;

BB0_79:
	ld.global.u32 	%r370, [imageEnabled];
	and.b32  	%r260, %r370, 8;
	setp.eq.s32	%p71, %r260, 0;
	@%p71 bra 	BB0_92;

	mov.u32 	%r331, 2;
	cvt.u64.u32	%rd65, %r2;
	cvt.u64.u32	%rd66, %r3;
	mov.u64 	%rd69, image_Mask;
	cvta.global.u64 	%rd64, %rd69;
	// inline asm
	call (%rd63), _rt_buffer_get_64, (%rd64, %r331, %r331, %rd65, %rd66, %rd24, %rd24);
	// inline asm
	mov.f32 	%f452, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f453, %f452;
	fma.rn.f32 	%f454, %f453, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f117, %f454;
	abs.f32 	%f118, %f844;
	setp.lt.f32	%p72, %f118, 0f00800000;
	mul.f32 	%f455, %f118, 0f4B800000;
	selp.f32	%f456, 0fC3170000, 0fC2FE0000, %p72;
	selp.f32	%f457, %f455, %f118, %p72;
	mov.b32 	 %r263, %f457;
	and.b32  	%r264, %r263, 8388607;
	or.b32  	%r265, %r264, 1065353216;
	mov.b32 	 %f458, %r265;
	shr.u32 	%r266, %r263, 23;
	cvt.rn.f32.u32	%f459, %r266;
	add.f32 	%f460, %f456, %f459;
	setp.gt.f32	%p73, %f458, 0f3FB504F3;
	mul.f32 	%f461, %f458, 0f3F000000;
	add.f32 	%f462, %f460, 0f3F800000;
	selp.f32	%f463, %f461, %f458, %p73;
	selp.f32	%f464, %f462, %f460, %p73;
	add.f32 	%f465, %f463, 0fBF800000;
	add.f32 	%f451, %f463, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f450,%f451;
	// inline asm
	add.f32 	%f466, %f465, %f465;
	mul.f32 	%f467, %f450, %f466;
	mul.f32 	%f468, %f467, %f467;
	mov.f32 	%f469, 0f3C4CAF63;
	mov.f32 	%f470, 0f3B18F0FE;
	fma.rn.f32 	%f471, %f470, %f468, %f469;
	mov.f32 	%f472, 0f3DAAAABD;
	fma.rn.f32 	%f473, %f471, %f468, %f472;
	mul.rn.f32 	%f474, %f473, %f468;
	mul.rn.f32 	%f475, %f474, %f467;
	sub.f32 	%f476, %f465, %f467;
	neg.f32 	%f477, %f467;
	add.f32 	%f478, %f476, %f476;
	fma.rn.f32 	%f479, %f477, %f465, %f478;
	mul.rn.f32 	%f480, %f450, %f479;
	add.f32 	%f481, %f475, %f467;
	sub.f32 	%f482, %f467, %f481;
	add.f32 	%f483, %f475, %f482;
	add.f32 	%f484, %f480, %f483;
	add.f32 	%f485, %f481, %f484;
	sub.f32 	%f486, %f481, %f485;
	add.f32 	%f487, %f484, %f486;
	mov.f32 	%f488, 0f3F317200;
	mul.rn.f32 	%f489, %f464, %f488;
	mov.f32 	%f490, 0f35BFBE8E;
	mul.rn.f32 	%f491, %f464, %f490;
	add.f32 	%f492, %f489, %f485;
	sub.f32 	%f493, %f489, %f492;
	add.f32 	%f494, %f485, %f493;
	add.f32 	%f495, %f487, %f494;
	add.f32 	%f496, %f491, %f495;
	add.f32 	%f497, %f492, %f496;
	sub.f32 	%f498, %f492, %f497;
	add.f32 	%f499, %f496, %f498;
	mov.f32 	%f500, 0f3EE8BA2E;
	mul.rn.f32 	%f501, %f500, %f497;
	neg.f32 	%f502, %f501;
	fma.rn.f32 	%f503, %f500, %f497, %f502;
	fma.rn.f32 	%f504, %f500, %f499, %f503;
	mov.f32 	%f505, 0f00000000;
	fma.rn.f32 	%f506, %f505, %f497, %f504;
	add.rn.f32 	%f507, %f501, %f506;
	neg.f32 	%f508, %f507;
	add.rn.f32 	%f509, %f501, %f508;
	add.rn.f32 	%f510, %f509, %f506;
	mov.b32 	 %r267, %f507;
	setp.eq.s32	%p74, %r267, 1118925336;
	add.s32 	%r268, %r267, -1;
	mov.b32 	 %f511, %r268;
	add.f32 	%f512, %f510, 0f37000000;
	selp.f32	%f513, %f511, %f507, %p74;
	selp.f32	%f119, %f512, %f510, %p74;
	mul.f32 	%f514, %f513, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f515, %f514;
	mov.f32 	%f516, 0fBF317200;
	fma.rn.f32 	%f517, %f515, %f516, %f513;
	mov.f32 	%f518, 0fB5BFBE8E;
	fma.rn.f32 	%f519, %f515, %f518, %f517;
	mul.f32 	%f520, %f519, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f521, %f520;
	add.f32 	%f522, %f515, 0f00000000;
	ex2.approx.f32 	%f523, %f522;
	mul.f32 	%f524, %f521, %f523;
	setp.lt.f32	%p75, %f513, 0fC2D20000;
	selp.f32	%f525, 0f00000000, %f524, %p75;
	setp.gt.f32	%p76, %f513, 0f42D20000;
	selp.f32	%f845, 0f7F800000, %f525, %p76;
	setp.eq.f32	%p77, %f845, 0f7F800000;
	@%p77 bra 	BB0_82;

	fma.rn.f32 	%f845, %f845, %f119, %f845;

BB0_82:
	setp.lt.f32	%p78, %f844, 0f00000000;
	setp.eq.f32	%p79, %f117, 0f3F800000;
	and.pred  	%p3, %p78, %p79;
	mov.b32 	 %r269, %f845;
	xor.b32  	%r270, %r269, -2147483648;
	mov.b32 	 %f526, %r270;
	selp.f32	%f847, %f526, %f845, %p3;
	setp.eq.f32	%p80, %f844, 0f00000000;
	@%p80 bra 	BB0_85;
	bra.uni 	BB0_83;

BB0_85:
	add.f32 	%f529, %f844, %f844;
	selp.f32	%f847, %f529, 0f00000000, %p79;
	bra.uni 	BB0_86;

BB0_83:
	setp.geu.f32	%p81, %f844, 0f00000000;
	@%p81 bra 	BB0_86;

	cvt.rzi.f32.f32	%f528, %f500;
	setp.neu.f32	%p82, %f528, 0f3EE8BA2E;
	selp.f32	%f847, 0f7FFFFFFF, %f847, %p82;

BB0_86:
	add.f32 	%f530, %f118, 0f3EE8BA2E;
	mov.b32 	 %r271, %f530;
	setp.lt.s32	%p84, %r271, 2139095040;
	@%p84 bra 	BB0_91;

	setp.gtu.f32	%p85, %f118, 0f7F800000;
	@%p85 bra 	BB0_90;
	bra.uni 	BB0_88;

BB0_90:
	add.f32 	%f847, %f844, 0f3EE8BA2E;
	bra.uni 	BB0_91;

BB0_88:
	setp.neu.f32	%p86, %f118, 0f7F800000;
	@%p86 bra 	BB0_91;

	selp.f32	%f847, 0fFF800000, 0f7F800000, %p3;

BB0_91:
	mul.f32 	%f531, %f847, 0f437F0000;
	setp.eq.f32	%p87, %f844, 0f3F800000;
	selp.f32	%f532, 0f437F0000, %f531, %p87;
	cvt.rzi.u32.f32	%r272, %f532;
	cvt.u16.u32	%rs10, %r272;
	mov.u16 	%rs11, 255;
	st.v2.u8 	[%rd63], {%rs10, %rs11};
	ld.global.u32 	%r370, [imageEnabled];

BB0_92:
	ld.global.f32 	%f533, [lightColor];
	mul.f32 	%f130, %f843, %f533;
	ld.global.f32 	%f534, [lightColor+4];
	mul.f32 	%f131, %f843, %f534;
	ld.global.f32 	%f535, [lightColor+8];
	mul.f32 	%f132, %f843, %f535;
	and.b32  	%r273, %r370, 1;
	setp.eq.b32	%p88, %r273, 1;
	@!%p88 bra 	BB0_127;
	bra.uni 	BB0_93;

BB0_93:
	mov.f32 	%f538, 0f3E666666;
	cvt.rzi.f32.f32	%f539, %f538;
	fma.rn.f32 	%f540, %f539, 0fC0000000, 0f3EE66666;
	abs.f32 	%f133, %f540;
	abs.f32 	%f134, %f130;
	setp.lt.f32	%p89, %f134, 0f00800000;
	mul.f32 	%f541, %f134, 0f4B800000;
	selp.f32	%f542, 0fC3170000, 0fC2FE0000, %p89;
	selp.f32	%f543, %f541, %f134, %p89;
	mov.b32 	 %r274, %f543;
	and.b32  	%r275, %r274, 8388607;
	or.b32  	%r276, %r275, 1065353216;
	mov.b32 	 %f544, %r276;
	shr.u32 	%r277, %r274, 23;
	cvt.rn.f32.u32	%f545, %r277;
	add.f32 	%f546, %f542, %f545;
	setp.gt.f32	%p90, %f544, 0f3FB504F3;
	mul.f32 	%f547, %f544, 0f3F000000;
	add.f32 	%f548, %f546, 0f3F800000;
	selp.f32	%f549, %f547, %f544, %p90;
	selp.f32	%f550, %f548, %f546, %p90;
	add.f32 	%f551, %f549, 0fBF800000;
	add.f32 	%f537, %f549, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f536,%f537;
	// inline asm
	add.f32 	%f552, %f551, %f551;
	mul.f32 	%f553, %f536, %f552;
	mul.f32 	%f554, %f553, %f553;
	mov.f32 	%f555, 0f3C4CAF63;
	mov.f32 	%f556, 0f3B18F0FE;
	fma.rn.f32 	%f557, %f556, %f554, %f555;
	mov.f32 	%f558, 0f3DAAAABD;
	fma.rn.f32 	%f559, %f557, %f554, %f558;
	mul.rn.f32 	%f560, %f559, %f554;
	mul.rn.f32 	%f561, %f560, %f553;
	sub.f32 	%f562, %f551, %f553;
	neg.f32 	%f563, %f553;
	add.f32 	%f564, %f562, %f562;
	fma.rn.f32 	%f565, %f563, %f551, %f564;
	mul.rn.f32 	%f566, %f536, %f565;
	add.f32 	%f567, %f561, %f553;
	sub.f32 	%f568, %f553, %f567;
	add.f32 	%f569, %f561, %f568;
	add.f32 	%f570, %f566, %f569;
	add.f32 	%f571, %f567, %f570;
	sub.f32 	%f572, %f567, %f571;
	add.f32 	%f573, %f570, %f572;
	mov.f32 	%f574, 0f3F317200;
	mul.rn.f32 	%f575, %f550, %f574;
	mov.f32 	%f576, 0f35BFBE8E;
	mul.rn.f32 	%f577, %f550, %f576;
	add.f32 	%f578, %f575, %f571;
	sub.f32 	%f579, %f575, %f578;
	add.f32 	%f580, %f571, %f579;
	add.f32 	%f581, %f573, %f580;
	add.f32 	%f582, %f577, %f581;
	add.f32 	%f583, %f578, %f582;
	sub.f32 	%f584, %f578, %f583;
	add.f32 	%f585, %f582, %f584;
	mov.f32 	%f586, 0f3EE66666;
	mul.rn.f32 	%f587, %f586, %f583;
	neg.f32 	%f588, %f587;
	fma.rn.f32 	%f589, %f586, %f583, %f588;
	fma.rn.f32 	%f590, %f586, %f585, %f589;
	mov.f32 	%f591, 0f00000000;
	fma.rn.f32 	%f592, %f591, %f583, %f590;
	add.rn.f32 	%f593, %f587, %f592;
	neg.f32 	%f594, %f593;
	add.rn.f32 	%f595, %f587, %f594;
	add.rn.f32 	%f596, %f595, %f592;
	mov.b32 	 %r278, %f593;
	setp.eq.s32	%p91, %r278, 1118925336;
	add.s32 	%r279, %r278, -1;
	mov.b32 	 %f597, %r279;
	add.f32 	%f598, %f596, 0f37000000;
	selp.f32	%f599, %f597, %f593, %p91;
	selp.f32	%f135, %f598, %f596, %p91;
	mul.f32 	%f600, %f599, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f601, %f600;
	mov.f32 	%f602, 0fBF317200;
	fma.rn.f32 	%f603, %f601, %f602, %f599;
	mov.f32 	%f604, 0fB5BFBE8E;
	fma.rn.f32 	%f605, %f601, %f604, %f603;
	mul.f32 	%f606, %f605, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f607, %f606;
	add.f32 	%f608, %f601, 0f00000000;
	ex2.approx.f32 	%f609, %f608;
	mul.f32 	%f610, %f607, %f609;
	setp.lt.f32	%p92, %f599, 0fC2D20000;
	selp.f32	%f611, 0f00000000, %f610, %p92;
	setp.gt.f32	%p93, %f599, 0f42D20000;
	selp.f32	%f848, 0f7F800000, %f611, %p93;
	setp.eq.f32	%p94, %f848, 0f7F800000;
	@%p94 bra 	BB0_95;

	fma.rn.f32 	%f848, %f848, %f135, %f848;

BB0_95:
	setp.lt.f32	%p95, %f130, 0f00000000;
	setp.eq.f32	%p96, %f133, 0f3F800000;
	and.pred  	%p4, %p95, %p96;
	mov.b32 	 %r280, %f848;
	xor.b32  	%r281, %r280, -2147483648;
	mov.b32 	 %f612, %r281;
	selp.f32	%f850, %f612, %f848, %p4;
	setp.eq.f32	%p97, %f130, 0f00000000;
	@%p97 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f615, %f130, %f130;
	selp.f32	%f850, %f615, 0f00000000, %p96;
	bra.uni 	BB0_99;

BB0_96:
	setp.geu.f32	%p98, %f130, 0f00000000;
	@%p98 bra 	BB0_99;

	cvt.rzi.f32.f32	%f614, %f586;
	setp.neu.f32	%p99, %f614, 0f3EE66666;
	selp.f32	%f850, 0f7FFFFFFF, %f850, %p99;

BB0_99:
	add.f32 	%f616, %f134, 0f3EE66666;
	mov.b32 	 %r282, %f616;
	setp.lt.s32	%p101, %r282, 2139095040;
	@%p101 bra 	BB0_104;

	setp.gtu.f32	%p102, %f134, 0f7F800000;
	@%p102 bra 	BB0_103;
	bra.uni 	BB0_101;

BB0_103:
	add.f32 	%f850, %f130, 0f3EE66666;
	bra.uni 	BB0_104;

BB0_101:
	setp.neu.f32	%p103, %f134, 0f7F800000;
	@%p103 bra 	BB0_104;

	selp.f32	%f850, 0fFF800000, 0f7F800000, %p4;

BB0_104:
	setp.eq.f32	%p104, %f130, 0f3F800000;
	selp.f32	%f146, 0f3F800000, %f850, %p104;
	abs.f32 	%f147, %f131;
	setp.lt.f32	%p105, %f147, 0f00800000;
	mul.f32 	%f619, %f147, 0f4B800000;
	selp.f32	%f620, 0fC3170000, 0fC2FE0000, %p105;
	selp.f32	%f621, %f619, %f147, %p105;
	mov.b32 	 %r283, %f621;
	and.b32  	%r284, %r283, 8388607;
	or.b32  	%r285, %r284, 1065353216;
	mov.b32 	 %f622, %r285;
	shr.u32 	%r286, %r283, 23;
	cvt.rn.f32.u32	%f623, %r286;
	add.f32 	%f624, %f620, %f623;
	setp.gt.f32	%p106, %f622, 0f3FB504F3;
	mul.f32 	%f625, %f622, 0f3F000000;
	add.f32 	%f626, %f624, 0f3F800000;
	selp.f32	%f627, %f625, %f622, %p106;
	selp.f32	%f628, %f626, %f624, %p106;
	add.f32 	%f629, %f627, 0fBF800000;
	add.f32 	%f618, %f627, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f617,%f618;
	// inline asm
	add.f32 	%f630, %f629, %f629;
	mul.f32 	%f631, %f617, %f630;
	mul.f32 	%f632, %f631, %f631;
	fma.rn.f32 	%f635, %f556, %f632, %f555;
	fma.rn.f32 	%f637, %f635, %f632, %f558;
	mul.rn.f32 	%f638, %f637, %f632;
	mul.rn.f32 	%f639, %f638, %f631;
	sub.f32 	%f640, %f629, %f631;
	neg.f32 	%f641, %f631;
	add.f32 	%f642, %f640, %f640;
	fma.rn.f32 	%f643, %f641, %f629, %f642;
	mul.rn.f32 	%f644, %f617, %f643;
	add.f32 	%f645, %f639, %f631;
	sub.f32 	%f646, %f631, %f645;
	add.f32 	%f647, %f639, %f646;
	add.f32 	%f648, %f644, %f647;
	add.f32 	%f649, %f645, %f648;
	sub.f32 	%f650, %f645, %f649;
	add.f32 	%f651, %f648, %f650;
	mul.rn.f32 	%f653, %f628, %f574;
	mul.rn.f32 	%f655, %f628, %f576;
	add.f32 	%f656, %f653, %f649;
	sub.f32 	%f657, %f653, %f656;
	add.f32 	%f658, %f649, %f657;
	add.f32 	%f659, %f651, %f658;
	add.f32 	%f660, %f655, %f659;
	add.f32 	%f661, %f656, %f660;
	sub.f32 	%f662, %f656, %f661;
	add.f32 	%f663, %f660, %f662;
	mul.rn.f32 	%f665, %f586, %f661;
	neg.f32 	%f666, %f665;
	fma.rn.f32 	%f667, %f586, %f661, %f666;
	fma.rn.f32 	%f668, %f586, %f663, %f667;
	fma.rn.f32 	%f670, %f591, %f661, %f668;
	add.rn.f32 	%f671, %f665, %f670;
	neg.f32 	%f672, %f671;
	add.rn.f32 	%f673, %f665, %f672;
	add.rn.f32 	%f674, %f673, %f670;
	mov.b32 	 %r287, %f671;
	setp.eq.s32	%p107, %r287, 1118925336;
	add.s32 	%r288, %r287, -1;
	mov.b32 	 %f675, %r288;
	add.f32 	%f676, %f674, 0f37000000;
	selp.f32	%f677, %f675, %f671, %p107;
	selp.f32	%f148, %f676, %f674, %p107;
	mul.f32 	%f678, %f677, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f679, %f678;
	fma.rn.f32 	%f681, %f679, %f602, %f677;
	fma.rn.f32 	%f683, %f679, %f604, %f681;
	mul.f32 	%f684, %f683, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f685, %f684;
	add.f32 	%f686, %f679, 0f00000000;
	ex2.approx.f32 	%f687, %f686;
	mul.f32 	%f688, %f685, %f687;
	setp.lt.f32	%p108, %f677, 0fC2D20000;
	selp.f32	%f689, 0f00000000, %f688, %p108;
	setp.gt.f32	%p109, %f677, 0f42D20000;
	selp.f32	%f851, 0f7F800000, %f689, %p109;
	setp.eq.f32	%p110, %f851, 0f7F800000;
	@%p110 bra 	BB0_106;

	fma.rn.f32 	%f851, %f851, %f148, %f851;

BB0_106:
	setp.lt.f32	%p111, %f131, 0f00000000;
	and.pred  	%p5, %p111, %p96;
	mov.b32 	 %r289, %f851;
	xor.b32  	%r290, %r289, -2147483648;
	mov.b32 	 %f690, %r290;
	selp.f32	%f853, %f690, %f851, %p5;
	setp.eq.f32	%p113, %f131, 0f00000000;
	@%p113 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f693, %f131, %f131;
	selp.f32	%f853, %f693, 0f00000000, %p96;
	bra.uni 	BB0_110;

BB0_107:
	setp.geu.f32	%p114, %f131, 0f00000000;
	@%p114 bra 	BB0_110;

	cvt.rzi.f32.f32	%f692, %f586;
	setp.neu.f32	%p115, %f692, 0f3EE66666;
	selp.f32	%f853, 0f7FFFFFFF, %f853, %p115;

BB0_110:
	add.f32 	%f694, %f147, 0f3EE66666;
	mov.b32 	 %r291, %f694;
	setp.lt.s32	%p117, %r291, 2139095040;
	@%p117 bra 	BB0_115;

	setp.gtu.f32	%p118, %f147, 0f7F800000;
	@%p118 bra 	BB0_114;
	bra.uni 	BB0_112;

BB0_114:
	add.f32 	%f853, %f131, 0f3EE66666;
	bra.uni 	BB0_115;

BB0_112:
	setp.neu.f32	%p119, %f147, 0f7F800000;
	@%p119 bra 	BB0_115;

	selp.f32	%f853, 0fFF800000, 0f7F800000, %p5;

BB0_115:
	setp.eq.f32	%p120, %f131, 0f3F800000;
	selp.f32	%f159, 0f3F800000, %f853, %p120;
	abs.f32 	%f160, %f132;
	setp.lt.f32	%p121, %f160, 0f00800000;
	mul.f32 	%f697, %f160, 0f4B800000;
	selp.f32	%f698, 0fC3170000, 0fC2FE0000, %p121;
	selp.f32	%f699, %f697, %f160, %p121;
	mov.b32 	 %r292, %f699;
	and.b32  	%r293, %r292, 8388607;
	or.b32  	%r294, %r293, 1065353216;
	mov.b32 	 %f700, %r294;
	shr.u32 	%r295, %r292, 23;
	cvt.rn.f32.u32	%f701, %r295;
	add.f32 	%f702, %f698, %f701;
	setp.gt.f32	%p122, %f700, 0f3FB504F3;
	mul.f32 	%f703, %f700, 0f3F000000;
	add.f32 	%f704, %f702, 0f3F800000;
	selp.f32	%f705, %f703, %f700, %p122;
	selp.f32	%f706, %f704, %f702, %p122;
	add.f32 	%f707, %f705, 0fBF800000;
	add.f32 	%f696, %f705, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f695,%f696;
	// inline asm
	add.f32 	%f708, %f707, %f707;
	mul.f32 	%f709, %f695, %f708;
	mul.f32 	%f710, %f709, %f709;
	fma.rn.f32 	%f713, %f556, %f710, %f555;
	fma.rn.f32 	%f715, %f713, %f710, %f558;
	mul.rn.f32 	%f716, %f715, %f710;
	mul.rn.f32 	%f717, %f716, %f709;
	sub.f32 	%f718, %f707, %f709;
	neg.f32 	%f719, %f709;
	add.f32 	%f720, %f718, %f718;
	fma.rn.f32 	%f721, %f719, %f707, %f720;
	mul.rn.f32 	%f722, %f695, %f721;
	add.f32 	%f723, %f717, %f709;
	sub.f32 	%f724, %f709, %f723;
	add.f32 	%f725, %f717, %f724;
	add.f32 	%f726, %f722, %f725;
	add.f32 	%f727, %f723, %f726;
	sub.f32 	%f728, %f723, %f727;
	add.f32 	%f729, %f726, %f728;
	mul.rn.f32 	%f731, %f706, %f574;
	mul.rn.f32 	%f733, %f706, %f576;
	add.f32 	%f734, %f731, %f727;
	sub.f32 	%f735, %f731, %f734;
	add.f32 	%f736, %f727, %f735;
	add.f32 	%f737, %f729, %f736;
	add.f32 	%f738, %f733, %f737;
	add.f32 	%f739, %f734, %f738;
	sub.f32 	%f740, %f734, %f739;
	add.f32 	%f741, %f738, %f740;
	mul.rn.f32 	%f743, %f586, %f739;
	neg.f32 	%f744, %f743;
	fma.rn.f32 	%f745, %f586, %f739, %f744;
	fma.rn.f32 	%f746, %f586, %f741, %f745;
	fma.rn.f32 	%f748, %f591, %f739, %f746;
	add.rn.f32 	%f749, %f743, %f748;
	neg.f32 	%f750, %f749;
	add.rn.f32 	%f751, %f743, %f750;
	add.rn.f32 	%f752, %f751, %f748;
	mov.b32 	 %r296, %f749;
	setp.eq.s32	%p123, %r296, 1118925336;
	add.s32 	%r297, %r296, -1;
	mov.b32 	 %f753, %r297;
	add.f32 	%f754, %f752, 0f37000000;
	selp.f32	%f755, %f753, %f749, %p123;
	selp.f32	%f161, %f754, %f752, %p123;
	mul.f32 	%f756, %f755, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f757, %f756;
	fma.rn.f32 	%f759, %f757, %f602, %f755;
	fma.rn.f32 	%f761, %f757, %f604, %f759;
	mul.f32 	%f762, %f761, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f763, %f762;
	add.f32 	%f764, %f757, 0f00000000;
	ex2.approx.f32 	%f765, %f764;
	mul.f32 	%f766, %f763, %f765;
	setp.lt.f32	%p124, %f755, 0fC2D20000;
	selp.f32	%f767, 0f00000000, %f766, %p124;
	setp.gt.f32	%p125, %f755, 0f42D20000;
	selp.f32	%f854, 0f7F800000, %f767, %p125;
	setp.eq.f32	%p126, %f854, 0f7F800000;
	@%p126 bra 	BB0_117;

	fma.rn.f32 	%f854, %f854, %f161, %f854;

BB0_117:
	setp.lt.f32	%p127, %f132, 0f00000000;
	and.pred  	%p6, %p127, %p96;
	mov.b32 	 %r298, %f854;
	xor.b32  	%r299, %r298, -2147483648;
	mov.b32 	 %f768, %r299;
	selp.f32	%f856, %f768, %f854, %p6;
	setp.eq.f32	%p129, %f132, 0f00000000;
	@%p129 bra 	BB0_120;
	bra.uni 	BB0_118;

BB0_120:
	add.f32 	%f771, %f132, %f132;
	selp.f32	%f856, %f771, 0f00000000, %p96;
	bra.uni 	BB0_121;

BB0_118:
	setp.geu.f32	%p130, %f132, 0f00000000;
	@%p130 bra 	BB0_121;

	cvt.rzi.f32.f32	%f770, %f586;
	setp.neu.f32	%p131, %f770, 0f3EE66666;
	selp.f32	%f856, 0f7FFFFFFF, %f856, %p131;

BB0_121:
	add.f32 	%f772, %f160, 0f3EE66666;
	mov.b32 	 %r300, %f772;
	setp.lt.s32	%p133, %r300, 2139095040;
	@%p133 bra 	BB0_126;

	setp.gtu.f32	%p134, %f160, 0f7F800000;
	@%p134 bra 	BB0_125;
	bra.uni 	BB0_123;

BB0_125:
	add.f32 	%f856, %f132, 0f3EE66666;
	bra.uni 	BB0_126;

BB0_123:
	setp.neu.f32	%p135, %f160, 0f7F800000;
	@%p135 bra 	BB0_126;

	selp.f32	%f856, 0fFF800000, 0f7F800000, %p6;

BB0_126:
	mov.u32 	%r332, 2;
	setp.eq.f32	%p136, %f132, 0f3F800000;
	selp.f32	%f773, 0f3F800000, %f856, %p136;
	cvt.u64.u32	%rd73, %r3;
	cvt.u64.u32	%rd72, %r2;
	mov.u64 	%rd76, image;
	cvta.global.u64 	%rd71, %rd76;
	// inline asm
	call (%rd70), _rt_buffer_get_64, (%rd71, %r332, %r107, %rd72, %rd73, %rd24, %rd24);
	// inline asm
	cvt.sat.f32.f32	%f774, %f773;
	mul.f32 	%f775, %f774, 0f437FFD71;
	cvt.rzi.u32.f32	%r303, %f775;
	cvt.sat.f32.f32	%f776, %f159;
	mul.f32 	%f777, %f776, 0f437FFD71;
	cvt.rzi.u32.f32	%r304, %f777;
	cvt.sat.f32.f32	%f778, %f146;
	mul.f32 	%f779, %f778, 0f437FFD71;
	cvt.rzi.u32.f32	%r305, %f779;
	cvt.u16.u32	%rs12, %r303;
	cvt.u16.u32	%rs13, %r305;
	cvt.u16.u32	%rs14, %r304;
	mov.u16 	%rs15, 255;
	st.v4.u8 	[%rd70], {%rs12, %rs14, %rs13, %rs15};
	ld.global.u32 	%r370, [imageEnabled];

BB0_127:
	and.b32  	%r306, %r370, 4;
	setp.eq.s32	%p137, %r306, 0;
	@%p137 bra 	BB0_139;

	ld.global.u32 	%r307, [additive];
	setp.eq.s32	%p138, %r307, 0;
	cvt.u64.u32	%rd15, %r2;
	cvt.u64.u32	%rd16, %r3;
	// inline asm
	{  cvt.rn.f16.f32 %rs16, %f340;}

	// inline asm
	@%p138 bra 	BB0_130;

	mov.u32 	%r333, 2;
	mov.u64 	%rd89, image_HDR;
	cvta.global.u64 	%rd78, %rd89;
	mov.u32 	%r311, 8;
	// inline asm
	call (%rd77), _rt_buffer_get_64, (%rd78, %r333, %r311, %rd15, %rd16, %rd24, %rd24);
	// inline asm
	ld.v4.u16 	{%rs23, %rs24, %rs25, %rs26}, [%rd77];
	// inline asm
	{  cvt.f32.f16 %f781, %rs23;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f782, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f783, %rs25;}

	// inline asm
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd78, %r333, %r311, %rd15, %rd16, %rd24, %rd24);
	// inline asm
	add.f32 	%f784, %f130, %f781;
	add.f32 	%f785, %f131, %f782;
	add.f32 	%f786, %f132, %f783;
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f786;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f785;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f784;}

	// inline asm
	st.v4.u16 	[%rd83], {%rs20, %rs21, %rs22, %rs16};
	bra.uni 	BB0_139;

BB0_130:
	mov.u32 	%r334, 2;
	mov.u64 	%rd96, image_HDR;
	cvta.global.u64 	%rd91, %rd96;
	mov.u32 	%r313, 8;
	// inline asm
	call (%rd90), _rt_buffer_get_64, (%rd91, %r334, %r313, %rd15, %rd16, %rd24, %rd24);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f132;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f131;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f130;}

	// inline asm
	st.v4.u16 	[%rd90], {%rs27, %rs28, %rs29, %rs16};

BB0_139:
	ret;
}


