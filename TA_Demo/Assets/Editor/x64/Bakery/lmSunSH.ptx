//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<123>;
	.reg .b16 	%rs<152>;
	.reg .f32 	%f<795>;
	.reg .b32 	%r<386>;
	.reg .b64 	%rd<286>;


	mov.u64 	%rd285, __local_depot0;
	cvta.local.u64 	%SP, %rd285;
	ld.global.v2.u32 	{%r101, %r102}, [pixelID];
	cvt.u64.u32	%rd22, %r101;
	cvt.u64.u32	%rd23, %r102;
	mov.u64 	%rd26, uvnormal;
	cvta.global.u64 	%rd21, %rd26;
	mov.u32 	%r99, 2;
	mov.u32 	%r100, 4;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd21, %r99, %r100, %rd22, %rd23, %rd25, %rd25);
	// inline asm
	ld.u32 	%r1, [%rd20];
	shr.u32 	%r105, %r1, 16;
	cvt.u16.u32	%rs1, %r105;
	and.b16  	%rs7, %rs1, 255;
	cvt.u16.u32	%rs8, %r1;
	or.b16  	%rs9, %rs8, %rs7;
	setp.eq.s16	%p5, %rs9, 0;
	mov.f32 	%f763, 0f00000000;
	mov.f32 	%f764, %f763;
	mov.f32 	%f765, %f763;
	@%p5 bra 	BB0_2;

	ld.u8 	%rs10, [%rd20+1];
	and.b16  	%rs12, %rs8, 255;
	cvt.rn.f32.u16	%f134, %rs12;
	div.rn.f32 	%f135, %f134, 0f437F0000;
	fma.rn.f32 	%f136, %f135, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f137, %rs10;
	div.rn.f32 	%f138, %f137, 0f437F0000;
	fma.rn.f32 	%f139, %f138, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f140, %rs7;
	div.rn.f32 	%f141, %f140, 0f437F0000;
	fma.rn.f32 	%f142, %f141, 0f40000000, 0fBF800000;
	mul.f32 	%f143, %f139, %f139;
	fma.rn.f32 	%f144, %f136, %f136, %f143;
	fma.rn.f32 	%f145, %f142, %f142, %f144;
	sqrt.rn.f32 	%f146, %f145;
	rcp.rn.f32 	%f147, %f146;
	mul.f32 	%f763, %f136, %f147;
	mul.f32 	%f764, %f139, %f147;
	mul.f32 	%f765, %f142, %f147;

BB0_2:
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	ld.global.v2.u32 	{%r109, %r110}, [tileInfo];
	add.s32 	%r2, %r106, %r109;
	add.s32 	%r3, %r107, %r110;
	setp.eq.f32	%p6, %f764, 0f00000000;
	setp.eq.f32	%p7, %f763, 0f00000000;
	and.pred  	%p8, %p7, %p6;
	setp.eq.f32	%p9, %f765, 0f00000000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_121;
	bra.uni 	BB0_3;

BB0_121:
	ld.global.u32 	%r385, [imageEnabled];
	and.b32  	%r310, %r385, 1;
	setp.eq.b32	%p115, %r310, 1;
	@!%p115 bra 	BB0_123;
	bra.uni 	BB0_122;

BB0_122:
	cvt.u64.u32	%rd169, %r2;
	cvt.u64.u32	%rd170, %r3;
	mov.u64 	%rd173, image;
	cvta.global.u64 	%rd168, %rd173;
	// inline asm
	call (%rd167), _rt_buffer_get_64, (%rd168, %r99, %r100, %rd169, %rd170, %rd25, %rd25);
	// inline asm
	mov.u16 	%rs84, 0;
	st.v4.u8 	[%rd167], {%rs84, %rs84, %rs84, %rs84};
	ld.global.u32 	%r385, [imageEnabled];

BB0_123:
	and.b32  	%r313, %r385, 8;
	setp.eq.s32	%p116, %r313, 0;
	@%p116 bra 	BB0_125;

	cvt.u64.u32	%rd177, %r3;
	cvt.u64.u32	%rd176, %r2;
	mov.u64 	%rd180, image_Mask;
	cvta.global.u64 	%rd175, %rd180;
	// inline asm
	call (%rd174), _rt_buffer_get_64, (%rd175, %r99, %r99, %rd176, %rd177, %rd25, %rd25);
	// inline asm
	mov.f32 	%f685, 0f00000000;
	cvt.rzi.u32.f32	%r316, %f685;
	cvt.u16.u32	%rs85, %r316;
	mov.u16 	%rs86, 0;
	st.v2.u8 	[%rd174], {%rs85, %rs86};
	ld.global.u32 	%r385, [imageEnabled];

BB0_125:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	and.b32  	%r317, %r385, 4;
	setp.eq.s32	%p117, %r317, 0;
	@%p117 bra 	BB0_129;

	ld.global.u32 	%r318, [additive];
	setp.eq.s32	%p118, %r318, 0;
	@%p118 bra 	BB0_128;

	mov.u64 	%rd193, image_HDR;
	cvta.global.u64 	%rd182, %rd193;
	mov.u32 	%r322, 8;
	// inline asm
	call (%rd181), _rt_buffer_get_64, (%rd182, %r99, %r322, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs93, %rs94, %rs95, %rs96}, [%rd181];
	// inline asm
	{  cvt.f32.f16 %f686, %rs93;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f687, %rs94;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f688, %rs95;}

	// inline asm
	// inline asm
	call (%rd187), _rt_buffer_get_64, (%rd182, %r99, %r322, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	add.f32 	%f689, %f686, 0f00000000;
	add.f32 	%f690, %f687, 0f00000000;
	add.f32 	%f691, %f688, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f691;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f690;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f689;}

	// inline asm
	mov.u16 	%rs97, 0;
	st.v4.u16 	[%rd187], {%rs90, %rs91, %rs92, %rs97};
	bra.uni 	BB0_129;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f149, %f763, %f7;
	mul.f32 	%f150, %f764, %f8;
	neg.f32 	%f151, %f150;
	sub.f32 	%f152, %f151, %f149;
	mul.f32 	%f153, %f765, %f9;
	sub.f32 	%f10, %f152, %f153;
	ld.global.v2.u32 	{%r118, %r119}, [pixelID];
	cvt.u64.u32	%rd29, %r118;
	cvt.u64.u32	%rd30, %r119;
	mov.u64 	%rd39, uvpos;
	cvta.global.u64 	%rd28, %rd39;
	mov.u32 	%r115, 12;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r99, %r115, %rd29, %rd30, %rd25, %rd25);
	// inline asm
	ld.f32 	%f154, [%rd27+8];
	ld.f32 	%f155, [%rd27+4];
	ld.f32 	%f156, [%rd27];
	mul.f32 	%f157, %f156, 0f3456BF95;
	mul.f32 	%f158, %f155, 0f3456BF95;
	mul.f32 	%f159, %f154, 0f3456BF95;
	abs.f32 	%f160, %f763;
	div.rn.f32 	%f161, %f157, %f160;
	abs.f32 	%f162, %f764;
	div.rn.f32 	%f163, %f158, %f162;
	abs.f32 	%f164, %f765;
	div.rn.f32 	%f165, %f159, %f164;
	abs.f32 	%f166, %f161;
	abs.f32 	%f167, %f163;
	abs.f32 	%f168, %f165;
	mov.f32 	%f169, 0f38D1B717;
	max.f32 	%f170, %f166, %f169;
	max.f32 	%f171, %f167, %f169;
	max.f32 	%f172, %f168, %f169;
	fma.rn.f32 	%f11, %f763, %f170, %f156;
	fma.rn.f32 	%f12, %f764, %f171, %f155;
	fma.rn.f32 	%f13, %f765, %f172, %f154;
	abs.f32 	%f173, %f7;
	abs.f32 	%f174, %f9;
	setp.gt.f32	%p11, %f173, %f174;
	neg.f32 	%f175, %f8;
	neg.f32 	%f176, %f9;
	selp.f32	%f177, %f175, 0f00000000, %p11;
	selp.f32	%f178, %f7, %f176, %p11;
	selp.f32	%f179, 0f00000000, %f8, %p11;
	mul.f32 	%f180, %f178, %f178;
	fma.rn.f32 	%f181, %f177, %f177, %f180;
	fma.rn.f32 	%f182, %f179, %f179, %f181;
	sqrt.rn.f32 	%f183, %f182;
	rcp.rn.f32 	%f184, %f183;
	mul.f32 	%f14, %f177, %f184;
	mul.f32 	%f15, %f178, %f184;
	mul.f32 	%f16, %f179, %f184;
	ld.global.v2.u32 	{%r122, %r123}, [pixelID];
	cvt.u64.u32	%rd35, %r122;
	cvt.u64.u32	%rd36, %r123;
	mov.u64 	%rd40, rnd_seeds;
	cvta.global.u64 	%rd34, %rd40;
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd34, %r99, %r100, %rd35, %rd36, %rd25, %rd25);
	// inline asm
	ld.global.u32 	%r354, [samples];
	mov.f32 	%f780, 0f00000000;
	setp.lt.s32	%p12, %r354, 1;
	@%p12 bra 	BB0_55;

	cvt.rn.f32.s32	%f186, %r354;
	rcp.rn.f32 	%f17, %f186;
	ld.u32 	%r380, [%rd33];
	mul.f32 	%f18, %f11, 0f3456BF95;
	mul.f32 	%f19, %f12, 0f3456BF95;
	mul.f32 	%f20, %f13, 0f3456BF95;
	mul.f32 	%f187, %f7, %f15;
	mul.f32 	%f188, %f8, %f14;
	sub.f32 	%f21, %f188, %f187;
	mul.f32 	%f189, %f9, %f14;
	mul.f32 	%f190, %f7, %f16;
	sub.f32 	%f22, %f190, %f189;
	mul.f32 	%f191, %f8, %f16;
	mul.f32 	%f192, %f9, %f15;
	sub.f32 	%f23, %f192, %f191;
	mov.f32 	%f780, 0f00000000;
	mov.u32 	%r355, 0;
	abs.f32 	%f193, %f19;
	abs.f32 	%f194, %f18;
	max.f32 	%f195, %f194, %f193;
	abs.f32 	%f196, %f20;
	max.f32 	%f197, %f195, %f196;

BB0_5:
	setp.lt.s32	%p13, %r354, 1;
	@%p13 bra 	BB0_54;

	cvt.rn.f32.s32	%f25, %r355;
	max.f32 	%f26, %f197, %f169;
	mov.u32 	%r357, 0;

BB0_7:
	mad.lo.s32 	%r128, %r380, 1664525, 1013904223;
	and.b32  	%r129, %r128, 16777215;
	cvt.rn.f32.u32	%f199, %r129;
	fma.rn.f32 	%f200, %f199, 0f33800000, %f25;
	mul.f32 	%f201, %f17, %f200;
	mad.lo.s32 	%r380, %r128, 1664525, 1013904223;
	and.b32  	%r130, %r380, 16777215;
	cvt.rn.f32.u32	%f202, %r130;
	cvt.rn.f32.s32	%f203, %r357;
	fma.rn.f32 	%f204, %f202, 0f33800000, %f203;
	mul.f32 	%f205, %f17, %f204;
	sqrt.rn.f32 	%f28, %f201;
	mul.f32 	%f774, %f205, 0f40C90FDB;
	abs.f32 	%f30, %f774;
	setp.neu.f32	%p14, %f30, 0f7F800000;
	mov.f32 	%f768, %f774;
	@%p14 bra 	BB0_9;

	mov.f32 	%f206, 0f00000000;
	mul.rn.f32 	%f768, %f774, %f206;

BB0_9:
	mul.f32 	%f207, %f768, 0f3F22F983;
	cvt.rni.s32.f32	%r368, %f207;
	cvt.rn.f32.s32	%f208, %r368;
	neg.f32 	%f209, %f208;
	mov.f32 	%f210, 0f3FC90FDA;
	fma.rn.f32 	%f211, %f209, %f210, %f768;
	mov.f32 	%f212, 0f33A22168;
	fma.rn.f32 	%f213, %f209, %f212, %f211;
	mov.f32 	%f214, 0f27C234C5;
	fma.rn.f32 	%f769, %f209, %f214, %f213;
	abs.f32 	%f215, %f768;
	setp.leu.f32	%p15, %f215, 0f47CE4780;
	@%p15 bra 	BB0_20;

	mov.b32 	 %r13, %f768;
	shr.u32 	%r14, %r13, 23;
	shl.b32 	%r133, %r13, 8;
	or.b32  	%r15, %r133, -2147483648;
	add.u64 	%rd42, %SP, 4;
	cvta.to.local.u64 	%rd282, %rd42;
	mov.u32 	%r360, 0;
	mov.u64 	%rd281, __cudart_i2opi_f;
	mov.u32 	%r359, -6;

BB0_11:
	.pragma "nounroll";
	ld.const.u32 	%r136, [%rd281];
	// inline asm
	{
	mad.lo.cc.u32   %r134, %r136, %r15, %r360;
	madc.hi.u32     %r360, %r136, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd282], %r134;
	add.s64 	%rd282, %rd282, 4;
	add.s64 	%rd281, %rd281, 4;
	add.s32 	%r359, %r359, 1;
	setp.ne.s32	%p16, %r359, 0;
	@%p16 bra 	BB0_11;

	and.b32  	%r139, %r14, 255;
	add.s32 	%r140, %r139, -128;
	shr.u32 	%r141, %r140, 5;
	and.b32  	%r20, %r13, -2147483648;
	cvta.to.local.u64 	%rd44, %rd42;
	st.local.u32 	[%rd44+24], %r360;
	mov.u32 	%r142, 6;
	sub.s32 	%r143, %r142, %r141;
	mul.wide.s32 	%rd45, %r143, 4;
	add.s64 	%rd8, %rd44, %rd45;
	ld.local.u32 	%r361, [%rd8];
	ld.local.u32 	%r362, [%rd8+-4];
	and.b32  	%r23, %r14, 31;
	setp.eq.s32	%p17, %r23, 0;
	@%p17 bra 	BB0_14;

	mov.u32 	%r144, 32;
	sub.s32 	%r145, %r144, %r23;
	shr.u32 	%r146, %r362, %r145;
	shl.b32 	%r147, %r361, %r23;
	add.s32 	%r361, %r146, %r147;
	ld.local.u32 	%r148, [%rd8+-8];
	shr.u32 	%r149, %r148, %r145;
	shl.b32 	%r150, %r362, %r23;
	add.s32 	%r362, %r149, %r150;

BB0_14:
	shr.u32 	%r151, %r362, 30;
	shl.b32 	%r152, %r361, 2;
	add.s32 	%r363, %r151, %r152;
	shl.b32 	%r29, %r362, 2;
	shr.u32 	%r153, %r363, 31;
	shr.u32 	%r154, %r361, 30;
	add.s32 	%r30, %r153, %r154;
	setp.eq.s32	%p18, %r153, 0;
	@%p18 bra 	BB0_15;
	bra.uni 	BB0_16;

BB0_15:
	mov.u32 	%r364, %r20;
	mov.u32 	%r365, %r29;
	bra.uni 	BB0_17;

BB0_16:
	not.b32 	%r155, %r363;
	neg.s32 	%r365, %r29;
	setp.eq.s32	%p19, %r29, 0;
	selp.u32	%r156, 1, 0, %p19;
	add.s32 	%r363, %r156, %r155;
	xor.b32  	%r364, %r20, -2147483648;

BB0_17:
	clz.b32 	%r367, %r363;
	setp.eq.s32	%p20, %r367, 0;
	shl.b32 	%r157, %r363, %r367;
	mov.u32 	%r158, 32;
	sub.s32 	%r159, %r158, %r367;
	shr.u32 	%r160, %r365, %r159;
	add.s32 	%r161, %r160, %r157;
	selp.b32	%r38, %r363, %r161, %p20;
	mov.u32 	%r162, -921707870;
	mul.hi.u32 	%r366, %r38, %r162;
	setp.eq.s32	%p21, %r20, 0;
	neg.s32 	%r163, %r30;
	selp.b32	%r368, %r30, %r163, %p21;
	setp.lt.s32	%p22, %r366, 1;
	@%p22 bra 	BB0_19;

	mul.lo.s32 	%r164, %r38, -921707870;
	shr.u32 	%r165, %r164, 31;
	shl.b32 	%r166, %r366, 1;
	add.s32 	%r366, %r165, %r166;
	add.s32 	%r367, %r367, 1;

BB0_19:
	mov.u32 	%r167, 126;
	sub.s32 	%r168, %r167, %r367;
	shl.b32 	%r169, %r168, 23;
	add.s32 	%r170, %r366, 1;
	shr.u32 	%r171, %r170, 7;
	add.s32 	%r172, %r171, 1;
	shr.u32 	%r173, %r172, 1;
	add.s32 	%r174, %r173, %r169;
	or.b32  	%r175, %r174, %r364;
	mov.b32 	 %f769, %r175;

BB0_20:
	mul.rn.f32 	%f36, %f769, %f769;
	add.s32 	%r46, %r368, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p23, %r47, 0;
	@%p23 bra 	BB0_22;
	bra.uni 	BB0_21;

BB0_22:
	mov.f32 	%f218, 0f3C08839E;
	mov.f32 	%f219, 0fB94CA1F9;
	fma.rn.f32 	%f770, %f219, %f36, %f218;
	bra.uni 	BB0_23;

BB0_21:
	mov.f32 	%f216, 0fBAB6061A;
	mov.f32 	%f217, 0f37CCF5CE;
	fma.rn.f32 	%f770, %f217, %f36, %f216;

BB0_23:
	@%p23 bra 	BB0_25;
	bra.uni 	BB0_24;

BB0_25:
	mov.f32 	%f223, 0fBE2AAAA3;
	fma.rn.f32 	%f224, %f770, %f36, %f223;
	mov.f32 	%f225, 0f00000000;
	fma.rn.f32 	%f771, %f224, %f36, %f225;
	bra.uni 	BB0_26;

BB0_24:
	mov.f32 	%f220, 0f3D2AAAA5;
	fma.rn.f32 	%f221, %f770, %f36, %f220;
	mov.f32 	%f222, 0fBF000000;
	fma.rn.f32 	%f771, %f221, %f36, %f222;

BB0_26:
	fma.rn.f32 	%f772, %f771, %f769, %f769;
	@%p23 bra 	BB0_28;

	mov.f32 	%f226, 0f3F800000;
	fma.rn.f32 	%f772, %f771, %f36, %f226;

BB0_28:
	and.b32  	%r176, %r46, 2;
	setp.eq.s32	%p26, %r176, 0;
	@%p26 bra 	BB0_30;

	mov.f32 	%f227, 0f00000000;
	mov.f32 	%f228, 0fBF800000;
	fma.rn.f32 	%f772, %f772, %f228, %f227;

BB0_30:
	@%p14 bra 	BB0_32;

	mov.f32 	%f229, 0f00000000;
	mul.rn.f32 	%f774, %f774, %f229;

BB0_32:
	mul.f32 	%f230, %f774, 0f3F22F983;
	cvt.rni.s32.f32	%r378, %f230;
	cvt.rn.f32.s32	%f231, %r378;
	neg.f32 	%f232, %f231;
	fma.rn.f32 	%f234, %f232, %f210, %f774;
	fma.rn.f32 	%f236, %f232, %f212, %f234;
	fma.rn.f32 	%f775, %f232, %f214, %f236;
	abs.f32 	%f238, %f774;
	setp.leu.f32	%p28, %f238, 0f47CE4780;
	@%p28 bra 	BB0_43;

	mov.b32 	 %r49, %f774;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r179, %r49, 8;
	or.b32  	%r51, %r179, -2147483648;
	add.u64 	%rd47, %SP, 4;
	cvta.to.local.u64 	%rd284, %rd47;
	mov.u32 	%r370, 0;
	mov.u64 	%rd283, __cudart_i2opi_f;
	mov.u32 	%r369, -6;

BB0_34:
	.pragma "nounroll";
	ld.const.u32 	%r182, [%rd283];
	// inline asm
	{
	mad.lo.cc.u32   %r180, %r182, %r51, %r370;
	madc.hi.u32     %r370, %r182, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd284], %r180;
	add.s64 	%rd284, %rd284, 4;
	add.s64 	%rd283, %rd283, 4;
	add.s32 	%r369, %r369, 1;
	setp.ne.s32	%p29, %r369, 0;
	@%p29 bra 	BB0_34;

	and.b32  	%r185, %r50, 255;
	add.s32 	%r186, %r185, -128;
	shr.u32 	%r187, %r186, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd49, %rd47;
	st.local.u32 	[%rd49+24], %r370;
	mov.u32 	%r188, 6;
	sub.s32 	%r189, %r188, %r187;
	mul.wide.s32 	%rd50, %r189, 4;
	add.s64 	%rd14, %rd49, %rd50;
	ld.local.u32 	%r371, [%rd14];
	ld.local.u32 	%r372, [%rd14+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p30, %r59, 0;
	@%p30 bra 	BB0_37;

	mov.u32 	%r190, 32;
	sub.s32 	%r191, %r190, %r59;
	shr.u32 	%r192, %r372, %r191;
	shl.b32 	%r193, %r371, %r59;
	add.s32 	%r371, %r192, %r193;
	ld.local.u32 	%r194, [%rd14+-8];
	shr.u32 	%r195, %r194, %r191;
	shl.b32 	%r196, %r372, %r59;
	add.s32 	%r372, %r195, %r196;

BB0_37:
	shr.u32 	%r197, %r372, 30;
	shl.b32 	%r198, %r371, 2;
	add.s32 	%r373, %r197, %r198;
	shl.b32 	%r65, %r372, 2;
	shr.u32 	%r199, %r373, 31;
	shr.u32 	%r200, %r371, 30;
	add.s32 	%r66, %r199, %r200;
	setp.eq.s32	%p31, %r199, 0;
	@%p31 bra 	BB0_38;
	bra.uni 	BB0_39;

BB0_38:
	mov.u32 	%r374, %r56;
	mov.u32 	%r375, %r65;
	bra.uni 	BB0_40;

BB0_39:
	not.b32 	%r201, %r373;
	neg.s32 	%r375, %r65;
	setp.eq.s32	%p32, %r65, 0;
	selp.u32	%r202, 1, 0, %p32;
	add.s32 	%r373, %r202, %r201;
	xor.b32  	%r374, %r56, -2147483648;

BB0_40:
	clz.b32 	%r377, %r373;
	setp.eq.s32	%p33, %r377, 0;
	shl.b32 	%r203, %r373, %r377;
	mov.u32 	%r204, 32;
	sub.s32 	%r205, %r204, %r377;
	shr.u32 	%r206, %r375, %r205;
	add.s32 	%r207, %r206, %r203;
	selp.b32	%r74, %r373, %r207, %p33;
	mov.u32 	%r208, -921707870;
	mul.hi.u32 	%r376, %r74, %r208;
	setp.eq.s32	%p34, %r56, 0;
	neg.s32 	%r209, %r66;
	selp.b32	%r378, %r66, %r209, %p34;
	setp.lt.s32	%p35, %r376, 1;
	@%p35 bra 	BB0_42;

	mul.lo.s32 	%r210, %r74, -921707870;
	shr.u32 	%r211, %r210, 31;
	shl.b32 	%r212, %r376, 1;
	add.s32 	%r376, %r211, %r212;
	add.s32 	%r377, %r377, 1;

BB0_42:
	mov.u32 	%r213, 126;
	sub.s32 	%r214, %r213, %r377;
	shl.b32 	%r215, %r214, 23;
	add.s32 	%r216, %r376, 1;
	shr.u32 	%r217, %r216, 7;
	add.s32 	%r218, %r217, 1;
	shr.u32 	%r219, %r218, 1;
	add.s32 	%r220, %r219, %r215;
	or.b32  	%r221, %r220, %r374;
	mov.b32 	 %f775, %r221;

BB0_43:
	mul.rn.f32 	%f53, %f775, %f775;
	and.b32  	%r82, %r378, 1;
	setp.eq.s32	%p36, %r82, 0;
	@%p36 bra 	BB0_45;
	bra.uni 	BB0_44;

BB0_45:
	mov.f32 	%f241, 0f3C08839E;
	mov.f32 	%f242, 0fB94CA1F9;
	fma.rn.f32 	%f776, %f242, %f53, %f241;
	bra.uni 	BB0_46;

BB0_44:
	mov.f32 	%f239, 0fBAB6061A;
	mov.f32 	%f240, 0f37CCF5CE;
	fma.rn.f32 	%f776, %f240, %f53, %f239;

BB0_46:
	@%p36 bra 	BB0_48;
	bra.uni 	BB0_47;

BB0_48:
	mov.f32 	%f246, 0fBE2AAAA3;
	fma.rn.f32 	%f247, %f776, %f53, %f246;
	mov.f32 	%f248, 0f00000000;
	fma.rn.f32 	%f777, %f247, %f53, %f248;
	bra.uni 	BB0_49;

BB0_47:
	mov.f32 	%f243, 0f3D2AAAA5;
	fma.rn.f32 	%f244, %f776, %f53, %f243;
	mov.f32 	%f245, 0fBF000000;
	fma.rn.f32 	%f777, %f244, %f53, %f245;

BB0_49:
	fma.rn.f32 	%f778, %f777, %f775, %f775;
	@%p36 bra 	BB0_51;

	mov.f32 	%f249, 0f3F800000;
	fma.rn.f32 	%f778, %f777, %f53, %f249;

BB0_51:
	and.b32  	%r222, %r378, 2;
	setp.eq.s32	%p39, %r222, 0;
	@%p39 bra 	BB0_53;

	mov.f32 	%f250, 0f00000000;
	mov.f32 	%f251, 0fBF800000;
	fma.rn.f32 	%f778, %f778, %f251, %f250;

BB0_53:
	mul.f32 	%f260, %f28, %f772;
	add.u64 	%rd51, %SP, 0;
	cvta.to.local.u64 	%rd52, %rd51;
	mul.f32 	%f261, %f260, %f260;
	mov.f32 	%f262, 0f3F800000;
	sub.f32 	%f263, %f262, %f261;
	mul.f32 	%f264, %f28, %f778;
	mul.f32 	%f265, %f264, %f264;
	sub.f32 	%f266, %f263, %f265;
	mov.f32 	%f267, 0f00000000;
	max.f32 	%f268, %f267, %f266;
	sqrt.rn.f32 	%f269, %f268;
	mul.f32 	%f270, %f14, %f264;
	mul.f32 	%f271, %f15, %f264;
	mul.f32 	%f272, %f16, %f264;
	fma.rn.f32 	%f273, %f23, %f260, %f270;
	fma.rn.f32 	%f274, %f22, %f260, %f271;
	fma.rn.f32 	%f275, %f21, %f260, %f272;
	fma.rn.f32 	%f276, %f7, %f269, %f273;
	fma.rn.f32 	%f277, %f8, %f269, %f274;
	fma.rn.f32 	%f278, %f9, %f269, %f275;
	add.f32 	%f279, %f7, %f276;
	add.f32 	%f280, %f8, %f277;
	add.f32 	%f281, %f9, %f278;
	ld.global.f32 	%f282, [shadowSpread];
	mul.f32 	%f283, %f282, %f279;
	mul.f32 	%f284, %f282, %f280;
	mul.f32 	%f285, %f282, %f281;
	sub.f32 	%f286, %f283, %f7;
	sub.f32 	%f287, %f284, %f8;
	sub.f32 	%f288, %f285, %f9;
	mul.f32 	%f289, %f287, %f287;
	fma.rn.f32 	%f290, %f286, %f286, %f289;
	fma.rn.f32 	%f291, %f288, %f288, %f290;
	sqrt.rn.f32 	%f292, %f291;
	rcp.rn.f32 	%f293, %f292;
	mul.f32 	%f255, %f293, %f286;
	mul.f32 	%f256, %f293, %f287;
	mul.f32 	%f257, %f293, %f288;
	mov.u32 	%r226, 1065353216;
	st.local.u32 	[%rd52], %r226;
	ld.global.u32 	%r223, [root];
	mov.u32 	%r224, 1;
	mov.f32 	%f259, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r223, %f11, %f12, %f13, %f255, %f256, %f257, %r224, %f26, %f259, %rd51, %r100);
	// inline asm
	ld.local.f32 	%f294, [%rd52];
	add.f32 	%f780, %f780, %f294;
	ld.global.u32 	%r354, [samples];
	add.s32 	%r357, %r357, 1;
	setp.lt.s32	%p40, %r357, %r354;
	@%p40 bra 	BB0_7;

BB0_54:
	add.s32 	%r355, %r355, 1;
	setp.lt.s32	%p41, %r355, %r354;
	@%p41 bra 	BB0_5;

BB0_55:
	setp.eq.s32	%p42, %r354, 0;
	mov.f32 	%f782, 0f3F800000;
	@%p42 bra 	BB0_57;

	mul.lo.s32 	%r227, %r354, %r354;
	cvt.rn.f32.s32	%f296, %r227;
	div.rn.f32 	%f782, %f780, %f296;

BB0_57:
	ld.global.f32 	%f297, [directColor];
	mul.f32 	%f298, %f782, %f297;
	ld.global.f32 	%f299, [directColor+4];
	mul.f32 	%f300, %f782, %f299;
	ld.global.f32 	%f301, [directColor+8];
	mul.f32 	%f302, %f782, %f301;
	cvt.sat.f32.f32	%f303, %f10;
	mul.f32 	%f70, %f298, %f303;
	mul.f32 	%f71, %f300, %f303;
	mul.f32 	%f72, %f302, %f303;
	mul.f32 	%f304, %f10, 0f40800000;
	cvt.sat.f32.f32	%f305, %f304;
	mul.f32 	%f306, %f298, %f305;
	mul.f32 	%f307, %f300, %f305;
	mul.f32 	%f308, %f302, %f305;
	mul.f32 	%f73, %f306, 0f3E800000;
	mul.f32 	%f74, %f307, 0f3E800000;
	mul.f32 	%f75, %f308, 0f3E800000;
	ld.global.u32 	%r383, [imageEnabled];
	and.b32  	%r228, %r383, 8;
	setp.eq.s32	%p43, %r228, 0;
	@%p43 bra 	BB0_70;

	cvt.u64.u32	%rd55, %r2;
	cvt.u64.u32	%rd56, %r3;
	mov.u64 	%rd59, image_Mask;
	cvta.global.u64 	%rd54, %rd59;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r99, %r99, %rd55, %rd56, %rd25, %rd25);
	// inline asm
	abs.f32 	%f77, %f782;
	setp.lt.f32	%p44, %f77, 0f00800000;
	mul.f32 	%f314, %f77, 0f4B800000;
	selp.f32	%f315, 0fC3170000, 0fC2FE0000, %p44;
	selp.f32	%f316, %f314, %f77, %p44;
	mov.b32 	 %r231, %f316;
	and.b32  	%r232, %r231, 8388607;
	or.b32  	%r233, %r232, 1065353216;
	mov.b32 	 %f317, %r233;
	shr.u32 	%r234, %r231, 23;
	cvt.rn.f32.u32	%f318, %r234;
	add.f32 	%f319, %f315, %f318;
	setp.gt.f32	%p45, %f317, 0f3FB504F3;
	mul.f32 	%f320, %f317, 0f3F000000;
	add.f32 	%f321, %f319, 0f3F800000;
	selp.f32	%f322, %f320, %f317, %p45;
	selp.f32	%f323, %f321, %f319, %p45;
	add.f32 	%f324, %f322, 0fBF800000;
	add.f32 	%f310, %f322, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f309,%f310;
	// inline asm
	add.f32 	%f325, %f324, %f324;
	mul.f32 	%f326, %f309, %f325;
	mul.f32 	%f327, %f326, %f326;
	mov.f32 	%f328, 0f3C4CAF63;
	mov.f32 	%f329, 0f3B18F0FE;
	fma.rn.f32 	%f330, %f329, %f327, %f328;
	mov.f32 	%f331, 0f3DAAAABD;
	fma.rn.f32 	%f332, %f330, %f327, %f331;
	mul.rn.f32 	%f333, %f332, %f327;
	mul.rn.f32 	%f334, %f333, %f326;
	sub.f32 	%f335, %f324, %f326;
	neg.f32 	%f336, %f326;
	add.f32 	%f337, %f335, %f335;
	fma.rn.f32 	%f338, %f336, %f324, %f337;
	mul.rn.f32 	%f339, %f309, %f338;
	add.f32 	%f340, %f334, %f326;
	sub.f32 	%f341, %f326, %f340;
	add.f32 	%f342, %f334, %f341;
	add.f32 	%f343, %f339, %f342;
	add.f32 	%f344, %f340, %f343;
	sub.f32 	%f345, %f340, %f344;
	add.f32 	%f346, %f343, %f345;
	mov.f32 	%f347, 0f3F317200;
	mul.rn.f32 	%f348, %f323, %f347;
	mov.f32 	%f349, 0f35BFBE8E;
	mul.rn.f32 	%f350, %f323, %f349;
	add.f32 	%f351, %f348, %f344;
	sub.f32 	%f352, %f348, %f351;
	add.f32 	%f353, %f344, %f352;
	add.f32 	%f354, %f346, %f353;
	add.f32 	%f355, %f350, %f354;
	add.f32 	%f356, %f351, %f355;
	sub.f32 	%f357, %f351, %f356;
	add.f32 	%f358, %f355, %f357;
	mov.f32 	%f359, 0f3EE8BA2E;
	mul.rn.f32 	%f360, %f359, %f356;
	neg.f32 	%f361, %f360;
	fma.rn.f32 	%f362, %f359, %f356, %f361;
	fma.rn.f32 	%f363, %f359, %f358, %f362;
	mov.f32 	%f364, 0f00000000;
	fma.rn.f32 	%f365, %f364, %f356, %f363;
	add.rn.f32 	%f366, %f360, %f365;
	neg.f32 	%f367, %f366;
	add.rn.f32 	%f368, %f360, %f367;
	add.rn.f32 	%f369, %f368, %f365;
	mov.b32 	 %r235, %f366;
	setp.eq.s32	%p46, %r235, 1118925336;
	add.s32 	%r236, %r235, -1;
	mov.b32 	 %f370, %r236;
	add.f32 	%f371, %f369, 0f37000000;
	selp.f32	%f372, %f370, %f366, %p46;
	selp.f32	%f78, %f371, %f369, %p46;
	mul.f32 	%f373, %f372, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f374, %f373;
	mov.f32 	%f375, 0fBF317200;
	fma.rn.f32 	%f376, %f374, %f375, %f372;
	mov.f32 	%f377, 0fB5BFBE8E;
	fma.rn.f32 	%f378, %f374, %f377, %f376;
	mul.f32 	%f379, %f378, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f380, %f379;
	add.f32 	%f381, %f374, 0f00000000;
	ex2.approx.f32 	%f382, %f381;
	mul.f32 	%f383, %f380, %f382;
	setp.lt.f32	%p47, %f372, 0fC2D20000;
	selp.f32	%f384, 0f00000000, %f383, %p47;
	setp.gt.f32	%p48, %f372, 0f42D20000;
	selp.f32	%f783, 0f7F800000, %f384, %p48;
	setp.eq.f32	%p49, %f783, 0f7F800000;
	@%p49 bra 	BB0_60;

	fma.rn.f32 	%f783, %f783, %f78, %f783;

BB0_60:
	mov.f32 	%f755, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f754, %f755;
	fma.rn.f32 	%f753, %f754, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f752, %f753;
	setp.lt.f32	%p50, %f782, 0f00000000;
	setp.eq.f32	%p51, %f752, 0f3F800000;
	and.pred  	%p1, %p50, %p51;
	mov.b32 	 %r237, %f783;
	xor.b32  	%r238, %r237, -2147483648;
	mov.b32 	 %f385, %r238;
	selp.f32	%f785, %f385, %f783, %p1;
	setp.eq.f32	%p52, %f782, 0f00000000;
	@%p52 bra 	BB0_63;
	bra.uni 	BB0_61;

BB0_63:
	add.f32 	%f388, %f782, %f782;
	selp.f32	%f785, %f388, 0f00000000, %p51;
	bra.uni 	BB0_64;

BB0_128:
	mov.u64 	%rd200, image_HDR;
	cvta.global.u64 	%rd195, %rd200;
	mov.u32 	%r324, 8;
	// inline asm
	call (%rd194), _rt_buffer_get_64, (%rd195, %r99, %r324, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	mov.f32 	%f692, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f692;}

	// inline asm
	mov.u16 	%rs99, 0;
	st.v4.u16 	[%rd194], {%rs98, %rs98, %rs98, %rs99};

BB0_129:
	ld.global.u32 	%r325, [additive];
	setp.eq.s32	%p119, %r325, 0;
	@%p119 bra 	BB0_131;

	mov.u64 	%rd213, image_RNM0;
	cvta.global.u64 	%rd202, %rd213;
	mov.u32 	%r329, 8;
	// inline asm
	call (%rd201), _rt_buffer_get_64, (%rd202, %r99, %r329, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs106, %rs107, %rs108, %rs109}, [%rd201];
	// inline asm
	{  cvt.f32.f16 %f693, %rs106;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f694, %rs107;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f695, %rs108;}

	// inline asm
	// inline asm
	call (%rd207), _rt_buffer_get_64, (%rd202, %r99, %r329, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	add.f32 	%f696, %f693, 0f00000000;
	add.f32 	%f697, %f694, 0f00000000;
	add.f32 	%f698, %f695, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f698;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f697;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs103, %f696;}

	// inline asm
	mov.u16 	%rs110, 0;
	st.v4.u16 	[%rd207], {%rs103, %rs104, %rs105, %rs110};
	bra.uni 	BB0_132;

BB0_131:
	mov.u64 	%rd220, image_RNM0;
	cvta.global.u64 	%rd215, %rd220;
	mov.u32 	%r331, 8;
	// inline asm
	call (%rd214), _rt_buffer_get_64, (%rd215, %r99, %r331, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	mov.f32 	%f699, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs111, %f699;}

	// inline asm
	mov.u16 	%rs112, 0;
	st.v4.u16 	[%rd214], {%rs111, %rs111, %rs111, %rs112};

BB0_132:
	ld.global.u32 	%r332, [additive];
	setp.eq.s32	%p120, %r332, 0;
	@%p120 bra 	BB0_134;

	mov.u64 	%rd233, image_RNM1;
	cvta.global.u64 	%rd222, %rd233;
	mov.u32 	%r336, 8;
	// inline asm
	call (%rd221), _rt_buffer_get_64, (%rd222, %r99, %r336, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs119, %rs120, %rs121, %rs122}, [%rd221];
	// inline asm
	{  cvt.f32.f16 %f700, %rs119;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f701, %rs120;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f702, %rs121;}

	// inline asm
	// inline asm
	call (%rd227), _rt_buffer_get_64, (%rd222, %r99, %r336, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	add.f32 	%f703, %f700, 0f00000000;
	add.f32 	%f704, %f701, 0f00000000;
	add.f32 	%f705, %f702, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f705;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f704;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f703;}

	// inline asm
	mov.u16 	%rs123, 0;
	st.v4.u16 	[%rd227], {%rs116, %rs117, %rs118, %rs123};
	bra.uni 	BB0_135;

BB0_134:
	mov.u64 	%rd240, image_RNM1;
	cvta.global.u64 	%rd235, %rd240;
	mov.u32 	%r338, 8;
	// inline asm
	call (%rd234), _rt_buffer_get_64, (%rd235, %r99, %r338, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	mov.f32 	%f706, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs124, %f706;}

	// inline asm
	mov.u16 	%rs125, 0;
	st.v4.u16 	[%rd234], {%rs124, %rs124, %rs124, %rs125};

BB0_135:
	ld.global.u32 	%r339, [additive];
	setp.eq.s32	%p121, %r339, 0;
	@%p121 bra 	BB0_137;

	mov.u64 	%rd253, image_RNM2;
	cvta.global.u64 	%rd242, %rd253;
	mov.u32 	%r343, 8;
	// inline asm
	call (%rd241), _rt_buffer_get_64, (%rd242, %r99, %r343, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs132, %rs133, %rs134, %rs135}, [%rd241];
	// inline asm
	{  cvt.f32.f16 %f707, %rs132;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f708, %rs133;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f709, %rs134;}

	// inline asm
	// inline asm
	call (%rd247), _rt_buffer_get_64, (%rd242, %r99, %r343, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	add.f32 	%f710, %f707, 0f00000000;
	add.f32 	%f711, %f708, 0f00000000;
	add.f32 	%f712, %f709, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs131, %f712;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs130, %f711;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs129, %f710;}

	// inline asm
	mov.u16 	%rs136, 0;
	st.v4.u16 	[%rd247], {%rs129, %rs130, %rs131, %rs136};
	bra.uni 	BB0_138;

BB0_137:
	mov.u64 	%rd260, image_RNM2;
	cvta.global.u64 	%rd255, %rd260;
	mov.u32 	%r345, 8;
	// inline asm
	call (%rd254), _rt_buffer_get_64, (%rd255, %r99, %r345, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	mov.f32 	%f713, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs137, %f713;}

	// inline asm
	mov.u16 	%rs138, 0;
	st.v4.u16 	[%rd254], {%rs137, %rs137, %rs137, %rs138};

BB0_138:
	ld.global.u32 	%r346, [additive];
	setp.eq.s32	%p122, %r346, 0;
	@%p122 bra 	BB0_140;

	mov.u64 	%rd273, image_RNM3;
	cvta.global.u64 	%rd262, %rd273;
	mov.u32 	%r350, 8;
	// inline asm
	call (%rd261), _rt_buffer_get_64, (%rd262, %r99, %r350, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs145, %rs146, %rs147, %rs148}, [%rd261];
	// inline asm
	{  cvt.f32.f16 %f714, %rs145;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f715, %rs146;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f716, %rs147;}

	// inline asm
	// inline asm
	call (%rd267), _rt_buffer_get_64, (%rd262, %r99, %r350, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	add.f32 	%f717, %f714, 0f00000000;
	add.f32 	%f718, %f715, 0f00000000;
	add.f32 	%f719, %f716, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs144, %f719;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs143, %f718;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs142, %f717;}

	// inline asm
	mov.u16 	%rs149, 0;
	st.v4.u16 	[%rd267], {%rs142, %rs143, %rs144, %rs149};
	bra.uni 	BB0_141;

BB0_140:
	mov.u64 	%rd280, image_RNM3;
	cvta.global.u64 	%rd275, %rd280;
	mov.u32 	%r352, 8;
	// inline asm
	call (%rd274), _rt_buffer_get_64, (%rd275, %r99, %r352, %rd18, %rd19, %rd25, %rd25);
	// inline asm
	mov.f32 	%f720, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs150, %f720;}

	// inline asm
	mov.u16 	%rs151, 0;
	st.v4.u16 	[%rd274], {%rs150, %rs150, %rs150, %rs151};
	bra.uni 	BB0_141;

BB0_61:
	setp.geu.f32	%p53, %f782, 0f00000000;
	@%p53 bra 	BB0_64;

	mov.f32 	%f759, 0f3EE8BA2E;
	cvt.rzi.f32.f32	%f387, %f759;
	setp.neu.f32	%p54, %f387, 0f3EE8BA2E;
	selp.f32	%f785, 0f7FFFFFFF, %f785, %p54;

BB0_64:
	abs.f32 	%f756, %f782;
	add.f32 	%f389, %f756, 0f3EE8BA2E;
	mov.b32 	 %r239, %f389;
	setp.lt.s32	%p56, %r239, 2139095040;
	@%p56 bra 	BB0_69;

	abs.f32 	%f757, %f782;
	setp.gtu.f32	%p57, %f757, 0f7F800000;
	@%p57 bra 	BB0_68;
	bra.uni 	BB0_66;

BB0_68:
	add.f32 	%f785, %f782, 0f3EE8BA2E;
	bra.uni 	BB0_69;

BB0_66:
	abs.f32 	%f758, %f782;
	setp.neu.f32	%p58, %f758, 0f7F800000;
	@%p58 bra 	BB0_69;

	selp.f32	%f785, 0fFF800000, 0f7F800000, %p1;

BB0_69:
	mul.f32 	%f390, %f785, 0f437F0000;
	setp.eq.f32	%p59, %f782, 0f3F800000;
	selp.f32	%f391, 0f437F0000, %f390, %p59;
	cvt.rzi.u32.f32	%r240, %f391;
	cvt.u16.u32	%rs14, %r240;
	mov.u16 	%rs15, 255;
	st.v2.u8 	[%rd53], {%rs14, %rs15};
	ld.global.u32 	%r383, [imageEnabled];

BB0_70:
	and.b32  	%r241, %r383, 1;
	setp.eq.b32	%p60, %r241, 1;
	@!%p60 bra 	BB0_105;
	bra.uni 	BB0_71;

BB0_71:
	abs.f32 	%f90, %f70;
	setp.lt.f32	%p61, %f90, 0f00800000;
	mul.f32 	%f397, %f90, 0f4B800000;
	selp.f32	%f398, 0fC3170000, 0fC2FE0000, %p61;
	selp.f32	%f399, %f397, %f90, %p61;
	mov.b32 	 %r242, %f399;
	and.b32  	%r243, %r242, 8388607;
	or.b32  	%r244, %r243, 1065353216;
	mov.b32 	 %f400, %r244;
	shr.u32 	%r245, %r242, 23;
	cvt.rn.f32.u32	%f401, %r245;
	add.f32 	%f402, %f398, %f401;
	setp.gt.f32	%p62, %f400, 0f3FB504F3;
	mul.f32 	%f403, %f400, 0f3F000000;
	add.f32 	%f404, %f402, 0f3F800000;
	selp.f32	%f405, %f403, %f400, %p62;
	selp.f32	%f406, %f404, %f402, %p62;
	add.f32 	%f407, %f405, 0fBF800000;
	add.f32 	%f393, %f405, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f392,%f393;
	// inline asm
	add.f32 	%f408, %f407, %f407;
	mul.f32 	%f409, %f392, %f408;
	mul.f32 	%f410, %f409, %f409;
	mov.f32 	%f411, 0f3C4CAF63;
	mov.f32 	%f412, 0f3B18F0FE;
	fma.rn.f32 	%f413, %f412, %f410, %f411;
	mov.f32 	%f414, 0f3DAAAABD;
	fma.rn.f32 	%f415, %f413, %f410, %f414;
	mul.rn.f32 	%f416, %f415, %f410;
	mul.rn.f32 	%f417, %f416, %f409;
	sub.f32 	%f418, %f407, %f409;
	neg.f32 	%f419, %f409;
	add.f32 	%f420, %f418, %f418;
	fma.rn.f32 	%f421, %f419, %f407, %f420;
	mul.rn.f32 	%f422, %f392, %f421;
	add.f32 	%f423, %f417, %f409;
	sub.f32 	%f424, %f409, %f423;
	add.f32 	%f425, %f417, %f424;
	add.f32 	%f426, %f422, %f425;
	add.f32 	%f427, %f423, %f426;
	sub.f32 	%f428, %f423, %f427;
	add.f32 	%f429, %f426, %f428;
	mov.f32 	%f430, 0f3F317200;
	mul.rn.f32 	%f431, %f406, %f430;
	mov.f32 	%f432, 0f35BFBE8E;
	mul.rn.f32 	%f433, %f406, %f432;
	add.f32 	%f434, %f431, %f427;
	sub.f32 	%f435, %f431, %f434;
	add.f32 	%f436, %f427, %f435;
	add.f32 	%f437, %f429, %f436;
	add.f32 	%f438, %f433, %f437;
	add.f32 	%f439, %f434, %f438;
	sub.f32 	%f440, %f434, %f439;
	add.f32 	%f441, %f438, %f440;
	mov.f32 	%f442, 0f3EE66666;
	mul.rn.f32 	%f443, %f442, %f439;
	neg.f32 	%f444, %f443;
	fma.rn.f32 	%f445, %f442, %f439, %f444;
	fma.rn.f32 	%f446, %f442, %f441, %f445;
	mov.f32 	%f447, 0f00000000;
	fma.rn.f32 	%f448, %f447, %f439, %f446;
	add.rn.f32 	%f449, %f443, %f448;
	neg.f32 	%f450, %f449;
	add.rn.f32 	%f451, %f443, %f450;
	add.rn.f32 	%f452, %f451, %f448;
	mov.b32 	 %r246, %f449;
	setp.eq.s32	%p63, %r246, 1118925336;
	add.s32 	%r247, %r246, -1;
	mov.b32 	 %f453, %r247;
	add.f32 	%f454, %f452, 0f37000000;
	selp.f32	%f455, %f453, %f449, %p63;
	selp.f32	%f91, %f454, %f452, %p63;
	mul.f32 	%f456, %f455, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f457, %f456;
	mov.f32 	%f458, 0fBF317200;
	fma.rn.f32 	%f459, %f457, %f458, %f455;
	mov.f32 	%f460, 0fB5BFBE8E;
	fma.rn.f32 	%f461, %f457, %f460, %f459;
	mul.f32 	%f462, %f461, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f463, %f462;
	add.f32 	%f464, %f457, 0f00000000;
	ex2.approx.f32 	%f465, %f464;
	mul.f32 	%f466, %f463, %f465;
	setp.lt.f32	%p64, %f455, 0fC2D20000;
	selp.f32	%f467, 0f00000000, %f466, %p64;
	setp.gt.f32	%p65, %f455, 0f42D20000;
	selp.f32	%f786, 0f7F800000, %f467, %p65;
	setp.eq.f32	%p66, %f786, 0f7F800000;
	@%p66 bra 	BB0_73;

	fma.rn.f32 	%f786, %f786, %f91, %f786;

BB0_73:
	mov.f32 	%f724, 0f3E666666;
	cvt.rzi.f32.f32	%f723, %f724;
	fma.rn.f32 	%f722, %f723, 0fC0000000, 0f3EE66666;
	abs.f32 	%f721, %f722;
	setp.lt.f32	%p67, %f70, 0f00000000;
	setp.eq.f32	%p68, %f721, 0f3F800000;
	and.pred  	%p2, %p67, %p68;
	mov.b32 	 %r248, %f786;
	xor.b32  	%r249, %r248, -2147483648;
	mov.b32 	 %f468, %r249;
	selp.f32	%f788, %f468, %f786, %p2;
	setp.eq.f32	%p69, %f70, 0f00000000;
	@%p69 bra 	BB0_76;
	bra.uni 	BB0_74;

BB0_76:
	add.f32 	%f471, %f70, %f70;
	selp.f32	%f788, %f471, 0f00000000, %p68;
	bra.uni 	BB0_77;

BB0_74:
	setp.geu.f32	%p70, %f70, 0f00000000;
	@%p70 bra 	BB0_77;

	mov.f32 	%f748, 0f3EE66666;
	cvt.rzi.f32.f32	%f470, %f748;
	setp.neu.f32	%p71, %f470, 0f3EE66666;
	selp.f32	%f788, 0f7FFFFFFF, %f788, %p71;

BB0_77:
	abs.f32 	%f725, %f70;
	add.f32 	%f472, %f725, 0f3EE66666;
	mov.b32 	 %r250, %f472;
	setp.lt.s32	%p73, %r250, 2139095040;
	@%p73 bra 	BB0_82;

	abs.f32 	%f746, %f70;
	setp.gtu.f32	%p74, %f746, 0f7F800000;
	@%p74 bra 	BB0_81;
	bra.uni 	BB0_79;

BB0_81:
	add.f32 	%f788, %f70, 0f3EE66666;
	bra.uni 	BB0_82;

BB0_79:
	abs.f32 	%f747, %f70;
	setp.neu.f32	%p75, %f747, 0f7F800000;
	@%p75 bra 	BB0_82;

	selp.f32	%f788, 0fFF800000, 0f7F800000, %p2;

BB0_82:
	mov.f32 	%f734, 0fB5BFBE8E;
	mov.f32 	%f733, 0fBF317200;
	mov.f32 	%f732, 0f00000000;
	mov.f32 	%f731, 0f35BFBE8E;
	mov.f32 	%f730, 0f3F317200;
	mov.f32 	%f729, 0f3DAAAABD;
	mov.f32 	%f728, 0f3C4CAF63;
	mov.f32 	%f727, 0f3B18F0FE;
	mov.f32 	%f726, 0f3EE66666;
	setp.eq.f32	%p76, %f70, 0f3F800000;
	selp.f32	%f102, 0f3F800000, %f788, %p76;
	abs.f32 	%f103, %f71;
	setp.lt.f32	%p77, %f103, 0f00800000;
	mul.f32 	%f475, %f103, 0f4B800000;
	selp.f32	%f476, 0fC3170000, 0fC2FE0000, %p77;
	selp.f32	%f477, %f475, %f103, %p77;
	mov.b32 	 %r251, %f477;
	and.b32  	%r252, %r251, 8388607;
	or.b32  	%r253, %r252, 1065353216;
	mov.b32 	 %f478, %r253;
	shr.u32 	%r254, %r251, 23;
	cvt.rn.f32.u32	%f479, %r254;
	add.f32 	%f480, %f476, %f479;
	setp.gt.f32	%p78, %f478, 0f3FB504F3;
	mul.f32 	%f481, %f478, 0f3F000000;
	add.f32 	%f482, %f480, 0f3F800000;
	selp.f32	%f483, %f481, %f478, %p78;
	selp.f32	%f484, %f482, %f480, %p78;
	add.f32 	%f485, %f483, 0fBF800000;
	add.f32 	%f474, %f483, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f473,%f474;
	// inline asm
	add.f32 	%f486, %f485, %f485;
	mul.f32 	%f487, %f473, %f486;
	mul.f32 	%f488, %f487, %f487;
	fma.rn.f32 	%f491, %f727, %f488, %f728;
	fma.rn.f32 	%f493, %f491, %f488, %f729;
	mul.rn.f32 	%f494, %f493, %f488;
	mul.rn.f32 	%f495, %f494, %f487;
	sub.f32 	%f496, %f485, %f487;
	neg.f32 	%f497, %f487;
	add.f32 	%f498, %f496, %f496;
	fma.rn.f32 	%f499, %f497, %f485, %f498;
	mul.rn.f32 	%f500, %f473, %f499;
	add.f32 	%f501, %f495, %f487;
	sub.f32 	%f502, %f487, %f501;
	add.f32 	%f503, %f495, %f502;
	add.f32 	%f504, %f500, %f503;
	add.f32 	%f505, %f501, %f504;
	sub.f32 	%f506, %f501, %f505;
	add.f32 	%f507, %f504, %f506;
	mul.rn.f32 	%f509, %f484, %f730;
	mul.rn.f32 	%f511, %f484, %f731;
	add.f32 	%f512, %f509, %f505;
	sub.f32 	%f513, %f509, %f512;
	add.f32 	%f514, %f505, %f513;
	add.f32 	%f515, %f507, %f514;
	add.f32 	%f516, %f511, %f515;
	add.f32 	%f517, %f512, %f516;
	sub.f32 	%f518, %f512, %f517;
	add.f32 	%f519, %f516, %f518;
	mul.rn.f32 	%f521, %f726, %f517;
	neg.f32 	%f522, %f521;
	fma.rn.f32 	%f523, %f726, %f517, %f522;
	fma.rn.f32 	%f524, %f726, %f519, %f523;
	fma.rn.f32 	%f526, %f732, %f517, %f524;
	add.rn.f32 	%f527, %f521, %f526;
	neg.f32 	%f528, %f527;
	add.rn.f32 	%f529, %f521, %f528;
	add.rn.f32 	%f530, %f529, %f526;
	mov.b32 	 %r255, %f527;
	setp.eq.s32	%p79, %r255, 1118925336;
	add.s32 	%r256, %r255, -1;
	mov.b32 	 %f531, %r256;
	add.f32 	%f532, %f530, 0f37000000;
	selp.f32	%f533, %f531, %f527, %p79;
	selp.f32	%f104, %f532, %f530, %p79;
	mul.f32 	%f534, %f533, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f535, %f534;
	fma.rn.f32 	%f537, %f535, %f733, %f533;
	fma.rn.f32 	%f539, %f535, %f734, %f537;
	mul.f32 	%f540, %f539, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f541, %f540;
	add.f32 	%f542, %f535, 0f00000000;
	ex2.approx.f32 	%f543, %f542;
	mul.f32 	%f544, %f541, %f543;
	setp.lt.f32	%p80, %f533, 0fC2D20000;
	selp.f32	%f545, 0f00000000, %f544, %p80;
	setp.gt.f32	%p81, %f533, 0f42D20000;
	selp.f32	%f789, 0f7F800000, %f545, %p81;
	setp.eq.f32	%p82, %f789, 0f7F800000;
	@%p82 bra 	BB0_84;

	fma.rn.f32 	%f789, %f789, %f104, %f789;

BB0_84:
	setp.lt.f32	%p83, %f71, 0f00000000;
	and.pred  	%p3, %p83, %p68;
	mov.b32 	 %r257, %f789;
	xor.b32  	%r258, %r257, -2147483648;
	mov.b32 	 %f546, %r258;
	selp.f32	%f791, %f546, %f789, %p3;
	setp.eq.f32	%p85, %f71, 0f00000000;
	@%p85 bra 	BB0_87;
	bra.uni 	BB0_85;

BB0_87:
	add.f32 	%f549, %f71, %f71;
	selp.f32	%f791, %f549, 0f00000000, %p68;
	bra.uni 	BB0_88;

BB0_85:
	setp.geu.f32	%p86, %f71, 0f00000000;
	@%p86 bra 	BB0_88;

	mov.f32 	%f745, 0f3EE66666;
	cvt.rzi.f32.f32	%f548, %f745;
	setp.neu.f32	%p87, %f548, 0f3EE66666;
	selp.f32	%f791, 0f7FFFFFFF, %f791, %p87;

BB0_88:
	abs.f32 	%f749, %f71;
	add.f32 	%f550, %f749, 0f3EE66666;
	mov.b32 	 %r259, %f550;
	setp.lt.s32	%p89, %r259, 2139095040;
	@%p89 bra 	BB0_93;

	abs.f32 	%f750, %f71;
	setp.gtu.f32	%p90, %f750, 0f7F800000;
	@%p90 bra 	BB0_92;
	bra.uni 	BB0_90;

BB0_92:
	add.f32 	%f791, %f71, 0f3EE66666;
	bra.uni 	BB0_93;

BB0_90:
	abs.f32 	%f751, %f71;
	setp.neu.f32	%p91, %f751, 0f7F800000;
	@%p91 bra 	BB0_93;

	selp.f32	%f791, 0fFF800000, 0f7F800000, %p3;

BB0_93:
	mov.f32 	%f743, 0fB5BFBE8E;
	mov.f32 	%f742, 0fBF317200;
	mov.f32 	%f741, 0f00000000;
	mov.f32 	%f740, 0f35BFBE8E;
	mov.f32 	%f739, 0f3F317200;
	mov.f32 	%f738, 0f3DAAAABD;
	mov.f32 	%f737, 0f3C4CAF63;
	mov.f32 	%f736, 0f3B18F0FE;
	mov.f32 	%f735, 0f3EE66666;
	setp.eq.f32	%p92, %f71, 0f3F800000;
	selp.f32	%f115, 0f3F800000, %f791, %p92;
	abs.f32 	%f116, %f72;
	setp.lt.f32	%p93, %f116, 0f00800000;
	mul.f32 	%f553, %f116, 0f4B800000;
	selp.f32	%f554, 0fC3170000, 0fC2FE0000, %p93;
	selp.f32	%f555, %f553, %f116, %p93;
	mov.b32 	 %r260, %f555;
	and.b32  	%r261, %r260, 8388607;
	or.b32  	%r262, %r261, 1065353216;
	mov.b32 	 %f556, %r262;
	shr.u32 	%r263, %r260, 23;
	cvt.rn.f32.u32	%f557, %r263;
	add.f32 	%f558, %f554, %f557;
	setp.gt.f32	%p94, %f556, 0f3FB504F3;
	mul.f32 	%f559, %f556, 0f3F000000;
	add.f32 	%f560, %f558, 0f3F800000;
	selp.f32	%f561, %f559, %f556, %p94;
	selp.f32	%f562, %f560, %f558, %p94;
	add.f32 	%f563, %f561, 0fBF800000;
	add.f32 	%f552, %f561, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f551,%f552;
	// inline asm
	add.f32 	%f564, %f563, %f563;
	mul.f32 	%f565, %f551, %f564;
	mul.f32 	%f566, %f565, %f565;
	fma.rn.f32 	%f569, %f736, %f566, %f737;
	fma.rn.f32 	%f571, %f569, %f566, %f738;
	mul.rn.f32 	%f572, %f571, %f566;
	mul.rn.f32 	%f573, %f572, %f565;
	sub.f32 	%f574, %f563, %f565;
	neg.f32 	%f575, %f565;
	add.f32 	%f576, %f574, %f574;
	fma.rn.f32 	%f577, %f575, %f563, %f576;
	mul.rn.f32 	%f578, %f551, %f577;
	add.f32 	%f579, %f573, %f565;
	sub.f32 	%f580, %f565, %f579;
	add.f32 	%f581, %f573, %f580;
	add.f32 	%f582, %f578, %f581;
	add.f32 	%f583, %f579, %f582;
	sub.f32 	%f584, %f579, %f583;
	add.f32 	%f585, %f582, %f584;
	mul.rn.f32 	%f587, %f562, %f739;
	mul.rn.f32 	%f589, %f562, %f740;
	add.f32 	%f590, %f587, %f583;
	sub.f32 	%f591, %f587, %f590;
	add.f32 	%f592, %f583, %f591;
	add.f32 	%f593, %f585, %f592;
	add.f32 	%f594, %f589, %f593;
	add.f32 	%f595, %f590, %f594;
	sub.f32 	%f596, %f590, %f595;
	add.f32 	%f597, %f594, %f596;
	mul.rn.f32 	%f599, %f735, %f595;
	neg.f32 	%f600, %f599;
	fma.rn.f32 	%f601, %f735, %f595, %f600;
	fma.rn.f32 	%f602, %f735, %f597, %f601;
	fma.rn.f32 	%f604, %f741, %f595, %f602;
	add.rn.f32 	%f605, %f599, %f604;
	neg.f32 	%f606, %f605;
	add.rn.f32 	%f607, %f599, %f606;
	add.rn.f32 	%f608, %f607, %f604;
	mov.b32 	 %r264, %f605;
	setp.eq.s32	%p95, %r264, 1118925336;
	add.s32 	%r265, %r264, -1;
	mov.b32 	 %f609, %r265;
	add.f32 	%f610, %f608, 0f37000000;
	selp.f32	%f611, %f609, %f605, %p95;
	selp.f32	%f117, %f610, %f608, %p95;
	mul.f32 	%f612, %f611, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f613, %f612;
	fma.rn.f32 	%f615, %f613, %f742, %f611;
	fma.rn.f32 	%f617, %f613, %f743, %f615;
	mul.f32 	%f618, %f617, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f619, %f618;
	add.f32 	%f620, %f613, 0f00000000;
	ex2.approx.f32 	%f621, %f620;
	mul.f32 	%f622, %f619, %f621;
	setp.lt.f32	%p96, %f611, 0fC2D20000;
	selp.f32	%f623, 0f00000000, %f622, %p96;
	setp.gt.f32	%p97, %f611, 0f42D20000;
	selp.f32	%f792, 0f7F800000, %f623, %p97;
	setp.eq.f32	%p98, %f792, 0f7F800000;
	@%p98 bra 	BB0_95;

	fma.rn.f32 	%f792, %f792, %f117, %f792;

BB0_95:
	setp.lt.f32	%p99, %f72, 0f00000000;
	and.pred  	%p4, %p99, %p68;
	mov.b32 	 %r266, %f792;
	xor.b32  	%r267, %r266, -2147483648;
	mov.b32 	 %f624, %r267;
	selp.f32	%f794, %f624, %f792, %p4;
	setp.eq.f32	%p101, %f72, 0f00000000;
	@%p101 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f627, %f72, %f72;
	selp.f32	%f794, %f627, 0f00000000, %p68;
	bra.uni 	BB0_99;

BB0_96:
	setp.geu.f32	%p102, %f72, 0f00000000;
	@%p102 bra 	BB0_99;

	mov.f32 	%f744, 0f3EE66666;
	cvt.rzi.f32.f32	%f626, %f744;
	setp.neu.f32	%p103, %f626, 0f3EE66666;
	selp.f32	%f794, 0f7FFFFFFF, %f794, %p103;

BB0_99:
	abs.f32 	%f760, %f72;
	add.f32 	%f628, %f760, 0f3EE66666;
	mov.b32 	 %r268, %f628;
	setp.lt.s32	%p105, %r268, 2139095040;
	@%p105 bra 	BB0_104;

	abs.f32 	%f761, %f72;
	setp.gtu.f32	%p106, %f761, 0f7F800000;
	@%p106 bra 	BB0_103;
	bra.uni 	BB0_101;

BB0_103:
	add.f32 	%f794, %f72, 0f3EE66666;
	bra.uni 	BB0_104;

BB0_101:
	abs.f32 	%f762, %f72;
	setp.neu.f32	%p107, %f762, 0f7F800000;
	@%p107 bra 	BB0_104;

	selp.f32	%f794, 0fFF800000, 0f7F800000, %p4;

BB0_104:
	mov.u32 	%r353, 4;
	setp.eq.f32	%p108, %f72, 0f3F800000;
	selp.f32	%f629, 0f3F800000, %f794, %p108;
	cvt.u64.u32	%rd63, %r3;
	cvt.u64.u32	%rd62, %r2;
	mov.u64 	%rd66, image;
	cvta.global.u64 	%rd61, %rd66;
	// inline asm
	call (%rd60), _rt_buffer_get_64, (%rd61, %r99, %r353, %rd62, %rd63, %rd25, %rd25);
	// inline asm
	cvt.sat.f32.f32	%f630, %f629;
	mul.f32 	%f631, %f630, 0f437FFD71;
	cvt.rzi.u32.f32	%r271, %f631;
	cvt.sat.f32.f32	%f632, %f115;
	mul.f32 	%f633, %f632, 0f437FFD71;
	cvt.rzi.u32.f32	%r272, %f633;
	cvt.sat.f32.f32	%f634, %f102;
	mul.f32 	%f635, %f634, 0f437FFD71;
	cvt.rzi.u32.f32	%r273, %f635;
	cvt.u16.u32	%rs16, %r271;
	cvt.u16.u32	%rs17, %r273;
	cvt.u16.u32	%rs18, %r272;
	mov.u16 	%rs19, 255;
	st.v4.u8 	[%rd60], {%rs16, %rs18, %rs17, %rs19};
	ld.global.u32 	%r383, [imageEnabled];

BB0_105:
	cvt.u64.u32	%rd16, %r2;
	cvt.u64.u32	%rd17, %r3;
	and.b32  	%r274, %r383, 4;
	setp.eq.s32	%p109, %r274, 0;
	@%p109 bra 	BB0_109;

	ld.global.u32 	%r275, [additive];
	setp.eq.s32	%p110, %r275, 0;
	mov.f32 	%f636, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f636;}

	// inline asm
	@%p110 bra 	BB0_108;

	mov.u64 	%rd79, image_HDR;
	cvta.global.u64 	%rd68, %rd79;
	mov.u32 	%r279, 8;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd68, %r99, %r279, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs27, %rs28, %rs29, %rs30}, [%rd67];
	// inline asm
	{  cvt.f32.f16 %f637, %rs27;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f638, %rs28;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f639, %rs29;}

	// inline asm
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd68, %r99, %r279, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f640, %f70, %f637;
	add.f32 	%f641, %f71, %f638;
	add.f32 	%f642, %f72, %f639;
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f642;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f641;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f640;}

	// inline asm
	st.v4.u16 	[%rd73], {%rs24, %rs25, %rs26, %rs20};
	bra.uni 	BB0_109;

BB0_108:
	mov.u64 	%rd86, image_HDR;
	cvta.global.u64 	%rd81, %rd86;
	mov.u32 	%r281, 8;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r99, %r281, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f72;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f71;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f70;}

	// inline asm
	st.v4.u16 	[%rd80], {%rs31, %rs32, %rs33, %rs20};

BB0_109:
	ld.global.u32 	%r282, [additive];
	setp.eq.s32	%p111, %r282, 0;
	mov.f32 	%f646, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f646;}

	// inline asm
	@%p111 bra 	BB0_111;

	mov.u64 	%rd99, image_RNM0;
	cvta.global.u64 	%rd88, %rd99;
	mov.u32 	%r286, 8;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r99, %r286, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs41, %rs42, %rs43, %rs44}, [%rd87];
	// inline asm
	{  cvt.f32.f16 %f647, %rs41;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f648, %rs42;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f649, %rs43;}

	// inline asm
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd88, %r99, %r286, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f650, %f73, %f647;
	add.f32 	%f651, %f74, %f648;
	add.f32 	%f652, %f75, %f649;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f652;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f651;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f650;}

	// inline asm
	st.v4.u16 	[%rd93], {%rs38, %rs39, %rs40, %rs34};
	bra.uni 	BB0_112;

BB0_111:
	mov.u64 	%rd106, image_RNM0;
	cvta.global.u64 	%rd101, %rd106;
	mov.u32 	%r288, 8;
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd101, %r99, %r288, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f75;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f74;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f73;}

	// inline asm
	st.v4.u16 	[%rd100], {%rs45, %rs46, %rs47, %rs34};

BB0_112:
	ld.global.f32 	%f657, [directDir];
	fma.rn.f32 	%f128, %f657, 0fBF000000, 0f3F000000;
	ld.global.f32 	%f658, [directDir+4];
	fma.rn.f32 	%f129, %f658, 0fBF000000, 0f3F000000;
	ld.global.f32 	%f659, [directDir+8];
	fma.rn.f32 	%f130, %f659, 0fBF000000, 0f3F000000;
	ld.global.u32 	%r289, [additive];
	setp.eq.s32	%p112, %r289, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f646;}

	// inline asm
	@%p112 bra 	BB0_114;

	mov.u64 	%rd119, image_RNM1;
	cvta.global.u64 	%rd108, %rd119;
	mov.u32 	%r293, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r99, %r293, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs55, %rs56, %rs57, %rs58}, [%rd107];
	// inline asm
	{  cvt.f32.f16 %f660, %rs55;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f661, %rs56;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f662, %rs57;}

	// inline asm
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd108, %r99, %r293, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f663, %f128, %f660;
	add.f32 	%f664, %f128, %f661;
	add.f32 	%f665, %f128, %f662;
	// inline asm
	{  cvt.rn.f16.f32 %rs54, %f665;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs53, %f664;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f663;}

	// inline asm
	st.v4.u16 	[%rd113], {%rs52, %rs53, %rs54, %rs48};
	bra.uni 	BB0_115;

BB0_114:
	mov.u64 	%rd126, image_RNM1;
	cvta.global.u64 	%rd121, %rd126;
	mov.u32 	%r295, 8;
	// inline asm
	call (%rd120), _rt_buffer_get_64, (%rd121, %r99, %r295, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f128;}

	// inline asm
	st.v4.u16 	[%rd120], {%rs59, %rs59, %rs59, %rs48};

BB0_115:
	ld.global.u32 	%r296, [additive];
	setp.eq.s32	%p113, %r296, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f646;}

	// inline asm
	@%p113 bra 	BB0_117;

	mov.u64 	%rd139, image_RNM2;
	cvta.global.u64 	%rd128, %rd139;
	mov.u32 	%r300, 8;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd128, %r99, %r300, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs67, %rs68, %rs69, %rs70}, [%rd127];
	// inline asm
	{  cvt.f32.f16 %f668, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f669, %rs68;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f670, %rs69;}

	// inline asm
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd128, %r99, %r300, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f671, %f129, %f668;
	add.f32 	%f672, %f129, %f669;
	add.f32 	%f673, %f129, %f670;
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f673;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f672;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f671;}

	// inline asm
	st.v4.u16 	[%rd133], {%rs64, %rs65, %rs66, %rs60};
	bra.uni 	BB0_118;

BB0_117:
	mov.u64 	%rd146, image_RNM2;
	cvta.global.u64 	%rd141, %rd146;
	mov.u32 	%r302, 8;
	// inline asm
	call (%rd140), _rt_buffer_get_64, (%rd141, %r99, %r302, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f129;}

	// inline asm
	st.v4.u16 	[%rd140], {%rs71, %rs71, %rs71, %rs60};

BB0_118:
	ld.global.u32 	%r303, [additive];
	setp.eq.s32	%p114, %r303, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f646;}

	// inline asm
	@%p114 bra 	BB0_120;

	mov.u64 	%rd159, image_RNM3;
	cvta.global.u64 	%rd148, %rd159;
	mov.u32 	%r307, 8;
	// inline asm
	call (%rd147), _rt_buffer_get_64, (%rd148, %r99, %r307, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	ld.v4.u16 	{%rs79, %rs80, %rs81, %rs82}, [%rd147];
	// inline asm
	{  cvt.f32.f16 %f676, %rs79;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f677, %rs80;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f678, %rs81;}

	// inline asm
	// inline asm
	call (%rd153), _rt_buffer_get_64, (%rd148, %r99, %r307, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	add.f32 	%f679, %f130, %f676;
	add.f32 	%f680, %f130, %f677;
	add.f32 	%f681, %f130, %f678;
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f681;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f680;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f679;}

	// inline asm
	st.v4.u16 	[%rd153], {%rs76, %rs77, %rs78, %rs72};
	bra.uni 	BB0_141;

BB0_120:
	mov.u64 	%rd166, image_RNM3;
	cvta.global.u64 	%rd161, %rd166;
	mov.u32 	%r309, 8;
	// inline asm
	call (%rd160), _rt_buffer_get_64, (%rd161, %r99, %r309, %rd16, %rd17, %rd25, %rd25);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f130;}

	// inline asm
	st.v4.u16 	[%rd160], {%rs83, %rs83, %rs83, %rs72};

BB0_141:
	ret;
}


